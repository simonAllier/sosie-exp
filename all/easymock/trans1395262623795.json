[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[44],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[68,1,69,70,71,72,4,73,74,49,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,50,51,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,53,54,126,127,128,55,129,130,131,132,133,134,135,136,137,138,139,140,56,141,16,17,18,19,142,20,21,143,144,145,146,57,58,147,148,149,22,150,151,152,153,154,155,24,156,26,27,29,31,157,158,159,32,33,160,34,35,36,37,161,162,38,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,59,60,190,61,191,62,63,192,193,194,195,64,196,197,65,198,199,66,200,201,202,203,204,67,205,206,207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[69,7,8,134,23,209,24,25,156,210,26,27,28,29,211,212,30,213,206],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"failures":[214,215,216,217,218,219,220,221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[222,223,224,225,226,227],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[228,229],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[230,231,232,233,234,235,236,237,206],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.Capture:82","failures":[166,238,168,169,239,240,170,172,241,173,242,175],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[243,244,245,246,247,248,1,2,249,250,251,252,253,42,254,255,256,257,258,259,260,4,261,222,262,263,264,75,265,76,77,78,79,80,81,84,85,87,92,97,43,225,266,267,268,105,5,269,270,271,272,273,274,275,276,116,277,278,279,280,281,282,283,284,285,286,287,288,289,290,119,120,121,291,292,9,10,11,293,12,13,124,125,294,295,296,297,298,299,129,300,301,302,303,304,130,305,131,132,306,133,307,134,308,309,14,15,310,135,136,137,138,311,312,313,16,17,18,19,142,20,21,143,144,314,146,315,147,316,317,149,318,319,22,153,154,155,23,156,210,26,27,28,30,31,157,158,159,32,33,160,34,35,36,213,37,320,162,163,321,322,323,166,167,238,168,239,240,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,324,188,325,326,327,328,190,192,193,194,195,196,198,200,201,202,329,203,206,207,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:70","failures":[68,330,70,71,331,249,72,332,222,73,111,112,113,114,115,287,333,122,123,137,138,139,154,37,334,335,166,167,238,168,169,239,240,170,171,172,173,242,174,175,336,189,59,60,190,61,191,62,63,192,193,337,194,195,64,196,197,65,198,199,66,200,201,202,329,203,204,67,205],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":190,"org.easymock.tests2.UsageTest.argumentsOrdered":317,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":315,"org.easymock.tests2.StubTest.stubWithReturnValue":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.MockingTest.testPartialClassMocking":119,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":227,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests.MockClassControlTest.testToString":9,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":157,"org.easymock.tests.UsageExpectAndThrowTest.object":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":201,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.DelegateToTest.testWrongClass":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":193,"org.easymock.tests2.UsageTest.wrongArguments":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":8,"org.easymock.tests2.UsageConstraintsTest.testNull":191,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":72,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":259,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":118,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests.UsageUnorderedTest.message":332,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests.UsageTest.argumentsOrdered":268,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":245,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests2.UsageConstraintsTest.any":194,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":46,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":255,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":206,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests.ReplayStateInvalidUsageTest.times":257,"org.easymock.tests.LimitationsTest.mockNativeMethod":4,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests2.AnswerTest.answer":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests2.CaptureTest.testAnd":166,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":180,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CompareToTest.testCompareEqual":208,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":202,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.samples.ExampleTest.removeNonExistingDocument":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":219,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":198,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":321,"org.easymock.tests.UsageVerifyTest.twoThrows":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":158,"org.easymock.samples.PartialClassMockTest.testGetArea":134,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":156,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests.UsageTest.openCallCountByLastCall":50,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":19,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.MockClassControlTest.testEquals":12,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":233,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":44,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":55,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.samples.ExampleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testStubDelegate":165,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.AnswerTest.stubAnswer":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.UsageConstraintsTest.greaterThan":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":126,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":106,"org.easymock.samples.ExampleTest.voteForRemoval":131,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":5,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":239,"org.easymock.tests2.SerializationTest.test":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":178,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":179,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":89,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":247,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":176,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":209,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":335,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":220,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":173,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":235,"org.easymock.tests.UsageRangeTest.combination":54,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests.MockClassControlTest.testHashCode":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":292,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":246,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests2.UsageConstraintsTest.cmpTo":195,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.DefaultClassInstantiatorTest.object":304,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":25,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":96,"org.easymock.tests2.CaptureTest.testCapture":241,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":11,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":309,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":240,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":182}}]
