[{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[11,12,13,14,14,15,15,17,33,34,35,36,37,38,39,43,45,126,127,128,129,131,132,303,133,304,305,134,306,135,136,307,137,308,309,140,141,143,144,145,310,146,311,312,147,148,149,313,314,150,156,157,315,316,317,176,177,178,318,181,182,183,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[330,331],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[172,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,3,4,6,9,13,17,18,19,20,22,24,25,26,29,30,32,33,34,35,36,39,43,44,46,47,48,49,50,51,52,53,54,55,56,57,61,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,95,97,98,104,108,110,111,113,114,117,118,119,120,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,165,166,169,170,171,174,176,177,178,179,180,181,333,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,219,254,256,257,263,264,266,273,274,275,276,277,278,279,280,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[18,25,32,37,38,39,40,161,162,166,172,173,208,212,213,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,262,267,268,269,270,271,272],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:157","sourceCode":"final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[65,83,89,334],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:167","sourceCode":"final org.easymock.internal.ClassProxyFactory.MockMethodInterceptor org.easymock.internal.ClassProxyFactory.MockMethodInterceptor = new org.easymock.internal.ClassProxyFactory.MockMethodInterceptor(java.lang.reflect.InvocationHandler)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[17,335,336,337,338,339,340,341,342,43,343,344,345],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,2,3,4,5,6,346,7,8,9,10,11,12,13,14,14,15,15,16,17,335,18,19,20,21,22,23,24,25,26,27,28,29,30,347,31,32,348,33,349,34,350,351,352,353,354,355,35,356,357,36,358,359,37,38,39,40,41,360,42,43,44,45,46,47,48,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,361,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,0,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,362,363,364,365,124,366,367,368,369,370,125,371,372,373,374,375,376,128,129,130,131,133,305,134,306,135,344,307,138,139,377,309,378,379,140,141,142,143,144,145,310,146,380,311,312,147,148,149,313,381,382,383,384,385,150,386,387,388,389,390,391,151,152,153,154,155,156,392,393,157,394,395,396,397,398,399,158,400,401,402,403,404,405,159,160,161,162,163,406,164,165,166,167,168,169,170,171,172,173,174,175,315,316,317,176,177,407,178,408,409,318,179,180,330,181,182,183,331,333,410,411,412,413,414,415,416,417,418,332,419,420,421,422,423,424,425,426,184,427,428,429,430,431,185,432,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,433,434,435,436,437,438,439,440,441,442,443,444,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,445,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,446,320,447,241,242,243,244,448,245,246,247,248,449,249,250,251,252,253,254,255,256,257,258,259,260,450,261,262,451,263,452,264,265,266,321,453,454,455,456,457,458,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,459,289,290,460,461,291,292,293,462,294,295,296,297,298,299,300,301,463,302,464,465,466,467,322,323,324,325,326,327,328,329],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[313,153,436],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[67,68,70,72,73,75,85,90,110,112,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[468],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[460],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[31,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[43,44,45,469],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[242,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[18,20,21,22,23,27,28,29,30,47,49,51,52,54,55,67,82,93,95,96,97,98,99,100,101,102,103,124,125,371,127,128,131,132,303,133,304,135,136,307,137,308,141,312,149,314,150,386,162,163,406,164,167,168,169,175,333,410,445,319,446,471,320,472,447,244,245,246,449,249,250,251,253,254,255,256,257,258,450,451,263,452,264,265,266,278,296,302,466,467,324,325,326],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[10,16,366,367,368,370,371,372,373,376,381,382,383,385,386,387,388,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[20,21,27,28,473,474,475,476,163,406,164,167,168,477,478,479,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[11,12,13,14,14,15,15,17,33,34,35,36,39,43,45,126,127,128,129,131,132,303,133,134,306,135,136,307,137,308,140,141,143,144,145,310,146,312,147,148,149,156,157,317,176,177,178,181,182,183,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[282,283,284],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[330,331],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[67,68,70,72,73,75,85,90,110,112,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[34,37,306,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[206,209],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":324,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":320,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":409,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":329,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":459,"org.easymock.tests.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageVarargTest.varargIntAccepted":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":277,"org.easymock.tests.ReplayStateInvalidUsageTest.times":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":365,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":333,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":363,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":435,"org.easymock.tests.UsageThrowableTest.throwError":206,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":359,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":436,"org.easymock.tests.MockingTest.testInterfaceMocking":407,"org.easymock.tests2.CompareToTest.testLessOrEqual":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":467,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.MockClassControlTest.testEquals":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":364,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":404,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":212,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":458,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":310,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.GenericTest.testBridgedEquals":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":249,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":401,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":250,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":211,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.MockingTest.testNiceClassMocking":318,"org.easymock.tests.MockingTest.testClassMocking":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":161,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":42,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":338,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":465,"org.easymock.tests.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":289,"org.easymock.tests2.ConstraintsToStringTest.findToString":468,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":479,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.MockClassControlTest.testHashCode":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":362,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests.UsageVarargTest.varargCharAccepted":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":57,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":241,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":147,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":325,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":475,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":469,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":185,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":105,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":400,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":378,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":477,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests.UsageUnorderedTest.message":175,"org.easymock.tests.UsageVerifyTest.twoReturns":266,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":440,"org.easymock.tests2.StubTest.stub":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":456,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":439,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":99,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":349,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":346,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":454,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":153,"org.easymock.tests2.MockBuilderTest.testCreateMockString":308,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":107,"org.easymock.tests.UsageVerifyTest.twoThrows":265,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":148,"org.easymock.tests.LimitationsTest.privateConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":213,"org.easymock.tests2.UsageTest.defaultResetToNice":26,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests.UsageThrowableTest.throwCheckedException":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":478,"org.easymock.tests.MockingTest.testStrictClassMocking":315,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":109,"org.easymock.tests.ObjectMethodsTest.testHashCode":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":341,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":339,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":356,"org.easymock.tests2.DelegateToTest.testStubDelegate":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.stubAnswer":108,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":254,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":377,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":350,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":408,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":281,"org.easymock.tests2.MockedExceptionTest.testRealException":40,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":305,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":97,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":340,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":351,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":457,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":434,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":304,"org.easymock.tests.UsageTest.unexpectedCallWithArray":406,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.constraints":67,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageStrictMockTest.testVerify":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":275,"org.easymock.tests.LimitationsTest.abstractClass":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":292}}]
