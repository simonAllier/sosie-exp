[{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[81,82,18,19,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,26,98,30,99,32,38,40,41,100,101,102,103,104,105,48,49,106,107,108,109,110,111,80,112,113,114,115,116,117,118],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[119,120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[121,122],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[92,0,123,124,125,126,127,128,129],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[130,131,8,9,132,17,18,19,84,133,134,86,135,136,137,90,91,138,139,140,141,142,143,144,92,0,145,146,147,123,124,148,149,150,151,152,122,153,93,154,155,126,156,157,158,159,160,161,127,162,163,164,165,166,167,129,168,169,170,171,94,172,173,174,95,96,175,176,97,177,178,179,180,181,27,32,35,37,38,39,40,182,183,41,42,43,44,184,102,47,48,49,106,185,186,187,111,188,51,189,190,55,62,191,192,193,65,66,67,194,195,196,197,198,199,200,201,202,203,204,205,206,78,207],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[208,161],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[7,209,179,210,211,212,213,214,215,216,217,218,219],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[7,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[203,204,206],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[17,18,19,34,36,104,47,48,49,221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[222],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[87,93,35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[223,1,224,2,3,225,4,226,227,228,229,230,231,5,6,232,232,233,233,234,235,130,236,7,131,8,9,10,11,12,13,14,15,16,132,81,237,17,82,18,19,238,239,142,143,144,92,0,145,146,147,123,124,148,125,149,150,151,152,122,153,93,154,155,126,156,157,240,158,159,160,161,222,241,127,162,128,163,164,242,243,165,166,167,129,168,169,170,37,45,46,100,104,47,244,51,189,245,246,190,52,53,54,55,56,195,247,248],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[249],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[224,83,222,241,181,250,251,252],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[6,232,233,7,209,21,22,179,27,253,218,98,99,254,39,255,119,256],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[223,1,224,2,3,225,4,227,228,229,230,231,5,234,235,130,236,131,8,9,10,13,14,132,81,237,17,82,18,19,238,83,84,133,134,85,86,87,135,136,88,89,90,91,257,138,20,139,140,141,24,142,143,144,92,0,145,146,147,123,124,148,149,150,151,152,122,153,93,154,155,126,156,157,240,158,159,160,161,222,241,258,25,259,260,127,162,128,163,164,242,243,165,166,167,129,168,169,170,171,94,172,173,174,95,96,176,97,177,178,261,180,262,181,250,263,251,31,32,33,34,35,36,37,40,264,182,183,41,43,44,265,266,120,45,46,100,184,101,102,103,267,104,47,105,48,49,268,221,106,185,108,186,187,109,110,111,50,269,270,271,272,244,273,274,275,276,252,277,278,51,189,245,246,190,52,53,54,55,56,57,58,59,60,61,62,191,192,63,64,193,65,66,67,194,68,69,70,71,72,279,280,195,247,281,282,283,284,285,113,286,287,288,289,248,196,290,197,198,199,200,201,202,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,115,116,315,316,76,77,78,79,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[124,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[179,180,262,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[318,319,104,107,320,321],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[223,1,224,2,3,225,4,226,227,228,229,230,231,5,6,232,233,234,235,130,236,7,209,322,323,324,325,326,327,131,328,329,330,331,332,333,334,335,8,9,10,11,12,13,336,14,15,16,337,338,339,340,341,342,132,343,344,345,346,347,348,81,237,17,82,18,19,238,239,349,350,351,352,83,84,133,134,85,86,87,135,136,137,88,89,90,91,257,138,353,354,355,356,357,358,359,360,361,362,20,363,364,21,365,366,367,368,369,370,371,372,373,22,374,375,376,377,378,23,379,380,139,140,141,24,142,143,144,92,0,381,145,146,147,123,124,148,125,149,150,151,152,122,153,93,154,155,126,156,157,240,158,159,160,161,382,383,384,385,386,222,387,241,388,258,25,259,389,260,127,162,128,163,164,242,243,165,166,167,129,168,169,170,171,94,172,173,174,95,96,175,176,97,177,178,261,179,180,262,181,390,391,250,263,251,392,393,26,394,395,396,27,397,28,217,29,253,218,98,30,398,99,31,32,33,34,35,36,399,400,37,254,401,402,38,39,40,403,255,264,182,183,404,405,406,407,41,42,43,44,408,409,410,119,265,266,256,120,411,412,413,414,415,416,417,418,419,420,421,422,423,45,46,100,184,101,102,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,103,267,104,47,105,48,49,268,221,106,185,107,108,186,187,109,110,111,448,449,50,450,269,270,271,272,244,273,274,275,451,452,276,453,454,455,456,457,458,459,460,461,462,463,464,465,466,252,467,277,278,468,188,469,51,189,245,246,190,52,53,54,55,56,57,58,59,60,61,62,191,192,63,64,193,65,66,67,194,68,69,70,71,72,470,279,280,249,471,195,247,281,282,283,472,284,285,113,286,287,288,289,248,473,196,290,197,198,199,200,201,202,203,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,474,204,205,475,476,477,73,74,478,75,479,480,481,482,483,311,312,313,314,114,115,116,484,485,486,487,488,489,315,316,490,206,491,76,77,78,79,207,492,493,494,495,496,497,498,499,500,501,502,503,118,504,505,506],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[86,401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[223,1,224,2,3,225,4,227,228,229,230,231,5,234,235,130,236,131,8,9,10,13,14,132,237,17,82,18,19,238,83,84,133,134,86,87,135,136,88,90,91,257,138,20,139,140,141,24,142,143,144,92,0,145,146,147,123,124,148,149,150,151,152,122,153,93,154,155,126,156,157,240,158,159,160,161,222,241,258,25,259,260,127,162,128,163,164,242,243,165,166,167,129,168,169,170,171,94,172,173,174,95,96,176,97,177,178,261,180,262,181,250,263,251,31,32,33,34,35,36,37,264,182,183,41,43,44,265,266,120,45,46,100,184,101,102,267,47,105,48,49,268,106,185,186,187,109,111,50,269,270,271,272,244,273,274,275,276,252,277,278,51,189,245,246,190,52,53,54,55,56,57,58,59,60,61,62,191,192,63,64,193,65,66,67,194,68,69,70,71,72,279,280,195,247,281,282,283,284,285,286,287,288,289,248,196,290,197,198,199,200,201,202,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,115,116,315,316,76,77,78,79,207],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":434,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.tests.MockClassControlTest.testToString":486,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":382,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":291,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":85,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":406,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":416,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":316,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":190,"org.easymock.tests.UsageTest.moreThanOneArgument":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":470,"org.easymock.tests.UsageTest.argumentsOrdered":110,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":463,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.DependencyTest.testClassMocking":334,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":352,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":413,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":43,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":471,"org.easymock.tests2.DelegateToTest.testDelegate":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":306,"org.easymock.tests.LimitationsTest.mockFinalMethod":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":423,"org.easymock.tests2.DependencyTest.testClassMockingSupport":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":504,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":350,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":457,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":415,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":118,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":458,"org.easymock.tests2.CompareToTest.testLessOrEqual":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":454,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":300,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":404,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.MockClassControlTest.testEquals":315,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":421,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":351,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":79,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":422,"org.easymock.samples.BasicClassMockTest.testPrintContent":230,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":503,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":403,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":399,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":274,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":388,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":115,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":419,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":309,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":76,"org.easymock.tests.UsageCallCountTest.tooManyCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":11,"org.easymock.tests.MockingTest.testClassMocking":476,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":483,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":130,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":414,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":69,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.MockClassControlTest.testHashCode":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":239,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastCall":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":451,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":492,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":23,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":64,"org.easymock.tests2.SerializationTest.testAllMockedMethod":262,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":440,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":319,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":303,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":446,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":491,"org.easymock.tests.UsageExpectAndThrowTest.object":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":358,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":320,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":205,"org.easymock.tests.UsageUnorderedTest.message":100,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":117,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":374,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":453,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":229,"org.easymock.tests2.CaptureTest.testCapture_2617107":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":246,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":462,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":500,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":461,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.SerializationTest.testClass":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":72,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.NameTest.nameForMocksControl":386,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":505,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":477,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":299,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":226,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":498,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":141,"org.easymock.tests2.MockBuilderTest.testCreateMockString":99,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":484,"org.easymock.tests.UsageExpectAndThrowTest.floatType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":322,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":449,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":68,"org.easymock.tests.UsageVarargTest.differentLength":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":324,"org.easymock.tests2.CallbackTest.callback":83,"org.easymock.tests2.UsageConstraintsTest.equals":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":407,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockingTest.testStrictClassMocking":475,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":321,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":14,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":251,"org.easymock.tests.ObjectMethodsTest.testHashCode":452,"org.easymock.tests2.CompareToTest.testGreateOrEqual":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":215,"org.easymock.tests2.NameTest.nameForNiceMock":385,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.DependencyTest.testInterfaceMocking":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":213,"org.easymock.samples.ExampleTest.addDocument":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":375,"org.easymock.tests2.DelegateToTest.testStubDelegate":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":263,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":253,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":233,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":144,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":497,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":366,"org.easymock.tests.GenericTest.testPackageScope":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":305,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":44,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":359,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":437,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests2.NameTest.nameForStrictMock":384,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests2.MockBuilderTest.testWithConstructor":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":485,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":501,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":114,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests2.CompareToTest.testLessThan":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":456,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":394,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":194,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":420,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests.LimitationsTest.abstractClass":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282}}]
