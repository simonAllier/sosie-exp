[{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[15,25,60,61,62,63,64,65,66,67,68,69,70,46,47,71,72,73,74,75,76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,78,79,80,81,82,83,84,85,86,3,4,87,88,89,5,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,6,133,8,9,134,135,10,11,12,136,13,137,138,14,15,139,17,140,141,142,143,144,145,146,147,148,149,150,151,152,153,18,19,154,20,21,22,23,155,24,156,157,25,26,27,28,158,159,160,161,162,163,164,165,166,29,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,60,184,185,186,187,188,189,190,191,192,193,194,195,61,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,30,31,32,33,62,224,34,35,225,226,63,227,228,229,64,65,230,231,66,232,233,234,235,236,237,39,238,239,40,240,241,242,243,244,245,246,247,248,41,249,250,251,252,253,42,254,255,256,257,258,259,260,261,67,262,263,264,68,69,265,43,266,44,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,70,45,46,47,71,48,312,72,73,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,49,330,331,332,333,50,334,335,336,337,338,339,340,341,342,343,344,345,346,74,347,348,349,350,351,352,353,354,355,356,357,358,51,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,52,53,54,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,55,435,436,437,438,439,440,441,442,56,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,75,487,488,489,490,76,77,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[58,496,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[90,136,501,502,503,504,505,506,507,43],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[5,90,136,138,502,503,504,508,507,43],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[393],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[288,289,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[288,289,380,381],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[93,94,95,96,102,118,6,8,9,12,13,14,15,17,19,25,28,159,173,174,180,182,183,60,184,188,189,190,191,61,202,203,31,32,34,35,63,228,64,65,231,66,67,263,264,68,69,265,49,332,333,50,334,335,337,340,341,342,343,344,74,350,351,352,353,356,357,358,378,384,428,435,436,437,462,465,466,473,474,475,476,478,479,482,483,484,75,488,489,490,76,77,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[168,175,197,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[0,1,1,2,2,3,4,5,90,6,8,9,135,10,11,12,13,138,14,15,17,18,19,20,21,22,23,24,156,157,25,26,27,28,158,159,165,166,29,215,219,30,31,32,33,34,35,235,236,237,39,238,239,40,240,241,242,243,244,245,246,247,248,41,249,250,251,252,253,42,254,255,43,44,311,70,45,46,47,48,73,49,50,51,370,371,372,373,374,375,377,393,52,53,54,394,434,55,435,436,437,438,439,440,441,442,56,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[510,511,512,513,352,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[222,420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[222,413,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[97,99,124,126],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[97,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,6,8,10,11,12,13,14,15,17,140,141,142,143,144,145,146,147,148,149,150,151,152,153,18,19,154,20,21,22,23,24,25,26,27,28,160,161,162,163,165,166,29,167,173,180,181,182,183,60,184,185,186,187,188,189,190,191,61,202,209,210,211,212,213,214,222,223,30,31,32,33,224,34,35,226,63,227,228,229,64,65,230,231,66,232,233,234,39,40,41,42,256,257,258,259,260,261,67,262,263,264,68,69,265,43,266,44,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,45,46,47,48,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,336,337,338,339,340,341,342,343,344,346,74,347,348,349,350,351,352,353,354,355,356,357,358,51,359,360,361,362,363,364,365,366,367,368,370,378,379,380,381,382,383,385,386,387,388,389,390,391,392,52,53,54,395,396,397,414,420,422,423,424,426,427,428,429,430,431,432,433,434,55,435,436,437,438,439,440,56,444,445,446,447,448,449,450,451,452,453,454,455,456,457,459,462,463,464,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,75,487,488,489,490,76,77,491,492,493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[516,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:93","sourceCode":"org.easymock.internal.Range.getMinimum()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":189,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":408,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":184,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":86,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":468,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":92,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":444,"org.easymock.tests2.UsageTest.wrongArguments":183,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":451,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":66,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.DependencyTest.testClassMocking":192,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":132,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":331,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":348,"org.easymock.tests2.DelegateToTest.testDelegate":214,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests.LimitationsTest.mockFinalMethod":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":368,"org.easymock.tests2.DependencyTest.testClassMockingSupport":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":144,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":130,"org.easymock.tests.UsageThrowableTest.throwError":385,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":179,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":255,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":71,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":466,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":496,"org.easymock.tests.UsageOverloadedMethodTest.overloading":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":253,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":116,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":339,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":115,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":36,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":366,"org.easymock.tests.MockNameTest.defaultName":384,"org.easymock.tests2.UsageConstraintsTest.testMatches":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":433,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":473,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":391,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":158,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":153,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":432,"org.easymock.tests.GenericTest.testBridgedEquals":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":497,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":483,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":364,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":484,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testNiceClassMocking":73,"org.easymock.tests.MockingTest.testClassMocking":70,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":477,"org.easymock.tests2.UsageConstraintsTest.testContains":114,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":397,"org.easymock.tests.MockTypeTest.fromEasyMockClass":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":427,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":464,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":338,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests2.EasyMockSupportTest.testVerify":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":246,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":57,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":379,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests2.UsageTest.resumeIfFailure":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":470,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":420,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":257,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DelegateToTest.testWrongClass":212,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":486,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":515,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":235,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.UsageUnorderedTest.message":378,"org.easymock.tests.UsageVerifyTest.twoReturns":475,"org.easymock.tests.UsageVarargTest.varargByteAccepted":431,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":249,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":481,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":222,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":239,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":355,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":98,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.CaptureTest.testCaptureLast":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":45,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":162,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":259,"org.easymock.tests.UsageVerifyTest.twoThrows":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":91,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":392,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":165,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":156,"org.easymock.tests.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":446,"org.easymock.tests.UsageCallCountTest.tooFewCalls":479,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":452,"org.easymock.tests.UsageThrowableTest.throwCheckedException":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":383,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":261,"org.easymock.tests2.CompareToTest.testGreateOrEqual":514,"org.easymock.tests.ObjectMethodsTest.testHashCode":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":164,"org.easymock.tests2.NameTest.nameForNiceMock":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":250,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":254,"org.easymock.tests2.AnswerTest.stubAnswer":260,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":489,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":137,"org.easymock.tests.UsageVarargTest.varargLongAccepted":430,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.UsageThrowableTest.noUpperLimit":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":120,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":215,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":145,"org.easymock.tests2.SerializationTest.test":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":88,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":62,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":241,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":176,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":312,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":349,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":445,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":94,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":516,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":63,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":245,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":242,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":482,"org.easymock.tests2.UsageConstraintsTest.cmpTo":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests2.CaptureTest.testCaptureFromStub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":490,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":492,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":365,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":455,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":37,"org.easymock.tests.LimitationsTest.abstractClass":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":456,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65}}]
