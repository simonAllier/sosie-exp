[{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[5,5,6,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[18,19,7,20,21,22,23,24,25,26,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,17,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,13,14,15,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[346,347,348,349,187,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[127,130,131,350],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:82","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:67","sourceCode":"private static class MockHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.reflect.InvocationHandler delegate;\n\n    private final java.util.Set<java.lang.reflect.Method> mockedMethods;\n\n    public MockHandler(java.lang.reflect.InvocationHandler delegate ,java.lang.reflect.Method... mockedMethods) {\n        this.java.lang.reflect.InvocationHandler = java.lang.reflect.InvocationHandler;\n        this.java.util.Set<java.lang.reflect.Method> = java.lang.reflect.Method[] != null ? new java.util.HashSet<java.lang.reflect.Method>(java.util.Arrays.java.util.Arrays.asList(java.lang.reflect.Method[])) : null;\n    }\n\n    public java.lang.Object invoke(java.lang.Object obj, java.lang.reflect.Method method, java.lang.Object[] args) throws java.lang.Throwable {\n        if (java.lang.reflect.Method.isBridge()) {\n            java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n        } \n        boolean boolean = ((java.lang.Object instanceof java.lang.Throwable) && (java.lang.reflect.Method.getName().equals(\"fillInStackTrace\"))) && org.easymock.internal.ClassProxyFactory.(org.easymock.internal.ClassProxyFactory.isCallerMockInvocationHandlerInvoke(new java.lang.Throwable()));\n        if (boolean || (org.easymock.internal.AndroidClassProxyFactory.MockHandler.(isMocked(java.lang.reflect.Method)) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isAbstract(java.lang.reflect.Method.getModifiers()))))) {\n            return com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.callSuper(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);\n        } \n        return java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);\n    }\n\n    private boolean isMocked(java.lang.reflect.Method method) {\n        return ((java.util.Set<java.lang.reflect.Method>) != null) && (!(java.util.Set<java.lang.reflect.Method>.contains(java.lang.reflect.Method)));\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[37,39,47,97,98,100,102,103,105,114,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[12,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[5,5,6,6,10,373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[9,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328,329,330,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[22,24,25,122,123,124,125,143,144,150,151,376,166,167,168,187,188,190,191,338,340,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[37,38,39,40,47,48,97,98,99,100,101,102,103,104,105,106,114,115,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[377],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[74,76,378],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[379,380,381,382,383,18,384,385,7,20,22,23,24,25,26,9,27,29,31,32,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,54,56,63,64,75,76,77,79,94,95,96,97,98,99,100,101,102,103,104,106,107,108,17,109,110,111,112,113,114,115,116,118,119,120,121,126,129,130,131,134,139,140,141,142,143,144,145,146,147,148,150,151,153,166,167,168,169,170,171,172,173,176,177,179,180,181,182,183,184,185,187,188,189,190,191,192,201,202,203,204,206,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,240,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,282,283,289,290,291,292,293,295,296,308,309,310,311,312,313,314,316,317,318,333,337,338,339,340,341,342,343,344,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[386,387,388,379,380,389,390,381,391,392,5,5,6,6,351,393,394,395,352,382,396,383,18,384,353,354,355,397,356,19,357,358,359,360,361,362,398,399,385,400,7,8,401,20,21,22,23,24,25,26,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,402,58,10,403,59,60,61,62,404,405,63,406,64,65,66,67,68,363,364,365,407,366,69,367,368,369,370,371,372,408,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,409,99,100,101,102,103,104,105,106,107,108,17,109,110,111,112,113,114,115,116,117,118,119,120,121,410,122,123,124,125,126,127,128,129,130,131,132,411,133,412,413,414,134,135,136,415,137,11,138,139,416,140,417,418,419,420,141,142,143,144,145,146,147,148,149,150,151,152,153,421,422,423,154,424,425,155,426,427,428,429,430,431,432,433,434,156,435,436,437,438,439,157,440,441,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,442,174,443,175,176,444,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,445,197,446,447,448,449,450,451,452,453,198,199,200,454,455,201,202,203,204,205,206,456,457,458,459,460,461,207,208,209,210,211,212,213,214,215,12,13,14,15,16,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,462,463,276,464,277,278,279,280,281,282,283,465,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,466,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,467,468,315,316,317,469,318,470,471,472,319,320,321,322,323,324,325,326,327,328,329,330,473,0,474,375,475,476,350,477,1,478,378,479,2,480,481,482,331,3,4,483,484,485,332,486,333,334,335,336,337,338,339,340,341,342,343,344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":337,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":146,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":351,"org.easymock.tests2.DelegateToTest.testReturnException":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":316,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":376,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":379,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":274,"org.easymock.tests.UsageTest.moreThanOneArgument":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":277,"org.easymock.tests.UsageTest.argumentsOrdered":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":73,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":413,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":335,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":270,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":288,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":175,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":458,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":441,"org.easymock.samples.PartialClassMockTest.testGetArea":393,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests2.UsageTest.niceToStrict":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":264,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":346,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":272,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":286,"org.easymock.tests.MockNameTest.defaultName":465,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.samples.ExampleTest.voteForRemovals":381,"org.easymock.tests.UsageVarargTest.allKinds":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":451,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":452,"org.easymock.samples.ExampleTest.voteForRemoval":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":404,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":396,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":214,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":273,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests.MockingTest.testNiceClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":296,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":200,"org.easymock.tests.UsageTest.exactCallCountByLastCall":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":408,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":445,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":486,"org.easymock.tests2.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":328,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.StubTest.stubWithReturnValue":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":415,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.samples.SupportTest.voteForRemovals":387,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":347,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":267,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":443,"org.easymock.tests.UsageExpectAndThrowTest.object":265,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":115,"org.easymock.tests2.DelegateToTest.testWrongClass":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":309,"org.easymock.tests.UsageStrictMockTest.range":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":419,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":421,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":161,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":394,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":292,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests2.StubTest.stub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.UsageExpectAndThrowTest.longType":258,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":276,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":425,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":342,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":406,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":259,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":116,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":263,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.samples.ExampleTest.removeNonExistingDocument":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":447,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":383,"org.easymock.tests2.MockBuilderTest.testCreateMockString":140,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":257,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":401,"org.easymock.tests.UsageVerifyTest.twoThrows":167,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests2.UsageTest.defaultResetToNice":149,"org.easymock.samples.ExampleTest.voteAgainstRemovals":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.UsageConstraintsTest.equals":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":341,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":291,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":34,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":199,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":384,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.DependencyTest.testInterfaceMocking":385,"org.easymock.samples.ExampleTest.addDocument":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.DelegateToTest.testStubDelegate":76,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":188,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.UsageThrowableTest.noUpperLimit":178,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":446,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":386,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":416,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":269,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":336,"org.easymock.tests2.MockedExceptionTest.testRealException":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":290,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":414,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":418,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":448,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":340,"org.easymock.tests2.MockBuilderTest.testWithConstructor":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":450,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":375,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":412,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.CaptureTest.testCapture":377,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":392,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":352,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":285,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":298}}]
