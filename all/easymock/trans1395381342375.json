[{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,3,4,52,53,54,55,56,57,58,59,60,61,14,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,23,102,103,104,105,106,27,107,108,109,110,111,112,113,114,115,116,35,117,118,119,120,121,122,123,124,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[127,128,39,129,130,131,132,40,41,133,134,135,57,136,58,137,138,14,63,64,139,140,82,83,141,142,143,23,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[144,145,98,146,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[20,20,21,21,148,149,150,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[153,154,155,156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[157,158,159,160,161],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[162,163,164,165,166,151],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[167,168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[112,113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[169,118,119,170,120,121,122,124,168,125,38,126],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[171,127,172,173,174,128,129,175,176,130,131,132,177,178,40,41,179,42,43,44,45,46,180,47,48,49,50,51,3,4,52,181,5,53,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,133,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,54,235,55,236,237,56,238,135,57,136,58,6,7,8,9,10,11,12,239,59,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,0,259,260,13,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,60,61,138,14,62,63,64,65,286,287,66,288,289,67,68,69,70,71,15,16,17,18,19,290,291,292,73,293,74,75,294,76,295,77,296,79,139,140,80,81,297,298,299,82,83,300,301,302,303,304,305,306,307,308,309,310,84,311,312,85,313,314,315,316,317,318,86,319,320,87,321,322,323,324,325,326,88,327,328,329,330,331,332,145,333,155,156,334,150,335,1,2,336,337,338,339,340,341,98,342,343,344,345,346,347,348,99,349,22,100,101,23,102,103,104,105,24,25,350,106,26,27,28,29,107,108,109,351,30,110,31,32,111,33,34,112,113,114,115,116,35,36,37,352,152,353,354,169,117,118,119,170,120,121,122,123,124,125,38,355,126,146,147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[356,357,162,358,359,315,317,360,361,362,363,151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[130,131,132,40,41,364,365,366,138,139,140,82,83,367,368,369,370],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[201,372,293,346,348,373,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[356,357,162,358,359,315,317,360,361,362,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests2.UsageTest.argumentsOrdered":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":188,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":81,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":354,"org.easymock.tests2.DelegateToTest.testReturnException":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":186,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":371,"org.easymock.tests.MockingTest.testPartialClassMocking":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":369,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.MockClassControlTest.testToString":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":154,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":6,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":3,"org.easymock.tests2.UsageTest.wrongArguments":140,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":173,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":248,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":259,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":10,"org.easymock.tests2.CaptureTest.testCaptureNone":123,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":49,"org.easymock.tests2.ThreadingTest.testThreadSafe":335,"org.easymock.tests.UsageTest.argumentsOrdered":41,"org.easymock.tests.UsageVarargTest.varargIntAccepted":44,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":55,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":311,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests2.StubTest.stub":349,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":187,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":152,"org.easymock.tests.ReplayStateInvalidUsageTest.times":258,"org.easymock.tests.LimitationsTest.mockNativeMethod":238,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.AnswerTest.answer":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests2.NameTest.nameForMocksControl":345,"org.easymock.tests2.MockedExceptionTest.testMockedException":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.DelegateToTest.testDelegate":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":318,"org.easymock.tests.MockingTest.testNicePartialClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":321,"org.easymock.tests2.CaptureTest.testCaptureLast":122,"org.easymock.tests2.CompareToTest.testCompareEqual":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":39,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.tests.UsageThrowableTest.throwError":66,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":172,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":2,"org.easymock.tests2.MockBuilderTest.testCreateMockString":313,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":12,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":333,"org.easymock.tests.UsageVerifyTest.twoThrows":57,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":361,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":253,"org.easymock.tests.MockingTest.testInterfaceMocking":245,"org.easymock.tests2.CompareToTest.testLessOrEqual":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests.UsageVarargTest.differentLength":180,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.UsageCallCountTest.tooFewCalls":54,"org.easymock.tests.UsageOverloadedMethodTest.overloading":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":31,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":110,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests.MockClassControlTest.testEquals":197,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":291,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests.MockingTest.testStrictClassMocking":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":316,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":315,"org.easymock.tests.MockNameTest.defaultName":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.UsageConstraintsTest.testMatches":32,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.tests2.CompareToTest.testGreateOrEqual":160,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests2.NameTest.nameForNiceMock":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests2.DependencyTest.testInterfaceMocking":352,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testStubDelegate":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":327,"org.easymock.tests.UsageVarargTest.varargLongAccepted":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":296,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.SerializationTest.test":353,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":120,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":185,"org.easymock.tests2.CaptureTest.testCaptureFirst":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":255,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests.GenericTest.testPackageScope":290,"org.easymock.tests2.CaptureTest.testCapture2_2446744":355,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":50,"org.easymock.tests.GenericTest.testBridgedEquals":374,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":363,"org.easymock.tests2.NameTest.nameForMock":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests2.MockedExceptionTest.testRealException":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":314,"org.easymock.tests.MockingTest.testNiceClassMocking":249,"org.easymock.tests.MockingTest.testClassMocking":242,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":233,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":340,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests.MockTypeTest.fromEasyMockClass":127,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":305,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":164,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":366,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.UsageTest.wrongArguments":132,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests.MockClassControlTest.testHashCode":196,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.UsageVarargTest.varargShortAccepted":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":236,"org.easymock.tests2.UsageConstraintsTest.cmpTo":351,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":45,"org.easymock.tests2.CompareToTest.testLessThan":157,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":131,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":235,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests2.CaptureTest.testCapture":168,"org.easymock.tests2.UsageConstraintsTest.constraints":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":326,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":195,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests.CapturesMatcherTest.test":167,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CompareToTest.testGreateThan":158,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":171,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":302}}]
