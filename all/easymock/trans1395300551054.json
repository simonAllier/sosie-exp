[{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:27","sourceCode":"-6657694947057597484L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"i","maximum":"i"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[72,73,74,75,76,77,78,79,80,46,81,82,83,84,85,86,64,87,88,89,47,48,90,49,91,92,51,93,94,11,95,96,70,97,98,99,100],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[101,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:173","failures":[102],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[103],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[77,78,104,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[105,106,107],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:153","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectByType(java.lang.Object, java.util.List<java.lang.reflect.Field>, org.easymock.internal.InjectionPlan.getUnqualifiedInjections())","type":"CtInvocationImpl"},"failures":[108,109,110,111,112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[16,114,115,32,116,117],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,27,168,169,170,171,172,173,174,175,176,177,178,29,30,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,5,6,7,8,9,10,208,209,210,211,212,213,214,35,215,216,217,218,219,220,221,222,223,224,108,76,109,225,226,227,228,229,230,231,77,78,232,233,234,235,236,237,40,41,238,44,79,84,85,86,87,239,240,241,242,243,244,245,246,247,93,248,249,53,250,251,252,253,254,255,256,257,258,259,260,261,262,54,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,11,12,13,14,280,281,282,283,284,55,285,286,102,287,95,288,289,96,290,56,291,292,293,57,58,294,295,59,296,297,298,299,300,301,302,303,98,99,100,304,305,306,63,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[77,78,80,82,64,89,328,90,329,330,331,92,95,96,70],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[126,17,18,19,28,178,29,30,32,214,34,35,237,39,42,43,299,300,301,302,306,62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[121,122,123,124,165,166,167,27,168,169,170,175,179,180,181,182,183,184,187,188,190,191,192,194,195,196,197,198,208,214,34,35,217,218,220,221,222,223,224,76,225,227,228,230,235,46,84,86,87,48,239,240,241,50,242,243,244,245,246,51,93,52,332,102,96,303,98,99,100,306,62,63,310,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[333,317,319,320,334,321,322,323,325,335,326,336,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.Range:44","failures":[121,122,123,124,125,15,126,16,17,337,338,18,19,20,339,340,341,72,342,343,344,345,73,346,347,348,349,350,351,352,353,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,354,150,151,23,152,153,154,155,156,157,158,159,160,161,162,163,24,25,26,355,164,3,356,357,358,165,166,359,167,360,361,362,27,168,169,170,363,364,365,366,367,171,368,369,172,173,370,371,174,28,175,176,4,372,177,178,29,30,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,373,199,200,374,375,376,377,378,201,202,203,204,205,74,206,207,75,379,5,6,7,8,9,10,380,381,208,382,383,384,385,386,387,388,389,390,391,392,393,394,395,105,106,396,397,398,107,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,209,210,211,212,425,426,427,428,429,430,31,213,32,214,33,34,35,215,216,217,218,431,432,433,434,435,436,437,438,439,37,440,219,441,442,443,444,445,446,220,221,222,223,224,108,76,109,225,226,227,228,229,230,447,231,77,78,232,233,234,235,38,236,237,39,40,41,448,449,238,42,43,44,45,79,80,46,81,82,83,84,85,86,64,87,88,89,47,48,90,49,450,451,239,240,241,50,242,243,244,245,91,452,246,92,453,247,51,93,52,101,94,248,249,53,250,454,251,252,253,254,255,256,455,257,258,259,260,261,262,54,263,264,265,266,267,456,268,269,270,271,272,457,458,273,274,275,276,277,278,279,11,12,13,14,280,459,281,282,283,71,332,284,55,110,460,461,462,463,285,111,464,465,466,467,468,469,286,102,470,471,287,95,288,289,96,70,97,290,56,291,292,293,57,58,294,295,59,296,297,298,472,299,300,301,302,473,474,475,476,477,478,479,480,481,482,303,483,484,98,485,486,487,488,489,490,491,492,493,99,494,495,496,497,498,100,499,500,112,501,502,503,504,304,113,505,506,507,508,509,60,305,306,61,62,63,307,308,309,510,310,311,312,313,511,314,315,316,512,317,318,319,320,334,321,322,323,324,325,326,336,513,327],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[72,73,157,358,165,166,167,206,207,75,208,219,76,77,77,78,78,232,233,79,514,46,81,84,85,86,87,47,48,515,49,241,50,243,244,245,91,246,247,51,93,52,13,516,95,289,96,303,98,99,100,310,311,312,313,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[409,435,438,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[121,122,123,124,125,164,175,176,177,214,217,218,220,221,222,223,224,77,77,78,78,248,249,251,252,253,254,259,261,262,263,264,269,270,271,306,336],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[16,114,115,32,116,117],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":109,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.tests.MockClassControlTest.testToString":441,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":73,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":243,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":435,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests.ReplayStateInvalidUsageTest.times":391,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests2.DependencyTest.testClassMocking":450,"org.easymock.tests2.AnswerTest.answer":272,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":317,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":343,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":293,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":142,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":205,"org.easymock.tests2.DependencyTest.testClassMockingSupport":451,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":370,"org.easymock.tests2.CaptureTest.testCapture1_2446744":334,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":385,"org.easymock.tests.UsageThrowableTest.throwError":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":500,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":386,"org.easymock.tests.MockingTest.testInterfaceMocking":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":489,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":118,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":136,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":260,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":325,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":354,"org.easymock.tests.MockClassControlTest.testEquals":445,"org.easymock.tests2.EasyMockSupportClassTest.testAll":303,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests2.CaptureTest.testCaptureAll":318,"org.easymock.tests.MockNameTest.defaultName":355,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":383,"org.easymock.samples.ExampleTest.voteForRemovals":230,"org.easymock.tests.UsageVarargTest.allKinds":156,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":204,"org.easymock.samples.BasicClassMockTest.testPrintContent":233,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":377,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":291,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":469,"org.easymock.tests2.CaptureTest.testCaptureFirst":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":292,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":513,"org.easymock.tests2.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":155,"org.easymock.tests.GenericTest.testBridgedEquals":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":25,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":290,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":456,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageCallCountTest.tooManyCalls":26,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":376,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests.MockingTest.testNiceClassMocking":362,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":514,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":159,"org.easymock.tests2.UsageConstraintsTest.testContains":259,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":13,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":281,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":295,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":66,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":428,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.MockClassControlTest.testHashCode":444,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":491,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":510,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":395,"org.easymock.tests2.CaptureTest.testCaptureMultiple":333,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":119,"org.easymock.tests.DefaultClassInstantiatorTest.object":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":492,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":110,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":348,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":1,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":289,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":331,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":139,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":423,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":457,"org.easymock.tests.UsageExpectAndThrowTest.object":137,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":266,"org.easymock.tests2.DelegateToTest.testWrongClass":470,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":478,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":433,"org.easymock.tests2.CaptureTest.testCaptureNone":324,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":36,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":103,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":154,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":494,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":163,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":232,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":372,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":390,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":502,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":504,"org.easymock.tests2.MockedExceptionTest.testMockedException":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":484,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":131,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":112,"org.easymock.tests2.CaptureTest.testCaptureLast":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":371,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":267,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":512,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":270,"org.easymock.samples.ExampleTest.removeNonExistingDocument":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":485,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":97,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.ExampleTest.voteAgainstRemoval":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.UsageConstraintsTest.testNotNull":269,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":378,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":501,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":454,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":92,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":115,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":275,"org.easymock.tests.ObjectMethodsTest.testHashCode":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":68,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.NameTest.nameForNiceMock":301,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":67,"org.easymock.samples.ExampleTest.addDocument":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.AnswerTest.stubAnswer":274,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":214,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":88,"org.easymock.tests.UsageVarargTest.varargLongAccepted":153,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":264,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":473,"org.easymock.tests2.SerializationTest.test":288,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":486,"org.easymock.tests.GenericTest.testPackageScope":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":360,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":141,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":176,"org.easymock.tests2.NameTest.nameForStrictMock":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":62,"org.easymock.tests2.UsageConstraintsTest.lessThan":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":490,"org.easymock.tests2.CaptureTest.testCaptureRightOne":326,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":487,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.UsageVarargTest.varargShortAccepted":152,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":24,"org.easymock.tests2.UsageConstraintsTest.cmpTo":258,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":449,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":384,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":81,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":162,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.CaptureTest.testCapture":335,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.UsageStrictMockTest.testVerify":216,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":108,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":202,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58}}]
