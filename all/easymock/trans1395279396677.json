[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[4,6,8,10,14,15],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,1,63,64,65,66,67,2,3,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,8,194,195,196,197,198,199,199,200,9,10,11,201,202,12,13,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[53,54,8,196,197,10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[70,219],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[324,81,98,104],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,25,38,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[53,1,2,3,188,190,191,8,196,10,11,12,13,325,215],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[30,141,148,326,149,327,150,151,152,153,154,155,328,329,156,163,330,331,332],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[33,34,35,36,205,206,207,208,209,210,218,247],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[146,147],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[30,31,32,33,42,43,46,47,163,166,167,333,287,288,289],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[122,334,124,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:252","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[336,141,337,338,339,340,341,342,343],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[31,32,344,345,346,347],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[33,34,35,36,61,66,71,171,200,202,205,206,207,208,209,210,214,218,219,247,261,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[33,34,35,36,309,205,206,207,208,209,210,218,247,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[83,84,86,88,89,351,100,105,114,116,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[18,20,21,23,29,30,37,39,40,41,42,43,44,45,46,47,51,53,54,72,73,74,75,79,111,149,150,152,153,155,157,158,159,160,161,162,164,166,167,168,176,352,177,178,186,187,194,196,197,204,216,221,222,223,224,225,226,227,228,229,230,231,234,235,237,238,239,241,242,243,244,245,287,288,289,297,298,299,300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[152,332],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[30,149,150,152,153,155,156],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[326,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[37,336,141,337,338,339,354,355,342,343],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[19,110,112,113,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[333],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.tests2.StubTest.stubWithReturnValue":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":143,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":287,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":40,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":337,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageStrictMockTest.range":196,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":152,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":353,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":304,"org.easymock.tests2.StubTest.stub":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.SerializationTest.testClass":141,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":245,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":62,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests2.MockedExceptionTest.testMockedException":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":177,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":153,"org.easymock.tests.MockingTest.testNicePartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":162,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":145,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests2.CompareToTest.testLessOrEqual":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":154,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":241,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests2.DependencyTest.testInterfaceMocking":39,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":339,"org.easymock.samples.BasicClassMockTest.testPrintContent":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":355,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":311,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.floatType":228,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":163,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":211,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":130,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.samples.SupportTest.addDocument":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":233,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":295,"org.easymock.tests.UsageExpectAndReturnTest.longType":229,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":238,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":230,"org.easymock.tests.UsageCallCountTest.tooManyCalls":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.MockedExceptionTest.testRealException":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":326,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":85,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageExpectAndReturnTest.object":236,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":338,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":129,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":231,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":240,"org.easymock.tests2.CaptureTest.testCapture":334,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests.CapturesMatcherTest.test":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":348,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":134}}]
