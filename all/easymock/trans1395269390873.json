[{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[145,146],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[147,148,149,150,151,152,153,154,155,156,157],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[98,103,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[93,97],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[159,160],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,161,162,163,164,165,166,167,168,3,4,169,170,171,5,148,149,151,172,173,174,175,176,153,177,178,179,180,154,11,13,14,155,181,156,182,183,184,185,186,187,157,188,19,20,189,21,22,23,25,30,190,191,36,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,43,44,45,46,208,47,48,209,210,211,212,213,214,215,216,217,218,219,220,52,55,65,71,221,222,223,224,225,226,227,228,74,229,75,113,114,116,121,126,230,231,232,233,234,79,80,81,235,236,131,237,238,239,240,241,242,85,243,135,244,245,136,137,138,139,140,94,95,246,247,248,249,250,251,252,253,254,255,256,257,108,258,259,260,142,144,261,262,263,264,265,266,267,268,269,270,271,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[274,275,276,277,278,279,280,281,282,283,284,176,285,195,198,199,224,226,227,286,287,237,288,289,290,291,292,293,294,295,296,297,298,299,239,240,241,243,300,144,261,268,269,271,272],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[1,1,2,2,301,302,303,149,304,150,305,306,307,160,308,154,309,146,310,224,311,312,313,314,315,316,258,259,317,318,319,320,321,322,323,324,269],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[147,148,149,150,151,152,153,154,155,156,157],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,325,15,326,327,328,329,330,74],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[285,224,227,228,115,119,120,122,125,237,331,298,300,144,261,269,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[162,332,205,333,206,334,207,236],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[335,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,1,2,2,3,4,5,7,8,9,11,12,13,14,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,36,43,44,45,46,47,48,52,55,65,71,74,75,78,79,80,81,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,108,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[34,35,36,335,193,337,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,338,339,131,340,341,133,134,342,135,245,136,137,138,139,140,343,260,142,344,345,346,347,143,348,144],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[195,198,199,226,297,299,239,240,241,243,144,261,268,271],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:103","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[147,148,149,150,151,152,153,154,155,156,157],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[349,350,351,352,353,354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[74,229,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[11,29,30,355,356,357],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[147,358,359,360,361,7,12,13,14,17,18,24,28,192,193,195,196,197,362,198,199,200,204,211,213,214,363,216,364,225,226,227,340,299,239,240,241,242,365,366,367,368,369,243,370,371,372,373,144,261,374,268,270,271,272],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[162,203,221,375,376,235,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[1,2,5,6,378,379,380,381,325,15,382,383,45,48,384,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.EasyMock:557","failures":[0,1,1,2,2,161,162,163,164,166,167,171,5,385,386,301,302,147,148,303,149,304,150,151,172,173,174,305,175,306,307,176,160,308,153,177,178,180,154,309,146,8,11,13,14,17,155,181,182,387,185,186,187,157,310,388,188,19,20,189,21,22,23,25,29,30,31,389,390,391,190,191,34,35,36,335,192,193,194,285,196,392,337,362,393,200,201,202,203,204,332,205,333,206,334,207,394,110,43,44,45,46,208,47,48,209,210,211,212,213,214,215,363,216,217,218,219,52,55,65,71,221,395,375,222,396,376,224,226,227,74,229,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,397,338,339,398,399,230,231,400,232,401,402,403,404,233,405,406,407,408,234,409,410,411,412,79,80,81,413,311,312,313,314,315,235,236,131,237,290,414,238,415,416,417,340,298,418,341,242,85,419,420,421,422,423,243,132,133,134,316,342,135,244,245,136,137,138,139,140,94,96,246,247,343,424,425,108,258,259,260,142,317,318,319,320,321,322,426,427,428,344,345,346,347,143,348,300,144,261,429,323,324,269,271,272,430,431,432],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[93],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[161,162,163,164,165,166,433,167,5,434,435,436,437,385,386,301,302,147,148,303,149,304,150,151,172,173,174,305,175,306,307,176,160,308,153,177,178,179,180,154,309,146,358,359,360,361,7,8,11,12,16,17,18,155,181,156,182,387,183,184,185,186,187,157,310,388,188,19,20,189,21,22,23,24,25,28,29,30,31,389,390,391,190,191,34,35,36,335,193,194,285,195,196,197,392,337,362,198,199,393,200,201,203,204,205,333,206,207,394,110,44,45,47,48,221,222,396,376,364,223,224,225,226,227,228,74,229,75,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,398,399,230,231,400,232,401,402,403,404,233,405,406,407,408,234,409,410,411,412,79,80,81,438,439,440,441,442,413,443,444,445,446,447,448,311,312,313,314,315,235,286,236,131,237,288,290,238,415,416,417,340,298,299,239,418,341,240,241,242,85,365,366,367,368,369,86,243,316,342,135,244,245,136,137,138,139,140,94,95,246,247,343,248,249,250,251,252,449,253,254,255,256,257,98,99,100,101,102,103,104,105,108,258,259,260,142,317,370,371,372,373,318,319,320,321,322,450,158,451,344,345,346,347,143,348,300,144,261,452,453,429,262,263,264,454,265,266,323,324,374,267,268,269,270,271,272,273,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[195,198,199,226,288,297,299,239,240,241,243,144,261,268,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[456,457],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,325,326,327,328,329,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[458],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,161,162,163,164,165,166,433,167,168,3,4,169,170,171,5,6,459,434,435,436,437,385,460,386,301,302,147,148,461,303,149,304,150,151,172,152,173,174,305,175,306,307,176,160,308,153,177,178,179,180,154,309,146,358,359,360,361,7,8,9,10,11,12,13,14,15,16,17,18,155,181,156,182,387,183,184,185,186,187,157,310,388,188,19,20,189,21,22,23,24,462,25,26,27,28,29,30,31,32,33,389,390,391,190,191,34,35,36,335,463,464,465,456,466,192,467,468,469,470,471,472,193,194,285,195,196,197,392,337,362,198,199,393,200,37,38,201,202,203,473,474,475,457,476,204,477,478,479,480,481,482,332,205,333,206,334,207,39,42,483,484,394,110,43,44,45,46,208,47,48,209,210,211,212,213,214,215,363,216,217,218,219,220,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,221,395,375,222,396,376,364,223,224,225,226,227,228,74,229,75,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,397,338,339,398,399,230,231,400,232,401,402,403,404,233,405,406,407,408,234,409,410,411,412,76,77,78,79,80,485,81,486,487,82,438,439,440,441,442,413,443,444,445,446,447,448,311,312,313,314,315,83,488,489,84,490,491,235,286,236,131,287,237,288,289,290,331,414,238,415,416,417,340,298,299,239,418,341,240,241,242,85,419,420,421,422,423,365,366,367,368,369,86,87,88,89,90,91,92,243,132,133,134,316,342,492,135,244,245,136,137,138,139,140,93,94,95,96,97,246,247,343,493,494,495,141,496,497,498,499,500,501,502,503,504,377,505,506,424,507,508,509,510,511,425,512,248,249,250,513,251,252,449,253,254,255,256,257,98,99,100,101,102,103,104,105,106,107,108,109,258,259,260,142,317,370,371,372,373,318,319,320,321,322,426,427,428,514,450,158,451,515,336,344,345,346,347,143,348,300,144,261,452,453,429,262,263,264,454,265,266,323,324,374,267,268,269,270,271,272,273,455,430,431,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests2.UsageTest.argumentsOrdered":199,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":340,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":502,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":168,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":345,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":459,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":509,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":111,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":372,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":217,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":130,"org.easymock.tests.UsageTest.moreThanOneArgument":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":419,"org.easymock.tests.UsageTest.argumentsOrdered":241,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":506,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":278,"org.easymock.tests.ReplayStateInvalidUsageTest.times":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests2.DependencyTest.testClassMocking":37,"org.easymock.tests2.AnswerTest.answer":221,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":507,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":361,"org.easymock.tests2.CaptureTest.testAnd":155,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":126,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":387,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":359,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":440,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":73,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":60,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":479,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":120,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":370,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":70,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":405,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":513,"org.easymock.tests.MockClassControlTest.testEquals":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":128,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":355,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":458,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":367,"org.easymock.tests.MockNameTest.defaultName":492,"org.easymock.tests2.UsageConstraintsTest.testMatches":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":300,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":348,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":92,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":211,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":212,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":402,"org.easymock.tests2.CaptureTest.testCapture2_2446744":388,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":508,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.UsageExpectAndReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":365,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":129,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":292,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":44,"org.easymock.tests.MockingTest.testNiceClassMocking":82,"org.easymock.tests.MockingTest.testClassMocking":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":453,"org.easymock.tests2.UsageConstraintsTest.testContains":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":36,"org.easymock.tests2.UsageConstraintsTest.testFind":303,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":386,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":374,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":216,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":451,"org.easymock.tests.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":409,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.MockClassControlTest.testHashCode":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":62,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":277,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":133,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":358,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":512,"org.easymock.tests2.UsageTest.openCallCountByLastCall":392,"org.easymock.tests.DefaultClassInstantiatorTest.object":86,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":219,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":132,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":450,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":410,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":397,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":279,"org.easymock.tests2.UsageTest.resumeIfFailure":393,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":347,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests2.SerializationTest.testAllMockedMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":424,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":123,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":425,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":428,"org.easymock.tests.UsageExpectAndThrowTest.object":121,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":483,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":49,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":432,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":350,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.UsageVerifyTest.twoReturns":261,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":66,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":264,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":515,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":156,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":510,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":444,"org.easymock.tests2.StubTest.stub":394,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":511,"org.easymock.tests.UsageExpectAndThrowTest.longType":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":90,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":443,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.SerializationTest.testClass":74,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":412,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":475,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.NameTest.nameForMocksControl":437,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests2.MockedExceptionTest.testMockedException":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":54,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":341,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":460,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":115,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":14,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":473,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":78,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":119,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":309,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":354,"org.easymock.samples.ExampleTest.removeNonExistingDocument":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":478,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":442,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":88,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":353,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":391,"org.easymock.tests2.ConstraintsToStringTest.andToString":281,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests.UsageVerifyTest.twoThrows":144,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":430,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":34,"org.easymock.tests2.UsageTest.defaultResetToNice":362,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":474,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.CallbackTest.callback":203,"org.easymock.tests2.UsageConstraintsTest.equals":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":294,"org.easymock.tests.UsageTest.openCallCountByLastCall":418,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":260,"org.easymock.tests.UsageCallCountTest.tooFewCalls":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":373,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":352,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests.MockingTest.testStrictClassMocking":76,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":376,"org.easymock.tests.ObjectMethodsTest.testHashCode":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":329,"org.easymock.tests2.NameTest.nameForNiceMock":436,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.DelegateToTest.testStubDelegate":333,"org.easymock.tests2.AnswerTest.stubAnswer":396,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.ConstraintsToStringTest.orToString":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":399,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.samples.SupportTest.addDocument":170,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":496,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":469,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests2.NameTest.nameForMock":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":406,"org.easymock.tests2.UsageStrictMockTest.differentMethods":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":125,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":514,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":417,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":484,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":377,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":259,"org.easymock.tests2.NameTest.nameForStrictMock":435,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":210,"org.easymock.tests2.CaptureTest.testCaptureRightOne":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":61,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":349,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests2.MockBuilderTest.testWithConstructor":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":407,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":91,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests2.CompareToTest.testLessThan":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":439,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests.UsageTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":263,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":408,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests2.ConstraintsToStringTest.notToString":276,"org.easymock.tests.UsageStrictMockTest.testVerify":455,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":169,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.CompareToTest.testGreateThan":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":366,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":401,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":215,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249}}]
