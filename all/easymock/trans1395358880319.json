[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[94,415],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[33,38,45,65,66,67,69,73,75,76,95,96,97,98,99,508,144,145,146,147,148,149,509,150,230,231,232,233,234,237,279,279,280,280,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,360,361,363,364,365,366,368,369,370,371,372,373,374,375,376,398,401,440,441,460,461,462,476,478,479,480,481,482,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[33,38,45,63,64,65,66,67,69,72,73,75,95,96,97,98,99,144,145,146,147,148,149,150,230,231,232,233,234,235,236,237,282,283,284,285,286,287,288,289,290,291,292,295,296,297,308,309,311,313,314,315,316,317,319,320,321,322,324,325,326,327,328,329,330,360,361,363,364,365,366,368,370,371,372,373,374,375,376,377,398,401,460,461,462,478,479,480,482,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[61,110,125,129,130,132,135,154,157,158,170,221,222,223,349,393,396,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,4,5,14,19,154,160,161,175,216,217,218,219,220,224,225,226,229,260,261,262,263,264,337,393,411,427,430,431,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[57,60,61,100,110,112,115,116,154,156,157,168,169,221,222,223,349,350,356,357,510,511,512,513,514,515,516,393,395,396],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[12,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[285,290,366,376,460],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[33,38,45,65,66,67,69,75,96,97,98,231,279,279,280,280,282,283,284,285,517,286,287,289,290,291,292,295,296,518,297,519,520,521,311,314,324,330,360,361,363,364,365,366,368,371,372,373,374,440,462,476,478,479,480,481,482,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[413,496,504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[340,374,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[144,145,146,147,149,150],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[523,476,477,478],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[16,22,26,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,69,75,77,78,79,80,81,82,94,96,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,151,153,154,155,156,157,158,160,161,168,169,171,172,173,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,260,261,262,263,264,265,266,267,268,269,270,271,273,275,278,279,279,280,280,282,286,289,291,292,296,297,298,300,301,302,303,304,305,306,311,314,324,330,333,335,336,337,339,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,371,372,373,374,377,378,379,380,381,382,383,384,385,386,387,388,389,391,393,394,395,396,397,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,447,454,455,456,457,458,459,460,461,462,463,469,476,477,478,479,480,481,482,484,485,486,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[285,290,314,366,376,460],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[404,405,406,407,408,409],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":414,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":281,"org.easymock.tests2.DelegateToTest.testReturnException":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":78,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":338,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":314,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":346,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":259,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageTest.wrongArguments":350,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":43,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests2.UsageConstraintsTest.testNull":417,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":237,"org.easymock.tests2.CaptureTest.testPrimitive":497,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":187,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":85,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":220,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":512,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":447,"org.easymock.tests.ReplayStateInvalidUsageTest.times":183,"org.easymock.tests2.DependencyTest.testClassMocking":343,"org.easymock.tests2.AnswerTest.answer":454,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":307,"org.easymock.tests2.CaptureTest.testAnd":494,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":35,"org.easymock.tests2.UsageTest.strictResetToDefault":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":382,"org.easymock.tests2.DelegateToTest.testDelegate":493,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":191,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":105,"org.easymock.tests2.DependencyTest.testClassMockingSupport":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":168,"org.easymock.tests2.CaptureTest.testCapture1_2446744":498,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":305,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":177,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":37,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":246,"org.easymock.samples.PartialClassMockTest.testGetArea":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":178,"org.easymock.tests.MockingTest.testInterfaceMocking":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":107,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests2.UsageTest.niceToStrict":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":289,"org.easymock.tests2.MockBuilderTest.testCreateMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":41,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":427,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":426,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":503,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":86,"org.easymock.tests.MockClassControlTest.testEquals":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":519,"org.easymock.tests2.CaptureTest.testCaptureAll":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":306,"org.easymock.tests.MockNameTest.defaultName":174,"org.easymock.tests2.UsageConstraintsTest.testMatches":428,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":273,"org.easymock.tests.UsageVarargTest.allKinds":94,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":391,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":82,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.UsageConstraintsTest.greaterThan":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":374,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":247,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":150,"org.easymock.samples.ExampleTest.voteForRemoval":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":366,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":380,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":77,"org.easymock.tests2.CaptureTest.testCaptureFirst":507,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":381,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":506,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":302,"org.easymock.tests2.UsageTest.moreThanOneArgument":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":296,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":93,"org.easymock.tests.GenericTest.testBridgedEquals":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":31,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":101,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":518,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":435,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":32,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":480,"org.easymock.tests.MockingTest.testNiceClassMocking":72,"org.easymock.tests.MockingTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":517,"org.easymock.tests2.UsageConstraintsTest.testContains":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":462,"org.easymock.tests2.UsageConstraintsTest.testFind":416,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":335,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":165,"org.easymock.tests.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":441,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":58,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":321,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":304,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":410,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.CaptureTest.testCaptureMultiple":522,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":23,"org.easymock.tests2.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":118,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":245,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.ReplayStateInvalidCallsTest.times":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":171,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":330,"org.easymock.tests2.UsageTest.resumeIfFailure":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":80,"org.easymock.tests2.StubTest.stubWithReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":514,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":523,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":22,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":455,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":143,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":433,"org.easymock.tests2.DelegateToTest.testWrongClass":491,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":402,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":291,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":42,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":241,"org.easymock.tests2.CaptureTest.testCaptureNone":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":108,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":405,"org.easymock.tests.UsageUnorderedTest.message":100,"org.easymock.tests.UsageVerifyTest.twoReturns":223,"org.easymock.tests.UsageVarargTest.varargByteAccepted":92,"org.easymock.tests2.ThreadingTest.testThreadSafe":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":325,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":29,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":166,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":516,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":423,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":182,"org.easymock.tests2.StubTest.stub":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":79,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":181,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.SerializationTest.testClass":476,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests.LimitationsTest.mockNativeMethod":75,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":521,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":444,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":257,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":397,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":406,"org.easymock.tests2.NameTest.nameForMocksControl":342,"org.easymock.tests2.MockedExceptionTest.testMockedException":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":313,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":334,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":292,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":365,"org.easymock.tests2.CaptureTest.testCaptureLast":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":434,"org.easymock.tests.MockingTest.testTwoMocks":65,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":253,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":438,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":409,"org.easymock.samples.ExampleTest.removeNonExistingDocument":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":146,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":301,"org.easymock.tests2.MockBuilderTest.testCreateMockString":297,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":457,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":324,"org.easymock.samples.ExampleTest.voteAgainstRemoval":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":373,"org.easymock.tests.LimitationsTest.privateConstructor":74,"org.easymock.tests2.UsageConstraintsTest.testNotNull":437,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":460,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.UsageTest.defaultResetToNice":355,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":443,"org.easymock.tests.UsageVarargTest.differentLength":89,"org.easymock.tests2.CallbackTest.callback":377,"org.easymock.tests2.UsageConstraintsTest.equals":415,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":369,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":44,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":407,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests.MockingTest.testStrictClassMocking":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":485,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":481,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":484,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":459,"org.easymock.tests.ObjectMethodsTest.testHashCode":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":255,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":303,"org.easymock.tests2.NameTest.nameForNiceMock":341,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":345,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":326,"org.easymock.tests2.DelegateToTest.testStubDelegate":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.stubAnswer":458,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":440,"org.easymock.tests2.ConstraintsToStringTest.orToString":510,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":431,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":412,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":499,"org.easymock.tests2.SerializationTest.test":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testSame":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":240,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":238,"org.easymock.tests2.NameTest.nameForMock":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.UsageStrictMockTest.differentMethods":396,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.MockedExceptionTest.testRealException":463,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests2.NameTest.nameForStrictMock":340,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":432,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":286,"org.easymock.tests2.UsageStrictMockTest.range":395,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":244,"org.easymock.tests2.UsageConstraintsTest.lessThan":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":379,"org.easymock.tests2.CaptureTest.testCaptureRightOne":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":320,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":404,"org.easymock.tests2.UsageConstraintsTest.testOr":419,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":361,"org.easymock.tests.UsageTest.wrongArguments":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":317,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":30,"org.easymock.tests2.UsageConstraintsTest.cmpTo":424,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":258,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":456,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":505,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":176,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":287,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.constraints":413,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests2.ConstraintsToStringTest.notToString":511,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":102,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":500,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":520,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":218,"org.easymock.tests.LimitationsTest.abstractClass":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":384,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":84}}]
