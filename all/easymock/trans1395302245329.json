[{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,2,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[18,19,20,21,48,90,168,169,174,175,188,189,191,193,194,197,198,200,201,203,206,209,357,359,362,387,393,394,395,402,403,405,406,407,408,409,410,411,412,423,425,446,447,450,471,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,64,67,2,74,490,77,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,145,150,151,159,491,492,472,473],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[166,200,408],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,2,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[157,239,246,251],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[22,23,25,26,27,28,30,33,34,35,36,41,0,63,493,65,66,69,70,71,72,75,76,494,78,495,104,107,117,123,143,144,145,146,149,150,159,161,339,345,372,377,434,435,436,438,458,459,460,462,472,472,473,473,483,485,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,0,1,63,65,66,68,69,70,71,72,74,75,76,78,79,80,83,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,143,144,145,146,149,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[22,24,25,27,45,0,65,69,71,72,76,104,107,117,123,143,144,145,146,148,149,150,155,323,339,459,460,462,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.Capture:134","failures":[496,497],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,180,196,259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[426,430],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[173],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[385,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[498,190],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[500,501,502,503,404,446],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[159,160,161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[296,297,304,311,328,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:134","failures":[496,497],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[254,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[5,9,10,13,23,34,36,65,75,76,78,100,154,164,180,191,194,195,196,200,201,202,203,204,207,208,209,292,360,361,362,394,395,402,404,405,408,409,410,411,418,444,446,448,449,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[208,394,395,411,499,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,9,10,13,34,36,45,94,158,180,191,195,203,208,233,235,244,245,247,249,252,285,287,292,395,402,410,434,436,449,469],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[507,500,508,509,510,511,193,206,208,209,331,334,335,336,363,364,393,394,395,503,512,513,403,411,447,449,450],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[140,158,162,163,167,168,169,170,176,178,179,181,182,183,188,189,190,206,248,249,252,322,323,324,325,326,327,328,352,439,440,441,442,443,447,472,472,473,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[131,139,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests2.UsageTest.argumentsOrdered":201,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":234,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":484,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":367,"org.easymock.tests.MockingTest.testPartialClassMocking":459,"org.easymock.tests.MockClassControlTest.testToString":346,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":17,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":248,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":475,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":377,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":464,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":25,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":13,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":252,"org.easymock.tests.UsageTest.moreThanOneArgument":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.UsageTest.argumentsOrdered":409,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":380,"org.easymock.tests.UsageVarargTest.varargIntAccepted":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":326,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":261,"org.easymock.tests2.DependencyTest.testClassMocking":86,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":99,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":374,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests.LimitationsTest.mockFinalMethod":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests2.DependencyTest.testClassMockingSupport":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":97,"org.easymock.tests.UsageThrowableTest.throwError":385,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":255,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":396,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":125,"org.easymock.samples.PartialClassMockTest.testGetArea":483,"org.easymock.tests.MockingTest.testInterfaceMocking":461,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":112,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":59,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":177,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":435,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":98,"org.easymock.tests.MockNameTest.defaultName":223,"org.easymock.tests2.UsageConstraintsTest.testMatches":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":253,"org.easymock.samples.ExampleTest.voteForRemovals":479,"org.easymock.tests.UsageVarargTest.allKinds":423,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":393,"org.easymock.samples.BasicClassMockTest.testPrintContent":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":391,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":371,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":431,"org.easymock.tests2.UsageConstraintsTest.greaterThan":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.samples.ExampleTest.voteForRemoval":476,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":37,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":6,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":366,"org.easymock.tests2.CaptureTest.testCaptureFirst":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":7,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":303,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":422,"org.easymock.tests.GenericTest.testBridgedEquals":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests.UsageExpectAndReturnTest.longType":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":4,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":390,"org.easymock.tests.MockingTest.testNiceClassMocking":465,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":144,"org.easymock.tests.MockingTest.testClassMocking":457,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":471,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":444,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageExpectAndReturnTest.object":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":12,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":417,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":212,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":114,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":424,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":247,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":341,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":347,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":369,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":305,"org.easymock.tests2.SerializationTest.testAllMockedMethod":161,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":488,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":91,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":455,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.samples.ConstructorCalledMockTest.testTax":472,"org.easymock.tests.UsageStrictMockTest.range":449,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":84,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":11,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests.UsageUnorderedTest.message":411,"org.easymock.tests.UsageVerifyTest.twoReturns":395,"org.easymock.tests.UsageVarargTest.varargByteAccepted":421,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":118,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":259,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":339,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":53,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":489,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":462,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":460,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":27,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":364,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":458,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":480,"org.easymock.tests.UsageStrictMockTest.differentMethods":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":58,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":213,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.ConstraintsToStringTest.andToString":510,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":154,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":108,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":50,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.ExampleTest.voteAgainstRemoval":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":392,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":311,"org.easymock.tests.UsageVarargTest.differentLength":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":52,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.UsageConstraintsTest.equals":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":31,"org.easymock.tests.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":250,"org.easymock.tests.UsageCallCountTest.tooFewCalls":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":57,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.samples.ExampleTest.addDocument":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":447,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":73,"org.easymock.tests.UsageVarargTest.varargLongAccepted":420,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":233,"org.easymock.tests.UsageExpectAndReturnTest.floatType":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.tests2.ConstraintsToStringTest.orToString":507,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":79,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testSame":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":297,"org.easymock.samples.SupportTest.addDocument":487,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":147,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":109,"org.easymock.tests.GenericTest.testPackageScope":434,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":219,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":463,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":77,"org.easymock.tests2.UsageStrictMockTest.differentMethods":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":512,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":249,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":264,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.ErrorMessageTest.testGetters":499,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":208,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":113,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests.UsageRangeTest.combination":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":405,"org.easymock.tests2.MockBuilderTest.testWithConstructor":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":110,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":419,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":92,"org.easymock.tests2.CompareToTest.testLessThan":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":254,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":404,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":310,"org.easymock.tests2.CaptureTest.testCapture":496,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":448,"org.easymock.tests2.UsageConstraintsTest.constraints":164,"org.easymock.samples.ExampleTest.addAndChangeDocument":481,"org.easymock.tests2.ConstraintsToStringTest.notToString":508,"org.easymock.tests.UsageStrictMockTest.testVerify":452,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":482,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":302,"org.easymock.tests.LimitationsTest.abstractClass":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":10}}]
