[{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[27,24,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[32,33,34,35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[37,30,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[56,57,58,59,60,61,61,62,62,63,64,65,66,67,68,69,70,18,71,72,73,74,75,76,77,78,24,79,25,80,81,82],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,83,84,11,85,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[27,24,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[87,88,89,90,91,92,93,2,3,94,95,4,5,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,7,167,168,169,170,171,172,8,173,174,175,176,177,178,9,10,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,11,266,267,12,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,13,302,303,304,305,1,14,15,306,307,308,309,310,311,312,37,30,313,38,39,40,41,42,43,44,45,314,315,316,317,318,319,320,321,46,47,322,323,324,48,49,325,326,327,328,329,330,331,332,333,334,335,78,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,28,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,16,402,403,404,405,406,407,408,50,51,52,53,409,410,411,412,413,414,54,55,415,416],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[27,24,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[417],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[24,28,29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[58,31],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,3,94,95,4,5,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,418,142,143,144,145,146,147,149,150,152,153,419,420,421,422,157,158,159,160,161,162,163,164,165,166,7,167,168,169,170,171,8,173,174,175,176,177,178,9,10,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,423,424,59,212,213,214,215,216,217,425,246,252,264,265,11,266,267,12,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,60,288,289,290,291,292,293,294,296,61,61,62,62,426,427,297,298,299,300,301,13,302,303,304,305,1,14,15,306,307,64,67,68,69,71,308,309,428,429,310,430,431,432,433,434,75,76,435,311,312,37,30,38,39,40,41,42,43,44,45,314,315,316,317,318,319,320,321,46,47,322,323,324,48,49,325,326,327,328,329,330,331,332,78,336,337,338,339,341,342,343,344,345,346,347,353,360,361,362,363,364,365,24,28,29,79,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,436,80,81,82,391,398,399,400,401,16,402,403,404,405,437,438,439,440,407,441,442,50,51,52,53,409,410,411,412,413,414,54,55,415,416],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[325,443],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[58],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[98,274,276],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[444],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[221],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[93,2,3,4,5,83,445,84,446,447,6,162,165,166,7,170,171,8,178,9,10,11,266,12,268,448,85,444,449,450,451,452,453,86,454,455,301,13,14,15,400,16,402],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[56,57,58,59,60,61,62,63,456,64,65,0,66,67,457,68,17,69,70,18,458,71,459,72,73,74,75,76,77,78,24,79,25,460,80,81,82],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[3,4,5,152,157,168,173,176,9,199,200,202,203,204,205,206,264,11,266,12,268,13,302,303,14,15,71,311,312,37,30,38,40,41,42,43,45,315,316,317,318,319,320,321,46,47,322,324,49,325,330,347,367,368,369,370,371,372,374,375,376,377,398,400,16,402,405,50,51,52,53,409,410,411,412,414,54,55,415,416],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[58],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[87,88,89,90,91,92,93,2,3,94,95,4,5,96,97,98,99,56,100,101,57,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,418,142,143,144,145,146,147,148,149,150,151,152,153,461,462,419,420,421,154,422,155,156,463,157,158,159,160,161,162,163,164,165,166,7,167,168,169,170,171,172,8,173,174,175,176,177,178,9,10,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,423,424,59,31,212,213,214,215,216,217,464,465,425,466,218,219,220,221,222,223,224,225,226,227,228,229,467,468,469,470,471,472,473,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,11,266,267,12,268,269,270,271,272,273,274,275,276,277,278,279,280,281,474,475,476,477,478,479,480,481,282,283,284,285,286,287,60,288,289,290,291,292,293,294,295,296,61,62,426,427,297,298,299,300,301,13,302,303,304,305,1,14,15,306,307,63,64,65,66,67,457,68,69,18,458,71,72,482,483,308,309,428,429,310,430,431,432,73,484,433,74,485,434,75,76,435,486,77,311,312,37,30,313,38,39,40,41,42,43,44,45,314,315,316,317,318,319,320,321,46,47,322,323,324,48,49,325,326,327,328,329,330,331,332,333,334,335,78,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,24,28,29,79,25,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,487,488,384,385,489,490,491,436,492,493,80,494,495,496,497,498,499,500,501,502,81,503,504,505,506,507,82,508,509,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,16,402,403,404,405,437,438,439,440,407,441,442,50,51,52,53,409,410,411,412,413,414,54,55,415,416],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[510,511,8,9,10,12,16],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[37,30,39,41,42,44,46,48,50,52,54],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[92,95,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,153,164,169,175,176,9,199,201,202,203,204,205,206,212,213,214,215,216,217,299,305,78,336,337,338,405],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[37,30,39,41,42,44,46,48,50,52,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":240,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":303,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":213,"org.easymock.tests.MockingTest.testPartialClassMocking":420,"org.easymock.tests.MockClassControlTest.testToString":476,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":110,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":256,"org.easymock.samples.ExampleTest.answerVsDelegate":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":156,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":430,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":375,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":129,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":89,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":277,"org.easymock.tests.UsageVarargTest.varargIntAccepted":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":391,"org.easymock.tests.ReplayStateInvalidUsageTest.times":226,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":326,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":370,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":281,"org.easymock.tests2.DelegateToTest.testDelegate":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":125,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":170,"org.easymock.tests2.CaptureTest.testCapture1_2446744":409,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":220,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":101,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":509,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.MockingTest.testInterfaceMocking":154,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":263,"org.easymock.tests2.UsageTest.niceToStrict":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":119,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":502,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":316,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":414,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":133,"org.easymock.tests.MockClassControlTest.testEquals":480,"org.easymock.tests2.EasyMockSupportClassTest.testAll":436,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":424,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":452,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":127,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.MockNameTest.defaultName":151,"org.easymock.tests2.UsageConstraintsTest.testMatches":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":218,"org.easymock.samples.ExampleTest.voteForRemovals":294,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.samples.BasicClassMockTest.testPrintContent":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":205,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":364,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":435,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":473,"org.easymock.samples.ExampleTest.voteForRemoval":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":486,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":418,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":368,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":212,"org.easymock.tests2.CaptureTest.testCaptureFirst":416,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":369,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":415,"org.easymock.tests2.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests.GenericTest.testBridgedEquals":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":87,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":445,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":506,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":204,"org.easymock.tests.MockingTest.testNiceClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":438,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":143,"org.easymock.tests2.UsageConstraintsTest.testContains":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":337,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":169,"org.easymock.tests.MockTypeTest.fromEasyMockClass":100,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":341,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":374,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":261,"org.easymock.tests.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":447,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":163,"org.easymock.tests.MockClassControlTest.testHashCode":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":500,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":449,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":161,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":406,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.object":467,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":259,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":501,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":477,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":215,"org.easymock.tests2.StubTest.stubWithReturnValue":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.samples.SupportTest.voteForRemovals":298,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":122,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":327,"org.easymock.tests.UsageExpectAndThrowTest.object":120,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":363,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":384,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":489,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":83,"org.easymock.tests2.CaptureTest.testCaptureNone":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":275,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":33,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":503,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":147,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":426,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":455,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests2.StubTest.stub":404,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.UsageExpectAndThrowTest.longType":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":471,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":401,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":353,"org.easymock.tests.LimitationsTest.mockNativeMethod":425,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":388,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests2.NameTest.nameForMocksControl":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":390,"org.easymock.tests2.MockedExceptionTest.testMockedException":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":493,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":422,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":114,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":340,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":421,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":432,"org.easymock.tests2.CaptureTest.testCaptureLast":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":386,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":442,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.MockingTest.testTwoMocks":419,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":118,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":35,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":222,"org.easymock.tests.UsageStrictMockTest.differentMethods":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":469,"org.easymock.tests2.ConstraintsToStringTest.andToString":453,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":344,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":494,"org.easymock.tests.UsageExpectAndThrowTest.floatType":112,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":460,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":206,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":387,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.CallbackTest.callback":347,"org.easymock.tests2.UsageConstraintsTest.equals":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":74,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":257,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":34,"org.easymock.tests.UsageThrowableTest.throwCheckedException":203,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":439,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":407,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":331,"org.easymock.tests.ObjectMethodsTest.testHashCode":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":346,"org.easymock.tests2.NameTest.nameForNiceMock":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":508,"org.easymock.tests2.DelegateToTest.testStubDelegate":362,"org.easymock.tests2.AnswerTest.stubAnswer":330,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":239,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.tests2.ConstraintsToStringTest.orToString":448,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":312,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":487,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":410,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.samples.SupportTest.addDocument":297,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":495,"org.easymock.tests.GenericTest.testPackageScope":423,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":155,"org.easymock.tests2.NameTest.nameForMock":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":459,"org.easymock.tests2.UsageStrictMockTest.differentMethods":402,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":485,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":124,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":338,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests2.NameTest.nameForStrictMock":381,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":488,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":499,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":32,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":429,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":496,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":472,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests2.CompareToTest.testLessThan":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":219,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":65,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":296,"org.easymock.tests2.ConstraintsToStringTest.notToString":444,"org.easymock.tests2.ConstraintsToStringTest.containsToString":417,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":287,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":372}}]
