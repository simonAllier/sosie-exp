[{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[75,0,76,77],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[63,64,72,81,82,0,83,84,2,4,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[87,71],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,8,9,134,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,30,31,154,32,33,34,35,36,37,155,38,39,40,41,42,43,44,45,156,157,158,159,46,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,75,181,85,182,183,184,185,186,187,188,189,190,86,191,192,47,193,194,195,196,197,198,199,200,201,48,202,203,204,205,206,207,208,209,210,211,212,213,214,214,215,215,216,217,218,219,220,221,222,223,224,225,226,227,228,63,229,64,65,66,67,68,69,230,70,72,73,231,74,232,233,234,235,236,237,238,239,240,241,242,243,244,49,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,81,82,268,0,1,83,84,269,3,270,271,272,273,274,275,276,277,4,5,278,76,279,6,7,280,281,282,283,61,284,285,286,287,288,77,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,58,59,60,50,304,305,306,307,308,309,51,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,52,53,54,55,333,334,335,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[337],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[338,339,88,340,341,78,342,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,343,344,345,346,347,348,349,350,109,110,111,112,113,114,115,116,117,351,352,353,56,354,118,119,120,121,122,123,124,125,126,127,128,129,130,131,355,356,357,132,133,8,9,134,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,358,79,359,360,135,136,361,362,137,138,139,140,363,141,142,143,364,365,144,145,146,147,148,149,150,151,152,153,30,31,154,32,33,34,35,36,37,155,38,80,39,40,41,42,43,44,366,367,368,45,156,157,158,159,46,160,161,162,369,370,371,163,164,372,165,373,374,375,166,167,168,169,376,170,377,378,379,380,381,382,383,171,172,173,384,174,175,176,177,178,179,180,75,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,181,85,182,183,184,185,186,187,188,189,190,86,409,191,410,192,47,411,193,194,195,196,197,198,199,200,201,48,202,203,204,205,412,206,207,208,209,210,413,414,415,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,63,229,64,65,66,67,68,69,230,70,72,73,231,74,232,233,234,235,236,237,238,416,239,417,418,240,241,242,243,419,420,244,49,421,245,246,247,248,249,250,251,252,253,254,255,256,422,423,257,258,259,260,424,425,426,427,428,429,261,430,431,432,433,434,435,436,437,438,262,439,440,263,441,442,443,444,445,446,447,448,449,264,450,451,452,453,454,265,455,456,266,267,81,82,457,268,0,1,83,84,269,2,3,270,271,272,273,274,275,276,277,4,5,278,76,279,6,7,280,458,281,282,283,459,61,460,461,284,285,286,287,288,77,289,462,463,464,465,466,290,467,468,469,470,471,472,291,292,293,294,295,296,297,298,299,300,301,302,303,58,59,60,50,304,305,306,307,308,309,51,310,311,312,313,314,315,473,316,474,475,476,477,478,479,480,317,318,319,320,481,321,322,323,482,324,483,325,484,485,486,326,327,328,487,329,488,489,330,331,490,332,52,53,54,55,333,491,492,334,335,336],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,114,115,132,133,134,135,361,137,138,139,140,152,153,30,31,32,33,34,35,36,37,155,45,156,159,46,162,163,164,165,193,201,202,204,205,206,207,208,209,210,211,219,220,222,223,225,63,229,65,66,69,230,70,72,231,74,232,233,234,235,236,237,239,241,242,243,49,251,253,254,256,261,262,263,264,265,266,267,81,82,268,0,1,83,84,269,3,270,271,272,273,274,275,276,277,4,5,278,279,6,7,280,282,284,285,286,287,288,77,289,290,291,292,293,294,295,296,297,298,299,300,301,302,58,59,50,304,305,307,309,51,310,313,314,317,318,319,320,321,322,323,325,326,328,329,331,54,333,335],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[75,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"this","actual":"o"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[111,114,496,157,158,160,161,195,48,202,253,306,311,312],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,114,115,355,356,132,133,134,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,135,137,138,139,140,152,153,30,31,32,33,34,35,36,37,155,38,43,45,156,159,46,162,163,164,165,401,191,192,47,193,201,48,202,204,205,206,207,208,209,210,211,219,220,221,222,223,225,228,63,229,64,65,66,69,230,70,72,231,74,232,233,234,235,236,237,239,241,242,243,49,251,253,254,256,261,262,263,264,265,266,267,81,82,268,0,1,83,84,269,3,270,271,272,273,274,275,276,277,4,5,278,76,279,6,7,280,281,282,283,61,284,285,286,287,288,77,289,290,291,292,293,294,295,296,297,298,299,300,301,302,58,59,50,304,305,307,309,51,310,313,314,317,318,319,320,321,322,323,325,326,328,329,331,54,333,335,336],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[360,135,136,361,362],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[338,339,88,340,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,341,78,342,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,343,344,345,346,347,348,349,350,109,110,111,112,113,114,115,116,117,351,352,353,56,354,118,119,120,121,122,123,124,125,126,127,128,129,130,131,355,356,357,132,133,8,9,134,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,358,79,359,360,135,136,361,362,137,138,139,140,363,141,142,143,364,365,144,145,146,147,148,149,150,151,152,153,30,31,154,32,33,34,35,36,37,155,38,80,39,40,41,42,43,44,366,367,368,45,156,157,158,159,46,160,161,162,369,370,371,163,164,372,165,373,374,375,166,167,168,169,170,377,378,379,380,381,383,171,172,173,384,174,175,176,177,178,179,180,75,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,181,85,182,183,184,185,186,187,188,189,190,86,409,191,410,192,47,411,193,194,195,196,197,198,199,200,201,48,202,203,204,205,206,207,208,209,210,413,414,415,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,63,229,64,65,66,67,68,69,230,70,72,73,231,74,232,233,234,235,236,237,238,416,239,417,418,240,241,242,243,419,420,244,49,421,245,246,247,248,249,250,251,252,253,254,255,256,422,257,258,259,260,424,425,426,427,428,429,261,430,431,432,433,434,435,436,437,438,262,439,440,263,441,442,443,444,445,446,447,448,449,264,450,451,452,453,454,265,455,456,266,267,81,82,457,268,0,1,83,84,269,2,3,270,271,272,273,274,275,276,277,4,5,278,76,279,6,7,280,458,281,282,283,459,61,460,461,284,285,286,519,287,288,77,289,462,463,464,465,466,290,467,468,469,470,471,472,291,292,293,294,295,296,297,298,299,300,301,302,303,58,59,60,50,304,305,306,307,308,309,51,310,311,312,313,314,315,473,316,474,475,476,478,479,480,520,521,522,523,524,317,318,319,320,481,321,322,323,482,324,325,484,486,326,327,328,329,488,489,330,331,332,52,53,54,55,333,491,492,334,335,336],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[355,356,410,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[525,526,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[422,528,529,530,531,532,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[111,114,496,157,158,160,161,194,195,48,202,253,306,311,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[533,111,112,114,115,156,158,160,161,201,48,202,245,246,247,248,251,253,254,305,306,311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[534],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[422,319,323,482,483,485,487,535,490,536,537,538],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[32,45,46,48,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[356,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":395,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":308,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":146,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":421,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":533,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":285,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":518,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":528,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageTest.wrongArguments":306,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":168,"org.easymock.samples.ExampleTest.answerVsDelegate":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":300,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":29,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":198,"org.easymock.tests.UsageTest.argumentsOrdered":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":532,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":471,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":210,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":502,"org.easymock.tests.ReplayStateInvalidUsageTest.times":188,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests2.DependencyTest.testClassMocking":460,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":345,"org.easymock.tests2.UsageTest.strictResetToDefault":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":295,"org.easymock.tests2.DelegateToTest.testDelegate":61,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":501,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":25,"org.easymock.tests.LimitationsTest.mockFinalMethod":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.DependencyTest.testClassMockingSupport":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":182,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":472,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":536,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":505,"org.easymock.samples.PartialClassMockTest.testGetArea":211,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":183,"org.easymock.tests.MockingTest.testInterfaceMocking":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.UsageTest.niceToStrict":307,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":365,"org.easymock.tests2.ThreadingTest.testChangeDefault":519,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":326,"org.easymock.tests2.MockBuilderTest.testCreateMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":452,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":19,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":296,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":384,"org.easymock.tests.MockClassControlTest.testEquals":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":262,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":136,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests2.CaptureTest.testCaptureAll":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":199,"org.easymock.samples.ExampleTest.voteForRemovals":225,"org.easymock.tests.UsageVarargTest.allKinds":75,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":213,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.UsageConstraintsTest.greaterThan":276,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":506,"org.easymock.samples.ExampleTest.voteForRemoval":222,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":419,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":238,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":498,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":293,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":458,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":294,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":231,"org.easymock.tests2.UsageTest.moreThanOneArgument":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":538,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":318,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":119,"org.easymock.tests2.UsageConstraintsTest.testContains":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":268,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":30,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":316,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":529,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":143,"org.easymock.tests.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":341,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":422,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.MockClassControlTest.testHashCode":149,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":447,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":493,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":424,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":376,"org.easymock.tests2.CaptureTest.testCaptureMultiple":62,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastCall":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":525,"org.easymock.tests.DefaultClassInstantiatorTest.object":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":366,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":141,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":448,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":504,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":16,"org.easymock.tests.CapturesMatcherTest.test":87,"org.easymock.tests.ReplayStateInvalidCallsTest.times":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":511,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":494,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":265,"org.easymock.tests2.UsageTest.resumeIfFailure":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":401,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":491,"org.easymock.tests.UsageExpectAndThrowTest.object":20,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":5,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":508,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.samples.ConstructorCalledMockTest.testTax":214,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":479,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":436,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":190,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":167,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":500,"org.easymock.tests2.CaptureTest.testCaptureNone":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":521,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":202,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":450,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":123,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":364,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":9,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":187,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.UsageExpectAndThrowTest.longType":13,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":186,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":516,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":440,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":473,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":329,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":515,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests.MockingTest.testTwoMocks":371,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":512,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":18,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":7,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":524,"org.easymock.samples.ExampleTest.removeNonExistingDocument":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":184,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":523,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":378,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":332,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":12,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":423,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":264,"org.easymock.samples.ExampleTest.voteAgainstRemoval":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.LimitationsTest.privateConstructor":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":537,"org.easymock.tests2.UsageConstraintsTest.testNotNull":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.UsageVarargTest.differentLength":176,"org.easymock.tests2.CallbackTest.callback":228,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":417,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":169,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":522,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.MockingTest.testStrictClassMocking":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":321,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests.ObjectMethodsTest.testHashCode":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":531,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":514,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":509,"org.easymock.tests2.DependencyTest.testInterfaceMocking":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":530,"org.easymock.samples.ExampleTest.addDocument":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":282,"org.easymock.tests2.AnswerTest.stubAnswer":335,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":256,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":470,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":474,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests2.UsageConstraintsTest.testSame":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":442,"org.easymock.tests.GenericTest.testPackageScope":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":469,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":497,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":490,"org.easymock.tests2.UsageStrictMockTest.differentMethods":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":24,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":140,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":86,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":486,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":526,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":325,"org.easymock.tests2.UsageStrictMockTest.range":253,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":503,"org.easymock.tests2.UsageConstraintsTest.lessThan":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":446,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":520,"org.easymock.tests2.UsageConstraintsTest.testOr":83,"org.easymock.tests.UsageRangeTest.combination":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":233,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":443,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":124,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":517,"org.easymock.tests2.UsageConstraintsTest.cmpTo":270,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":492,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":85,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":484,"org.easymock.tests.UsageTest.unexpectedCallWithArray":157,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":513,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":122,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":535,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests2.CaptureTest.testCapture":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests2.ConstraintsToStringTest.notToString":337,"org.easymock.tests2.ConstraintsToStringTest.containsToString":534,"org.easymock.tests.UsageStrictMockTest.testVerify":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":216,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.LimitationsTest.abstractClass":338,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":297}}]
