[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[8,9,10],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,11,12,13,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,3,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,21,22,23,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,24,26,165,166,167,168,169,170,171,172,173,174,175,176,32,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[34,0,35,36,37,38,39,40,41,11,12,13,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,198,65,66,67,68,69,70,199,71,72,73,74,75,76,77,78,3,79,5,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,200,136,201,202,6,137,138,21,22,23,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,203,160,161,162,163,24,25,26,165,204,166,167,168,172,173,174,175,176,32,177,178,179,180,181,182,183,184,185,186,187,188,189,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,190,191,192,193,194,195,196,7,226,227,197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,3,113,116,117,120,21,24,26,176,177,178,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[228,118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[229,79,5,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[11,12,13,14,231,232,233,15,17,234,19,235,20,236,21,22,23,24,25,26,27,28,32,237,238,239,33,240,241,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[244],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[245,246,90,247,248,249,250,251,252,253,254,255,125,129,256,130,257,258,259,132,260,261,133,262,263,264,265,266,267,268,269,270,134,271,272,273,274,275,135,276,277],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"invocation"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[245,245,246,246,38,278,279,80,81,83,84,85,280,86,281,87,88,89,90,282,283,108,284,109,285,110,111,286,112,287,288,121,123,124,125,126,128,129,130,289,132,133,134,135,290,291,292,138,293,294,295,166,167,168,296,297,175,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[11,12,13,14,231,232,233,300,301,302,303,304,21,22,23,24,25,26,32,237,238,239,33,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[305,306,307,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[309,143,149,156,157,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,200,201,202,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81,281,89,125,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[38,280,282,283,108,284,109,285,110,111,286,112,287,288,130,291,294,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":46,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":289,"org.easymock.tests2.DelegateToTest.testReturnException":200,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":242,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":235,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":229,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":41,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":123,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":257,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":171,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":9,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":271,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":278,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":20,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests2.UsageConstraintsTest.any":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":234,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":292,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":249,"org.easymock.tests2.NameTest.nameForMocksControl":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":10,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.ConstraintsToStringTest.andToString":19,"org.easymock.tests2.MockBuilderTest.testCreateMockString":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":262,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":4,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":255,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":273,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":244,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":43,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":306,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":56,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":29,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":290,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.testMatches":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests2.NameTest.nameForNiceMock":302,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":40,"org.easymock.samples.BasicClassMockTest.testPrintContent":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests2.ConstraintsToStringTest.orToString":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":258,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":263,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":307,"org.easymock.tests2.NameTest.nameForMock":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests2.NameTest.nameForStrictMock":301,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":283,"org.easymock.tests2.UsageConstraintsTest.testContains":55,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":47,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":305,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":8,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":247,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.UsageTest.wrongArguments":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests2.MockBuilderTest.testWithConstructor":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":264,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests2.UsageConstraintsTest.cmpTo":54,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":284,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests2.ConstraintsToStringTest.notToString":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102}}]
