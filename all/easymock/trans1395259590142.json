[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,0,1,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[10,11,12,13,14,15,16,19,20,21,23,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,67,68,71,72,73,74,76,77,79,80,91,93,94,95,97,98,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,151,152,154,155,156,157,158,159,160,163,212,215,219,221,222,223,224,225,227,228,234,235,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,261,264,265,266,267,268,269,270,272,273,274,275,277,279,280,288,289,290,291,292,293,294,295,297,305,306,307,308,310,311,312,313,0,1,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,335,336,337,342,343,344,345,346,348,349,350,351,352,353,354,360,368,369,370,372,374,375,378,379,380,442,381,382,443,444,384,385,386,387,393,413,421,422,423,424,425,426,427,428,445,431,432,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[446,28,68,81,82,83,84,85,87,90,150,151,152,153,154,161,162,163,164,177,178,179,180,181,182,183,238,239,240,241,242,243,244,245,252,262,263,264,265,447,448,281,449,450,282,283,284,285,451,452,286,287,453,454,455,290,291,293,294,295,296,297,298,299,300,301,302,303,304,456,342,343,344,373,375,376,377,457,388,389,392,458,393,394,395,459,396,397,460,398,399,400,402,461,403,462,463,404,405,445,464,430,431,433,465],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[447,284,296,456,342,395],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[321],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[466,373,374,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[451,467,468,469,470,471,472,473,474,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[451,286,468,469,470,471,474,373,376,377],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[475,108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[331,476],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,79,109,110,113,221,227,228,246,247,248,249,250,262,262,263,263,305,306,310,311,312,313,317,319,320,322,323,324,329,330,331,422,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,79,80,84,85,87,91,93,94,95,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,155,156,157,158,159,160,163,208,209,210,211,218,219,220,221,222,223,224,225,227,228,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,447,281,283,284,285,452,287,453,455,288,289,290,291,292,293,294,295,296,297,300,301,302,303,305,306,307,308,310,311,312,313,0,1,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,360,368,369,370,372,373,374,375,376,378,379,380,442,381,382,443,383,444,384,385,386,387,393,395,402,405,413,420,421,422,423,424,425,426,427,428,445,464,430,431,432,433,465,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[477,478,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[395],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,446,480,481,27,482,28,483,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,484,177,178,179,180,181,182,485,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,486,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,447,448,281,449,450,282,283,284,285,451,452,487,286,287,453,454,455,488,489,288,289,290,291,292,293,294,295,296,490,297,298,299,300,301,302,303,304,456,305,306,307,308,309,310,311,312,313,0,1,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,457,378,379,380,442,381,382,443,383,444,384,385,386,387,491,492,493,494,495,388,496,497,498,389,390,391,392,458,499,393,500,394,395,459,396,397,501,460,398,399,400,401,402,461,403,462,463,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,445,464,430,431,502,432,433,465,503,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[322,504],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[505,506,283,301,302],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15,16,19,20,23,25,79,84,85,87,91,92,93,94,100,102,103,104,109,110,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,151,155,163,221,223,224,227,228,229,230,231,246,247,248,249,250,252,254,256,257,259,267,268,269,270,272,274,275,276,279,280,281,283,285,452,453,288,289,290,291,292,293,294,295,297,301,302,303,305,306,307,308,310,311,312,313,0,1,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,336,344,349,350,351,352,353,360,369,373,374,376,378,379,380,442,381,382,443,383,444,384,385,386,393,395,402,405,413,422,424,425,428,445,464,430,431,432,433,465,2,3,5,434,437,438,439,6,440,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[10,11,12,13,14,15,16,19,20,23,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,67,79,95,97,98,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,152,155,156,157,158,159,160,219,221,222,223,224,225,227,228,246,247,248,249,250,251,253,254,255,256,257,258,259,261,264,265,266,267,268,269,270,272,273,274,275,279,280,283,285,452,288,289,291,294,302,308,311,313,0,329,332,335,336,349,350,351,353,354,360,368,369,370,372,373,374,378,379,380,442,381,382,443,444,384,385,386,413,421,422,423,424,425,426,427,428,2,3,437,438,6,441],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:85","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,84,85,87,91,92,93,94,95,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,155,156,157,158,159,160,163,165,166,167,168,169,170,171,172,173,174,175,176,177,208,209,210,211,213,214,215,218,219,220,221,222,223,224,225,226,227,228,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,447,281,283,284,285,452,287,453,455,288,289,290,291,292,293,294,295,296,297,300,301,302,303,305,306,307,308,310,311,312,313,0,1,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,360,368,369,370,372,373,374,375,376,378,379,380,442,381,382,443,383,444,384,385,386,387,492,493,494,495,393,395,402,405,413,420,421,422,423,424,425,426,427,428,429,445,464,430,431,432,433,465,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,446,27,482,28,483,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,155,156,157,158,159,160,163,165,166,167,168,169,170,171,172,173,174,175,176,177,208,209,210,211,213,214,215,218,219,220,221,222,223,224,225,226,227,228,238,239,240,241,242,243,244,245,246,247,248,249,250,254,255,256,257,258,259,260,261,268,269,270,271,272,273,274,275,276,277,278,279,280,447,281,449,282,283,284,287,453,455,288,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,310,311,312,313,0,1,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,368,369,370,372,373,374,375,376,492,493,494,495,496,497,498,389,391,420,421,422,423,424,425,426,427,428,429,445,464,430,433,465,2,3,4,5,434,435,436,437,438,439,6,7,440,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[17,18,19,20,21,22,23,507,508,33,220,221,509,510,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":308,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.UsageTest.argumentsOrdered":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":156,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":240,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":491,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":28,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":89,"org.easymock.tests2.UsageConstraintsTest.testNull":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":245,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":55,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":12,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":233,"org.easymock.tests.UsageVarargTest.varargIntAccepted":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":473,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":413,"org.easymock.tests.ReplayStateInvalidUsageTest.times":173,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":332,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":237,"org.easymock.tests2.DelegateToTest.testDelegate":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":51,"org.easymock.tests.LimitationsTest.mockFinalMethod":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":149,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":434,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":167,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":407,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":168,"org.easymock.tests.MockingTest.testInterfaceMocking":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":37,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":217,"org.easymock.tests2.UsageTest.niceToStrict":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":283,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":318,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":439,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":393,"org.easymock.tests.MockClassControlTest.testEquals":244,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.MockNameTest.defaultName":78,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":13,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":474,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":183,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":380,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":155,"org.easymock.tests2.CaptureTest.testCaptureFirst":441,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":442,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":440,"org.easymock.tests2.UsageTest.moreThanOneArgument":270,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":66,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":76,"org.easymock.tests.UsageExpectAndReturnTest.longType":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":77,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":464,"org.easymock.tests.MockingTest.testNiceClassMocking":90,"org.easymock.tests.MockingTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":70,"org.easymock.tests2.UsageConstraintsTest.testContains":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":344,"org.easymock.tests2.UsageConstraintsTest.testFind":310,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests.MockTypeTest.fromEasyMockClass":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":348,"org.easymock.tests.UsageExpectAndReturnTest.object":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":469,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":61,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":215,"org.easymock.tests.UsageTest.exactCallCountByLastCall":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":24,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":97,"org.easymock.tests.MockClassControlTest.testHashCode":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":399,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":429,"org.easymock.tests.UsageVarargTest.varargCharAccepted":60,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":478,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests.DefaultClassInstantiatorTest.object":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":405,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":241,"org.easymock.tests2.UsageTest.resumeIfFailure":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":158,"org.easymock.tests2.StubTest.stubWithReturnValue":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":375,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":200,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":267,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":48,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":333,"org.easymock.tests.UsageExpectAndThrowTest.object":46,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":26,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":325,"org.easymock.tests2.DelegateToTest.testWrongClass":370,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests2.CaptureTest.testCaptureNone":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests.UsageUnorderedTest.message":108,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":65,"org.easymock.tests2.ThreadingTest.testThreadSafe":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":74,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageConstraintsTest.any":315,"org.easymock.tests2.StubTest.stub":427,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":157,"org.easymock.tests.UsageExpectAndThrowTest.longType":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":171,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":423,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":360,"org.easymock.tests2.SerializationTest.testClass":373,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":426,"org.easymock.tests2.NameTest.nameForMocksControl":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":394,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":452,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CaptureTest.testCaptureLast":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":465,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":326,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":330,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":9,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":179,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":455,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":499,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":457,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":402,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":302,"org.easymock.tests.LimitationsTest.privateConstructor":162,"org.easymock.tests2.UsageConstraintsTest.testNotNull":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":342,"org.easymock.tests2.UsageTest.defaultResetToNice":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.UsageVarargTest.differentLength":62,"org.easymock.tests2.CallbackTest.callback":354,"org.easymock.tests2.UsageConstraintsTest.equals":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":298,"org.easymock.tests.UsageTest.openCallCountByLastCall":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":432,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":337,"org.easymock.tests.ObjectMethodsTest.testHashCode":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":472,"org.easymock.tests2.NameTest.nameForNiceMock":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":353,"org.easymock.tests2.DependencyTest.testInterfaceMocking":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":470,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":369,"org.easymock.tests2.AnswerTest.stubAnswer":336,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":221,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":376,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":435,"org.easymock.tests2.SerializationTest.test":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testSame":312,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":88,"org.easymock.tests2.NameTest.nameForMock":492,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":454,"org.easymock.tests2.UsageStrictMockTest.differentMethods":425,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":50,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":94,"org.easymock.tests2.MockedExceptionTest.testRealException":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.NameTest.nameForStrictMock":493,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":475,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":180,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":281,"org.easymock.tests2.UsageStrictMockTest.range":424,"org.easymock.tests2.UsageConstraintsTest.lessThan":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":398,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.UsageConstraintsTest.testOr":313,"org.easymock.tests.UsageRangeTest.combination":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":130,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":75,"org.easymock.tests2.UsageConstraintsTest.cmpTo":316,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":334,"org.easymock.tests2.CompareToTest.testLessThan":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.CaptureTest.testCaptureFromStub":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":166,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":449,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":131,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.UsageConstraintsTest.constraints":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.LimitationsTest.abstractClass":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":443,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":57}}]
