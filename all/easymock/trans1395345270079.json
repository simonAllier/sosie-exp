[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[23,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[252,252,253,253,15,39,67,68,69,72,73,74,75,80,82,83,85,86,92,93,94,122,123,124,125,126,138,204,211,212,215,229,230,231,232,233,234,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[97,98],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[28,30,31,32,33,34,37,254,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[66,255,214,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[258,259,0,1,2,3,4,5,6,252,253,260,261,262,263,264,7,8,11,265,12,266,13,14,15,18,19,20,21,22,23,267,24,25,268,269,26,27,28,29,30,31,33,34,35,36,37,38,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,270,58,59,60,61,62,63,65,271,272,273,274,275,276,277,278,279,280,281,282,283,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,284,285,286,287,95,96,97,98,99,100,101,288,289,103,104,106,107,110,113,290,291,292,293,115,116,117,118,119,120,121,122,123,124,125,126,294,129,130,136,138,141,142,295,143,144,145,146,147,148,296,297,149,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,206,207,208,209,210,211,212,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,298,239,240,299,241,242,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests2.UsageTest.argumentsOrdered":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":146,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":107,"org.easymock.tests2.StubTest.stubWithReturnValue":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests2.DelegateToTest.testReturnException":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":144,"org.easymock.tests.MockingTest.testPartialClassMocking":236,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":291,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests.UsageStrictMockTest.range":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":117,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":288,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":280,"org.easymock.tests2.CaptureTest.testPrimitive":31,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":215,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":248,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests2.CaptureTest.testCaptureNone":36,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":7,"org.easymock.tests.UsageTest.argumentsOrdered":249,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":152,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":214,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests2.StubTest.stub":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":28,"org.easymock.tests2.UsageTest.strictResetToDefault":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":50,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.NameTest.nameForMocksControl":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests2.DelegateToTest.testDelegate":65,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":289,"org.easymock.tests.MockingTest.testNicePartialClassMocking":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests2.CaptureTest.testCapture1_2446744":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":255,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":177,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":96,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":292,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests2.UsageTest.niceToStrict":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests.UsageTest.openCallCountByLastCall":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":115,"org.easymock.tests.UsageCallCountTest.tooFewCalls":150,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests2.CaptureTest.testCaptureAll":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":269,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.NameTest.nameForNiceMock":286,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":11,"org.easymock.tests.UsageVarargTest.allKinds":228,"org.easymock.tests2.DependencyTest.testInterfaceMocking":12,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":8,"org.easymock.tests.UsageExpectAndReturnTest.floatType":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":273,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":158,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":143,"org.easymock.tests2.CaptureTest.testCaptureFirst":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":274,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":164,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":10,"org.easymock.tests2.CaptureTest.testCapture2_2446744":40,"org.easymock.tests2.UsageTest.moreThanOneArgument":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests2.NameTest.nameForMock":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":153,"org.easymock.tests.UsageExpectAndReturnTest.longType":160,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":169,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":161,"org.easymock.tests.UsageCallCountTest.tooManyCalls":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":149,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":251,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.NameTest.nameForStrictMock":285,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageExpectAndReturnTest.object":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":279,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":204,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":272,"org.easymock.tests2.CaptureTest.testCaptureRightOne":38,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":240,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":170,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests2.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":171,"org.easymock.tests2.CaptureTest.testCapture":254,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":34,"org.easymock.tests2.UsageTest.resumeIfFailure":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220}}]
