[{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,13,7,14,8,9,15,10,11,16,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[18,18,19,19,20,21,22,23,24],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[25,26,27,28,29,30,31,32,33,34,35,36,18,19,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,4,249,250,251,252,253,254,255,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,17,285,286,287,288,289,290,291,292,293,294,20,295,296,297,298,299,300,301,6,302,13,303,304,305,306,307,308,309,7,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,21,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,22,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,0,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,14,8,467,468,9,469,15,10,470,11,471,472,473,474,475,476,477,478,479,16,480,481,482,483,12,484,485,486,487,488,489,23,24,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[11],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[213,217,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[44,48,49,51,54,149,150,151,161,180,185,188,189,285,426,438,441,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"o","actual":"o"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[372,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,494,150,151,162,163,166,167,184,187,427,432,433,440],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[211,395,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[425],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[107,108,109,110,112,114],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[495,21,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"position":"org.easymock.internal.RecordState:305","failures":[217,284,17],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[66,70],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[483],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[496],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[497],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[207,349,352,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":433,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":429,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":39,"org.easymock.tests2.DelegateToTest.testReturnException":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":170,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":130,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":40,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":450,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":470,"org.easymock.tests2.UsageTest.wrongArguments":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":144,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":118,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":157,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":289,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":365,"org.easymock.tests2.CaptureTest.testPrimitive":303,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":148,"org.easymock.tests.UsageTest.moreThanOneArgument":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":59,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":239,"org.easymock.tests.UsageTest.argumentsOrdered":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":100,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":255,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":374,"org.easymock.tests2.DependencyTest.testClassMocking":447,"org.easymock.tests2.AnswerTest.answer":348,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":446,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":154,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":360,"org.easymock.tests2.DelegateToTest.testDelegate":400,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":55,"org.easymock.tests.LimitationsTest.mockFinalMethod":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":124,"org.easymock.tests2.DependencyTest.testClassMockingSupport":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":304,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":444,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":156,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":342,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":196,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":61,"org.easymock.tests2.UsageTest.niceToStrict":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":41,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":407,"org.easymock.tests2.MockBuilderTest.testCreateMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":49,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":116,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":475,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":474,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":309,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":269,"org.easymock.tests.MockClassControlTest.testEquals":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":122,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests.MockNameTest.defaultName":71,"org.easymock.tests2.UsageConstraintsTest.testMatches":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":240,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":248,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":123,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":174,"org.easymock.tests2.UsageConstraintsTest.greaterThan":478,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":299,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":114,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":300,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":424,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":358,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":169,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":359,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":435,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":426,"org.easymock.tests2.CaptureTest.testCapture2_2446744":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":232,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":120,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":356,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":58,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":482,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.UsageCallCountTest.tooManyCalls":233,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":141,"org.easymock.tests.MockingTest.testNiceClassMocking":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":382,"org.easymock.tests.MockingTest.testClassMocking":192,"org.easymock.tests2.UsageConstraintsTest.testContains":473,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":226,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":346,"org.easymock.tests2.UsageConstraintsTest.testFind":468,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests.MockTypeTest.fromEasyMockClass":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":489,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":364,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":245,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":101,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":63,"org.easymock.tests2.ConstraintsToStringTest.findToString":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":177,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.MockClassControlTest.testHashCode":133,"org.easymock.tests2.EasyMockSupportTest.testVerify":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":331,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":1,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":443,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":106,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":430,"org.easymock.tests.DefaultClassInstantiatorTest.object":107,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":243,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":131,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":340,"org.easymock.tests2.UsageTest.resumeIfFailure":434,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":172,"org.easymock.tests2.StubTest.stubWithReturnValue":452,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":217,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":52,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":223,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.UsageExpectAndThrowTest.object":50,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":65,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":480,"org.easymock.tests2.DelegateToTest.testWrongClass":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":279,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":62,"org.easymock.tests2.CaptureTest.testCaptureNone":308,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":335,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":230,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":246,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageConstraintsTest.any":471,"org.easymock.tests2.StubTest.stub":451,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":171,"org.easymock.tests.UsageExpectAndThrowTest.longType":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":111,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":253,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":439,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests.LimitationsTest.mockNativeMethod":282,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":442,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":323,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":44,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":411,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.CompareToTest.testNotComparable":492,"org.easymock.tests2.CaptureTest.testCaptureLast":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":388,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":481,"org.easymock.tests.MockingTest.testTwoMocks":193,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":48,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":432,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":484,"org.easymock.samples.ExampleTest.removeNonExistingDocument":32,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":109,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":315,"org.easymock.tests2.MockBuilderTest.testCreateMockString":416,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":128,"org.easymock.tests.UsageExpectAndThrowTest.floatType":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":490,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":334,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":298,"org.easymock.tests.LimitationsTest.privateConstructor":281,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":344,"org.easymock.tests2.UsageTest.defaultResetToNice":0,"org.easymock.samples.ExampleTest.voteAgainstRemovals":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests.UsageVarargTest.differentLength":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":343,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":119,"org.easymock.tests.UsageThrowableTest.throwCheckedException":140,"org.easymock.tests.MockingTest.testStrictClassMocking":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":387,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":386,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":353,"org.easymock.tests.ObjectMethodsTest.testHashCode":244,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":449,"org.easymock.samples.ExampleTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":336,"org.easymock.tests2.DelegateToTest.testStubDelegate":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.stubAnswer":352,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":412,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageThrowableTest.noUpperLimit":137,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":466,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":305,"org.easymock.tests2.SerializationTest.test":354,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":108,"org.easymock.tests2.UsageConstraintsTest.testSame":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.samples.SupportTest.addDocument":34,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":385,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":326,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":198,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":441,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":415,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":54,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":5,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":487,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":403,"org.easymock.tests2.UsageStrictMockTest.range":440,"org.easymock.tests2.UsageConstraintsTest.lessThan":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":357,"org.easymock.tests2.CaptureTest.testCaptureRightOne":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":330,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":287,"org.easymock.tests.UsageTest.wrongArguments":163,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":327,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":202,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":112,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":231,"org.easymock.tests2.UsageConstraintsTest.cmpTo":472,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":431,"org.easymock.tests2.CaptureTest.testCaptureFromStub":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":4,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":404,"org.easymock.tests.UsageTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":36,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests2.CompareToTest.testGreateThan":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":121,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.LimitationsTest.abstractClass":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":362}}]
