[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[15,16,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,18,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,39,40,41,42,42,43,43,44,45,46,47,19,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,8,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,9,113,25,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,15,16,129,130,131,132,133,134,135,136,137,138,139,140,141,142,17,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,10,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,20,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,26,27,252,28,29,253,30,254,255,256,257,258,259,260,261,262,263,264,265,11,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,0,1,2,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,12,14,410,411,412,413,414,415,416,417,418,419,420,421,422,423,21,424,22,425,426,23,427,428,429,430,18,431,31,432,32,433,434,435,436,437,33,438,439,34,440,441,442,443,444,445,446,447,448,449,13,24,450,451,452,453,454,455,456,35,457,36,37,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,238,265,385,387,388,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[87,484,485,486,113,174,10,175,205,206,27,28,29,487,488,489,490,491,492,410,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[493,484,494,113,25,114,117,118,26,488,495,496,497,410,411,417,418],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[47,19,48,49,50,51,53,59,60,61,62,63,65,66,71,73,74,75,76,8,77,78,79,80,81,82,83,87,92,100,101,102,103,104,105,107,108,9,113,25,114,115,116,117,118,119,120,121,125,126,127,128,15,16,129,130,17,143,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,10,175,176,177,178,180,181,183,184,185,186,187,189,196,197,198,199,200,201,202,203,204,206,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,241,246,247,248,249,250,251,26,27,252,28,29,253,30,303,304,305,306,307,308,309,310,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,342,349,350,351,352,353,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,0,1,2,385,386,387,389,390,391,392,393,394,400,401,407,409,12,14,410,411,412,413,414,415,416,417,418,419,420,421,21,425,426,23,427,429,430,18,431,31,432,32,435,33,439,443,444,447,448,449,13,24,451,452,453,454,455,456,35,457,36,37,458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[8,122,123,124,125,128,15,16,129,130,10,203,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,239,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[42,42,43,43,0,405,421,422,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[268,424,426,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[493,484,25,26,488,496],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":310,"org.easymock.tests2.UsageTest.argumentsOrdered":418,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":272,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":413,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":74,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.tests.MockClassControlTest.testToString":190,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":465,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":317,"org.easymock.tests2.UsageTest.wrongArguments":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":248,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":211,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":147,"org.easymock.tests2.UsageConstraintsTest.testNull":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":295,"org.easymock.tests2.CaptureTest.testPrimitive":369,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":204,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":103,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":96,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":359,"org.easymock.tests2.DependencyTest.testClassMocking":380,"org.easymock.tests2.AnswerTest.answer":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":366,"org.easymock.tests2.UsageTest.strictResetToDefault":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":290,"org.easymock.tests2.DelegateToTest.testDelegate":389,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":63,"org.easymock.tests2.DependencyTest.testClassMockingSupport":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":205,"org.easymock.tests2.CaptureTest.testCapture1_2446744":370,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":90,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":210,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":483,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.MockingTest.testInterfaceMocking":144,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests2.UsageTest.niceToStrict":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":400,"org.easymock.tests2.MockBuilderTest.testCreateMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":106,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":322,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":375,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":179,"org.easymock.tests2.EasyMockSupportClassTest.testAll":462,"org.easymock.tests.MockClassControlTest.testEquals":194,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":66,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":61,"org.easymock.tests2.CaptureTest.testCaptureAll":367,"org.easymock.tests.MockNameTest.defaultName":112,"org.easymock.tests2.UsageConstraintsTest.testMatches":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":88,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests.UsageVarargTest.allKinds":187,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":34,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":139,"org.easymock.samples.ExampleTest.voteForRemoval":48,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":440,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":433,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":288,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":289,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":420,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":410,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":352,"org.easymock.tests2.CaptureTest.testCapture2_2446744":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":280,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":186,"org.easymock.tests.GenericTest.testBridgedEquals":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":86,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":443,"org.easymock.tests.MockingTest.testNiceClassMocking":148,"org.easymock.tests.MockingTest.testClassMocking":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":79,"org.easymock.tests2.UsageConstraintsTest.testContains":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":305,"org.easymock.tests2.UsageConstraintsTest.testFind":312,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":108,"org.easymock.tests.MockTypeTest.fromEasyMockClass":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":429,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests.UsageExpectAndReturnTest.object":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":435,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":294,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":181,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":109,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":494,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":422,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.MockClassControlTest.testHashCode":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":180,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":131,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastCall":414,"org.easymock.tests.DefaultClassInstantiatorTest.object":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":3,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":122,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":438,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.CapturesMatcherTest.test":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":243,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":481,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":191,"org.easymock.tests2.UsageTest.resumeIfFailure":419,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":76,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":278,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":424,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":111,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":329,"org.easymock.tests2.DelegateToTest.testWrongClass":387,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":301,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":256,"org.easymock.tests2.CaptureTest.testCaptureNone":374,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageVarargTest.varargByteAccepted":185,"org.easymock.tests2.ThreadingTest.testThreadSafe":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":476,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":83,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":368,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageConstraintsTest.any":319,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":95,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":75,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":136,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":94,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":457,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":458,"org.easymock.tests2.NameTest.nameForMocksControl":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":464,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":428,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":430,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":404,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests2.CaptureTest.testCaptureLast":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":330,"org.easymock.tests.MockingTest.testTwoMocks":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":417,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.samples.ExampleTest.removeNonExistingDocument":52,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":134,"org.easymock.tests2.ConstraintsToStringTest.andToString":491,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":409,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":423,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":475,"org.easymock.samples.ExampleTest.voteAgainstRemoval":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":439,"org.easymock.tests.LimitationsTest.privateConstructor":70,"org.easymock.tests2.UsageConstraintsTest.testNotNull":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests2.UsageTest.defaultResetToNice":416,"org.easymock.samples.ExampleTest.voteAgainstRemovals":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.differentLength":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":202,"org.easymock.tests.UsageCallCountTest.tooFewCalls":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":249,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":484,"org.easymock.tests.MockingTest.testStrictClassMocking":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":446,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":23,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.NameTest.nameForNiceMock":453,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":353,"org.easymock.tests2.DependencyTest.testInterfaceMocking":382,"org.easymock.samples.ExampleTest.addDocument":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.DelegateToTest.testStubDelegate":386,"org.easymock.tests2.AnswerTest.stubAnswer":426,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests.UsageVarargTest.varargLongAccepted":184,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":421,"org.easymock.tests2.ConstraintsToStringTest.orToString":487,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.UsageThrowableTest.noUpperLimit":126,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":299,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":371,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testSame":314,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":65,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":146,"org.easymock.tests2.NameTest.nameForMock":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":408,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":302,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests2.NameTest.nameForStrictMock":452,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":300,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":135,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":396,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":376,"org.easymock.tests2.UsageConstraintsTest.testOr":315,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.MockBuilderTest.testWithConstructor":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":264,"org.easymock.tests.UsageVarargTest.varargShortAccepted":183,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":11,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":415,"org.easymock.tests2.CaptureTest.testCaptureFromStub":377,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":89,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":397,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":163,"org.easymock.tests2.CaptureTest.testCapture":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.UsageConstraintsTest.constraints":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests2.ConstraintsToStringTest.notToString":489,"org.easymock.tests.UsageStrictMockTest.testVerify":30,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":44,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":60,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":155,"org.easymock.tests.LimitationsTest.abstractClass":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":292}}]
