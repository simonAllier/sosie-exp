[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.EasyMock:2124","failures":[27,28,29,30,31,32,33],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,4,5,6,8,9,10,11,36,37,38,12,20,21,22,39,40,0,41,42,43,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[44,45,46,34,35,47,48,49,50,51,52,4,5,6,7,8,9,10,53,54,55,11,56,12,57,13,14,15,58,59,60,61,16,17,18,19,62,63,64,65,20,21,22,66,67,68,69,70,71,72,73,74,75,76,77,78,23,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[79,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[81,82,83,84,85,86,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,16,17,18,19,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[88,27,89,90,91,92,93,94],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[95,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,4,5,6,117,118,119,120,121,122,7,8,123,9,10,124,125,126,127,128,129,130,131,132,133,134,135,136,137,11,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,88,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,12,57,13,213,214,14,15,215,216,217,218,219,220,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,58,256,257,258,259,260,261,59,262,263,60,264,265,266,267,268,269,62,63,270,271,64,65,272,273,274,275,276,277,20,278,21,22,279,280,281,282,283,284,285,66,286,287,67,288,68,289,290,291,292,90,91,92,94,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,69,71,320,321,322,73,74,323,75,76,77,324,325,326,327,328,329,330,331,332,23,24,333,334,335,336,337,25,26,338,339,28,30,340,31,32,33,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[319,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"position":"org.easymock.Capture:82","failures":[235,237,238,239,240,241,242,244,343,245,246,248],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[310,344],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[345,266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[34,35,101,4,5,6,122,7,8,9,10,124,346,11,138,165,347,88,187,348,349,188,350,351,36,352,37,353,38,354,12,57,13,213,14,15,216,58,256,263,60,277,20,278,21,22,279,280,285,67,289,296,310,39,40,0,355,356,41,357,42,358,43,359,324,331,23,24,334,25,26,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[360,280,281,282],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[7,350,36,353,12,57,13,14,15,40,357,358,359,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[361],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[171,177,192,193,200,207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[5,6,7,9,11,38,57,13,14,15,21,24,25,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[235,245,296,298,301,361,317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":334,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":282,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":358,"org.easymock.samples.SupportTest.voteForRemovals":234,"org.easymock.tests.MockClassControlTest.testToString":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":151,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.object":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":1,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":313,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":302,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":223,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":218,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":158,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":217,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageVarargTest.varargIntAccepted":161,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":221,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":45,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests2.UsageConstraintsTest.any":303,"org.easymock.tests2.StubTest.stub":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.UsageExpectAndThrowTest.longType":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.SerializationTest.testClass":280,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests2.AnswerTest.answer":31,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":275,"org.easymock.tests2.CaptureTest.testAnd":235,"org.easymock.tests2.UsageTest.strictResetToDefault":332,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.NameTest.nameForMocksControl":19,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":143,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":259,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":79,"org.easymock.tests2.CaptureTest.testCaptureLast":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":147,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":318,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":49,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.ConstraintsToStringTest.andToString":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":309,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":326,"org.easymock.samples.PartialClassMockTest.testGetArea":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":263,"org.easymock.tests2.UsageTest.niceToStrict":333,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":317,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":321,"org.easymock.tests2.UsageTest.defaultResetToNice":337,"org.easymock.tests2.MockBuilderTest.testCreateMock":323,"org.easymock.samples.ExampleTest.voteAgainstRemovals":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":164,"org.easymock.tests2.CallbackTest.callback":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":148,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":103,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests.UsageOverloadedMethodTest.overloading":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":307,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":306,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":219,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":274,"org.easymock.tests2.CaptureTest.testCaptureAll":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.MockNameTest.defaultName":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.UsageConstraintsTest.testMatches":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":86,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.NameTest.nameForNiceMock":18,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests2.DependencyTest.testInterfaceMocking":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":115,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":260,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":224,"org.easymock.tests2.ConstraintsToStringTest.orToString":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":311,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":117,"org.easymock.tests2.SerializationTest.test":281,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.UsageConstraintsTest.testSame":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests2.NameTest.nameForMock":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":184,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":157,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":52,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":37,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":80,"org.easymock.tests2.UsageConstraintsTest.testContains":305,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":297,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":48,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":312,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":320,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":163,"org.easymock.tests.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":284,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":353,"org.easymock.tests2.UsageConstraintsTest.testOr":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":159,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":88,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":183,"org.easymock.tests2.UsageConstraintsTest.cmpTo":304,"org.easymock.tests.UsageVarargTest.varargCharAccepted":162,"org.easymock.tests2.CompareToTest.testLessThan":342,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":44,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":146,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests2.CaptureTest.testCapture":343,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":262,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":55,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.samples.ExampleTest.addAndChangeDocument":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":145,"org.easymock.tests2.ConstraintsToStringTest.notToString":0,"org.easymock.tests.CapturesMatcherTest.test":95,"org.easymock.tests.UsageStrictMockTest.testVerify":346,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":327,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":54,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":41,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests2.CompareToTest.testGreateThan":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":113,"org.easymock.tests2.UsageTest.resumeIfFailure":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":3,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":160}}]
