[{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,49,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[134,135,136,137,138,139,140,13,14,14,15,15,16,141,142,143,144,145,146,147,148,149,150,151,18,19,20,21,152,153,22,154,70,71,23,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,73,74,75,76,77,78,79,80,81,83,84,85,66,86,87,88,89,90,91,92,93,95,96,97,98,99,0,174,175,176,177,178,179,180,100,101,103,104,107,108,109,110,111,112,113,181,182,25,26,27,28,183,29,30,33,35,37,38,40,184,185,43,44,186,45,46,47,49,51,52,53,187,188,189,190,191,192,54,55,193,194,195,196,197,198,199,200,201,202,203,114,115,116,117,118,119,57,58,59,120,121,60,62,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,122,123,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,125,1,264,265,266,267,268,269,2,3,270,271,272,273,126,274,127,128,129,130,131,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,49,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[60,62,291],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[227,230],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[135,169,171,173,266],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[150,117,292,206,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[294,295,296,297,298,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"position":"org.easymock.internal.RecordState:324","failures":[231,232,2],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[16,300,301,302,303,304,305,23,306,307],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[308,309,310,29,311,44,50,53,57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[134,135,136,137,312,138,313,139,314,140,315,316,141,142,143,317,144,318,145,146,147,319,320,148,149,69,150,151,152,153,22,154,70,133,71,155,156,157,158,159,160,161,162,163,164,165,166,167,321,168,169,170,171,172,173,72,73,74,75,322,76,77,78,79,80,81,82,83,84,85,66,86,87,88,89,90,91,92,93,94,95,96,97,98,323,324,99,325,0,174,326,327,328,329,330,331,175,176,177,178,179,180,100,101,102,103,104,105,106,107,108,109,110,111,112,113,332,333,334,335,181,336,337,338,339,340,182,341,342,343,344,345,346,183,184,185,347,348,186,349,350,351,352,353,187,354,355,356,357,358,359,188,189,190,191,192,360,361,362,363,193,194,195,364,365,366,367,368,196,197,198,199,200,296,369,201,202,370,371,203,114,115,116,117,118,119,372,373,374,120,121,375,204,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,292,205,392,393,394,395,396,206,397,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,398,399,293,400,401,402,403,404,405,406,407,408,227,228,229,230,231,232,233,234,235,236,237,238,239,122,123,409,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,410,411,412,413,260,261,262,414,415,263,416,417,418,419,420,421,422,423,124,125,424,1,264,425,426,265,427,266,267,428,268,429,269,2,3,270,271,272,273,126,274,127,128,129,130,131,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,430,431,432,433,434,435,436,437,438,439,440,132,441,442,443,444,445,446],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[135,169,171,172,173,379,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[143,317,319,320,99,0,174,182,347,187,200,296,369,370,371,119,375,204,409,410,413,124,125,1,264,269,2,3,442,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[134,135,136,137,312,138,313,139,314,140,315,11,12,13,14,15,316,448,449,450,451,452,453,16,300,141,142,143,317,144,318,145,146,147,319,320,148,149,69,150,151,454,455,456,18,457,458,19,459,460,308,461,462,309,310,463,464,20,465,466,467,468,469,21,470,471,152,153,22,154,70,133,71,23,155,24,156,157,158,159,160,161,162,163,164,165,166,167,321,168,169,170,171,172,173,72,73,74,75,322,76,77,78,79,80,81,82,83,84,85,66,86,87,88,89,90,91,92,93,94,95,96,97,98,323,324,99,325,0,174,326,327,328,329,330,331,175,176,177,178,179,180,100,101,102,103,104,105,106,107,108,109,110,111,112,113,332,333,334,335,181,336,337,338,339,340,182,341,342,343,344,345,346,25,26,27,28,472,183,29,30,311,31,33,34,473,35,36,37,38,474,307,39,40,42,475,476,184,185,477,478,479,480,347,348,43,44,186,45,46,47,48,481,49,482,483,50,51,52,53,484,485,349,350,351,352,353,187,354,355,356,357,358,359,188,486,189,190,191,192,54,487,488,55,489,360,361,362,363,193,194,195,364,365,366,367,368,196,197,198,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,199,200,296,369,201,202,370,371,203,114,115,116,117,118,119,512,513,56,57,58,372,59,373,374,514,120,121,515,60,61,62,291,375,204,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,292,205,392,393,394,395,396,206,397,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,398,399,293,400,401,402,403,404,405,406,407,408,227,228,229,230,231,232,233,234,235,236,237,238,239,122,123,409,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,63,516,517,410,411,64,412,413,260,261,262,414,415,263,416,417,418,419,420,421,422,423,124,125,424,1,264,425,426,265,427,266,267,428,268,429,269,2,3,5,6,7,8,518,9,10,270,271,272,273,126,274,127,128,129,130,131,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,430,431,432,433,434,435,436,437,438,439,440,132,441,442,443,444,445,446,519,65,520,521,522,523,524,525],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[515],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[526],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[14,14,15,15,16,300,23,307,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.UsageTest.argumentsOrdered":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":315,"org.easymock.tests2.DelegateToTest.testReturnException":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":271,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":520,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":511,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":301,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":362,"org.easymock.samples.ExampleTest.answerVsDelegate":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":525,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":165,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":495,"org.easymock.tests.ReplayStateInvalidUsageTest.times":405,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.DependencyTest.testClassMocking":475,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":517,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.DelegateToTest.testDelegate":173,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":494,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests.LimitationsTest.mockFinalMethod":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":368,"org.easymock.tests2.DependencyTest.testClassMockingSupport":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.UsageThrowableTest.throwError":227,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":293,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":411,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":498,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":400,"org.easymock.tests.MockingTest.testInterfaceMocking":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":446,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.ThreadingTest.testChangeDefault":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":516,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":66,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":433,"org.easymock.tests.MockClassControlTest.testEquals":524,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":366,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":238,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":269,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":233,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":499,"org.easymock.samples.ExampleTest.voteForRemoval":136,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":484,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":491,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":270,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":168,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":214,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":420,"org.easymock.tests.UsageExpectAndReturnTest.longType":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":364,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":421,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":232,"org.easymock.tests.MockingTest.testNiceClassMocking":514,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":513,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":32,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":198,"org.easymock.tests.MockTypeTest.fromEasyMockClass":410,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":526,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":302,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":444,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":193,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":300,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":430,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":523,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":434,"org.easymock.tests2.CaptureTest.testCaptureMultiple":68,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":463,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":336,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":522,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":497,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.tests.ReplayStateInvalidCallsTest.times":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":504,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":21,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":273,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":205,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":515,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":195,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":171,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":501,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":347,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":454,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":407,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":297,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":493,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":284,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":449,"org.easymock.tests.UsageUnorderedTest.message":119,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":418,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":445,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":404,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":518,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":403,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":509,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":450,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":458,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests2.CompareToTest.testCompareEqual":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":508,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":505,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":453,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":338,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":282,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":52,"org.easymock.tests.LimitationsTest.privateConstructor":488,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":447,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":234,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":222,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.UsageConstraintsTest.equals":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":363,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":451,"org.easymock.tests.UsageThrowableTest.throwCheckedException":231,"org.easymock.tests.MockingTest.testStrictClassMocking":512,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.ObjectMethodsTest.testHashCode":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":507,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":502,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":303,"org.easymock.samples.ExampleTest.addDocument":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.DelegateToTest.testStubDelegate":170,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":474,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.floatType":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":477,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":208,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":460,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":490,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":219,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":483,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":473,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":496,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":304,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":309,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":448,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":510,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":177,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":399,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":296,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":506,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":221,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests.UsageStrictMockTest.testVerify":426,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":423,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":365,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":17,"org.easymock.tests.LimitationsTest.abstractClass":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":162,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4}}]
