[{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[33,35],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[51,52,53,54,55,56,57,58,59,6,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,30,81,82,83,84,85,86,87,49,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[97,98,99],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[100,101,102,103,104,60,63,64,105,74,75,106,107,82,83,84,86,108,49,88,93,109,95,96],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[111,112,113,114,81,93],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[115,116,117,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[164,165,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,60,63,64,105,74,75,107,82,83,84,181,182,183,86,108,49,88,93,109,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[163,184,185,186],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[126,131,187,188,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[168,169,170,171,172,173,174,175,176,177],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[126,131,187,188,189,191,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[193,194,195,196,197,198],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[56,199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":46,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":62,"org.easymock.tests2.StubTest.stubWithReturnValue":8,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":112,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":144,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":164,"org.easymock.tests.UsageExpectAndThrowTest.object":19,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":71,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":28,"org.easymock.tests.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":113,"org.easymock.tests.UsageUnorderedTest.message":86,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":76,"org.easymock.tests.UsageVerifyTest.twoReturns":88,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":155,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":121,"org.easymock.tests.UsageExpectAndThrowTest.longType":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":45,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.SerializationTest.testClass":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests2.CaptureTest.testAnd":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":180,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":143,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":24,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":17,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests.UsageThrowableTest.throwError":33,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":195,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.UsageExpectAndThrowTest.floatType":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests.UsageVerifyTest.twoThrows":49,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests2.UsageTest.niceToStrict":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests.UsageVarargTest.differentLength":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":157,"org.easymock.tests2.CallbackTest.callback":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":18,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":111,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":159,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":29,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":36,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":26,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":191,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":38,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests2.AnswerTest.stubAnswer":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":48,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":172,"org.easymock.tests2.SerializationTest.test":184,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":43,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":146,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":90,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":134,"org.easymock.tests.UsageCallCountTest.tooManyCalls":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":23,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":37,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":188,"org.easymock.tests.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":150,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.MockBuilderTest.testWithConstructor":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":151,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":89,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":78,"org.easymock.tests2.CaptureTest.testCaptureMultiple":167,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests.DefaultClassInstantiatorTest.object":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":178,"org.easymock.tests.UsageTest.unexpectedCallWithArray":81,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":35,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":133,"org.easymock.tests2.CaptureTest.testCapture":176,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":15,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests2.UsageTest.resumeIfFailure":65,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":173,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":120}}]
