[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,105,106,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[110,111],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[120,121,123,124,125,126,127,128,129,122,130,131],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[132,112,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,36,45,59,61,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[183,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[33,186,34,187],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[135,143,145,146,188,189,190,191,192,193,194,195,196,197,198,157,199,163,164,166,167,200,201,173,175,176,177],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[202,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[203,204,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[208,209,210,211,212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[189,193,195,196,199,163],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[134,215,64,65,66,216,217,218,219,220,221,222,223,224,156,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[33,186,34,187],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[91,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[94,110,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:156","sourceCode":"final java.lang.StackTraceElement[] java.lang.StackTraceElement[] = java.lang.Throwable.getStackTrace()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[134,217,223,156,253,176],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[14,36,45,59,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[189,193,195,196,199,163],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[116,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[254,204,255,256,132,257,258,259,260,112,113,261,114,262,115,116,263,264,265,266,267,268,269,133,270,271,118,272,273,274,119,275,276,134,277,135,136,137,138,278,215,279,139,140,280,141,1,2,4,5,281,142,282,143,144,145,146,147,283,284,285,286,287,288,148,149,150,151,33,186,34,35,39,40,45,46,289,290,291,292,47,293,294,202,295,296,49,50,297,51,52,53,55,58,60,64,65,66,216,298,217,120,299,121,123,124,125,126,127,300,128,122,130,301,131,73,302,218,78,79,80,303,304,305,306,307,308,309,310,311,219,220,221,222,223,224,156,157,199,158,312,225,159,160,161,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,313,314,315,316,317,162,318,163,164,165,166,167,168,319,83,320,321,322,323,324,325,326,327,246,98,99,201,169,328,329,330,331,102,332,333,334,248,249,335,173,336,337,250,338,339,340,251,252,341,342,343,344,345,346,347,348,349,350,175,176,177,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,178,371,179,180,372,373,374,375,376,377,378,379,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[33,381,43,47,48,56,105,105,106,106],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[203,254,204,255,382,256,132,257,383,258,259,260,112,113,384,261,114,262,115,116,263,117,264,265,266,267,268,269,133,270,271,118,272,273,385,274,119,275,276,208,386,387,206,388,389,209,390,391,392,393,394,134,277,135,136,137,138,278,215,279,139,140,280,141,0,1,2,3,395,396,4,5,397,6,7,281,398,142,282,143,144,145,146,147,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,283,210,399,400,207,401,284,211,402,403,404,405,406,285,407,408,286,287,288,409,148,149,150,151,33,186,34,35,36,37,38,39,40,41,42,381,43,44,45,46,289,290,291,292,47,48,293,294,202,295,296,49,50,297,51,52,53,54,410,55,56,57,58,59,60,61,62,63,64,65,66,216,411,152,412,413,414,153,154,415,416,155,417,418,419,67,70,420,421,298,217,120,299,121,123,124,125,126,127,300,128,122,130,301,131,71,72,73,74,422,423,424,425,426,427,428,302,218,75,76,77,78,79,429,80,430,431,81,303,304,305,306,307,308,309,310,311,219,220,221,222,223,224,432,156,157,199,158,312,225,159,160,161,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,313,314,315,316,317,183,184,185,162,318,163,164,165,166,167,168,319,82,83,84,85,86,87,88,89,320,321,322,323,324,433,434,435,325,326,90,91,92,93,94,95,96,327,246,436,437,438,253,439,440,441,442,443,444,205,445,446,447,448,449,450,451,452,453,454,455,456,457,97,98,99,100,101,200,201,458,169,328,329,330,459,460,461,247,462,331,463,102,464,465,466,467,332,468,469,470,471,472,473,474,333,334,248,249,335,173,103,475,476,477,478,104,479,480,336,337,250,338,339,340,251,252,481,482,483,341,342,343,484,344,345,174,346,347,348,349,350,175,176,177,485,486,487,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,488,178,371,179,180,372,373,489,181,182,490,491,492,493,494,374,375,376,377,378,379,495,380,105,106,212,107,213,496,497,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[254,204,255,256,132,257,258,259,260,112,113,261,114,262,115,116,263,264,265,266,267,268,269,133,270,271,118,272,273,274,119,275,276,134,277,135,136,137,138,278,215,279,139,140,280,141,1,2,4,5,281,142,282,143,144,145,146,147,283,284,285,286,287,288,148,149,150,151,33,186,34,35,39,40,45,46,289,290,291,292,47,293,294,202,295,296,49,50,297,51,52,53,55,58,60,64,65,66,216,298,217,120,299,121,123,124,125,126,127,300,128,122,130,301,131,73,302,218,78,79,80,303,304,305,306,307,308,309,310,311,219,220,221,222,223,224,156,157,199,158,312,225,159,160,161,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,313,314,315,316,317,162,318,163,164,165,166,167,168,319,83,320,321,322,323,324,325,326,327,246,98,99,201,169,328,329,330,331,102,332,333,334,248,249,335,173,336,337,250,338,339,340,251,252,341,342,343,344,345,346,347,348,349,350,175,176,177,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,178,371,179,180,372,373,374,375,376,377,378,379,380],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[14,35,40,54,63,64],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[134,215,217,218,223,156,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,249,336,250,338,339,340,251,252,176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[498,499,56,105,106],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[42,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","state":"threadSafe","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[110],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[254,204,255,256,132,257,258,259,260,112,113,261,114,262,115,116,263,264,265,266,267,268,269,133,270,271,118,272,273,385,274,119,275,276,389,134,277,135,136,137,138,278,215,279,139,140,280,141,0,1,2,3,396,4,5,281,398,142,282,143,144,145,146,147,11,14,24,30,284,285,286,287,288,33,186,34,35,36,39,40,41,42,44,45,46,289,290,291,292,47,293,294,202,295,296,49,50,297,51,52,53,54,55,58,59,60,61,64,65,66,216,411,152,412,413,414,153,154,415,416,155,417,418,419,298,217,120,299,121,123,124,125,126,127,300,128,122,130,301,131,73,428,302,218,78,79,80,303,304,305,306,307,308,309,310,311,219,220,221,222,223,224,156,157,199,158,312,225,159,160,161,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,313,314,315,316,317,162,318,163,164,165,166,167,168,320,321,322,323,324,325,326,327,246,98,99,169,329,330,459,461,247,463,102,333,334,248,249,335,173,336,337,250,338,339,340,251,252,500,500,341,342,343,344,345,174,346,347,348,349,350,175,176,177,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,179,180,372,373,489,181,182,374,375,376,377,378,379,380,105,106,212,107,213,496,497,108,109],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[113,116,118],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[134,278,215,141,143,285,156,312,225,161,164,175,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":205,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":212,"org.easymock.tests2.DelegateToTest.testReturnException":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":84,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":226,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":170,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":263,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":333,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":310,"org.easymock.samples.ExampleTest.answerVsDelegate":375,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":89,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":335,"org.easymock.tests.UsageTest.moreThanOneArgument":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":322,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":490,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.UsageVarargTest.varargIntAccepted":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":307,"org.easymock.tests.ReplayStateInvalidUsageTest.times":471,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests2.DependencyTest.testClassMocking":6,"org.easymock.tests2.AnswerTest.answer":285,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":292,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":476,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":494,"org.easymock.tests2.DelegateToTest.testDelegate":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":241,"org.easymock.tests.LimitationsTest.mockFinalMethod":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests2.DependencyTest.testClassMockingSupport":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":200,"org.easymock.tests2.CaptureTest.testCapture1_2446744":124,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":466,"org.easymock.tests.UsageThrowableTest.throwError":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":32,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":467,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests2.CompareToTest.testLessOrEqual":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":434,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":427,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":308,"org.easymock.tests.UsageOverloadedMethodTest.overloading":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":110,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":267,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":128,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":11,"org.easymock.tests.MockClassControlTest.testEquals":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":291,"org.easymock.tests2.CaptureTest.testCaptureAll":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":432,"org.easymock.tests2.UsageConstraintsTest.testMatches":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":323,"org.easymock.samples.ExampleTest.voteForRemovals":379,"org.easymock.tests.UsageVarargTest.allKinds":350,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":96,"org.easymock.samples.ExampleTest.voteForRemoval":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":412,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":131,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":413,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":358,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":295,"org.easymock.tests2.CaptureTest.testCapture2_2446744":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":181,"org.easymock.tests.UsageExpectAndReturnTest.longType":354,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":488,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":340,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests.MockingTest.testNiceClassMocking":81,"org.easymock.tests.MockingTest.testClassMocking":76,"org.easymock.tests2.UsageConstraintsTest.testContains":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":261,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":477,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageExpectAndReturnTest.object":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":416,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":345,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":425,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":491,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests.MockClassControlTest.testHashCode":87,"org.easymock.tests2.EasyMockSupportTest.testVerify":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":21,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":486,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":283,"org.easymock.tests.UsageVarargTest.varargCharAccepted":344,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":485,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":423,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":232,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":183,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":30,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":85,"org.easymock.tests2.UsageTest.resumeIfFailure":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":450,"org.easymock.samples.SupportTest.voteForRemovals":497,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":238,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":456,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":272,"org.easymock.tests2.DelegateToTest.testWrongClass":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests.UsageStrictMockTest.range":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":105,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":420,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":473,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":435,"org.easymock.tests2.CaptureTest.testCaptureNone":300,"org.easymock.tests.UsageUnorderedTest.message":173,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":25,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":373,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":426,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":264,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":470,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":229,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":94,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":469,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":389,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":400,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":13,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":230,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests2.CaptureTest.testCaptureLast":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":201,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":5,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":273,"org.easymock.tests.MockingTest.testTwoMocks":77,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.samples.ExampleTest.removeNonExistingDocument":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":92,"org.easymock.tests2.ConstraintsToStringTest.andToString":192,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":15,"org.easymock.tests.UsageExpectAndThrowTest.floatType":228,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":286,"org.easymock.tests.UsageVerifyTest.twoThrows":176,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":433,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":72,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":399,"org.easymock.tests.UsageVarargTest.differentLength":174,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":56,"org.easymock.tests.UsageTest.openCallCountByLastCall":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":311,"org.easymock.tests.UsageThrowableTest.throwCheckedException":339,"org.easymock.tests.MockingTest.testStrictClassMocking":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":396,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":288,"org.easymock.tests.ObjectMethodsTest.testHashCode":424,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":281,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.DelegateToTest.testStubDelegate":204,"org.easymock.tests2.AnswerTest.stubAnswer":287,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":381,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.tests2.ConstraintsToStringTest.orToString":188,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":106,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":67,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":125,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":91,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":352,"org.easymock.samples.SupportTest.addDocument":496,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":395,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":16,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":363,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":499,"org.easymock.tests2.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":240,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":421,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":334,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":171,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":20,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":17,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":364,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":489,"org.easymock.tests2.UsageConstraintsTest.cmpTo":265,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":130,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":465,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":365,"org.easymock.tests2.CaptureTest.testCapture":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.samples.ExampleTest.addAndChangeDocument":380,"org.easymock.tests2.ConstraintsToStringTest.notToString":190,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":213,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":305,"org.easymock.tests.LimitationsTest.abstractClass":71,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":306,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":342}}]
