[{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[73,0,1,74,75,76,77,78,79,2,80,81,82,83,84,85,3,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,20,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,7,211,212,213,214,215,216,217,218,219,220,4,221,222,223,224,42,225,5,226,227,228,229,230,231,232,233,234,235,236,237,238,8,239,240,241,242,243,9,244,245,246,247,248,249,250,251,252,253,254,255,256,257,45,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,10,11,69,349,350,71,72,351,12,352,13,14,353,15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[354,355,356],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[357,358,359,360,361,362,363,364,55,365,366,367,368,369,370,371,372,373,374,375,376,377,378,350],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[244,246,247,248,249,250,251,253,379,254,255,257],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = (java.util.Set<java.lang.reflect.Method>) == null ? new java.lang.reflect.Method[0] : java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[380,381,382,96,97,99,100,184,186,189,190,217,222,223,224,261,262,263,264,267,269,270,338,339,345,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[18,0,1,74,75,76,77,78,79,2,80,81,82,83,84,85,3,86,87,88,89,95,97,98,99,100,101,109,110,111,112,114,115,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,21,151,153,154,161,162,163,164,165,166,167,168,169,170,171,183,184,187,188,191,383,384,385,196,197,198,199,200,202,203,204,205,206,217,222,223,224,42,225,5,226,227,228,229,230,361,43,44,234,235,236,237,238,8,239,240,241,242,243,9,244,245,246,247,249,250,251,252,253,254,257,45,258,47,49,259,260,266,267,268,269,270,271,386,276,365,366,367,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,311,312,313,314,316,317,318,319,321,323,324,325,326,329,330,331,332,333,334,335,66,336,337,338,340,341,342,343,348,10,11,69,387,388,70,349,389,390,372,374,375,72,12,14,353,15],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[35,36,37,38,40,41],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[386,391,392,393,394,395,396,334,397,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[20,151],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[244,246,254,280,281,283,285,286,288,298,303],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[399,334,335,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[400,401,402],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[125,172,174,175,176,177,178,179,260,350,71,72,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[400,401,402],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[403,352,353,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[244,246,247,248,249,250,251,253,379,254,255,257],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:269","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[404,405,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[122,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[386,391,392,393,394,396,334,397,398],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[97,183,187,188,191,222,224,267,336,342,343,348,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[280,287,293,305,408],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[16,17,18,19,409,73,410,0,1,74,75,76,77,78,79,2,80,81,82,83,84,85,3,86,87,88,89,357,411,412,90,91,358,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,413,109,110,111,112,113,114,115,116,117,118,119,120,121,122,414,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,359,20,21,360,22,151,152,153,154,155,156,157,158,159,415,23,24,25,26,27,28,29,30,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,31,32,33,383,384,416,385,417,418,34,192,193,194,195,419,35,36,37,38,39,40,420,41,196,197,198,421,199,200,201,202,203,204,205,206,422,423,424,425,426,427,403,428,429,430,431,432,433,6,434,435,207,436,437,438,439,440,208,441,209,442,443,444,407,445,446,447,448,449,450,451,210,7,211,212,213,214,215,216,217,218,219,220,4,221,222,223,224,42,225,5,452,226,227,228,229,230,231,232,233,361,43,44,453,454,234,235,236,237,238,8,239,240,241,242,455,243,9,244,245,246,247,248,249,250,251,252,253,254,255,256,257,45,46,258,47,48,49,362,456,50,457,51,52,363,364,53,54,55,259,260,458,261,262,263,264,265,266,267,268,269,270,271,386,391,459,272,273,274,275,460,461,462,463,464,465,276,277,466,467,468,469,470,56,471,472,57,473,58,365,59,60,474,475,61,476,477,62,478,366,63,64,479,480,65,367,481,482,278,279,280,281,483,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,484,485,312,313,314,315,316,317,318,486,487,488,489,490,319,320,491,492,493,494,495,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,66,336,337,338,339,340,341,342,343,344,345,346,347,348,10,496,11,67,404,405,406,68,497,498,69,387,388,70,499,349,389,390,500,368,501,369,370,502,371,372,373,374,397,375,503,398,376,377,504,378,350,71,72,351,12,352,13,14,353,15],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[358,374],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[357,375],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,76,78,79,2,80,82,83,84,85,86,87,88,89,99,100,109,128,129,132,134,135,136,137,139,140,141,142,144,145,146,147,151,152,153,154,162,164,183,184,187,188,217,222,243,9,245,246,248,249,251,252,256,257,259,269,270,278,279,280,282,283,284,285,291,292,293,294,296,297,304,305,311,314,315,316,338,341,342,343,347,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[157,23,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[361,453,454,365,366,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[244,246,254,280,281,283,285,286,288,298,303],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[96,505,506,185,507,508],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[18,20,360,383,384,385,42,361,453,453,454,454,46,362,363,364,53,386,509,510,511,512,513,57,365,366,367,334,514,368,369,370,372,374,375,377,515,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[281,285,288],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[125,172,174,175,176,177,178,179,350,71,72,351],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":281,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.UsageTest.argumentsOrdered":346,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":341,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":235,"org.easymock.tests2.DelegateToTest.testReturnException":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":383,"org.easymock.tests.MockClassControlTest.testToString":25,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":458,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":365,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":380,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageTest.wrongArguments":339,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":194,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":418,"org.easymock.tests2.UsageConstraintsTest.testNull":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":330,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":509,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":127,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":103,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":230,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":12,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":275,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":325,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":107,"org.easymock.tests2.DelegateToTest.testDelegate":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests.LimitationsTest.mockFinalMethod":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":120,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":121,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":273,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":443,"org.easymock.tests.UsageThrowableTest.throwError":163,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":91,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":482,"org.easymock.samples.PartialClassMockTest.testGetArea":361,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":444,"org.easymock.tests.MockingTest.testInterfaceMocking":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":149,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests2.UsageTest.niceToStrict":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":479,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":192,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":293,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":292,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":253,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":421,"org.easymock.tests.MockClassControlTest.testEquals":29,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":510,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":118,"org.easymock.tests2.CaptureTest.testCaptureAll":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":274,"org.easymock.tests.MockNameTest.defaultName":210,"org.easymock.tests2.UsageConstraintsTest.testMatches":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":209,"org.easymock.samples.ExampleTest.voteForRemovals":242,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":310,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":41,"org.easymock.samples.ExampleTest.voteForRemoval":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":54,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":315,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":515,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":362,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.CaptureTest.testCaptureFirst":257,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":324,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":79,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":317,"org.easymock.tests2.UsageTest.moreThanOneArgument":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":437,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":116,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":232,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":387,"org.easymock.tests.MockingTest.testNiceClassMocking":34,"org.easymock.tests.MockingTest.testClassMocking":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.UsageConstraintsTest.testContains":291,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":282,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":11,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":393,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":158,"org.easymock.tests.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":487,"org.easymock.tests.MockClassControlTest.testHashCode":28,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":477,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":460,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":419,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastCall":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":400,"org.easymock.tests.DefaultClassInstantiatorTest.object":35,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":180,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":513,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":486,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":27,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":231,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":367,"org.easymock.tests2.UsageTest.resumeIfFailure":347,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":260,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":207,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":399,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":208,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":352,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":410,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":299,"org.easymock.tests2.DelegateToTest.testWrongClass":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":453,"org.easymock.tests.UsageStrictMockTest.range":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":497,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":450,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":150,"org.easymock.tests2.CaptureTest.testCaptureNone":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":355,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":63,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":112,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":126,"org.easymock.tests2.UsageConstraintsTest.any":289,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":446,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests2.SerializationTest.testClass":334,"org.easymock.tests.LimitationsTest.mockNativeMethod":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests2.NameTest.nameForMocksControl":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":465,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":496,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":385,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":384,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":461,"org.easymock.tests2.CaptureTest.testCaptureLast":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":390,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":300,"org.easymock.tests.MockingTest.testTwoMocks":33,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":488,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":37,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":316,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":59,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":459,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":366,"org.easymock.samples.ExampleTest.voteAgainstRemoval":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":364,"org.easymock.tests.LimitationsTest.privateConstructor":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":350,"org.easymock.tests2.UsageTest.defaultResetToNice":344,"org.easymock.samples.ExampleTest.voteAgainstRemovals":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":462,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":457,"org.easymock.tests.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":125,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":349,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests2.CompareToTest.testGreateOrEqual":408,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests2.NameTest.nameForNiceMock":263,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":318,"org.easymock.tests2.DependencyTest.testInterfaceMocking":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":394,"org.easymock.samples.ExampleTest.addDocument":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.DelegateToTest.testStubDelegate":308,"org.easymock.tests2.AnswerTest.stubAnswer":353,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":386,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests.UsageThrowableTest.noUpperLimit":164,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":67,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":249,"org.easymock.tests2.SerializationTest.test":335,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":1,"org.easymock.tests2.UsageConstraintsTest.testSame":284,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":60,"org.easymock.tests.GenericTest.testPackageScope":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":417,"org.easymock.tests2.NameTest.nameForMock":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":504,"org.easymock.tests2.UsageStrictMockTest.differentMethods":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":6,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":124,"org.easymock.tests2.NameTest.nameForStrictMock":262,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":38,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":298,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":369,"org.easymock.tests2.UsageStrictMockTest.range":269,"org.easymock.tests2.UsageConstraintsTest.lessThan":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":490,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":476,"org.easymock.tests2.CaptureTest.testCaptureRightOne":254,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":354,"org.easymock.tests2.UsageConstraintsTest.testOr":285,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":186,"org.easymock.tests2.MockBuilderTest.testWithConstructor":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":474,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":40,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":343,"org.easymock.tests2.CaptureTest.testCaptureFromStub":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.CaptureTest.testCapture":379,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.UsageConstraintsTest.constraints":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageStrictMockTest.testVerify":102,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":234,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":117,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":228,"org.easymock.tests.LimitationsTest.abstractClass":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":78,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":229,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":327,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":382}}]
