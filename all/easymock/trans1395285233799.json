[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[48,49,50,51,52,53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,6,7,10,76,77,48,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,27,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,30,112,113,114,115,116,117,118,119,120,121,122,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[123,124,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[126,60,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[127,128,129,130,75,131,132,133,134,135,79,136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[6,15,17,23,32,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[95,112,118,141],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[142,143,144,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,183,184,184,185,136,137,138,186,187,188,189,190,191,94,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,143,145,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,46,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[65,66,67,68,69,1,2,70,71,74,75,4,5,149,249,250,251,6,7,252,8,9,253,151,152,254,255,256,257,258,259,260,261,10,165,262,263,264,265,266,267,268,269,270,271,272,273,274,275,76,77,48,78,79,276,277,54,11,278,279,12,13,170,171,172,280,281,282,283,53,24,25,26,284,285,181,182,185,286,287,55,288,289,290,291,292,293,294,80,81,82,83,84,85,86,87,88,89,90,93,136,138,186,187,295,188,189,190,94,195,196,197,296,297,298,299,300,301,202,203,204,205,302,206,207,303,27,304,28,29,143,144,145,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,98,99,100,101,103,104,106,107,109,110,30,112,114,115,116,117,118,119,321,210,213,215,216,219,322,225,227,237,243,323,324,325,326,43,327,328,329,44,45,330,246,59,62,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[150],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[6,15,17,23,32,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[142,143,144,145],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[4,258,259],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[332,333,334,335,3,4,5,7,8,9,10,22,27,28,29,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[175,176,177,179,180],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[80,82,83,84,85,86,87,89,336,90,91,93],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[337,338,339,340,341,146,342,343,344,345,346,347,348,349,65,66,67,68,69,1,2,350,70,71,72,73,74,127,128,129,130,75,131,147,351,352,353,354,148,355,356,357,358,359,360,361,362,126,132,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,3,4,5,149,249,250,384,385,251,6,7,252,8,9,386,387,253,388,389,390,150,151,152,153,154,155,156,157,158,159,160,161,162,391,392,393,394,395,396,397,398,399,400,401,402,254,255,256,257,258,259,260,261,10,403,163,164,165,166,404,405,262,263,406,264,407,408,409,410,265,411,412,413,414,266,415,416,417,418,267,268,269,419,270,271,420,272,273,274,275,76,77,48,133,134,135,78,79,421,422,423,49,424,425,426,427,428,276,277,429,430,431,54,11,278,279,12,13,14,167,168,169,170,171,432,172,433,434,173,435,436,437,438,439,174,175,176,177,178,179,440,180,50,51,280,281,441,282,442,443,52,444,283,445,446,447,448,53,449,450,451,452,453,22,23,24,454,455,25,26,284,456,457,458,459,460,461,462,463,285,181,182,183,184,185,286,287,55,288,289,290,291,464,292,293,294,80,81,82,83,84,85,86,87,88,89,90,91,92,93,136,137,138,139,465,140,186,187,295,188,189,190,191,466,94,192,193,194,195,196,197,198,199,467,296,297,298,299,200,468,469,470,201,471,472,473,474,475,300,301,202,203,204,205,476,302,206,207,47,477,478,479,480,481,303,27,304,28,29,482,143,144,145,305,306,307,308,309,310,311,312,313,314,315,316,317,483,318,484,319,485,320,95,96,97,98,486,99,100,101,102,103,104,105,106,107,108,109,110,111,30,112,113,114,115,116,117,118,119,120,121,487,488,489,490,491,321,492,493,494,495,496,497,208,498,210,211,499,212,213,214,215,500,216,501,217,218,219,502,221,503,504,505,506,507,322,508,509,510,511,512,513,222,223,224,225,46,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,514,515,323,324,122,56,325,326,42,43,327,328,516,517,329,44,45,518,330,57,519,58,246,247,520,59,60,61,62,63,64],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[6,15,17,23,32,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[337,338,339,340,341,146,342,343,344,345,346,347,348,349,65,66,67,68,69,1,2,350,70,71,72,73,74,127,128,129,130,75,131,147,353,354,148,355,356,357,358,359,360,361,362,126,132,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,3,4,5,149,249,250,384,385,251,6,7,252,8,9,386,387,253,388,389,390,150,151,152,153,154,155,156,157,158,159,160,161,162,391,392,393,394,395,396,397,398,399,400,401,402,254,255,256,257,258,259,260,261,10,403,163,164,165,166,404,405,262,263,406,264,407,408,409,410,265,411,412,413,414,266,415,416,417,418,267,268,269,419,270,271,420,272,273,274,275,76,77,48,133,134,135,78,79,421,422,423,49,424,425,426,427,428,276,277,429,430,431,54,11,278,279,12,13,14,167,168,169,170,171,432,172,433,434,173,436,437,438,174,175,176,177,178,179,180,50,51,280,281,441,282,442,443,52,444,283,445,446,447,448,53,449,450,451,452,453,22,23,24,454,455,25,26,284,456,457,458,459,460,461,462,463,285,181,182,183,184,185,286,287,55,288,289,290,291,464,292,293,294,80,81,82,83,84,85,86,87,88,89,90,91,92,93,136,137,138,139,465,140,186,187,295,188,189,190,191,466,94,192,193,194,195,196,197,198,199,467,296,297,298,299,200,201,471,472,473,474,475,300,301,202,203,204,205,302,206,207,477,478,479,480,481,303,27,304,28,29,482,143,144,145,305,306,307,308,309,310,311,312,313,314,315,316,317,483,318,484,319,485,320,95,96,97,98,486,99,100,101,102,103,104,105,106,107,108,109,110,111,30,112,113,114,115,116,117,118,119,120,121,487,488,489,490,491,321,492,493,494,495,496,497,208,210,211,212,213,214,215,216,217,218,219,221,503,504,505,506,507,322,508,509,510,511,512,513,222,223,224,225,46,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,514,515,323,324,56,325,326,42,43,327,328,516,517,329,44,45,518,330,57,519,58,246,247,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[143,500,217,521,522,246,247,520,523,524,525,526,0,527,528,529],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[97,103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":453,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":328,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":286,"org.easymock.tests2.DelegateToTest.testReturnException":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":128,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":157,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":404,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":227,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":524,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":513,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":458,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":434,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":314,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":418,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":423,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageVarargTest.varargIntAccepted":269,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":528,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":469,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":35,"org.easymock.tests.ReplayStateInvalidUsageTest.times":399,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":322,"org.easymock.tests2.DependencyTest.testClassMocking":514,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":480,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":352,"org.easymock.tests2.UsageTest.strictResetToDefault":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":309,"org.easymock.tests2.DelegateToTest.testDelegate":320,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":266,"org.easymock.tests.LimitationsTest.mockFinalMethod":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":383,"org.easymock.tests2.DependencyTest.testClassMockingSupport":515,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":1,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":478,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":393,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":245,"org.easymock.samples.PartialClassMockTest.testGetArea":185,"org.easymock.tests.MockingTest.testInterfaceMocking":432,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":394,"org.easymock.tests2.CompareToTest.testLessOrEqual":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":232,"org.easymock.tests2.UsageTest.niceToStrict":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":213,"org.easymock.tests2.MockBuilderTest.testCreateMock":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":456,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":445,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests.MockClassControlTest.testEquals":161,"org.easymock.tests2.EasyMockSupportClassTest.testAll":225,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":416,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":479,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":381,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.samples.ExampleTest.voteForRemovals":291,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":3,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":382,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":260,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":529,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":440,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":180,"org.easymock.samples.ExampleTest.voteForRemoval":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":474,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":325,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":307,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":483,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":308,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":443,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":275,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":430,"org.easymock.tests.UsageExpectAndReturnTest.longType":281,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":417,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":220,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":463,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":421,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":134,"org.easymock.tests.UsageCallCountTest.tooManyCalls":431,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":16,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":259,"org.easymock.tests.MockingTest.testNiceClassMocking":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":209,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":138,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":384,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageExpectAndReturnTest.object":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":525,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":342,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":449,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.MockClassControlTest.testHashCode":160,"org.easymock.tests2.EasyMockSupportTest.testVerify":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":234,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":34,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":477,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":122,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":516,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":124,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":460,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":506,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":450,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":243,"org.easymock.tests2.UsageTest.resumeIfFailure":518,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":130,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests2.SerializationTest.testAllMockedMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":522,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":39,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":412,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":142,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":377,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.UsageExpectAndThrowTest.object":265,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":115,"org.easymock.tests2.DelegateToTest.testWrongClass":319,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":183,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":471,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":411,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":274,"org.easymock.tests2.ThreadingTest.testThreadSafe":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":238,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":277,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests2.StubTest.stub":465,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":398,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.SerializationTest.testClass":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":321,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":452,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":505,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":482,"org.easymock.tests2.NameTest.nameForMocksControl":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":507,"org.easymock.tests2.MockedExceptionTest.testMockedException":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":519,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":406,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":216,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":523,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":503,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":2,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":116,"org.easymock.tests.MockingTest.testTwoMocks":169,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":409,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.samples.ExampleTest.removeNonExistingDocument":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":509,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":395,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":475,"org.easymock.tests2.ConstraintsToStringTest.andToString":38,"org.easymock.tests2.MockBuilderTest.testCreateMockString":221,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":228,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":520,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.LimitationsTest.privateConstructor":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":261,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":504,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.CallbackTest.callback":56,"org.easymock.tests2.UsageConstraintsTest.equals":486,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":192,"org.easymock.tests.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":459,"org.easymock.tests.UsageThrowableTest.throwCheckedException":258,"org.easymock.tests.MockingTest.testStrictClassMocking":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":508,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":302,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests.ObjectMethodsTest.testHashCode":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":527,"org.easymock.tests2.NameTest.nameForNiceMock":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests2.DependencyTest.testInterfaceMocking":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":526,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":239,"org.easymock.tests2.DelegateToTest.testStubDelegate":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":501,"org.easymock.tests.UsageVarargTest.varargLongAccepted":273,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":451,"org.easymock.tests.UsageExpectAndReturnTest.floatType":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":246,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":184,"org.easymock.tests2.ConstraintsToStringTest.orToString":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":200,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":175,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":229,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":433,"org.easymock.tests2.NameTest.nameForMock":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":414,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":390,"org.easymock.tests2.MockedExceptionTest.testRealException":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":521,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":368,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.NameTest.nameForStrictMock":297,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":114,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":333,"org.easymock.tests.ErrorMessageTest.testGetters":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":363,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":233,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":331,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":187,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":230,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":179,"org.easymock.tests.UsageVarargTest.varargShortAccepted":272,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":517,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":392,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":211,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":448,"org.easymock.tests2.CaptureTest.testCapture":336,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests2.ConstraintsToStringTest.notToString":33,"org.easymock.tests.UsageStrictMockTest.testVerify":387,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":285,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":442,"org.easymock.tests.LimitationsTest.abstractClass":163,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":311,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":335}}]
