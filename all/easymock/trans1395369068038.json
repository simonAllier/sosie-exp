[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,12,26,27,28,29,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[21,33,5,6,22,23,7,8,24,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,61,62,9,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,25,11,12,13,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,14,26,137,15,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,27,172,173,16,174,175,28,29,176,17,18,177,30,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,31,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,32,251,19,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,2,270,271,272,273,20,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,57,13,96,97,109,110,14,26,148,149,150,151,152,201,223,32,254,255,256,257,258,259,260,261,262,263,300,264,265,266,267,268,269,2,270,271,272,273,20,274,275,276,277,278,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[66,301,302,149,191,196,223,225,226,227,228,303,243,244,245,304,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[21,22,23,7,8,24,34,44,46,25,11,12,13,104,105,135,136,14,26,137,15,138,139,306,140,141,142,143,144,145,146,147,307,160,161,165,27,172,174,175,28,29,17,18,30,195,198,203,204,205,31,229,230,234,235,238,242,246,247,248,249,250,32,251,19,252,253,259,264,2,274,276,285,286,288,289,290,291,292,294,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[308,309,310,311,312,313,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[257,261,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[95,106,107,108,153,320,155,158,158,159,159,169,321,178,179,322,180,182,183,185,323,186,195,200,203,204,205,324,325,326,327,328,207,208,209,210,219,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[329,330,331,332,33,5,6,7,8,333,334,25,11,12,13,335,14,26,15,138,173,16,17,18,336,206,211,32,19,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[337,320,180,338,339,184,186,340,204,341,219,342,281],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":257,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":56,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":171,"org.easymock.tests2.SerializationTest.testAllMockedMethod":283,"org.easymock.tests2.DelegateToTest.testReturnException":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":54,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.object":125,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":308,"org.easymock.tests2.DelegateToTest.testWrongClass":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":263,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":45,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":324,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":49,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":318,"org.easymock.tests2.CaptureTest.testCaptureNone":292,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":305,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":42,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":36,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":91,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.tests.InvocationTest.testEquals":307,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":48,"org.easymock.tests2.UsageConstraintsTest.any":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":55,"org.easymock.tests.UsageExpectAndThrowTest.longType":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.tests2.SerializationTest.testClass":281,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests2.AnswerTest.answer":31,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":327,"org.easymock.tests2.CaptureTest.testAnd":284,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":202,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":119,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.CaptureTest.testCaptureLast":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":262,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":331,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":277,"org.easymock.tests.UsageThrowableTest.throwError":140,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":102,"org.easymock.tests.UsageExpectAndThrowTest.floatType":117,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":216,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.UsageConstraintsTest.testNotNull":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests.UsageVarargTest.differentLength":39,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":89,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":268,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":267,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":325,"org.easymock.tests2.CaptureTest.testCaptureAll":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":110,"org.easymock.tests.MockNameTest.defaultName":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.testMatches":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":101,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests.UsageVarargTest.allKinds":44,"org.easymock.tests2.DependencyTest.testInterfaceMocking":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testStubDelegate":244,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.AnswerTest.stubAnswer":217,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":314,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":41,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":200,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":159,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":141,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":255,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests2.SerializationTest.test":282,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":231,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":303,"org.easymock.tests2.CaptureTest.testCaptureFirst":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":232,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":296,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":274,"org.easymock.tests2.UsageStrictMockTest.differentMethods":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageCallCountTest.tooManyCalls":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":88,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.testContains":266,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":227,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":298,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":299,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":38,"org.easymock.tests.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":311,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":230,"org.easymock.tests2.CaptureTest.testCaptureRightOne":294,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageRangeTest.combination":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":34,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":61,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockSupportTest.testVerify":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests.UsageVarargTest.varargShortAccepted":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":92,"org.easymock.tests2.UsageConstraintsTest.cmpTo":265,"org.easymock.tests.UsageVarargTest.varargCharAccepted":37,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.UsageTest.openCallCountByLastCall":28,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":29,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":3,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":322,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":328,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests2.CaptureTest.testCapture":319,"org.easymock.tests2.UsageConstraintsTest.constraints":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":203,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests.CapturesMatcherTest.test":59,"org.easymock.tests.UsageStrictMockTest.testVerify":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":235,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":35}}]
