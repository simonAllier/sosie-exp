[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[2,3,4,5,6,7,8,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,25,26,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[27],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,3,4,34,35,36,37,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[28,29,30,31,10,38,39,40,32,41,42,43,44,33,45,3,4,46,47,34,48,49,50,51,52,35,53,54,55,36,56,57,58,59,60,61,37,5,62,7,8,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"arg"}},{"position":"org.easymock.internal.Range:40","failures":[71,72,73,74,75,76,28,77,78,79,29,30,80,81,31,82,83,84,85,86,10,11,87,88,89,90,12,13,91,14,92,93,94,95,96,97,38,98,99,15,100,101,102,103,104,105,106,107,108,39,109,110,111,112,113,114,115,116,117,20,40,32,118,41,21,119,120,121,42,122,123,124,125,126,127,128,22,129,130,43,131,44,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,16,149,17,150,151,152,153,154,155,156,18,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,23,24,178,33,179,2,45,3,4,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,46,218,219,47,34,48,220,221,222,49,50,51,52,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,35,244,245,246,247,248,249,250,251,252,253,254,25,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,53,294,295,296,297,298,1,299,300,301,302,55,36,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,58,59,60,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,61,414,415,416,417,418,37,419,5,6,62,7,8,420,9,421,63,422,64,65,423,424,66,67,68,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,69,70,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[152,153,154,156,494,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[126,43,131,174,245,246,250,251,25,26,256,1,480,481,483],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[87],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[3,47,49,50,57,61,5,7,64,65,66,67,69,70,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,3,4,219,61,6,7,8,495,496,497,498,422,470,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[72,73,74,75,76,28,77,78,79,29,30,80,81,31,82,83,84,85,86,10,11,87,88,89,90,12,13,91,14,92,93,94,95,96,97,38,98,99,15,100,101,102,103,104,105,106,107,39,109,111,112,113,114,116,20,40,32,41,21,119,120,121,42,122,123,124,125,126,128,22,129,130,43,131,44,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,16,149,17,150,151,152,153,154,155,156,18,157,158,159,160,164,165,166,167,170,171,172,173,174,175,176,177,23,24,33,179,2,45,3,4,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,46,218,219,47,34,48,220,221,222,49,50,51,52,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,35,244,245,246,247,249,250,251,253,254,25,25,26,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,53,294,295,296,297,298,1,299,300,301,302,36,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,58,59,60,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,61,414,415,416,417,418,37,419,5,6,62,7,8,420,9,421,63,422,64,65,423,424,66,67,68,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,69,70,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[10,13,94,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[272,273,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[272,273,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[167],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[87],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[14],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[443,502,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[14],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[503,504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.RecordState:222","failures":[467,468,488,491],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[223,225,228,35,261,400,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:190","failures":[78,82,83,11,13,91,92,95,15,100,101,103,42,131,18,48,50,268,269,271,272,273,274,275,286,61,67,69],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[115,505,506,507,508,0,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[71,72,73,74,75,76,28,77,78,79,29,30,80,81,31,82,83,84,85,86,10,11,87,88,89,90,12,13,91,14,92,93,94,95,96,97,38,98,99,15,100,101,102,103,104,105,106,107,108,39,109,110,111,112,113,114,115,116,20,40,32,118,41,21,119,120,121,42,122,123,124,125,126,127,128,22,129,130,43,131,44,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,16,149,17,150,151,152,153,154,155,156,18,157,158,159,160,164,165,166,167,168,169,170,171,172,173,174,175,176,177,23,24,178,33,179,2,45,3,4,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,46,218,219,47,34,48,220,221,222,49,50,51,52,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,35,244,245,246,247,249,250,251,253,254,25,25,26,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,53,294,295,296,297,298,1,299,300,301,302,36,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,58,59,60,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,61,414,415,416,417,418,37,419,5,6,62,7,8,420,9,421,63,422,64,65,423,424,66,67,68,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,69,70,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[139,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":397,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":429,"org.easymock.tests.MockingTest.testPartialClassMocking":480,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":71,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":495,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests2.UsageTest.wrongArguments":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":308,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":346,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":312,"org.easymock.tests.UsageTest.moreThanOneArgument":422,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":473,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":168,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":137,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":355,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":304,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":418,"org.easymock.tests2.DependencyTest.testClassMockingSupport":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":467,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":55,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":205,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.MockingTest.testInterfaceMocking":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests2.UsageTest.niceToStrict":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":192,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":328,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":434,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":458,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":502,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":291,"org.easymock.tests2.EasyMockSupportClassTest.testAll":184,"org.easymock.tests.MockClassControlTest.testEquals":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":265,"org.easymock.tests.UsageVarargTest.allKinds":298,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":417,"org.easymock.samples.BasicClassMockTest.testPrintContent":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":236,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":262,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":421,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":428,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":454,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":59,"org.easymock.tests.UsageExpectAndReturnTest.longType":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":414,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":337,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":471,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.UsageCallCountTest.tooManyCalls":60,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":245,"org.easymock.tests.MockingTest.testClassMocking":478,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":348,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":243,"org.easymock.tests.UsageExpectAndReturnTest.object":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":293,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":281,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":463,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":194,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":167,"org.easymock.tests.UsageVarargTest.varargCharAccepted":292,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":411,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":203,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.UsageTest.resumeIfFailure":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":431,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":456,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":403,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests.UsageExpectAndThrowTest.object":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":362,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":165,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":330,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":181,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":54,"org.easymock.tests.UsageVerifyTest.twoReturns":70,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":198,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":352,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":253,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":317,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":322,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":466,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":19,"org.easymock.tests2.NameTest.nameForMocksControl":75,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":186,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":483,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":481,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":479,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":447,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":327,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":140,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":188,"org.easymock.tests.UsageExpectAndThrowTest.floatType":321,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":178,"org.easymock.tests.UsageVerifyTest.twoThrows":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":222,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":399,"org.easymock.tests.UsageVarargTest.differentLength":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":22,"org.easymock.tests.UsageTest.openCallCountByLastCall":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":310,"org.easymock.tests.UsageCallCountTest.tooFewCalls":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.NameTest.nameForNiceMock":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":199,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":117,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":465,"org.easymock.tests.UsageExpectAndReturnTest.floatType":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":152,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":448,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":248,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":189,"org.easymock.tests.GenericTest.testPackageScope":299,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":237,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":459,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":451,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":333,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":305,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests2.NameTest.nameForStrictMock":73,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":15,"org.easymock.tests.ErrorMessageTest.testGetters":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":193,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":42,"org.easymock.tests.UsageTest.wrongArguments":65,"org.easymock.tests2.MockBuilderTest.testWithConstructor":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":190,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":388,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":58,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.CaptureTest.testCaptureFromStub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":109,"org.easymock.tests.UsageTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":461,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":267,"org.easymock.tests.UsageStrictMockTest.testVerify":9,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":257,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":415,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":453,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289}}]
