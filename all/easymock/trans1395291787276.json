[{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:256","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,57,58,59,60,61,62,1,2,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82,83,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.RecordState:117","failures":[3,85,86,87,88,31,89,74],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[90],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[3,91,92,93,4,94,95,96,97,98,99,100,5,101,6,102,103,7,8,9,104,105,10,106,107,11,108,109,12,13,14,110,15,16,111,112,113,17,114,115,18,116,117,118,119,120,121,122,123,124,19,125,20,126,127,128,21,22,23,24,129,130,25,131,132,133,134,135,85,86,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,27,151,152,153,154,28,29,30,87,88,155,31,156,157,158,159,160,32,33,34,35,161,36,37,162,163,38,39,40,164,165,166,167,168,169,41,170,171,172,173,174,175,176,177,42,178,43,44,179,180,181,182,183,184,45,46,185,186,187,188,189,47,48,49,50,51,190,191,192,193,193,194,195,196,197,198,199,200,201,202,203,52,204,205,53,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,0,240,54,241,242,243,244,245,246,55,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,58,267,59,60,268,61,269,270,62,1,2,63,64,271,272,65,89,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,68,69,70,296,71,297,298,299,300,301,72,302,303,73,74,75,76,304,77,78,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[305,306,196,266,307,308],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[17,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[305,306,196,266,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[94,95,96,97,138,139,140,141,143,144,145,147,148,26,150,27,151,152,153,154,28,29,30,311,158,167,168,169,312,41,170,171,172,173,174,175,313,314,190,191,192,205,238,271,272,315,316,317,318,319,320,321,322,323,324,325,326,299,299,300,300,302,303,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[115,120,121,43,196,197,200,201,0,240,266,59,327,65,275],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[328,56,57],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[136,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:136","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.util.Set<java.lang.reflect.Method>) {\n    java.util.Set<org.easymock.internal.MethodSerializationWrapper>.add(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method));\n}","type":"CtForEachImpl"},"failures":[145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,91,92,93,4,94,95,96,97,98,99,100,5,101,6,102,103,7,8,9,104,105,10,106,107,11,108,109,12,13,14,15,16,111,112,113,17,114,115,18,116,117,118,119,120,121,122,123,124,19,125,20,126,127,128,21,22,23,24,129,130,25,131,132,133,134,135,329,330,331,332,85,86,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,27,151,153,154,29,87,88,155,31,156,157,158,159,160,32,33,34,35,161,36,37,162,163,38,39,40,164,165,166,167,168,41,170,171,172,174,175,176,177,42,178,43,44,179,180,181,182,183,184,333,45,46,185,186,187,188,189,47,48,49,50,51,190,191,192,194,195,196,197,198,199,200,201,202,52,204,205,53,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,334,335,231,232,233,234,238,239,0,240,54,336,241,242,243,244,245,246,55,247,337,338,339,340,341,342,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,57,264,265,266,58,267,59,60,268,343,61,269,270,62,1,2,63,64,271,272,65,318,344,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,68,69,70,296,71,297,298,299,299,300,300,301,72,302,303,73,74,75,76,304,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[345,346,347,348,349,350,351,352,353,354,355,94,356,357,95,358,359,360,361,362,363,364,365,366,96,367,368,369,370,371,97,372,373,140,144,374,145,167,375,376,377,378,379,380,381,299,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,382,91,92,93,383,4,384,385,386,387,353,354,355,94,356,357,95,358,359,360,361,362,363,364,365,366,96,367,368,369,370,371,97,372,373,98,99,100,5,388,101,6,102,103,7,8,389,9,104,105,10,106,107,11,108,109,12,13,14,110,15,16,111,112,113,17,114,115,18,116,117,118,119,120,121,122,123,124,19,125,20,126,127,128,21,22,23,24,129,130,25,131,132,133,134,135,390,329,330,331,332,85,391,86,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,27,151,152,392,153,393,309,154,28,29,30,394,311,87,395,396,88,155,31,156,157,158,159,397,398,399,400,401,160,402,403,404,405,406,407,32,33,34,35,161,36,37,162,163,38,39,40,164,408,409,165,166,167,375,410,168,377,169,312,378,411,41,170,171,379,172,380,173,174,381,175,176,177,42,178,43,44,179,412,413,414,415,416,180,417,418,419,420,421,422,181,182,183,184,333,423,424,425,426,427,313,428,429,45,46,430,431,432,185,186,187,188,189,47,48,49,50,51,433,434,314,190,191,435,192,436,437,438,80,81,82,194,195,196,197,198,199,200,201,202,203,52,204,439,440,441,442,443,205,444,53,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,334,335,231,232,233,234,235,236,237,238,239,0,240,54,336,241,242,243,244,245,246,55,247,445,337,446,338,339,447,340,448,449,341,83,342,248,249,250,450,251,252,253,254,255,256,257,258,451,452,453,454,455,456,457,84,458,459,460,461,462,463,464,310,328,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,259,260,261,262,263,481,482,483,484,485,56,57,486,487,488,489,264,265,266,58,267,59,60,268,343,61,269,270,62,1,2,63,64,490,271,272,315,316,65,317,318,319,320,321,322,323,324,325,491,492,326,493,494,89,66,273,274,67,344,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,68,69,70,296,71,297,298,299,299,300,300,301,72,302,303,73,74,75,76,304,77,495,78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[137,55,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[305,306,196,266,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[496,90],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[81,82,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[145,497,498,499,500,501,502,503,167,375,379,380,504],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[140,374,26,154,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":121,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":297,"org.easymock.tests2.DelegateToTest.testReturnException":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":244,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":319,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":8,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":68,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":324,"org.easymock.tests2.CaptureTest.testPrimitive":20,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageTest.moreThanOneArgument":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":201,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":51,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests2.DependencyTest.testClassMocking":408,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests2.UsageTest.strictResetToDefault":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests2.DependencyTest.testClassMockingSupport":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":56,"org.easymock.tests2.CaptureTest.testCapture1_2446744":126,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":446,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests.MockingTest.testInterfaceMocking":435,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":440,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":352,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":41,"org.easymock.tests2.MockBuilderTest.testCreateMock":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":489,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":274,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":10,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":23,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":450,"org.easymock.tests2.EasyMockSupportClassTest.testAll":94,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.MockNameTest.defaultName":429,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.BasicClassMockTest.testPrintContent":303,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":63,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":479,"org.easymock.tests2.UsageConstraintsTest.greaterThan":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":480,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":152,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":34,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":243,"org.easymock.tests2.CaptureTest.testCaptureFirst":25,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":35,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":174,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":236,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":428,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":237,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":139,"org.easymock.tests.MockingTest.testClassMocking":434,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":204,"org.easymock.tests.MockTypeTest.fromEasyMockClass":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":86,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":426,"org.easymock.tests.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":322,"org.easymock.tests2.EasyMockSupportTest.testVerify":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":488,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":473,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":487,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":424,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":400,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.CapturesMatcherTest.test":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":320,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":246,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":379,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":147,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":13,"org.easymock.tests2.DelegateToTest.testWrongClass":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":386,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":83,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":441,"org.easymock.tests2.CaptureTest.testCaptureNone":22,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":240,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":234,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":296,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":477,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.SerializationTest.testClass":145,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":391,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":172,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests2.CaptureTest.testCaptureLast":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":14,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.samples.ExampleTest.removeNonExistingDocument":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":475,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":175,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":410,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":439,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":346,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":64,"org.easymock.tests2.UsageTest.defaultResetToNice":119,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":3,"org.easymock.tests2.UsageConstraintsTest.equals":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":70,"org.easymock.tests.UsageCallCountTest.tooFewCalls":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests.MockingTest.testStrictClassMocking":433,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":140,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":142,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":31,"org.easymock.tests.ObjectMethodsTest.testHashCode":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":167,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":109,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":384,"org.easymock.tests2.SerializationTest.test":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":474,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":387,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":385,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":476,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":197,"org.easymock.tests2.MockBuilderTest.testWithConstructor":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":478,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":235,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.constraints":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":49,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":50,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249}}]
