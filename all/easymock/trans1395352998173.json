[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,0,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,3,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,5,450,6,7,8,9,10,11,451,12,14,15,452,16,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[475,52,53,56,57,60,61,104,107,146,210,303,309,310,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[321,337,476,373,477,478,479,480,481],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[418,428],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[18,18,19,19,22,32,33,66,69,74,75,76,78,147,177,178,179,206,212,213,214,215,254,320,337,339,343,346,356,362,365,366,367,369,370,371,372,374,375,376,377,378,379,380,382,383,417,418,420,421,422,423,425,428,429,430,431,433,473],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[328,331,332],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[22,369,371,372,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[18,19,320,321,483,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,484,485,476,373,486,379,383,487,488,489,490,491,492,493,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[18,18,19,19,22,32,33,66,69,74,75,76,78,147,177,178,179,206,212,320,337,339,343,346,356,362,365,496,366,367,369,370,371,372,374,375,482,376,377,378,379,380,382,383,417,418,420,421,422,423,425,428,429,430,431,497,498,499,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,37,38,39,41,42,44,45,46,47,48,51,52,53,55,65,75,76,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,108,109,110,117,119,120,123,136,137,138,139,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,168,169,170,171,172,177,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,208,209,212,256,257,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,298,299,301,302,304,305,308,311,314,315,318,319,320,323,324,325,326,327,330,331,332,333,334,335,336,337,338,339,343,346,356,362,365,369,370,371,372,377,378,379,380,381,382,383,384,385,387,388,389,390,391,393,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,419,420,421,422,425,428,430,439,5,450,6,7,9,10,11,451,12,14,16,458,466,467,470,471,472,473,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[17,20,21,22,23,24,25,26,27,28,29,31,32,33,37,38,39,41,42,43,44,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,75,76,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,117,118,119,120,121,122,123,124,140,142,143,145,147,152,154,155,156,157,158,159,167,169,170,171,172,174,175,177,178,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,208,209,210,255,256,257,258,259,260,261,262,264,265,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,330,331,332,337,338,339,343,346,356,362,366,369,371,372,375,377,378,379,380,381,382,383,384,385,3,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,425,429,430,431,439,5,450,6,7,8,9,10,11,451,12,14,452,16,458,466,467,468,470,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:972","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[107,108,317,318,428],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[34,35,36,52,54,59,122,143,152,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,222,255,257,258,259,260,261,262,281,300,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[244,247],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[305,406,421],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":391,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":229,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":149,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":213,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageTest.wrongArguments":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":138,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests2.UsageConstraintsTest.testNull":394,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":420,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":291,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":123,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":481,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":158,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":132,"org.easymock.tests2.DependencyTest.testClassMocking":295,"org.easymock.tests2.AnswerTest.answer":327,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests2.DelegateToTest.testDelegate":470,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests.LimitationsTest.mockFinalMethod":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":163,"org.easymock.tests2.DependencyTest.testClassMockingSupport":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":63,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":126,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":68,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":127,"org.easymock.tests.MockingTest.testInterfaceMocking":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests2.UsageTest.niceToStrict":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":369,"org.easymock.tests2.MockBuilderTest.testCreateMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":167,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":136,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":492,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":404,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":403,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":40,"org.easymock.tests.MockClassControlTest.testEquals":217,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":497,"org.easymock.tests2.CaptureTest.testCaptureAll":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests.MockNameTest.defaultName":49,"org.easymock.tests2.UsageConstraintsTest.testMatches":405,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.samples.ExampleTest.voteForRemovals":29,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":162,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests2.UsageConstraintsTest.greaterThan":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":274,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":431,"org.easymock.samples.ExampleTest.voteForRemoval":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":248,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":385,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":423,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":148,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":89,"org.easymock.tests2.CaptureTest.testCapture2_2446744":452,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":386,"org.easymock.tests2.UsageTest.moreThanOneArgument":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":375,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":47,"org.easymock.tests.GenericTest.testBridgedEquals":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":174,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":159,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":282,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":482,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":412,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":175,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.MockingTest.testNiceClassMocking":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":378,"org.easymock.tests.MockingTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests2.UsageConstraintsTest.testContains":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":168,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":473,"org.easymock.tests2.UsageConstraintsTest.testFind":393,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":279,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":478,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":42,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":114,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":37,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":216,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":41,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastCall":306,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":34,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":250,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":429,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":164,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":151,"org.easymock.tests2.StubTest.stubWithReturnValue":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":339,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":235,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":241,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":328,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":116,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":410,"org.easymock.tests2.DelegateToTest.testWrongClass":468,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":209,"org.easymock.tests.UsageStrictMockTest.range":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":377,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":371,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":134,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":137,"org.easymock.tests2.CaptureTest.testCaptureNone":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":113,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":46,"org.easymock.tests2.ThreadingTest.testThreadSafe":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":239,"org.easymock.tests2.UsageConstraintsTest.any":400,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":131,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":166,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":130,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":439,"org.easymock.tests2.SerializationTest.testClass":337,"org.easymock.tests.LimitationsTest.mockNativeMethod":206,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests2.NameTest.nameForMocksControl":326,"org.easymock.tests2.MockedExceptionTest.testMockedException":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":372,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":422,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":383,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":411,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":415,"org.easymock.samples.ExampleTest.removeNonExistingDocument":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":376,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":330,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":430,"org.easymock.tests.LimitationsTest.privateConstructor":205,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":414,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":471,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":308,"org.easymock.samples.ExampleTest.voteAgainstRemovals":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":43,"org.easymock.tests2.CallbackTest.callback":299,"org.easymock.tests2.UsageConstraintsTest.equals":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":121,"org.easymock.tests.UsageCallCountTest.tooFewCalls":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":139,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.MockingTest.testStrictClassMocking":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":381,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":332,"org.easymock.tests.ObjectMethodsTest.testHashCode":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":387,"org.easymock.tests2.NameTest.nameForNiceMock":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":479,"org.easymock.samples.ExampleTest.addDocument":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":331,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":105,"org.easymock.tests.UsageVarargTest.varargLongAccepted":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests.UsageExpectAndReturnTest.floatType":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":320,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":408,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":389,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.SerializationTest.test":338,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testSame":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":79,"org.easymock.tests2.NameTest.nameForMock":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":276,"org.easymock.tests2.MockedExceptionTest.testRealException":474,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":232,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":315,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests2.NameTest.nameForStrictMock":324,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":447,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":409,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":366,"org.easymock.tests2.UsageStrictMockTest.range":317,"org.easymock.tests2.UsageConstraintsTest.lessThan":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":283,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":396,"org.easymock.tests.UsageRangeTest.combination":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":418,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":220,"org.easymock.tests.UsageVarargTest.varargShortAccepted":44,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":173,"org.easymock.tests2.UsageConstraintsTest.cmpTo":401,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":125,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":96,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests2.UsageConstraintsTest.constraints":390,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":31,"org.easymock.tests.UsageStrictMockTest.testVerify":110,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":160,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.LimitationsTest.abstractClass":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":157,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":288}}]
