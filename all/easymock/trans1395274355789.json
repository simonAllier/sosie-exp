[{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[0,1,2],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,0,314,315,316,317,318,319,320,321,3,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,338,4,339,340,5,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[12,37,43,49,53,55,105,109,118,124,130,134,136,174,199,203,265,274,3,336,4,346,361,363,364,365,366,369,387,476,482,483,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,84,85,86,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,156,157,158,159,160,161,164,166,167,168,169,170,171,172,173,174,175,176,177,179,203,209,211,212,213,214,216,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,291,292,293,295,298,299,301,304,305,306,307,308,309,310,311,312,0,316,317,318,319,3,322,323,324,326,327,328,329,330,331,332,333,1,334,335,336,337,338,4,339,340,5,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,375,382,383,384,385,386,387,388,389,390,391,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,422,425,435,441,449,456,457,458,459,460,461,462,463,464,465,466,467,468,469,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[27,376,450],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[489],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[492,388,389,390],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[12,13,14,15,17,18,493,494,495,496,497,498,499,34,64,97,98,99,100,101,102,106,107,109,115,116,117,222,223,224,226,227,228,229,500,501,502,503,504,505,506,507,508,509,510,272,274,275,277,281,282,285,307,308,318,319,324,4,375,396,400,403,457,458,459,460,461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,290,291,292,293,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,0,314,315,316,317,318,319,320,321,3,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,338,4,339,340,5,341,342,343,344,345,346,533,534,535,536,537,538,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,539,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[540],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[23,26,27,28,29,30,79,216,219,220,244,245,246,285,288,293,295,299,301,307,316,319,321,375,376,397,400,402,408,409,410,411,449,450,467,468,472,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[541,542],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[11,12,14,15,16,17,18,19,57,68,69,73,75,78,105,109,115,116,117,140,223,224,226,227,237,238,259,272,274,275,278,279,281,282,284,327,328,333,1,344,345,347,387,408,409,410,411,458,460,461],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[97,100,106,107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[255,257,370,371,372,373,374,375,376,377,378,379,380,381,444,445,446,447,448,449,450,451,452,453,454,455],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,80,81,85,86,88,92,93,94,95,101,104,105,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,156,157,158,159,160,161,164,167,169,170,172,175,177,211,212,213,214,221,222,223,224,225,226,227,228,229,230,231,243,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,291,292,293,295,299,301,304,305,306,307,308,309,310,311,0,316,318,3,322,323,324,326,327,328,329,330,331,333,1,334,335,336,337,338,4,339,340,5,341,343,344,345,346,347,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,375,383,384,385,387,388,389,390,391,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,422,425,435,441,449,456,457,458,459,460,461,462,463,464,466,467,468,469,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[113,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,0,314,315,316,317,318,319,320,321,3,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,338,4,339,340,5,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[492,388,389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[98,259,382,383,384,385,386,387],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[9,118,119,126,133,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[69,84,85,86,88,152,153,154,155,164,243,249,256,266,266,267,267,268,269,285,287,291,292,293,295,298,299,301,306,307,309,310,311,312,0,316,317,318,319,359,388,390,391,422,425,435,441,466,467,468,469,472,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[13,493,495,223,501,508],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,80,110,111,114,166,187,191,192,201,206,224,230,231,235,250,251,252,253,254,266,266,267,267,3,322,326,327,328,329,334,336,337,4,339,340,344,345,346,458,464,486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[365,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,80,110,111,114,166,187,191,192,201,206,224,230,231,235,250,251,252,253,254,266,266,267,267,3,322,326,327,328,329,334,336,337,4,339,340,344,345,346,458,464,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[81,112,156,157,158,159,160,161,357,358,359,360,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":324,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.UsageTest.argumentsOrdered":282,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":157,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":244,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":305,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":532,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":275,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":28,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":90,"org.easymock.tests2.UsageConstraintsTest.testNull":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":309,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":403,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":249,"org.easymock.tests2.CaptureTest.testPrimitive":478,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":8,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":236,"org.easymock.tests.UsageVarargTest.varargIntAccepted":59,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":516,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":449,"org.easymock.tests.ReplayStateInvalidUsageTest.times":174,"org.easymock.tests2.DependencyTest.testClassMocking":302,"org.easymock.tests2.AnswerTest.answer":347,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":356,"org.easymock.tests2.CaptureTest.testAnd":475,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":25,"org.easymock.tests2.UsageTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.DelegateToTest.testDelegate":387,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":240,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":515,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":52,"org.easymock.tests.LimitationsTest.mockFinalMethod":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":150,"org.easymock.tests2.DependencyTest.testClassMockingSupport":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":479,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":354,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":168,"org.easymock.tests.UsageThrowableTest.throwError":138,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":27,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":241,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":519,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":169,"org.easymock.tests.MockingTest.testInterfaceMocking":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":38,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":220,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests2.ThreadingTest.testChangeDefault":539,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":291,"org.easymock.tests2.MockBuilderTest.testCreateMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":46,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":335,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":484,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":60,"org.easymock.tests2.EasyMockSupportClassTest.testAll":422,"org.easymock.tests.MockClassControlTest.testEquals":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":54,"org.easymock.tests2.CaptureTest.testCaptureAll":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":355,"org.easymock.tests.MockNameTest.defaultName":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":337,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":9,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":456,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":185,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":319,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":520,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":186,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":512,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":396,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":488,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":397,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":487,"org.easymock.tests2.UsageTest.moreThanOneArgument":274,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":205,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":67,"org.easymock.tests.GenericTest.testBridgedEquals":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":77,"org.easymock.tests.UsageExpectAndReturnTest.longType":121,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":55,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":6,"org.easymock.tests.UsageCallCountTest.tooManyCalls":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":494,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":467,"org.easymock.tests.MockingTest.testNiceClassMocking":91,"org.easymock.tests.MockingTest.testClassMocking":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":71,"org.easymock.tests2.UsageConstraintsTest.testContains":334,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":359,"org.easymock.tests2.UsageConstraintsTest.testFind":326,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests.MockTypeTest.fromEasyMockClass":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":540,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":402,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":62,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":218,"org.easymock.tests.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":20,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":98,"org.easymock.tests.MockClassControlTest.testHashCode":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":503,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":353,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":465,"org.easymock.tests.UsageVarargTest.varargCharAccepted":61,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":178,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":490,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":405,"org.easymock.tests.DefaultClassInstantiatorTest.object":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":34,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":216,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":518,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":43,"org.easymock.tests.CapturesMatcherTest.test":541,"org.easymock.tests.ReplayStateInvalidCallsTest.times":524,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":525,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":245,"org.easymock.tests2.UsageTest.resumeIfFailure":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":159,"org.easymock.tests2.StubTest.stubWithReturnValue":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":390,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":271,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":49,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.UsageExpectAndThrowTest.object":47,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":22,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":5,"org.easymock.tests2.DelegateToTest.testWrongClass":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":522,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.tests.UsageStrictMockTest.range":226,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":417,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":514,"org.easymock.tests2.CaptureTest.testCaptureNone":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":234,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":534,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests.UsageVarargTest.varargByteAccepted":66,"org.easymock.tests2.ThreadingTest.testThreadSafe":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":75,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":219,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":477,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":510,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageConstraintsTest.any":333,"org.easymock.tests2.StubTest.stub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":172,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.SerializationTest.testClass":388,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":375,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":530,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":462,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":535,"org.easymock.tests2.NameTest.nameForMocksControl":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.MockedExceptionTest.testMockedException":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":41,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":295,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":311,"org.easymock.tests2.CaptureTest.testCaptureLast":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":529,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":473,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":341,"org.easymock.tests.MockingTest.testTwoMocks":84,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":526,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":45,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":345,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":538,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":170,"org.easymock.tests.UsageStrictMockTest.differentMethods":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":537,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":181,"org.easymock.tests2.ConstraintsToStringTest.andToString":507,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":366,"org.easymock.tests2.MockBuilderTest.testCreateMockString":301,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":39,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":393,"org.easymock.tests.UsageVerifyTest.twoThrows":116,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":435,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":318,"org.easymock.tests.LimitationsTest.privateConstructor":163,"org.easymock.tests2.UsageConstraintsTest.testNotNull":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":357,"org.easymock.tests2.UsageTest.defaultResetToNice":280,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.UsageVarargTest.differentLength":63,"org.easymock.tests2.CallbackTest.callback":369,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":314,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":536,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":472,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":471,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":352,"org.easymock.tests.ObjectMethodsTest.testHashCode":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":528,"org.easymock.tests2.NameTest.nameForNiceMock":410,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":368,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":523,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.DelegateToTest.testStubDelegate":384,"org.easymock.tests2.AnswerTest.stubAnswer":351,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":224,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":296,"org.easymock.tests.UsageVarargTest.varargLongAccepted":65,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":391,"org.easymock.tests2.ConstraintsToStringTest.orToString":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests.UsageThrowableTest.noUpperLimit":139,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":480,"org.easymock.tests2.SerializationTest.test":389,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":119,"org.easymock.tests2.UsageConstraintsTest.testSame":328,"org.easymock.samples.SupportTest.addDocument":270,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":470,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":513,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":511,"org.easymock.tests2.NameTest.nameForMock":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.UsageStrictMockTest.differentMethods":461,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":51,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests2.NameTest.nameForStrictMock":409,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":416,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":517,"org.easymock.tests2.UsageConstraintsTest.lessThan":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":195,"org.easymock.tests2.CaptureTest.testCaptureRightOne":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":533,"org.easymock.tests2.UsageConstraintsTest.testOr":329,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":307,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":184,"org.easymock.tests.UsageVarargTest.varargShortAccepted":64,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":76,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":531,"org.easymock.tests2.UsageConstraintsTest.cmpTo":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":190,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CaptureTest.testCaptureFromStub":486,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":288,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":527,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":223,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests2.CaptureTest.testCapture":542,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.UsageConstraintsTest.constraints":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests2.ConstraintsToStringTest.notToString":502,"org.easymock.tests.UsageStrictMockTest.testVerify":229,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":255,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.LimitationsTest.abstractClass":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":400,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":58}}]
