[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:136","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.util.Set<java.lang.reflect.Method>) {\n    java.util.Set<org.easymock.internal.MethodSerializationWrapper>.add(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method));\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.MocksControl:189","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[71,72,73,74,75,16,76,77,78,79,80,81,82,83,84,85,86,22,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[95,96,97,98,99,100,101,17,18,19,20,102,103,104,105,106,107,21,15,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,26,139,140,141,142,143,144,145,29,30,31,146,147,148,149,150,151,152,36,153,154,155,156,37,157,38,0,1,2,3,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,48,49,50,51,187,52,53,54,55,56,57,58,188,189,190,8,9,10,11,12,13,191,192,193,194,195,196,197,63,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[274,275,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.ConstructorArgs:50","failures":[95,99,101,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,156,309,310,311,312,313,314,315,316,317],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[95,287,297,318,153,319,156,309,157,320,313,321,42,316,317,322,323,324],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[129,325],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[95,326,327,328,329,330,156,309,312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[331,332,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[95,96,334,98,99,335,336,100,101,284,287,297,303,16,102,103,337,338,104,106,107,21,15,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,22,130,339,133,135,138,25,26,27,144,145,29,340,341,31,146,34,147,342,148,149,150,151,152,343,153,344,155,156,345,157,39,40,41,2,159,346,347,43,348,44,45,349,46,47,350,351,352,161,162,164,353,167,168,169,170,354,355,171,356,316,316,317,317,172,174,175,177,322,179,180,181,182,183,185,186,357,358,187,53,188,189,190,191,192,193,194,324,359,197,62,63,200,201,202,203,360,361,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,64,224,362,363,69,364,226,227,228,229,230,365,366,251,252,253,367,255,368,369,370,371,372,373,256,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"returnType","throwableClass":"returnType"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[99,101,280,306,307,375,376,377,378,309,333,310,311,312,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[379,140,342,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[96,97,334,335,336,284,16,102,103,337,338,104,105,106,107,21,15,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,380,126,127,128,129,22,130,339,131,132,133,134,135,136,23,137,138,24,25,26,139,27,144,145,28,29,30,340,341,32,33,146,34,147,342,148,149,150,151,152,154,155,0,1,2,3,158,159,381,160,346,347,43,348,44,45,349,47,350,351,352,382,161,162,163,164,353,165,166,167,168,169,170,354,355,171,383,384,93,385,356,172,173,174,175,176,177,178,94,179,180,181,182,183,386,387,185,186,7,187,52,53,188,189,388,389,390,8,9,10,11,12,13,194,195,391,59,196,60,197,61,62,63,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,392,393,64,224,66,362,363,67,68,69,225,226,227,228,229,230,394,395,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,14,396,253,367,254,255,368,369,370,371,372,373,256,257,260,261,262,263,397,398,70,264,265,266,267,268,399,269,270,271,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[29,400],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[95,96,334,98,99,335,336,100,101,284,287,297,303,16,17,18,19,20,102,103,337,338,104,105,106,107,21,15,108,109,110,111,112,113,401,114,115,116,117,118,119,120,121,122,123,124,125,380,126,127,128,129,22,130,339,131,132,133,402,403,134,135,136,23,138,24,25,26,139,27,144,145,28,29,30,340,341,31,32,33,146,34,147,342,148,149,150,151,35,152,36,343,153,344,154,155,156,37,345,157,38,39,40,321,41,42,0,1,2,3,404,158,159,381,405,160,346,347,43,348,44,45,349,46,47,350,351,352,161,162,163,164,353,165,166,167,168,169,170,354,355,171,383,356,316,316,317,317,172,173,174,175,177,178,322,406,407,408,179,180,181,182,183,4,5,6,185,186,7,48,49,50,51,357,358,187,52,53,54,55,56,57,58,188,189,388,409,389,390,410,190,411,8,9,10,11,12,13,412,191,192,193,194,324,359,59,60,197,61,62,63,198,200,201,202,203,360,361,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,392,393,64,224,65,66,362,363,67,68,69,364,226,227,228,229,230,413,365,366,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,14,396,253,367,254,255,368,369,370,371,372,373,256,257,258,260,70,264,273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:173","failures":[159],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[414,415,416,417,60,65],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5,6,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[419,420,421],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[95,96,97,422],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[423,424,425],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":76,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":94,"org.easymock.tests2.DelegateToTest.testReturnException":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":287,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":251,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":50,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":350,"org.easymock.tests2.CaptureTest.testPrimitive":164,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":253,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":181,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":20,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":18,"org.easymock.tests.UsageThrowableTest.throwError":367,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":305,"org.easymock.samples.PartialClassMockTest.testGetArea":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":240,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":302,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.MockClassControlTest.testEquals":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":284,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":195,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":248,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":56,"org.easymock.tests2.UsageConstraintsTest.testMatches":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":182,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":371,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":77,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":404,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":338,"org.easymock.tests2.CaptureTest.testCapture2_2446744":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":397,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":54,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":346,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":249,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":279,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.UsageCallCountTest.tooManyCalls":398,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":370,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.testContains":116,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":259,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":47,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":72,"org.easymock.tests2.EasyMockSupportTest.testVerify":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":294,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":423,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":17,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":332,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":85,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":71,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":4,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":303,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":97,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":360,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":415,"org.easymock.samples.SupportTest.voteForRemovals":356,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":243,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":422,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":361,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":402,"org.easymock.tests.UsageExpectAndThrowTest.object":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":381,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":316,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":49,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":416,"org.easymock.tests2.CaptureTest.testCaptureNone":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":420,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":263,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":396,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests.LimitationsTest.mockNativeMethod":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":286,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":235,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.CaptureTest.testCaptureLast":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":358,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":412,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":239,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":73,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":337,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":288,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":134,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":297,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":307,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":372,"org.easymock.tests2.UsageTest.defaultResetToNice":31,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":83,"org.easymock.tests2.CallbackTest.callback":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":51,"org.easymock.tests.UsageThrowableTest.throwCheckedException":369,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":336,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":136,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":299,"org.easymock.tests2.DelegateToTest.testStubDelegate":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":320,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":156,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":317,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":79,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":165,"org.easymock.tests2.SerializationTest.test":96,"org.easymock.tests2.UsageConstraintsTest.testSame":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.samples.SupportTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":289,"org.easymock.tests.GenericTest.testPackageScope":194,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":78,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":245,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":252,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":345,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":347,"org.easymock.tests2.CaptureTest.testCaptureRightOne":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":293,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":419,"org.easymock.tests2.UsageConstraintsTest.testOr":111,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":342,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.MockBuilderTest.testWithConstructor":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":290,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":403,"org.easymock.tests2.CompareToTest.testLessThan":325,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":341,"org.easymock.tests2.CaptureTest.testCaptureFromStub":354,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":262,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":93,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":229,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":349}}]
