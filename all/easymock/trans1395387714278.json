[{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,4,5,6,7,9,10,11,24,25,26,27,12,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,28,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[74,75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[5,6,10,27,21],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[85,86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[10,11,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[88,89,0,90,91,92,93,94,95,96,4,5,6,7,9,10,11,12,97,98,99,100,101,102,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[43,54,59,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[104,69,105,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests2.NameTest.nameForNiceMock":18,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":104,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":51,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.tests2.ConstraintsToStringTest.orToString":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":52,"org.easymock.tests2.CaptureTest.testPrimitive":80,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":102,"org.easymock.tests2.NameTest.nameForMock":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":47,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":30,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":45,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":95,"org.easymock.tests2.NameTest.nameForMocksControl":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":89,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.ErrorMessageTest.testGetters":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":66,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests2.ConstraintsToStringTest.andToString":101,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.ResultTest.createThrowResultToString":87,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests.ResultTest.createReturnResultToString":86,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":32,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":78,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.ResultTest.createDelegateResultToString":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.UsageTest.defaultResetToNice":82,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":44,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests2.ConstraintsToStringTest.notToString":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":75,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":27}}]
