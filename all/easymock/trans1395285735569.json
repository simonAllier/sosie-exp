[{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,4,154,155,156,157,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[68,69,196,197,198,199,200,100,201,202,203,204,205,206,207,208,209,210,211,123,212,213,214,215,216,217],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[218,219,220,221,222,223,224],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[225,226,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[41,228,144],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[229],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[78,80,87,230,105,184,186,106,231,112,192],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[232,229],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[7,235,236,237,238,239,8,9,240,10,241,242,243,244,11,245,246,247,248,12,249,250,251,252,159,253,254,255,256,257,258,259,260,21,160,161,261,22,162,262,263,23,24,264,25,265,266,267,268,26,269,270,271,272,27,273,274,275,276,277,278,279,28,280,281,282,283,284,30,31,285,32,33,34,35,36,37,38,39,163,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,43,44,45,46,301,302,303,58,59,60,61,304,164,165,166,167,168,305,62,63,64,169,170,171,172,173,174,175,306,307,308,65,176,176,177,177,71,72,73,74,75,77,309,310,78,79,81,311,84,85,86,87,178,312,88,89,90,91,92,93,94,95,0,1,313,314,179,180,315,316,99,100,101,102,103,104,181,182,230,105,183,184,185,186,106,107,108,109,187,110,188,189,111,190,191,112,113,114,116,192,193,194,317,117,318,118,319,320,119,120,321,5,6,121,122,123,124,125,126,127,128,129,130,322,131,132,133,134,136,137,139,140,323,142,324,325,233,326,146,327,328,147,148,149,150,151,152,153,329,4,154,155,330,331,332,156,333,157,334,335,158,336,337],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[7,238,239,8,9,240,10,241,242,243,244,11,245,246,247,248,12,249,250,251,252,13,159,15,253,254,16,260,338,17,18,19,20,160,161,261,22,162,262,263,23,24,264,25,265,266,267,268,26,269,270,271,272,27,273,274,275,276,29,281,283,284,31,285,32,33,34,35,36,37,38,39,163,297,298,299,300,43,44,45,46,47,48,49,50,51,52,53,54,55,56,304,305,62,63,64,169,170,171,172,173,174,175,65,66,67,68,69,70,71,72,73,74,75,76,77,309,310,78,79,80,81,82,83,84,85,86,87,88,89,91,92,94,314,179,96,180,97,315,316,98,99,100,102,103,104,181,182,230,105,183,184,185,186,106,107,108,109,187,110,188,189,111,190,191,112,113,114,115,116,192,193,194,117,318,118,320,119,120,321,6,121,122,123,124,126,127,128,129,131,132,133,134,135,136,137,138,139,140,323,142,143,324,325,146,327,328,147,148,149,150,151,152,153,4,154,155,156,157,158,336,337],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[14,253,339,340,40,41,42,304,62,63,315,141,144,145],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[226,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[343,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[161,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[344,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[7,236,238,239,8,9,240,10,241,242,243,244,11,245,246,247,248,12,249,250,251,252,347,348,349,350,351,352,353,14,159,15,253,254,16,255,256,257,258,259,260,354,355,356,357,358,359,21,160,161,261,22,162,262,263,23,24,264,25,265,266,267,268,26,269,270,271,272,27,273,274,275,276,277,278,279,28,280,281,282,283,284,360,361,362,363,364,365,30,31,285,32,33,34,35,36,37,38,39,163,286,287,288,289,290,291,292,293,294,295,296,297,298,340,40,299,300,41,42,43,44,45,46,366,367,368,56,301,302,369,58,59,60,61,304,164,165,166,167,168,305,62,63,64,169,170,171,172,173,174,175,306,307,308,65,176,176,177,177,71,72,73,74,75,77,309,310,78,79,80,81,311,82,83,84,85,86,87,178,312,88,89,90,91,92,93,94,95,370,0,1,313,371,314,179,372,180,97,315,316,98,99,373,374,375,100,201,101,102,103,104,181,182,230,105,183,184,185,186,106,107,231,108,109,187,110,188,189,111,190,191,112,113,114,115,116,192,193,194,317,117,318,118,319,320,119,120,321,5,6,121,122,123,212,124,125,126,127,128,129,130,322,131,132,133,134,136,137,139,140,323,141,142,143,324,325,233,144,145,326,146,327,328,147,148,149,150,151,152,153,376,329,377,4,154,155,330,378,331,332,156,333,157,334,335,158,336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[347,348,349,350,351,352,353,14,159,15,253,254,16,379,260,338,380,19,20,359,21,281,360,361,362,363,364,365,297,298,340,40,41,42,43,381,369,382,383,61,384,304,305,62,63,310,90,370,313,371,385,386,387,388,372,180,97,315,316,98,100,201,230,111,123,212,125,127,129,130,131,132,139,323,141,142,143,144,145,326,146,148,149,152,153,376,329,377,154,155,389,330,378],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[107,188,194,390],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[391],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[392,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":297,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":143,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":69,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":141,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":368,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests2.UsageConstraintsTest.testNull":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":92,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests.UsageTest.moreThanOneArgument":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":255,"org.easymock.tests.UsageVarargTest.varargIntAccepted":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":231,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":259,"org.easymock.tests2.DelegateToTest.testDelegate":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.UsageThrowableTest.throwError":32,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.samples.PartialClassMockTest.testGetArea":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":362,"org.easymock.tests2.ThreadingTest.testChangeDefault":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":110,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":342,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests.UsageVarargTest.allKinds":56,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":305,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":38,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":313,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":351,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":312,"org.easymock.tests2.UsageTest.moreThanOneArgument":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":55,"org.easymock.tests.GenericTest.testBridgedEquals":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":19,"org.easymock.tests.UsageExpectAndReturnTest.longType":9,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":225,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":3,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":156,"org.easymock.tests2.UsageConstraintsTest.testFind":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":285,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndReturnTest.object":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":220,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":163,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":235,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":218,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":226,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":50,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":294,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.CapturesMatcherTest.test":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":341,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":364,"org.easymock.tests2.UsageTest.resumeIfFailure":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":301,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":270,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":392,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":302,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.UsageExpectAndThrowTest.object":26,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":253,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":367,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests.UsageUnorderedTest.message":304,"org.easymock.tests.UsageVerifyTest.twoReturns":63,"org.easymock.tests.UsageVarargTest.varargByteAccepted":54,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":18,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":361,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests2.UsageConstraintsTest.any":108,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":198,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.NameTest.nameForMocksControl":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":94,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests.UsageStrictMockTest.differentMethods":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":6,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.UsageExpectAndThrowTest.floatType":23,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests.UsageVerifyTest.twoThrows":62,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests2.UsageTest.defaultResetToNice":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":12,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":197,"org.easymock.tests.UsageVarargTest.differentLength":381,"org.easymock.tests2.CallbackTest.callback":310,"org.easymock.tests2.UsageConstraintsTest.equals":228,"org.easymock.tests.UsageTest.openCallCountByLastCall":299,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests.UsageCallCountTest.tooFewCalls":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.UsageThrowableTest.throwCheckedException":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":337,"org.easymock.tests2.CompareToTest.testGreateOrEqual":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":222,"org.easymock.tests2.NameTest.nameForNiceMock":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":221,"org.easymock.samples.ExampleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":318,"org.easymock.tests2.AnswerTest.stubAnswer":336,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests.UsageVarargTest.varargLongAccepted":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.floatType":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests.UsageThrowableTest.noUpperLimit":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":82,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":303,"org.easymock.tests.GenericTest.testPackageScope":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests2.NameTest.nameForMock":385,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":352,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.NameTest.nameForStrictMock":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":315,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests2.UsageConstraintsTest.testOr":186,"org.easymock.tests.UsageRangeTest.combination":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":52,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":178,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.samples.ExampleTest.addAndChangeDocument":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":68,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":48}}]
