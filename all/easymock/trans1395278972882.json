[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[81,24,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[4,4,5,5,6,7,8,83,9,11,12,84,13,14,15,16,85,17,18,20,21,22,23,24,25,26,27,86,87,28,29,30,31,88,89,90,91,32,92,93,94,33,34,35,36,37,38,95,96,97,42,98,99,43,100,101,102,103,104,105,106,107,108,44,109,110,111,112,113,45,114,115,46,47,116,117,48,49,50,51,118,52,53,54,119,120,121,122,123,124,125,126,55,56,57,127,128,58,129,130,131,132,133,134,135,136,59,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[138,61,139,140,141,142,143,81,144,145,18,146,66,60,82,67,68,147,148,149,150,151,152,153,154,155,69,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,73,74,75,173,174,175,77,78,176,177,178,80,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[123,180,181],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[182,183,184,185,186,187,188,8,189,190,191,192,193,194,195,138,61,196,139,0,140,141,62,197,198,199,142,200,201,143,81,202,144,1,203,204,205,2,145,206,207,208,209,210,9,13,14,63,211,64,212,213,214,215,216,217,65,218,21,219,23,24,25,27,28,30,220,221,222,90,91,32,223,224,146,60,82,225,147,226,148,227,228,229,149,230,34,35,37,38,231,232,233,234,235,155,236,156,46,237,47,238,239,240,241,157,242,243,244,158,159,245,160,246,247,161,248,249,250,251,252,253,254,255,256,162,257,258,259,163,164,260,165,261,262,166,263,264,265,266,267,49,50,51,268,269,270,271,272,167,273,168,169,170,171,172,54,274,275,276,277,278,279,173,280,55,56,281,174,282,283,284,285,286,287,288,289,290,291,58,59,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,175,77,78,310,311,176,312,313,314,315,316,317,178,318,179,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[193,194,195,138,61,196,139,0,140,141,62,197,320,198,199,142,200,201,143,81,202,144,1,203,204,321,205,2,145,206,207,63,211,64,212,322,213,214,215,216,217,65,323,324,218,27,28,325,326,327,155,328,76,329,279,330,331,291,128,292,293,332,333,294,299,300,301,302,303,308,309,315,316,79,178],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[189,190,191,192,61,81,9,11,12,15,16,17,18,20,22,28,31,89,334,335,336,146,66,60,82,67,68,147,337,148,327,338,34,35,37,38,150,339,151,152,340,153,154,155,328,69,236,156,52,341,342,53,343,344,345,346,167,70,347,348,168,349,172,72,73,74,75,350,76,351,352,129,130,131,353,354,355,175,77,78,310,176,312,356,357,358,177,79,178,359,80,318,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[123,180,181],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[360,361,362,363,72,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[364,365,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[4,4,5,5,8,83,368,85,86,46],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[46,237,47,370],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[371,372,373,189,190,191,192,22,28,31,89,374,375,376,377,334,335,378,379,380,381,382,383,384,327,338,385,386,387,33,339,152,340,100,104,109,388,342,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[28,69,236,80,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[189,190,191,192,61,81,9,11,12,15,16,17,18,20,22,28,31,89,334,335,336,146,66,60,82,67,68,147,337,148,327,338,34,35,37,38,150,339,151,152,340,153,154,155,328,69,236,156,52,341,342,53,343,344,345,346,167,70,347,348,168,349,172,72,73,74,75,350,76,351,352,129,130,131,353,354,355,175,77,78,310,176,312,356,357,358,177,79,178,359,80,318,179],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[3,4,4,5,5,182,183,184,185,186,187,389,188,371,6,7,372,390,391,8,189,190,191,192,193,194,195,138,61,196,139,0,140,141,62,197,320,198,199,142,200,201,143,81,202,144,1,203,204,321,205,2,145,206,63,211,64,212,322,213,214,215,216,217,65,323,324,218,27,222,226,392,326,155,76,279,330,291,292,293,332,333,294,299,300,301,302,303,308,315,316,79,178],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[180,181],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[393,228,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[183,193,194,63,211,64,212,322,213,214,215,216,217,65,323,324,218,227,228,395,229,231,232,233,396,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[183,193,194,148,231,398,232,234,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[188,193,194,195,201,202,206,211,215,216,218,220,221,401,146,148,229,238,243,246,249,251,253,258,261,264,266,402,172,76,174,403,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":196,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":394,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":82,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":371,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":305,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":129,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":197,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":134,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":294,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":303,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests2.AnswerTest.answer":231,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":210,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":208,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":115,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":104,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":180,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":200,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":217,"org.easymock.tests.MockClassControlTest.testEquals":133,"org.easymock.tests2.EasyMockSupportClassTest.testAll":42,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":209,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.samples.ExampleTest.voteForRemovals":187,"org.easymock.tests.UsageVarargTest.allKinds":291,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.samples.ExampleTest.voteForRemoval":184,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":88,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":304,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":339,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":324,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.GenericTest.testBridgedEquals":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":357,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":358,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests.MockingTest.testNiceClassMocking":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":34,"org.easymock.tests.MockingTest.testClassMocking":117,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":311,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":194,"org.easymock.tests.UsageExpectAndReturnTest.object":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":340,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":264,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":396,"org.easymock.tests.MockClassControlTest.testHashCode":132,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":207,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.tests.CapturesMatcherTest.test":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":265,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":45,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":307,"org.easymock.tests2.StubTest.stubWithReturnValue":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.samples.SupportTest.voteForRemovals":391,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":246,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":370,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DelegateToTest.testWrongClass":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":316,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":296,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":362,"org.easymock.tests2.CaptureTest.testCaptureNone":216,"org.easymock.tests.UsageUnorderedTest.message":76,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":333,"org.easymock.tests2.UsageConstraintsTest.any":198,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":306,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":123,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.SerializationTest.testClass":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests.LimitationsTest.mockNativeMethod":59,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests2.MockedExceptionTest.testMockedException":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":157,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CaptureTest.testCaptureLast":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":348,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":62,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.MockingTest.testTwoMocks":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":121,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":401,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":100,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":232,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testNotNull":2,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":90,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":263,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":332,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":298,"org.easymock.tests.MockingTest.testStrictClassMocking":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":234,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":226,"org.easymock.samples.ExampleTest.addDocument":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.DelegateToTest.testStubDelegate":228,"org.easymock.tests2.AnswerTest.stubAnswer":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":92,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":213,"org.easymock.tests2.SerializationTest.test":237,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":181,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":120,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.samples.SupportTest.addDocument":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":101,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":261,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests2.MockedExceptionTest.testRealException":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":122,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests2.UsageConstraintsTest.lessThan":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":102,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":262,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":356,"org.easymock.tests2.UsageConstraintsTest.cmpTo":199,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFromStub":323,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":372,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":301,"org.easymock.tests.LimitationsTest.abstractClass":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
