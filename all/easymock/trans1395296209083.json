[{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[69,70,71,72,73,74,2,75,76,77,78,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,4,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,5,117,6,7,8,9,118,119,120,10,11,121,12,122,123,124,125,126,127,128,129,130,131,132,133,134,13,135,14,15,16,17,18,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,19,218,219,220,221,222,223,224,225,226,227,20,228,21,229,230,231,232,233,234,235,22,236,237,238,23,24,239,240,25,241,242,243,244,245,246,247,248,249,250,0,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,44,45,46,47,305,306,48,49,50,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,51,335,52,53,54,55,56,57,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,58,59,396,397,398,399,400,401,60,402,403,61,62,63,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,1,420,64,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,67,68,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[391,392,393,394,395],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:50","failures":[124,129,130,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,506,507,508,185,189,192,197,200,509,203,209,210,497,498],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[69,70,71,72,73,74,2,75,76,77,78,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,4,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,5,117,6,7,8,9,118,119,120,10,11,121,12,122,123,124,125,126,127,128,129,130,131,132,133,134,13,135,14,15,16,17,18,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,19,218,219,220,221,222,223,224,225,226,227,20,228,21,229,230,231,232,233,234,235,22,236,237,238,23,24,239,240,25,241,242,243,244,245,246,247,248,249,250,0,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,44,45,46,47,305,306,48,49,50,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,51,335,52,53,54,55,56,57,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,58,59,396,397,398,399,400,401,60,402,403,61,62,63,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,1,420,64,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,67,68,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[185,186,187,510],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[384,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[70,71,72,74,2,75,77,78,79,3,80,82,83,84,85,86,87,89,90,91,92,93,94,4,95,96,97,98,99,100,101,102,103,104,110,5,117,6,7,8,9,118,119,120,10,11,121,12,122,123,124,125,127,128,129,133,134,13,135,14,15,16,17,18,139,142,152,158,167,174,177,178,179,181,182,183,184,185,186,187,188,190,194,195,196,198,201,202,204,205,206,207,208,209,212,213,214,215,216,217,19,218,219,220,221,222,224,227,20,228,21,231,232,233,234,235,22,236,237,238,23,24,239,240,25,241,242,243,0,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,268,271,272,273,276,277,278,282,283,285,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,44,45,46,47,305,306,48,49,50,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,51,335,52,53,54,55,56,57,336,337,338,339,340,341,342,343,344,345,346,347,348,349,353,354,356,364,365,392,393,397,398,399,400,401,402,403,62,63,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,1,420,64,429,430,431,432,433,434,435,436,440,441,442,444,445,65,446,447,448,449,450,66,67,68,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,479,480,481,482,483,489,490,491,492,493,494,495,496,497,497,498,498,499,500,501,502,503,504,505],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,10,11,16,43,46,47,48,49,52,55,63,64,67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[69,70,71,72,73,74,2,75,76,77,78,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,4,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,5,117,6,7,8,9,118,119,120,10,11,121,12,122,123,124,125,126,127,128,129,130,131,132,133,134,13,135,14,15,16,17,18,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,19,218,219,220,221,222,223,224,225,226,227,20,228,21,229,230,231,232,233,234,235,22,236,237,238,23,24,239,240,25,241,242,243,244,245,246,247,248,249,250,0,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,44,45,46,47,305,306,48,49,50,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,51,335,52,53,54,55,56,57,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,58,59,396,397,398,399,400,401,60,402,403,61,62,63,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,1,420,64,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,67,68,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[511,512,513,514,515,197,210],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[215,410,437,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[16,17,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[78,79,82,83,84,85,91,93,94,95,96,102,103,104,14,263,289,290,291,292,293,53,345,346,347,348,349,353,354,364,417,418,420,497,497,498,498],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[516],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[360,517,518],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[106,107,109,112,113,116,163,164,166,169,170,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[292],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:131","failures":[223],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[519,520,521,194,20,228],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[356,357,358,359,361,363],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[69,70,71,72,73,74,2,75,76,77,78,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,4,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,5,117,6,7,8,9,118,119,120,10,11,121,12,122,123,124,125,126,127,128,129,130,131,132,133,134,13,135,14,15,16,17,18,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,193,194,195,196,198,199,200,201,202,204,205,206,207,208,209,210,522,523,524,525,526,527,212,528,213,214,215,216,217,19,218,219,220,221,222,223,224,225,226,227,20,228,21,229,230,231,232,233,234,235,22,236,237,238,23,24,239,240,25,241,242,243,244,245,246,248,249,250,0,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,298,299,300,301,302,303,304,44,45,46,47,305,306,48,49,50,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,51,335,52,53,54,55,56,57,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,58,59,396,397,398,399,400,401,60,402,403,61,62,63,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,1,420,64,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,67,68,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[189,509,203,225,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[357,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":499,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":299,"org.easymock.tests.MockingTest.testPartialClassMocking":282,"org.easymock.tests.MockClassControlTest.testToString":339,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":180,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":307,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":134,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":550,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":417,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":490,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests2.UsageConstraintsTest.testNull":83,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":344,"org.easymock.tests2.CaptureTest.testPrimitive":255,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":420,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":326,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":293,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":534,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.DependencyTest.testClassMocking":131,"org.easymock.tests2.AnswerTest.answer":174,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":208,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":423,"org.easymock.tests2.CaptureTest.testAnd":252,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":533,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":322,"org.easymock.tests.LimitationsTest.mockFinalMethod":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":331,"org.easymock.tests2.DependencyTest.testClassMockingSupport":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":58,"org.easymock.tests2.CaptureTest.testCapture1_2446744":256,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":206,"org.easymock.tests.UsageThrowableTest.throwError":429,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":407,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":537,"org.easymock.samples.PartialClassMockTest.testGetArea":500,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests.MockingTest.testInterfaceMocking":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":147,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":308,"org.easymock.tests2.ThreadingTest.testChangeDefault":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":194,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":170,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":316,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":151,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":465,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":517,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":261,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.MockClassControlTest.testEquals":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":393,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":324,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":207,"org.easymock.tests2.CaptureTest.testCaptureAll":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":329,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":494,"org.easymock.tests.UsageVarargTest.allKinds":450,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":435,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":112,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":95,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":538,"org.easymock.samples.ExampleTest.voteForRemoval":491,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":530,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":404,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":236,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":237,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":461,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.CaptureTest.testCapture2_2446744":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":449,"org.easymock.tests.GenericTest.testBridgedEquals":395,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests.UsageExpectAndReturnTest.longType":457,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":325,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testNiceClassMocking":288,"org.easymock.tests.MockingTest.testClassMocking":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":476,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":82,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":77,"org.easymock.tests.UsageExpectAndReturnTest.object":464,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":445,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":508,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":437,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":470,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":106,"org.easymock.tests.MockClassControlTest.testHashCode":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":149,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":161,"org.easymock.tests.UsageVarargTest.varargCharAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":271,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":314,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":521,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":432,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":105,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":536,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":313,"org.easymock.tests.ReplayStateInvalidCallsTest.times":542,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":471,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":543,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":340,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":301,"org.easymock.tests2.StubTest.stubWithReturnValue":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":463,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests2.SerializationTest.testAllMockedMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.samples.SupportTest.voteForRemovals":503,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":34,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":319,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":175,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":439,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":540,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.samples.ConstructorCalledMockTest.testTax":497,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":249,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":196,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":37,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":532,"org.easymock.tests2.CaptureTest.testCaptureNone":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":523,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":448,"org.easymock.tests2.ThreadingTest.testThreadSafe":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":153,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":504,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":254,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":36,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":412,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":310,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":411,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.SerializationTest.testClass":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests.LimitationsTest.mockNativeMethod":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":473,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":394,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":548,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":524,"org.easymock.tests2.NameTest.nameForMocksControl":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":141,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":306,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":198,"org.easymock.tests.MockingTest.testNicePartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":162,"org.easymock.tests2.CaptureTest.testCaptureLast":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":547,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":544,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":454,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":315,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":527,"org.easymock.samples.ExampleTest.removeNonExistingDocument":495,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":107,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":526,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ConstraintsToStringTest.andToString":33,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":143,"org.easymock.tests.UsageExpectAndThrowTest.floatType":309,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":177,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":211,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":152,"org.easymock.samples.ExampleTest.voteAgainstRemoval":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.LimitationsTest.privateConstructor":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":436,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests2.UsageTest.defaultResetToNice":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":163,"org.easymock.tests.UsageVarargTest.differentLength":65,"org.easymock.tests2.CallbackTest.callback":2,"org.easymock.tests2.UsageConstraintsTest.equals":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":225,"org.easymock.tests.UsageTest.openCallCountByLastCall":305,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":419,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":525,"org.easymock.tests.UsageThrowableTest.throwCheckedException":433,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":39,"org.easymock.tests.MockingTest.testStrictClassMocking":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":179,"org.easymock.tests.ObjectMethodsTest.testHashCode":272,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":516,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":546,"org.easymock.tests2.NameTest.nameForNiceMock":183,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":541,"org.easymock.tests2.DependencyTest.testInterfaceMocking":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.AnswerTest.stubAnswer":178,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":447,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":209,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":498,"org.easymock.tests2.ConstraintsToStringTest.orToString":26,"org.easymock.tests.UsageThrowableTest.noUpperLimit":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":244,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":257,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":518,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":455,"org.easymock.tests2.UsageConstraintsTest.testSame":84,"org.easymock.samples.SupportTest.addDocument":502,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":531,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":144,"org.easymock.tests.GenericTest.testPackageScope":392,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":113,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":286,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":529,"org.easymock.tests2.NameTest.nameForMock":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":466,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":458,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":321,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":400,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":41,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":418,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests2.NameTest.nameForStrictMock":182,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":248,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":190,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":535,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":148,"org.easymock.tests2.CaptureTest.testCaptureRightOne":262,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":522,"org.easymock.tests2.UsageConstraintsTest.testOr":85,"org.easymock.tests.UsageRangeTest.combination":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":145,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":549,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":176,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":263,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":191,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":545,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":468,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":496,"org.easymock.tests2.ConstraintsToStringTest.notToString":28,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":501,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":328,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":460,"org.easymock.tests.LimitationsTest.abstractClass":266,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":292,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24}}]
