[{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[214],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[215,0,1,2,3,5,216,7,8,217,218,9,219,10,220,11,13,221,14,16,17,19,222,20,21,223,224,22,23,24,25,26,27,225,30,31,32,33,226,34,35,227,36,37,38,39,40,228,42,229,47,230,53,54,231,55,232,233,234,235,236,237,238,239,240,241,242,243,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,244,80,81,82,83,88,90,91,245,93,214,246,247,248,95,96,97,249,250,99,100,251,252,253,254,255,105,106,107,108,109,110,111,112,256,257,258,114,259,260,261,262,263,116,264,117,124,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,265,266,267,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,268,182,183,184,269,185,186,197,198,204,205,206,270,209,210,211,212,271,213,272,273,274],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[275,215,0,1,2,3,4,5,276,6,277,278,279,216,280,281,282,7,8,217,218,9,283,284,285,286,287,219,288,289,290,291,292,293,294,295,10,220,11,296,297,298,12,13,299,221,14,15,16,17,18,19,222,20,21,223,300,224,22,23,301,24,25,26,27,225,28,29,30,31,32,33,302,226,34,35,227,36,37,38,39,303,304,40,305,306,41,228,42,229,307,308,43,309,44,45,46,47,48,310,311,312,313,314,230,315,316,317,318,319,320,321,49,50,51,52,322,53,54,231,323,55,232,233,234,235,236,237,238,239,240,241,242,243,324,56,57,58,59,60,61,325,62,63,64,65,66,67,326,68,69,70,71,72,73,74,75,76,77,78,79,244,80,81,82,83,327,84,85,86,87,88,328,329,89,90,91,92,330,245,331,332,333,93,94,214,334,246,335,336,337,247,338,339,340,341,342,343,344,345,346,248,95,96,347,97,98,249,250,99,348,349,100,251,350,351,352,252,353,354,253,355,356,357,358,359,360,361,362,363,254,364,365,366,367,368,255,369,370,371,372,373,374,101,102,103,104,105,106,107,108,109,110,111,112,375,376,377,256,257,378,258,113,114,259,260,261,262,263,379,115,380,116,381,264,117,118,119,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,120,121,122,123,124,125,400,401,402,403,404,405,406,407,408,126,127,128,129,130,131,409,410,411,412,132,133,413,414,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,415,416,417,418,419,420,421,422,423,424,425,426,265,427,266,267,428,154,429,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,430,431,432,175,433,434,435,436,437,438,176,268,439,177,178,179,180,181,182,183,440,441,184,269,185,186,187,188,189,442,190,191,443,192,193,194,195,196,197,198,199,200,201,202,203,444,445,446,204,205,447,206,448,449,450,451,207,452,453,454,455,456,457,208,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,270,477,478,479,480,481,482,483,209,210,211,212,271,213,484,485,272,273,486,487,274],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[275,215,0,1,2,3,4,5,276,6,277,277,278,278,279,216,280,281,282,7,8,217,218,9,219,10,220,11,298,12,13,299,221,14,15,16,17,18,19,222,20,21,223,224,22,23,24,25,26,27,225,28,29,30,31,32,33,302,226,34,35,227,36,37,38,39,303,40,41,228,42,229,43,44,45,46,47,48,230,321,49,50,51,52,53,54,231,55,232,233,234,235,236,237,238,239,240,241,242,243,324,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,244,80,81,82,83,84,85,86,87,88,89,90,91,92,245,93,94,214,246,337,247,339,248,95,96,347,97,98,249,250,99,348,349,100,251,252,253,254,255,101,102,103,104,105,106,107,108,109,110,111,112,257,258,113,114,259,260,261,262,263,379,115,380,116,381,264,117,118,119,386,395,396,397,120,121,122,123,124,125,126,127,128,129,130,131,409,410,411,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,415,416,417,418,419,420,421,422,423,424,425,426,265,427,266,267,154,429,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,430,175,176,268,177,178,179,180,181,182,183,440,441,184,269,185,186,187,188,189,190,191,443,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,451,207,452,453,454,455,456,457,208,209,210,211,212,271,213,484,485,272,273,486,487,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[228,308,245,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[13,221,14,96,489,490,491,492,105,106,107,116,264,117,430,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[308,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[383,384,459,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,17,18,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[494,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[219,288,11,298,13,299,221,14,15,19,222,20,21,22,23,227,36,41,229,308,43,230,315,233,234,235,236,237,238,240,241,242,60,61,74,75,84,85,86,87,92,245,331,93,214,246,337,247,339,248,96,347,97,98,348,349,100,251,252,105,106,107,256,257,258,379,380,116,381,264,117,118,395,396,398,399,120,401,404,405,406,407,408,126,128,129,409,410,411,132,427,428,154,429,430,175,439,177,443,192,452,453,454,455,209,210,271,213,484,485,486,487,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[498],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,57,120,121,122,123,124,125,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.UsageTest.argumentsOrdered":349,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":471,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":279,"org.easymock.tests2.DelegateToTest.testReturnException":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":121,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":155,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":253,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":489,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageTest.wrongArguments":347,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":103,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":201,"org.easymock.tests.UsageTest.argumentsOrdered":487,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":434,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests.ReplayStateInvalidUsageTest.times":423,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.DependencyTest.testClassMocking":294,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":52,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":438,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":181,"org.easymock.tests2.DependencyTest.testClassMockingSupport":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":225,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":400,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":203,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":370,"org.easymock.samples.PartialClassMockTest.testGetArea":216,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":156,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":32,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":442,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":252,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":179,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":51,"org.easymock.tests.MockNameTest.defaultName":439,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":202,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":196,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":316,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":323,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":392,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":229,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":303,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":478,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":195,"org.easymock.tests.GenericTest.testBridgedEquals":414,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":410,"org.easymock.tests.UsageExpectAndReturnTest.longType":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":177,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":244,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":411,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests.MockingTest.testNiceClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":127,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":44,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":379,"org.easymock.tests.UsageExpectAndReturnTest.object":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":191,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":397,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":435,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":150,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":311,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":361,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":494,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":436,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":190,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":458,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":310,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":161,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":151,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":495,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":255,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":123,"org.easymock.tests2.StubTest.stubWithReturnValue":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":80,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":167,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":482,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":328,"org.easymock.tests.UsageExpectAndThrowTest.object":165,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":264,"org.easymock.samples.ConstructorCalledMockTest.testTax":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":214,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":486,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":102,"org.easymock.tests2.CaptureTest.testCaptureNone":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests.UsageUnorderedTest.message":430,"org.easymock.tests.UsageVerifyTest.twoReturns":107,"org.easymock.tests.UsageVarargTest.varargByteAccepted":194,"org.easymock.tests2.ThreadingTest.testThreadSafe":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":364,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":131,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":441,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":422,"org.easymock.tests2.StubTest.stub":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":421,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":15,"org.easymock.tests2.NameTest.nameForMocksControl":87,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":159,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":246,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.CaptureTest.testCaptureLast":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.MockingTest.testTwoMocks":446,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":348,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.samples.ExampleTest.removeNonExistingDocument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":312,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":339,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":451,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":355,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":297,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":254,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testNotNull":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":149,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":284,"org.easymock.tests2.CallbackTest.callback":19,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":305,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":440,"org.easymock.tests.UsageCallCountTest.tooFewCalls":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":288,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":396,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":9,"org.easymock.tests2.NameTest.nameForNiceMock":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":10,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":365,"org.easymock.tests2.DelegateToTest.testStubDelegate":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":116,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":335,"org.easymock.tests.UsageVarargTest.varargLongAccepted":193,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":278,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageThrowableTest.noUpperLimit":113,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":340,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":28,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":300,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":356,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":317,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests2.NameTest.nameForMock":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":146,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":169,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests2.NameTest.nameForStrictMock":85,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":333,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":77,"org.easymock.tests.ErrorMessageTest.testGetters":491,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":221,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":360,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":485,"org.easymock.tests2.MockBuilderTest.testWithConstructor":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":357,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":147,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":409,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests2.CaptureTest.testCaptureFromStub":302,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":416,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":331,"org.easymock.tests.UsageTest.unexpectedCallWithArray":484,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":381,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":282,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":178,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":492,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238}}]
