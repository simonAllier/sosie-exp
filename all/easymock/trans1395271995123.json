[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[4,40,41,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[37,38,39,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[54,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,9,57,57,58,58,74,75,10,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,40,41,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,44,45,46,47,48,49,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,51,214,53,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,62,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,6,7,8,276,277,278,279,280,281,282,283,284,285,286,287,288,16,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,52,28,340,341,342,0,1,343,344,2,3,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[14,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[121,346],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[63,64,65,66,67,68,69,70,71,72,73,9,57,57,58,58,74,75,10,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,40,41,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,44,45,46,47,48,49,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,51,214,53,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,62,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,6,7,8,276,277,278,279,280,281,282,283,284,285,286,287,288,16,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,52,28,340,341,342,0,1,343,344,2,3,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,365,363,364,61],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[366,367,301],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[368],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockRunner:38","sourceCode":"return new org.easymock.internal.EasyMockStatement(org.junit.runners.BlockJUnit4ClassRunner.methodInvoker(org.junit.runners.model.FrameworkMethod, java.lang.Object) , java.lang.Object)","type":"CtReturnImpl"},"failures":[9,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,369,370,371,372,373,374,375,61,376],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,40,41,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,44,45,46,47,48,49,167,377,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,51,214,53,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,378,233,62,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,267,268,269,270,271,272,273,274,275,6,7,8,290,291,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,52,340,341,342,0,1,343,344,2,3,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,9,57,57,58,58,74,75,10,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,379,380,381,382,383,384,4,40,41,42,43,385,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,386,387,388,389,390,391,123,392,124,393,394,395,54,396,397,398,125,126,127,128,129,130,131,132,133,37,38,39,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,399,400,401,402,403,404,158,159,160,161,162,163,164,165,166,44,45,46,47,48,49,167,377,168,169,405,170,171,172,173,174,175,176,177,178,179,180,406,407,408,181,182,409,183,410,411,412,413,414,415,416,417,418,419,50,420,421,366,422,423,424,425,426,427,428,429,430,431,432,433,434,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,435,201,202,203,436,437,204,205,206,207,208,209,210,211,212,213,51,214,53,215,216,217,218,438,439,440,219,220,221,441,222,223,224,225,226,227,228,229,230,231,442,443,232,444,445,378,446,233,62,234,235,236,237,238,447,239,448,449,240,241,242,243,450,451,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,452,453,454,263,455,456,264,457,458,459,460,461,462,463,464,465,265,466,467,468,469,470,266,471,472,267,268,269,270,271,272,473,474,273,274,275,6,7,8,276,277,278,279,280,281,282,283,284,285,286,287,288,11,12,13,14,15,16,17,18,19,20,21,22,289,290,291,292,293,294,295,475,296,297,298,299,367,300,301,302,476,303,304,477,305,478,479,480,306,307,308,374,309,375,310,311,481,312,482,483,484,485,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,486,487,337,338,339,52,23,24,25,26,27,28,29,30,31,32,33,34,340,341,342,0,488,1,343,344,2,3,345,489,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,365,363,490,364,61,376,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[450,260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[393,394,395,396,398],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.UsageTest.argumentsOrdered":323,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":45,"org.easymock.tests.MockingTest.testPartialClassMocking":181,"org.easymock.tests.MockClassControlTest.testToString":136,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":475,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":76,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":369,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":316,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":127,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":402,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":154,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":95,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":387,"org.easymock.tests.UsageTest.argumentsOrdered":165,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.times":212,"org.easymock.tests2.DependencyTest.testClassMocking":486,"org.easymock.tests2.AnswerTest.answer":272,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":391,"org.easymock.tests2.DelegateToTest.testDelegate":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":91,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":133,"org.easymock.tests2.DependencyTest.testClassMockingSupport":487,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":445,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":206,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":401,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":77,"org.easymock.tests2.UsageTest.niceToStrict":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":60,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":306,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":125,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":55,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":349,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":253,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":140,"org.easymock.tests2.EasyMockSupportClassTest.testAll":263,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":131,"org.easymock.tests2.CaptureTest.testCaptureAll":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests.MockNameTest.defaultName":385,"org.easymock.tests2.UsageConstraintsTest.testMatches":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":204,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":132,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":49,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":397,"org.easymock.tests2.UsageConstraintsTest.greaterThan":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":398,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":450,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":238,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":44,"org.easymock.tests2.CaptureTest.testCaptureFirst":257,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":279,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":104,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":261,"org.easymock.tests2.UsageTest.moreThanOneArgument":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":311,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests.GenericTest.testBridgedEquals":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":290,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.UsageConstraintsTest.testContains":348,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":364,"org.easymock.tests.UsageExpectAndReturnTest.object":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":370,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":203,"org.easymock.tests.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":388,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":113,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":168,"org.easymock.tests.MockClassControlTest.testHashCode":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":365,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":392,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":319,"org.easymock.tests.DefaultClassInstantiatorTest.object":124,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":82,"org.easymock.tests.CapturesMatcherTest.test":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":114,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":37,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":266,"org.easymock.tests2.UsageTest.resumeIfFailure":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":47,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":359,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.samples.SupportTest.voteForRemovals":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":88,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":473,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":384,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":356,"org.easymock.tests2.DelegateToTest.testWrongClass":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.tests.UsageStrictMockTest.range":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":484,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":126,"org.easymock.tests2.CaptureTest.testCaptureNone":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":381,"org.easymock.tests.UsageUnorderedTest.message":96,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":153,"org.easymock.tests2.UsageConstraintsTest.any":346,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":211,"org.easymock.tests2.StubTest.stub":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":46,"org.easymock.tests.UsageExpectAndThrowTest.longType":79,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":210,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":490,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":309,"org.easymock.tests.MockingTest.testNicePartialClassMocking":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":11,"org.easymock.tests2.CaptureTest.testCaptureLast":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":378,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":295,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":357,"org.easymock.tests.MockingTest.testTwoMocks":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":322,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":361,"org.easymock.samples.ExampleTest.removeNonExistingDocument":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":260,"org.easymock.tests2.MockBuilderTest.testCreateMockString":312,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":78,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":265,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testNotNull":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":321,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests.UsageVarargTest.differentLength":224,"org.easymock.tests2.CallbackTest.callback":267,"org.easymock.tests2.UsageConstraintsTest.equals":488,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":448,"org.easymock.tests.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":128,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":275,"org.easymock.tests.ObjectMethodsTest.testHashCode":202,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":262,"org.easymock.tests2.NameTest.nameForNiceMock":298,"org.easymock.tests2.DependencyTest.testInterfaceMocking":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":371,"org.easymock.samples.ExampleTest.addDocument":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":301,"org.easymock.tests2.AnswerTest.stubAnswer":274,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":175,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":115,"org.easymock.tests.UsageExpectAndReturnTest.floatType":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":32,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":249,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":56,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":344,"org.easymock.samples.SupportTest.addDocument":72,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests2.NameTest.nameForMock":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":90,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":214,"org.easymock.tests2.NameTest.nameForStrictMock":297,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":330,"org.easymock.tests2.UsageConstraintsTest.lessThan":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":254,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageTest.wrongArguments":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":110,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":396,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":347,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":320,"org.easymock.tests2.CaptureTest.testCaptureFromStub":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":205,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":478,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":111,"org.easymock.tests2.CaptureTest.testCapture":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.UsageConstraintsTest.constraints":342,"org.easymock.samples.ExampleTest.addAndChangeDocument":71,"org.easymock.tests.UsageStrictMockTest.testVerify":180,"org.easymock.tests2.ConstraintsToStringTest.containsToString":368,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":130,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":103,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":282}}]
