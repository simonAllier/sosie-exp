[{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[21,22,62,63,64,65,66,67,68,69,70,71,58,72,60],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[35,51,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,11,119,120,121,122,123,13,14,15,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,16,17,20,144,145,146,147,148,149,150,151,152,23,24,25,153,154,155,156,157,158,159,160,161,162,29,31,32,36,37,38,39,163,40,41,42,43,164,44,45,46,48,51,165,54,55,56,57,166,167,168,58,169,170,59,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,60,209,61,74,210,75,76,78,79,80,211,81,83,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[212,213,214,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[215,58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,216,217,218,219,1,220,221,222,223,224,225,226,227,86,228,229,87,88,89,90,91,92,230,93,94,231,95,96,97,98,99,100,101,102,103,232,104,233,234,235,236,237,238,239,240,241,2,3,4,5,6,7,8,9,105,242,106,107,243,108,244,245,246,247,212,248,213,249,250,251,252,253,254,255,256,257,258,259,260,261,10,262,263,109,110,264,111,265,266,267,268,112,269,270,271,272,113,273,274,275,276,277,278,279,114,115,116,280,117,118,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,11,308,309,119,120,121,310,311,312,313,314,315,316,122,123,317,318,319,12,13,14,320,15,321,322,323,324,325,326,327,328,214,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,124,125,349,126,350,351,352,353,127,354,355,356,357,128,358,359,360,361,362,129,130,131,132,133,134,135,363,364,365,366,367,368,369,370,371,372,136,137,138,139,140,141,142,143,373,374,375,376,377,378,16,17,18,19,379,380,381,382,20,144,145,21,22,146,147,148,149,150,151,383,152,23,24,25,153,154,155,156,384,157,158,159,385,386,387,160,161,388,162,389,390,391,392,393,394,395,26,62,27,28,63,396,29,30,31,64,32,397,65,33,34,67,35,36,37,38,39,398,163,40,41,399,42,43,164,44,45,46,47,400,48,71,401,49,50,51,52,402,53,403,404,405,406,407,165,408,409,410,411,412,413,414,415,416,54,417,418,55,419,420,421,422,423,424,425,426,427,56,428,429,430,431,432,57,433,434,435,436,437,438,439,166,440,441,442,443,444,445,446,447,448,449,167,450,451,168,452,453,215,58,72,454,455,456,457,169,170,458,459,59,460,171,172,173,174,175,176,177,461,178,179,180,181,182,183,462,463,464,465,466,467,184,468,185,469,186,470,471,472,187,188,189,190,191,192,473,474,475,193,476,477,194,478,479,195,196,480,197,198,481,199,482,483,200,484,485,201,202,203,204,205,206,486,487,488,489,207,208,60,209,61,74,210,75,76,77,78,79,80,211,81,83,84,490,85,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[450,452,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[408,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[494,495,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[497],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[369,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[378,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[226,227,86,87,88,499,500,501,130,384,157,160,161,502,503,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[500,506,502,504,200],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":291,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":462,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests2.UsageTest.wrongArguments":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":100,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":339,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":194,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":9,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":232,"org.easymock.tests.UsageTest.moreThanOneArgument":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":377,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.ReplayStateInvalidUsageTest.times":331,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":449,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":217,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":186,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":253,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":222,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":447,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":326,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":219,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":434,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":320,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":374,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":423,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":337,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":482,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":497,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":230,"org.easymock.tests.MockClassControlTest.testEquals":8,"org.easymock.tests2.EasyMockSupportClassTest.testAll":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":448,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":251,"org.easymock.tests.MockNameTest.defaultName":341,"org.easymock.tests2.UsageConstraintsTest.testMatches":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":324,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":252,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.UsageConstraintsTest.greaterThan":484,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":456,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":20,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":173,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":174,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.CaptureTest.testCapture2_2446744":490,"org.easymock.tests2.UsageTest.moreThanOneArgument":384,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":98,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":117,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":360,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":204,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":118,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":319,"org.easymock.tests2.UsageConstraintsTest.testContains":481,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":477,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":317,"org.easymock.tests.MockTypeTest.fromEasyMockClass":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":493,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests.UsageExpectAndReturnTest.object":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":94,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":501,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":436,"org.easymock.tests.MockClassControlTest.testHashCode":7,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":446,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":93,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":364,"org.easymock.tests2.CaptureTest.testCaptureMultiple":73,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":254,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":426,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":435,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":245,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":388,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":471,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":70,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":303,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":450,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":202,"org.easymock.tests2.DelegateToTest.testWrongClass":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":394,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":338,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":382,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":120,"org.easymock.tests.UsageVarargTest.varargByteAccepted":97,"org.easymock.tests2.ThreadingTest.testThreadSafe":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":428,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":116,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":197,"org.easymock.tests2.StubTest.stub":470,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":329,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests.LimitationsTest.mockNativeMethod":11,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests2.NameTest.nameForMocksControl":466,"org.easymock.tests2.MockedExceptionTest.testMockedException":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":492,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":203,"org.easymock.tests.MockingTest.testTwoMocks":12,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":486,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":437,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":457,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":454,"org.easymock.tests.UsageVerifyTest.twoThrows":119,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":307,"org.easymock.tests2.UsageConstraintsTest.testNotNull":206,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.UsageTest.defaultResetToNice":387,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":231,"org.easymock.tests2.CallbackTest.callback":183,"org.easymock.tests2.UsageConstraintsTest.equals":476,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":102,"org.easymock.tests.UsageCallCountTest.tooFewCalls":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests.UsageThrowableTest.throwCheckedException":140,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":453,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.NameTest.nameForNiceMock":465,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.stubAnswer":452,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":131,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":397,"org.easymock.tests.UsageVarargTest.varargLongAccepted":96,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests.UsageThrowableTest.noUpperLimit":137,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":474,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":389,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests2.SerializationTest.test":209,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testSame":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":263,"org.easymock.samples.SupportTest.addDocument":144,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":398,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":420,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests2.NameTest.nameForMock":463,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":357,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":460,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":69,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":334,"org.easymock.tests2.NameTest.nameForStrictMock":464,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":491,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":190,"org.easymock.tests2.UsageConstraintsTest.lessThan":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.UsageConstraintsTest.testOr":479,"org.easymock.tests.UsageRangeTest.combination":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.MockBuilderTest.testWithConstructor":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":421,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":3,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":95,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":280,"org.easymock.tests2.UsageConstraintsTest.cmpTo":198,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":325,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":115,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests2.CaptureTest.testCapture":82,"org.easymock.tests2.UsageConstraintsTest.constraints":475,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":250,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.LimitationsTest.abstractClass":306,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":177,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":91}}]
