[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,247,248,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[283],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[441,364,391,392,429,442,443,444,445,446],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[38,55,61,87,93,99,103,105,156,162,168,172,174,240,300,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[35,42,206,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[5,6,7,47,50,51,60,62,159,163,164,166,169,213,317,320,321,368],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:56","sourceCode":"final org.easymock.internal.matchers.Equals org.easymock.internal.matchers.Equals = ((org.easymock.internal.matchers.Equals)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[67,106,117,251,335,336,356,375],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[216,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,448,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,449,215,216,217,218,219,220,450,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,451,452,453,237,454,238,455,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,456,457,258,259,260,261,262,263,264,265,266,458,267,268,269,270,271,272,273,274,459,460,461,275,276,462,277,278,463,464,279,280,465,466,281,467,282,283,468,284,285,469,470,286,287,288,289,290,471,291,472,473,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,474,475,359,476,477,360,361,362,363,441,478,479,364,365,480,481,482,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,483,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,484,422,423,485,424,486,425,426,427,428,429,430,431,432,433,434,435,436,487,488,489,490,437,491,492,493,438,439,440],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[441,392,442,443,444,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[0,3,5,7,8,9,10,11,12,14,18,47,49,50,61,62,65,66,69,72,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,118,119,120,121,125,126,128,188,189,190,191,192,202,203,204,207,213,222,224,225,226,227,228,229,235,236,243,246,247,247,248,248,250,252,253,255,258,259,260,261,262,263,264,265,267,271,272,273,460,461,275,276,277,278,463,281,283,290,293,296,297,299,300,303,304,305,306,307,308,309,312,317,319,320,323,324,328,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,361,363,478,480,366,367,368,370,372,373,374,377,378,384,391,395,399,400,401,402,403,409,419,420,421,484,422,423,485,424,486,425,426,427,429,430],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,5,6,7,8,9,10,11,12,18,44,45,46,47,48,49,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,125,126,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,210,211,213,214,215,222,223,224,225,226,227,228,229,231,232,235,236,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,270,271,272,273,460,461,275,276,277,278,463,281,283,290,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,327,328,329,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,474,359,361,362,363,478,365,480,482,366,367,368,369,370,371,372,373,374,375,376,377,378,384,391,394,395,396,398,399,400,401,402,403,409,416,418,419,420,421,484,422,423,485,424,486,425,426,427,428,429,430,431,432,433,434,435,487,488,489,490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[58,59,209,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:434","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,448,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,449,215,216,217,218,219,220,450,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,451,452,453,237,454,238,455,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,456,457,258,259,260,261,262,263,264,265,266,458,267,268,269,270,271,272,273,274,459,460,461,275,276,462,277,278,463,464,279,280,465,466,281,467,282,283,468,284,285,469,470,286,287,288,289,290,471,291,472,473,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,474,475,359,476,477,360,361,362,363,441,478,479,364,365,480,481,482,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,483,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,484,422,423,485,424,486,425,426,427,428,429,430,431,432,433,434,435,436,487,488,489,490,437,491,492,493,438,439,440],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[30,393,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[46,63,496,497,498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[441,392,442,443,444,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[10,47,49,50,91,97,98,99,118,119,120,121,203,258,259,261,264,267,271,272,273,317,319,320,361],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[332,340,346,358,501],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,5,6,7,18,47,49,50,61,62,65,66,69,71,72,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,118,119,120,121,125,126,128,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,179,188,189,190,191,192,193,203,204,207,208,210,211,213,222,224,225,226,227,228,229,231,235,236,240,243,246,250,251,252,253,255,258,259,260,261,262,263,264,265,267,271,272,273,460,461,275,276,277,278,463,281,283,290,293,296,297,298,299,300,303,304,305,306,308,309,310,312,314,317,319,320,323,324,328,329,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,363,478,480,366,367,368,370,372,373,374,377,378,384,391,394,395,396,398,399,400,401,402,403,409,419,420,421,484,422,423,485,424,486,425,426,427,429,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[1,175,176,177,178,179,180,205,310,311,312,313,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[52,63,74,75,76,77,78,79,80,81,82,83,84,85,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,183,184,185,194,199,214,215,256,266,270,281,310,311,474,362,365,482,374,384,409,419,424,428,432,433,434,435],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[46,49,50,63,319,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[451,478],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":333,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.UsageTest.argumentsOrdered":376,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":30,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":371,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":249,"org.easymock.tests2.DelegateToTest.testReturnException":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":176,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":155,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":283,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageTest.wrongArguments":369,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":76,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":238,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":130,"org.easymock.tests2.UsageConstraintsTest.testNull":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":263,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":425,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.CaptureTest.testPrimitive":299,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":53,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":384,"org.easymock.tests.ReplayStateInvalidUsageTest.times":140,"org.easymock.tests2.DependencyTest.testClassMocking":456,"org.easymock.tests2.AnswerTest.answer":324,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":435,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":453,"org.easymock.tests2.CaptureTest.testAnd":296,"org.easymock.tests2.UsageTest.strictResetToDefault":367,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests2.DelegateToTest.testDelegate":398,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests.LimitationsTest.mockFinalMethod":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":148,"org.easymock.tests2.DependencyTest.testClassMockingSupport":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":58,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":433,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":134,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":454,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":448,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":295,"org.easymock.samples.PartialClassMockTest.testGetArea":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":135,"org.easymock.tests.MockingTest.testInterfaceMocking":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":156,"org.easymock.tests2.UsageTest.niceToStrict":370,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":361,"org.easymock.tests2.MockBuilderTest.testCreateMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":423,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":292,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":345,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":305,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":109,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureAll":297,"org.easymock.tests.MockNameTest.defaultName":181,"org.easymock.tests2.UsageConstraintsTest.testMatches":347,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":180,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":446,"org.easymock.tests2.UsageConstraintsTest.greaterThan":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":221,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":366,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":421,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":175,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":484,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":378,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":93,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":402,"org.easymock.tests2.CaptureTest.testCapture2_2446744":308,"org.easymock.tests2.UsageTest.moreThanOneArgument":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":38,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":200,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":8,"org.easymock.tests.UsageCallCountTest.tooManyCalls":201,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":461,"org.easymock.tests.MockingTest.testNiceClassMocking":131,"org.easymock.tests.MockingTest.testClassMocking":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":194,"org.easymock.tests2.UsageConstraintsTest.testContains":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":312,"org.easymock.tests2.UsageConstraintsTest.testFind":335,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":418,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndReturnTest.object":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":443,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":13,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":392,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockSupportTest.testVerify":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":287,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":432,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":279,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":449,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":427,"org.easymock.tests.DefaultClassInstantiatorTest.object":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":152,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":293,"org.easymock.tests2.UsageTest.resumeIfFailure":377,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":178,"org.easymock.tests2.StubTest.stubWithReturnValue":323,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":431,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":246,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":167,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":42,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":325,"org.easymock.tests.UsageExpectAndThrowTest.object":165,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":15,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":396,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":363,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":142,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":4,"org.easymock.tests2.CaptureTest.testCaptureNone":304,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":471,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":198,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":241,"org.easymock.tests2.CaptureTest.testCapture_2617107":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests2.UsageConstraintsTest.any":342,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":139,"org.easymock.tests2.StubTest.stub":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":177,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":41,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":219,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":138,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.SerializationTest.testClass":429,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests.LimitationsTest.mockNativeMethod":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests2.NameTest.nameForMocksControl":490,"org.easymock.tests2.MockedExceptionTest.testMockedException":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":282,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":417,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":159,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":478,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":265,"org.easymock.tests2.CaptureTest.testCaptureLast":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":463,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":375,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":357,"org.easymock.samples.ExampleTest.removeNonExistingDocument":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":217,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":401,"org.easymock.tests2.MockBuilderTest.testCreateMockString":482,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":468,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":290,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":272,"org.easymock.tests.LimitationsTest.privateConstructor":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":310,"org.easymock.tests2.UsageTest.defaultResetToNice":374,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":32,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":268,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":205,"org.easymock.tests.UsageCallCountTest.tooFewCalls":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":77,"org.easymock.tests.UsageThrowableTest.throwCheckedException":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests2.CompareToTest.testGreateOrEqual":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.NameTest.nameForNiceMock":489,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":403,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":444,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":291,"org.easymock.tests2.DelegateToTest.testStubDelegate":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":479,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":391,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.SerializationTest.test":430,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":301,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.tests2.UsageConstraintsTest.testSame":337,"org.easymock.samples.SupportTest.addDocument":245,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":284,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":129,"org.easymock.tests2.NameTest.nameForMock":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":169,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests2.MockedExceptionTest.testRealException":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":33,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests2.NameTest.nameForStrictMock":488,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":416,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":218,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":359,"org.easymock.tests2.UsageStrictMockTest.range":319,"org.easymock.tests2.UsageConstraintsTest.lessThan":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":306,"org.easymock.tests2.UsageConstraintsTest.testOr":338,"org.easymock.tests.UsageRangeTest.combination":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":261,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":285,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":220,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":199,"org.easymock.tests2.UsageConstraintsTest.cmpTo":343,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":23,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":373,"org.easymock.tests2.CaptureTest.testCaptureFromStub":307,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":133,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":476,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":332,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests.UsageStrictMockTest.testVerify":52,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":145,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.LimitationsTest.abstractClass":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":485,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107}}]
