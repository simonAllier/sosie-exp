[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[26,27],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[28,29,0,30,31,32,33,34,35,36,37,38,39],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[17,18,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[51,52,53,54,55,56],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[57,58,30,31,32,8,35,59,60,61,38],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[62,47,63,64,65,55,66,48,67,68,69,70,56,71],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[51,52,53,54,55,56],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,1,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,40,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,64,140,141,142,13,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,15,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,68,69,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,70,226,227,228,71,229,230,20,21,22,23,24,25,231,232,233,234,235],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[93,236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[73,104,106,238,107,219,239],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[110,62,47,63,240,241,242,243,138,64,140,182,66,48,67,209,68,69,70,56,227,71,229],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86,244],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1543","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[245,94,246,247,248,249,250,96,251,252,98,253,99],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[62,47,63,64,65,55,66,48,67,68,69,254,70,56,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[256,257,258],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86,244,259,260],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[62,47,63,64,263,65,55,66,48,67,68,69,254,70,56,71],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[85,264,265,266,267,26,268,95,96,97,99,100,101,102,107,110,144,150,156,160,162,182,186,192,198,202,204,208,269,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[64,68,69,71,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,32,34,271,272,273,274,275,276,277,278,279,37,38],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":23,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":112,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":32,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":153,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":21,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":272,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.object":196,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":274,"org.easymock.tests2.DelegateToTest.testWrongClass":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests.UsageStrictMockTest.range":71,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":237,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":128,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":205,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.UsageTest.moreThanOneArgument":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":53,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageVarargTest.varargIntAccepted":167,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":179,"org.easymock.tests2.UsageConstraintsTest.any":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":239,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":22,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":44,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":31,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.DelegateToTest.testDelegate":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":273,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":194,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.UsageStrictMockTest.differentMethods":229,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":92,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":39,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests2.UsageTest.niceToStrict":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":58,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":5,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.UsageTest.defaultResetToNice":255,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.UsageConstraintsTest.equals":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":195,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":155,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":257,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":214,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":54,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":277,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":103,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":276,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.samples.ExampleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":105,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":216,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":25,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":279,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":41,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests.UsageExpectAndReturnTest.floatType":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":249,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":34,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":145,"org.easymock.samples.SupportTest.addDocument":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":20,"org.easymock.tests2.CaptureTest.testCaptureFirst":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageExpectAndReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":35,"org.easymock.tests2.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":43,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":152,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":265,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":160,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":219,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.MockBuilderTest.testWithConstructor":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":157,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests2.CaptureTest.testCaptureMultiple":245,"org.easymock.tests2.CompareToTest.testLessThan":262,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":6,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests2.CaptureTest.testCaptureFromStub":253,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":158,"org.easymock.tests2.CaptureTest.testCapture":252,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":16,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.CompareToTest.testGreateThan":27,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":250,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":166}}]
