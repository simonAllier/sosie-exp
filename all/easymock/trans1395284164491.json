[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,190,23,24,25,26,27,191,192,29,193,194,30,195,196,197,31,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[82,84,90,105,106,110,111,209,122],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[144,145,147,148,149,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[210,211,212,65,66,67,68,70,71,213,73,214,215,216,217,218,219,220,221,93,94,96,97,98,222,99,223,224,100,101,102,225,226,227,228,130,229,230,150,231,232,233,234,235,236,237,238,239,240,241,242,189,243,244,193,245,246,247,248,249,250,251,252,253,254,255,256,257,206,207,208,258],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[132,134,135,146,197],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[259,260,261,262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[36,37,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[36,37,210,287],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[288],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:83","failures":[289],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[72,290,291,292,293,294,295,296],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,136,137,138,139,140,141,142,143,144,145,147,148,149,150,309,310,311,151,152,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,22,190,23,24,25,26,27,191,192,312,313,314,315,316,317,193,194,195,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[318],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[133],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[319,320,321,322,323,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[36,37,210,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[36,210,65,66,67,68,70,71,72,73,74,75,76,326,327,77,328,78,329,79,80,330,81,331,332,333,334,335,93,94,96,97,98,222,99,224,100,101,102,130,229,229,230,230,150,231,232,336,337,233,189,193,245,338,248,257,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[142,143,261,264,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[339,117,124,129],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[36,72,340,341,342,291,292,293,343,296],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,141,143,344,179,345,194,30,195,198,203,205,346],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[238,347,348],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[210,211,212,65,66,67,68,70,71,213,73,214,215,216,217,218,219,220,221,93,94,96,97,98,222,99,223,224,100,101,102,225,226,227,228,130,229,230,150,231,232,233,234,235,236,237,238,239,240,241,242,189,243,244,193,245,246,247,248,249,250,251,252,253,254,255,256,257,206,207,208,258],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[35,36,37,210,38,349,350,351,39,40,41,42,352,353,43,44,45,354,46,355,47,48,49,356,357,50,51,52,53,54,55,56,57,58,59,60,61,62,63,358,64,65,66,67,68,69,70,71,72,73,74,75,76,359,360,361,362,363,0,77,78,79,80,81,82,83,84,85,86,364,365,87,88,89,90,366,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,209,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,227,228,130,367,131,368,132,133,134,369,135,136,137,138,139,140,370,371,141,372,142,143,344,373,144,374,145,146,147,148,375,149,376,377,229,229,230,230,150,231,232,309,310,311,151,152,153,154,1,319,155,156,378,379,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,233,178,179,380,180,181,381,382,182,383,384,385,386,387,388,389,390,391,392,183,184,185,186,187,188,189,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,393,394,22,395,190,23,24,25,26,27,191,192,396,397,317,398,399,400,401,29,402,403,404,405,406,407,408,409,410,411,412,413,193,245,338,194,30,195,414,415,416,417,418,196,419,197,31,420,198,32,33,34,199,200,201,202,421,422,264,203,423,204,205,346,424,206,207,208,425,426],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[227,228,130,367,152,378,398,399,400,401,29,402],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[36,37,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[427],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[35,36,37,210,428,429,430,431,38,351,39,40,41,42,352,353,44,45,46,355,49,50,52,53,54,55,56,57,58,59,60,61,62,63,358,64,65,66,67,68,69,70,71,72,73,74,75,76,359,360,361,362,363,0,326,78,329,79,80,82,83,84,85,364,365,87,88,89,90,92,93,95,96,97,98,99,224,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,227,228,130,367,131,132,133,135,136,137,140,371,141,143,344,373,144,374,145,146,147,148,375,149,376,377,229,230,150,231,232,151,154,1,432,433,434,435,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,233,179,386,436,387,388,389,390,183,184,185,186,187,189,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,345,395,190,191,192,398,399,400,401,29,402,403,404,405,406,407,409,410,411,412,413,193,245,248,194,30,195,414,415,416,417,418,198,437,438,439,440,441,199,200,201,202,422,203,205,346,424,206,207,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":355,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":374,"org.easymock.tests2.DelegateToTest.testReturnException":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":399,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":291,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":354,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":434,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":416,"org.easymock.tests.UsageTest.argumentsOrdered":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":187,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":270,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":431,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.DelegateToTest.testDelegate":135,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":17,"org.easymock.tests.LimitationsTest.mockFinalMethod":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":441,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":429,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":418,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":273,"org.easymock.samples.PartialClassMockTest.testGetArea":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":310,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":11,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":432,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":347,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":19,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":430,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":417,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests.UsageVarargTest.allKinds":413,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":440,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":26,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":274,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":240,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":54,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":55,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":412,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":391,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":437,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":20,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageCallCountTest.tooManyCalls":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testNiceClassMocking":258,"org.easymock.tests.MockingTest.testClassMocking":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":327,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":130,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":353,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":292,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":340,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":197,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":426,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":33,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":428,"org.easymock.tests.UsageVarargTest.varargCharAccepted":406,"org.easymock.tests2.CaptureTest.testCaptureMultiple":289,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":23,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":8,"org.easymock.tests.CapturesMatcherTest.test":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.ReplayStateInvalidCallsTest.times":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests2.UsageTest.resumeIfFailure":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":401,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests2.SerializationTest.testAllMockedMethod":210,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.samples.SupportTest.voteForRemovals":144,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":14,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":287,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":397,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.UsageExpectAndThrowTest.object":12,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests.UsageStrictMockTest.range":204,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":213,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":433,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":262,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":268,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":311,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":195,"org.easymock.tests.UsageVarargTest.varargByteAccepted":411,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":219,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":379,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests2.StubTest.stub":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":372,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":335,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":214,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":6,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":257,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":10,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":332,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":351,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.LimitationsTest.privateConstructor":242,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":378,"org.easymock.tests.UsageCallCountTest.tooFewCalls":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":435,"org.easymock.tests.UsageThrowableTest.throwCheckedException":24,"org.easymock.tests.MockingTest.testStrictClassMocking":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":294,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":282,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":293,"org.easymock.samples.ExampleTest.addDocument":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests2.AnswerTest.stubAnswer":39,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":203,"org.easymock.tests.UsageVarargTest.varargLongAccepted":410,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":211,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":364,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.samples.SupportTest.addDocument":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":216,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":265,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests2.MockedExceptionTest.testRealException":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":212,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":271,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.UsageVarargTest.varargShortAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":239,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":275,"org.easymock.tests2.CompareToTest.testLessThan":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":28,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":328,"org.easymock.tests.UsageTest.unexpectedCallWithArray":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":423,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.samples.ExampleTest.addAndChangeDocument":376,"org.easymock.tests.UsageStrictMockTest.testVerify":424,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":438,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.LimitationsTest.abstractClass":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":186,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58}}]
