[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,9,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,11,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[278,8,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,12,301,13,14,15,16,302,17,18,303,304,305,306,307,308,309,310,311,312,19,20,21,22,23,24,25,26,27,28,29,30,313,31,32,314,33,315,316,317,318,34,35,319,36,320,321,322,323,324,37,325,326,327,328,329,38,330,39,40,41,331,42,43,44,45,46,47,48,49,332,50,51,333,334,52,335,336,337,338,339,340,341,342,53,54,343,55,56,57,58,59,60,344,345,346,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,347,348,349,350,351,352,353,354,355,356,81,82,83,84,85,86,87,88,89,90,91,357,92,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,9,93,382,383,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,384,126,127,128,129,130,131,385,386,387,388,389,390,391,392,393,394,395,396,132,133,134,135,136,137,138,139,140,397,141,142,143,144,398,399,145,146,147,148,400,149,401,402,150,403,151,152,404,405,153,406,154,155,156,157,158,407,408,409,410,411,412,413,159,414,415,160,416,417,418,419,420,421,422,423,424,161,425,426,427,428,429,162,430,431,163,432,164,165,166,433,167,168,169,170,434,435,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,436,437,192,438,439,440,193,194,195,441,442,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,443,444,445,446,217,218,219,11,447,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,448,449,450,451,452,453,244,454,455,456,457,458,459,245,460,461,246,247,248,462,463,249,464,465,466,467,468,469,250,470,471,472,473,474,475,251,252,253,254,255,256,257,258,259,260,476,261,262,263,477,264,265,266,267,268,269,270,271,272,273,274,275,478,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[375,178,190,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[398,398,399,399,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[354,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.RecordState:117","failures":[30,136,163,164,196,245,246,248],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[481,217,234,237],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[12,301,13,14,15,16,302,17,18,309,310,311,312,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,315,34,35,36,37,326,327,328,329,38,330,39,40,41,42,43,44,45,46,47,48,49,50,51,52,335,336,337,338,339,53,54,343,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,350,81,82,83,84,85,86,87,88,89,90,91,92,358,359,369,370,371,372,373,374,375,376,377,378,379,380,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,385,386,387,388,389,390,391,392,393,394,395,396,132,133,134,135,136,137,138,139,140,397,141,142,143,144,398,399,145,146,147,148,400,149,150,403,151,152,405,153,406,154,155,156,157,158,407,408,409,410,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,436,192,440,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,11,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,244,245,246,247,248,462,463,249,464,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,478,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[20,21,38,49,52,83,84,90,91,118,119,120,121,122,126,127,128,129,130,163,164,192,212,482,217,218,219,11,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,265,266,267,268,269,270,271,272,273,274,275,478,276,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[230],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[11,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[303,304,305,306,307,308,52,54,343,55,58,59,83,84,86,87,92,360,361,362,363,368,123,124,125,386,387,388,400,401,151,152,153,406,167,168,169,170,175,176,182,183,187,440,195,442,200,203,205,212,214,215,244,454,250,470,255,256,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:60","sourceCode":"return int","type":"CtReturnImpl"},"failures":[33,52,54,55,58,59,81,83,84,86,87,88,114,123,124,125,153,175,176,177,178,182,183,196,198,202,203,206,210,212,214,215,216,233],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[483,484],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[219,11,221,223,224,226,236,241,265,267,275],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[278,281,282,291,296,369,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":287,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":145,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":34,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":433,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":225,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":306,"org.easymock.tests2.UsageConstraintsTest.testNull":221,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":206,"org.easymock.tests2.CaptureTest.testPrimitive":268,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":394,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests.ReplayStateInvalidUsageTest.times":377,"org.easymock.tests2.DependencyTest.testClassMocking":434,"org.easymock.tests2.AnswerTest.answer":245,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":410,"org.easymock.tests2.CaptureTest.testAnd":265,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":201,"org.easymock.tests2.DelegateToTest.testDelegate":264,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":76,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":408,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":371,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":305,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":431,"org.easymock.samples.PartialClassMockTest.testGetArea":146,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":420,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":62,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.MockBuilderTest.testCreateMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":70,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":231,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":479,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":230,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":331,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":409,"org.easymock.tests2.CaptureTest.testCaptureAll":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":368,"org.easymock.tests2.UsageConstraintsTest.testMatches":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":369,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":123,"org.easymock.samples.BasicClassMockTest.testPrintContent":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":28,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":210,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":195,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":441,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":436,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":199,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":476,"org.easymock.tests2.CaptureTest.testCaptureFirst":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":200,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":48,"org.easymock.tests.GenericTest.testBridgedEquals":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":17,"org.easymock.tests.UsageExpectAndReturnTest.longType":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":79,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":384,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":392,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":18,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":255,"org.easymock.tests.MockingTest.testNiceClassMocking":322,"org.easymock.tests.MockingTest.testClassMocking":317,"org.easymock.tests2.UsageConstraintsTest.testContains":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":301,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":249,"org.easymock.tests2.UsageConstraintsTest.testFind":220,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests.UsageExpectAndReturnTest.object":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":205,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":9,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":31,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":466,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":422,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":407,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":42,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":300,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":344,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":423,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":465,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":67,"org.easymock.tests.CapturesMatcherTest.test":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":240,"org.easymock.tests2.SerializationTest.testAllMockedMethod":253,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.samples.SupportTest.voteForRemovals":144,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":73,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":299,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":460,"org.easymock.tests.UsageExpectAndThrowTest.object":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":237,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":90,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":398,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":445,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageVarargTest.varargByteAccepted":47,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":425,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":16,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":147,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":297,"org.easymock.tests2.UsageConstraintsTest.any":227,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndThrowTest.longType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":375,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.SerializationTest.testClass":251,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":415,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":432,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.CompareToTest.testNotComparable":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":363,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":224,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":238,"org.easymock.tests.MockingTest.testTwoMocks":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":242,"org.easymock.samples.ExampleTest.removeNonExistingDocument":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":467,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":352,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":406,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":63,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":246,"org.easymock.tests.UsageVerifyTest.twoThrows":124,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":194,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":462,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":29,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":44,"org.easymock.tests2.CallbackTest.callback":196,"org.easymock.tests2.UsageConstraintsTest.equals":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":438,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":26,"org.easymock.tests.MockingTest.testStrictClassMocking":316,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.NameTest.nameForNiceMock":169,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.AnswerTest.stubAnswer":247,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests.UsageVarargTest.varargLongAccepted":46,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":443,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":95,"org.easymock.tests2.UsageConstraintsTest.testSame":222,"org.easymock.samples.SupportTest.addDocument":143,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":320,"org.easymock.tests2.NameTest.nameForMock":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":439,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":75,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":117,"org.easymock.tests2.MockedExceptionTest.testRealException":464,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":308,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":380,"org.easymock.tests2.NameTest.nameForStrictMock":168,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":421,"org.easymock.tests2.CaptureTest.testCaptureRightOne":275,"org.easymock.tests2.UsageConstraintsTest.testOr":223,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":187,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":418,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":8,"org.easymock.tests.UsageVarargTest.varargShortAccepted":45,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.UsageConstraintsTest.cmpTo":228,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":280,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":478,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":343,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests2.CaptureTest.testCapture":484,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.UsageConstraintsTest.constraints":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":141,"org.easymock.tests.UsageStrictMockTest.testVerify":89,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests2.CompareToTest.testGreateThan":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":203}}]
