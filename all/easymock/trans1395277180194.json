[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[17,18,19,32,20,33,34,35,36,37,38,21,39,22,23,24,25,26,40,41,42,27,28,43,44,45,46,29,30,31],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[47,48,33,49,50,51,43,52,53,29,30,54,55,56,57,58,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[64,65,66,17,67,68,69,18,19,70,71,72,73,74,20,33,75,76,77,78,79,80,81,82,83,84,85,86,87,88,37,38,21,89,23,24,25,26,90,91,92,93,94,95,96,97,98,99,100,27,101,28,43,29,30],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,12,117,118,64,16,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,72,145,73,48,74,9,10,146,21,147,148,149,150,151,152,153,154,155,156,157,158,159,100,27,51,160,161,162,163,164,165,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[167,168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[169],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[170,103,105,106,107,108,109,110,112,171,113,114,116],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[172,173,174,175,23,27],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[176,177,178,3,179,180,181,182,183,184,185,186,187,103,104,105,106,108,109,110,111,112,113,116,12,13,14,188,189,190,16,123,124,126,127,129,132,135,136,137,138,139,191,192,193,194,195,196,197,4,5,65,198,199,200,201,66,202,17,67,68,18,19,70,143,203,204,205,206,207,208,144,209,145,210,211,74,49,212,213,214,215,75,216,76,77,217,79,34,218,219,220,84,221,222,87,88,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,148,24,25,26,90,246,247,248,249,27,101,52,250,251,252,253,254,255,256,45,46,29,30,11,257,258,54,259,163,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[176,199,200,201,71,290,209,291,292,85,35,293,294,222,86,87,88,36,37,38,295,296,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[301,302,259],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[202,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[167,304,305,306,168,307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[176,185,186,309,309,310,310,12,14,190,191,192,193,194,196,197,198,199,200,201,203,204,206,207,208,71,144,72,290,209,311,312,313,221,85,314,35,293,222,86,87,88,36,37,315,38,295,296,236,316,317,246,247,248,250,251,298,252],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[47,48,20,33,21,318,319,320,321,50,51,28,43,53,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[3,4,322,7,8,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.Capture:82","failures":[103,105,106,107,108,109,110,112,171,113,114,116],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[204,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[172,173,174,175,23,27],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":218,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests2.DelegateToTest.testReturnException":188,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":301,"org.easymock.tests.MockingTest.testPartialClassMocking":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":173,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":291,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests.UsageExpectAndThrowTest.object":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":288,"org.easymock.tests2.DelegateToTest.testWrongClass":189,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.samples.ConstructorCalledMockTest.testTax":309,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":98,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":97,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":174,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":270,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":304,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":41,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":244,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":256,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":185,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.UsageExpectAndThrowTest.longType":261,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":265,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":236,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":298,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":83,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":286,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":72,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":203,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":208,"org.easymock.tests2.CompareToTest.testNotComparable":308,"org.easymock.tests2.CompareToTest.testCompareEqual":289,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":197,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":282,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":307,"org.easymock.tests.UsageThrowableTest.throwError":228,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":260,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.PartialClassMockTest.testGetArea":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":209,"org.easymock.tests2.UsageTest.niceToStrict":67,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":63,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":222,"org.easymock.tests2.UsageTest.defaultResetToNice":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":172,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":99,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":82,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":7,"org.easymock.samples.ExampleTest.voteForRemovals":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":284,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests.UsageVarargTest.allKinds":148,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":94,"org.easymock.samples.BasicClassMockTest.testPrintContent":186,"org.easymock.samples.ExampleTest.addDocument":181,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests2.AnswerTest.stubAnswer":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":311,"org.easymock.tests.UsageVarargTest.varargLongAccepted":243,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":276,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.samples.ExampleTest.voteForRemoval":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":268,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":310,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":108,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":269,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.GenericTest.testPackageScope":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":245,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":91,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":315,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":314,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":10,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests.ErrorMessageTest.testGetters":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":273,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":79,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":167,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":300,"org.easymock.tests.UsageVarargTest.varargShortAccepted":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":80,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":44,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":287,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests2.CaptureTest.testCaptureMultiple":170,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":283,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":255,"org.easymock.tests2.CaptureTest.testCapture":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":290,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":274,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests.ReplayStateInvalidCallsTest.times":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":157,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":281,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":92,"org.easymock.tests2.CompareToTest.testGreateThan":102,"org.easymock.tests2.UsageTest.resumeIfFailure":32,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":217}}]
