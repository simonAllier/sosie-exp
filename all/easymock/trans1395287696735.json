[{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[2],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[15,16,17,18,19],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[32,6,33,7,8,34,9,35,36,37,10,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,15,16,17,18,19,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,4,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,5,257,11,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,12,13,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,2,398,399,400,401,402,403,404,405,406,407,408,409,28,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,1,485,486,487,488,489,490,491,492,493,494,495,496,497,30,31,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.internal.Range:83","failures":[71,136,143,146,147,148,149,157,158,160,161,162,163,164,165,170,181,182,183,184,185,233,274,302,303,305,306,307,308,309,314,345,350,352,392,393,394,395,2,424,426,427,430,431,433,434,436,439,440,441,442,453,472,478,484,491],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[39,40,293,402,499,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[15,19],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[175,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[71,500,148,149,159,160,163,164,181,184,427,433,434,441],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[65,68,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[71,500,148,149,159,160,163,164,181,184,427,433,434,441],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:175","sourceCode":"java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[106,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[32,6,33,7,8,34,9,35,37,10,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,16,17,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,105,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,181,182,183,184,186,187,191,192,194,223,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,245,246,247,248,249,250,251,252,253,254,255,256,5,257,11,258,259,263,264,265,267,268,270,271,272,273,274,275,276,279,282,284,285,286,287,288,289,290,292,295,296,297,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,326,336,342,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,375,382,383,384,385,387,388,389,397,2,398,400,401,407,408,409,410,413,416,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,446,447,450,451,453,459,466,467,468,469,471,472,473,474,475,476,478,479,480,481,482,483,484,1,485,486,487,488,489,490,491,492,493,494,495,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[71,500,148,149,159,160,163,164,181,184,427,433,434,441],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[15,19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1555","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[32,6,33,7,8,34,9,36,37,10,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,16,17,18,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,3,102,103,123,124,125,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,191,192,194,214,220,224,225,226,227,229,230,231,232,233,234,235,236,237,238,5,257,11,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,275,276,279,281,282,284,285,286,287,288,289,292,295,296,297,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,326,336,342,345,346,347,348,349,350,12,13,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,375,382,383,384,385,387,388,389,396,397,2,398,399,400,403,407,409,410,414,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,450,451,452,453,459,466,467,468,469,471,472,473,474,475,476,477,478,479,480,481,482,483,484,1,485,486,487,488,489,490,491,492,493,495,497,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[71,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[32,6,33,7,8,34,9,36,37,10,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,16,17,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,103,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,158,160,161,162,163,164,165,170,172,174,175,177,179,180,181,182,183,184,185,186,187,191,192,194,214,222,224,225,226,227,229,230,231,232,233,5,257,11,258,259,263,264,265,267,268,269,270,271,272,273,274,275,276,279,284,285,286,287,288,289,292,296,297,298,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,323,326,336,342,345,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,375,382,383,384,385,387,388,389,392,393,394,395,397,2,398,400,403,407,409,410,414,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,450,451,452,453,459,466,467,468,469,471,472,473,474,475,476,477,478,479,480,481,482,483,484,1,485,486,487,488,489,490,491,492,493,495,497,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[213,220,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[502,21,22,23,25,26,27,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[503,504,159,181,505,506],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[214,281,282],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[21,22,23,25,26,28,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":469,"org.easymock.tests2.UsageTest.argumentsOrdered":434,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":429,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":167,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":128,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":44,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":476,"org.easymock.tests2.UsageTest.wrongArguments":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":154,"org.easymock.tests2.UsageConstraintsTest.testNull":472,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":287,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":366,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":146,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":63,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.UsageTest.argumentsOrdered":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":259,"org.easymock.tests.ReplayStateInvalidUsageTest.times":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":375,"org.easymock.tests2.DependencyTest.testClassMocking":448,"org.easymock.tests2.AnswerTest.answer":350,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":447,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":151,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":361,"org.easymock.tests2.DelegateToTest.testDelegate":400,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":59,"org.easymock.tests.LimitationsTest.mockFinalMethod":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":122,"org.easymock.tests2.DependencyTest.testClassMockingSupport":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":445,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":247,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":153,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":344,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.MockingTest.testInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":65,"org.easymock.tests2.UsageTest.niceToStrict":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":45,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":407,"org.easymock.tests2.MockBuilderTest.testCreateMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":53,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":482,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":83,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":481,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":266,"org.easymock.tests.MockClassControlTest.testEquals":132,"org.easymock.tests2.EasyMockSupportClassTest.testAll":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests.MockNameTest.defaultName":70,"org.easymock.tests2.UsageConstraintsTest.testMatches":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":245,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":112,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":424,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":359,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":166,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":360,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":426,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":62,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":489,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests.MockingTest.testNiceClassMocking":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":383,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests2.UsageConstraintsTest.testContains":480,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":348,"org.easymock.tests2.UsageConstraintsTest.testFind":471,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.MockTypeTest.fromEasyMockClass":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":497,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests.UsageExpectAndReturnTest.object":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":100,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":88,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.MockClassControlTest.testHashCode":131,"org.easymock.tests2.EasyMockSupportTest.testVerify":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":333,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":444,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":494,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":104,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":430,"org.easymock.tests.DefaultClassInstantiatorTest.object":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":123,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":342,"org.easymock.tests2.UsageTest.resumeIfFailure":435,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":4,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":169,"org.easymock.tests2.StubTest.stubWithReturnValue":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":28,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":356,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":507,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":56,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.UsageExpectAndThrowTest.object":54,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":69,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":487,"org.easymock.tests2.DelegateToTest.testWrongClass":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests.UsageStrictMockTest.range":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":66,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":337,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageConstraintsTest.any":478,"org.easymock.tests2.StubTest.stub":452,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":168,"org.easymock.tests.UsageExpectAndThrowTest.longType":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":440,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":459,"org.easymock.tests2.SerializationTest.testClass":354,"org.easymock.tests.LimitationsTest.mockNativeMethod":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":443,"org.easymock.tests2.NameTest.nameForMocksControl":395,"org.easymock.tests2.MockedExceptionTest.testMockedException":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":325,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":48,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":410,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":502,"org.easymock.tests2.CaptureTest.testCaptureLast":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":389,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":488,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":433,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":492,"org.easymock.samples.ExampleTest.removeNonExistingDocument":35,"org.easymock.tests.UsageStrictMockTest.differentMethods":185,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":107,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":416,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":126,"org.easymock.tests.UsageExpectAndThrowTest.floatType":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":498,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":336,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.LimitationsTest.privateConstructor":278,"org.easymock.tests2.UsageConstraintsTest.testNotNull":491,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":346,"org.easymock.tests2.UsageTest.defaultResetToNice":432,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":210,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.CallbackTest.callback":345,"org.easymock.tests2.UsageConstraintsTest.equals":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":144,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":388,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":387,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":353,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":25,"org.easymock.tests2.NameTest.nameForNiceMock":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.ExampleTest.addDocument":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":338,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.AnswerTest.stubAnswer":352,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":467,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests2.SerializationTest.test":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testSame":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":73,"org.easymock.samples.SupportTest.addDocument":37,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":386,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":328,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":195,"org.easymock.tests2.NameTest.nameForMock":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":442,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":415,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":58,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":29,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":256,"org.easymock.tests2.NameTest.nameForStrictMock":393,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":501,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":403,"org.easymock.tests2.UsageStrictMockTest.range":441,"org.easymock.tests2.UsageConstraintsTest.lessThan":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":358,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":332,"org.easymock.tests2.UsageConstraintsTest.testOr":474,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageTest.wrongArguments":160,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":329,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":479,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":431,"org.easymock.tests2.CaptureTest.testCaptureFromStub":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":404,"org.easymock.tests.UsageTest.unexpectedCallWithArray":159,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":86,"org.easymock.tests2.CaptureTest.testCapture":14,"org.easymock.tests2.UsageConstraintsTest.constraints":468,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.samples.ExampleTest.addAndChangeDocument":36,"org.easymock.tests.UsageStrictMockTest.testVerify":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":119,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":78,"org.easymock.tests.LimitationsTest.abstractClass":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":258,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":363}}]
