[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[15],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[16,17,18,19,20,1,21,22,2,23,24,3,4,25,26,27,28,29,30,31,32,33,34,35,36,37,38,5,39,6,40,41,42,43,44,7,8,9,10,45,46,47,48,11,49,50,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[51,52,53,54],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[61,61,62,62,63,64,65,66,16,67,68,69,70,71,72,73,74,17,75,18,76,77,78,79,80,81,31,82,83,84,85,86,87,88,32,33,34,89,90,91,92,93,94,95,96,97,98,57,59,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,56,146,147,148,149,150,151,152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[156],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[1,21,6,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[157,158,5,7,159,160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[161],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[162,163,164,165,166,167,168,66,16,169,67,68,69,71,74,75,78,79,80,170,19,171,172,20,1,21,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,22,196,197,2,23,24,198,199,200,3,4,25,26,81,84,85,33,34,89,92,93,95,96,201,202,203,204,205,57,58,59,35,206,207,208,209,210,211,212,213,214,215,216,52,217,36,218,219,220,156,221,222,223,224,225,226,227,228,229,37,53,230,231,232,233,54,234,235,236,237,238,239,240,125,126,127,38,241,5,242,39,6,40,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,44,285,7,8,286,287,9,10,45,288,289,290,291,131,46,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,12,307,13,14,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,145,146,147,326,327,328,329,330,331,151,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[182,190,355,266,272,278,282,284,44,356,12,335,341,347,351,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:60","failures":[357,358,359,360,361,90,93,96,362,363,364],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[16,17,18,19,20,1,21,22,2,23,24,3,4,25,26,27,28,29,30,31,32,33,34,35,36,37,38,5,39,6,40,41,42,43,44,7,8,9,10,45,46,47,48,11,49,50,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[16,17,18,19,20,1,21,22,2,23,24,3,4,25,26,27,28,29,30,31,32,33,34,35,214,36,37,38,5,39,6,40,41,42,43,44,7,8,9,10,45,46,47,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[366,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[61,62,63,367,64,65,162,163,164,165,166,167,168,368,369,370,66,169,67,68,69,71,74,75,78,79,80,170,171,172,21,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,191,371,192,193,194,195,196,197,23,24,200,25,372,27,373,374,375,28,29,376,377,30,378,379,380,81,84,85,86,87,89,91,92,93,94,381,95,96,201,202,203,204,57,58,59,382,102,105,115,121,35,206,207,208,209,211,212,213,216,52,217,36,218,219,220,156,221,222,223,224,225,226,227,228,229,37,53,230,231,232,233,54,234,235,236,237,383,238,239,240,125,126,127,241,242,40,243,244,245,246,249,250,251,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,289,290,291,131,46,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,13,14,309,310,316,317,318,319,320,321,322,323,324,325,145,146,147,326,327,328,329,330,331,151,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[78,79,80,170,22,199,207,247,248,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,44,287,296,13,308,310,311,312,313,314,315,326,327,328,329,330,331,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[385,223,228,236],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[308,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[61,61,62,62,63,64,65,66,16,67,68,69,70,71,72,73,74,17,75,18,76,77,78,79,80,81,386,31,82,83,84,85,86,87,88,32,33,387,34,388,89,90,91,92,93,94,95,96,97,98,57,59,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,389,390,124,125,126,127,391,128,129,130,131,132,133,134,392,393,135,394,137,138,139,140,141,142,144,145,56,146,147,148,149,150,395,151,152],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[61,61,62,62,63,162,164,165,167,369,66,169,67,69,78,79,80,170,178,179,181,182,185,186,187,188,189,190,191,371,22,196,23,198,199,200,25,26,372,27,373,374,375,28,29,376,377,30,378,379,31,84,86,87,33,89,91,92,93,94,381,95,96,204,382,102,105,115,121,35,207,396,208,209,210,397,211,212,213,214,215,216,52,217,218,219,156,221,222,223,224,225,226,227,228,229,37,53,230,231,232,233,54,235,236,398,399,400,401,402,240,124,125,126,127,249,250,251,403,259,265,266,267,268,269,273,274,280,281,282,283,284,44,286,287,45,404,405,295,296,406,407,408,307,13,14,308,310,311,312,313,314,315,316,317,319,321,322,323,324,325,146,148,409,326,327,330,331,151,410,411,412,413,414,332,333,334,335,336,337,338,342,343,349,350,351,352,353],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[415,416,417],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:959","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[232],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[68,24,37,0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[415,416,417],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":367,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":132,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":129,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests.UsageTest.moreThanOneArgument":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":325,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":371,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":195,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":375,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests.LimitationsTest.mockFinalMethod":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":403,"org.easymock.tests2.CaptureTest.testCapture1_2446744":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":193,"org.easymock.tests.UsageThrowableTest.throwError":308,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":123,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests2.CompareToTest.testLessOrEqual":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":410,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":110,"org.easymock.tests2.UsageTest.niceToStrict":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":118,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":147,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":314,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":76,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":373,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":374,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":341,"org.easymock.tests2.CaptureTest.testCapture2_2446744":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.GenericTest.testBridgedEquals":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":372,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":387,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":404,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":313,"org.easymock.tests.MockingTest.testNiceClassMocking":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":390,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":386,"org.easymock.tests2.UsageConstraintsTest.testContains":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":254,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":296,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageExpectAndReturnTest.object":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":377,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":400,"org.easymock.tests.ResultTest.createThrowResultToString":155,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockSupportTest.testVerify":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":112,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":398,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":192,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":136,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":415,"org.easymock.tests.DefaultClassInstantiatorTest.object":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":406,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":412,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":359,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":158,"org.easymock.samples.SupportTest.voteForRemovals":369,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":60,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":411,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":49,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":116,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":382,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":365,"org.easymock.tests2.MockedExceptionTest.testMockedException":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":235,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":252,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":139,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":106,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.ResultTest.createReturnResultToString":154,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.tests.ResultTest.createDelegateResultToString":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":395,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":234,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":315,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":349,"org.easymock.tests.UsageVarargTest.differentLength":47,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":72,"org.easymock.tests.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":312,"org.easymock.tests.MockingTest.testStrictClassMocking":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":333,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":381,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests2.CompareToTest.testGreateOrEqual":385,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":242,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":230,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":217,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":138,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":335,"org.easymock.samples.SupportTest.addDocument":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":107,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":346,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests2.MockedExceptionTest.testRealException":170,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":236,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":111,"org.easymock.tests2.UsageConstraintsTest.testOr":221,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.MockBuilderTest.testWithConstructor":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":347,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":82,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":348,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":39,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.samples.ExampleTest.addAndChangeDocument":168,"org.easymock.tests2.ConstraintsToStringTest.containsToString":384,"org.easymock.tests.UsageStrictMockTest.testVerify":244,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":370,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.LimitationsTest.abstractClass":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":340,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":298}}]
