[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:111","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[54,55,56,1,2,3,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,5,7,136,137,9,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,12,179,180,181,182,183,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,15,16,17,18,225,19,20,22,23,25,26,28,226,227,30,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,31,32,33,34,35,36,267,37,38,39,41,43,44,45,268,269,270,48,48,49,49,50,271,272,273,274,275,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[277,278,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[280,185,203,209],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[281,17,20,282,283,284,285,286,287,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[280,185,187,203,209],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[290,291,246,247,248,249,250,251,252,253,254,255,292,256,257,258,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,1,2,3,4,5,6,7,293,294,9,10,295,296,297,12,13,14,15,16,17,18,19,20,21,298,22,299,23,24,25,26,27,28,300,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,49,50],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[301,203],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[280,185,187,203,209],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[55,56,62,73,302,303,304,305,306,307,79,308,81,82,130,309,310,311,312,134,313,314,315,179,316,317,182,183,187,202,214,218,219,222,22,27,28,29,231,318,234,319,320,321,238,239,36,43,45],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[323,324,325,326,327,12,281,285],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[328,173,175],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[54,55,56,329,330,0,1,2,331,3,332,333,334,57,58,59,60,61,62,63,64,65,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,328,350,351,352,353,354,66,355,356,357,358,359,67,360,361,362,51,363,364,365,52,366,367,68,69,70,71,72,73,368,369,370,371,372,373,304,374,375,376,377,74,306,75,76,77,78,378,379,380,381,382,383,307,384,79,80,308,81,82,385,386,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,387,106,107,108,388,109,389,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,309,310,132,133,311,312,134,390,391,135,392,393,394,313,314,315,395,5,6,7,8,293,396,397,398,399,294,400,401,402,403,404,405,406,407,408,409,410,411,53,412,413,414,415,416,136,137,417,418,9,419,138,139,140,141,142,143,144,145,146,420,10,421,422,423,424,425,11,426,147,427,148,428,149,150,429,151,430,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,431,432,433,434,435,172,436,437,438,439,440,441,173,174,175,176,177,178,12,281,442,179,443,444,445,446,447,180,448,449,450,451,452,453,316,454,181,317,182,183,455,13,184,14,185,186,187,188,456,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,457,15,16,17,18,458,225,19,20,282,459,460,461,462,21,283,22,299,284,463,23,24,25,285,26,464,465,27,28,287,29,226,227,30,228,466,229,467,230,231,232,233,318,234,319,235,236,237,320,321,238,239,240,241,242,243,244,245,468,469,470,471,472,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,473,474,475,31,476,477,32,478,479,480,481,482,483,484,485,486,33,487,488,489,490,491,34,492,493,35,36,267,37,38,39,40,494,41,495,496,42,43,44,45,497,498,499,500,268,269,501,502,503,504,505,506,507,508,270,46,47,509,48,49,50,271,272,273,274,510,275,511,276,512],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[54,55,56,58,59,62,64,65,68,69,73,368,369,370,372,373,374,375,376,377,74,75,76,77,378,381,384,80,308,81,82,385,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,311,134,135,392,393,394,314,315,5,6,8,136,137,9,138,139,140,141,142,143,425,11,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179,180,454,181,317,182,183,455,184,14,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,457,15,18,225,226,227,30,228,229,230,231,232,233,234,319,235,236,320,238,239,240,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,31,35,36,267,37,38,39,41,268,269,508,270,46,47,509,271,272,273,274,510,275,276,512],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[513,200,207,212],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[54,55,56,1,2,3,62,63,64,65,335,336,337,338,339,362,68,69,73,368,369,370,372,373,304,374,375,376,377,74,75,76,77,379,380,381,307,384,79,80,308,81,82,385,386,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,309,310,132,133,311,312,134,390,391,135,392,393,394,313,314,315,5,6,402,403,404,405,406,407,408,409,410,411,53,412,413,414,415,416,136,137,9,138,139,140,141,142,143,420,10,421,422,423,424,425,11,148,149,150,151,430,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,12,179,180,316,454,181,317,182,183,455,13,184,14,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,457,15,16,17,18,225,19,20,459,460,461,462,21,22,23,24,25,26,27,28,29,226,227,30,228,229,230,231,232,233,318,234,319,235,236,237,320,321,238,239,240,243,244,245,469,470,471,472,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,31,32,33,34,35,36,267,37,38,39,40,41,42,43,44,45,268,269,508,270,46,47,509,48,49,50,271,272,273,274,510,275,511,276,512],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[55,62,68,76,307,79,80,81,82,93,94,96,97,98,99,100,101,104,310,311,312,179,316,181,182,183,185,186,187,188,189,191,192,193,194,196,198,199,200,201,202,203,204,205,206,207,209,211,212,214,215,216,217,218,219,221,222,223,224,28,318,234,319,320,321,244,246,247,248,249,250,251,252,253,255,256,257,258,259,261],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[329,330,0,1,2,3,334,362,51,363,364,365,52,367,4,395,5,6,8,417,418,9,419,420,10,421,422,423,424,425,11,14,15,16,17,18,19,20,226,227,30,473,31,477,478,479,482,485,487,488,491,35,36,37,38,39,40,41,496,42,43,44,45,497,498,501,505,46,47,48,49,50],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[244,48,48,49,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.EasyMock:2124","failures":[229,467,230,240,243,244,272],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":188,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.UsageTest.argumentsOrdered":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":509,"org.easymock.tests2.DelegateToTest.testReturnException":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":1,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":110,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageTest.wrongArguments":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":404,"org.easymock.samples.ExampleTest.answerVsDelegate":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":294,"org.easymock.tests2.UsageConstraintsTest.testNull":190,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":11,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":249,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.UsageTest.moreThanOneArgument":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":129,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":57,"org.easymock.tests.UsageTest.argumentsOrdered":312,"org.easymock.tests.UsageVarargTest.varargIntAccepted":370,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":279,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":87,"org.easymock.tests.ReplayStateInvalidUsageTest.times":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":240,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":462,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":397,"org.easymock.tests2.CaptureTest.testAnd":246,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests2.DelegateToTest.testDelegate":178,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":125,"org.easymock.tests.LimitationsTest.mockFinalMethod":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":460,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":408,"org.easymock.tests.UsageThrowableTest.throwError":93,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":92,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":409,"org.easymock.tests.MockingTest.testInterfaceMocking":331,"org.easymock.tests2.CompareToTest.testLessOrEqual":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":119,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":255,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":371,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":127,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":461,"org.easymock.tests2.CaptureTest.testCaptureAll":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":91,"org.easymock.samples.ExampleTest.voteForRemovals":275,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":54,"org.easymock.samples.BasicClassMockTest.testPrintContent":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":99,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":327,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":497,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":4,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":173,"org.easymock.tests2.CaptureTest.testCaptureFirst":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":258,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":377,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":128,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testNiceClassMocking":334,"org.easymock.tests.MockingTest.testClassMocking":330,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":298,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":189,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":324,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":373,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":381,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockSupportTest.testVerify":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":59,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":459,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":302,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":466,"org.easymock.tests.UsageVarargTest.varargCharAccepted":372,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":361,"org.easymock.tests2.CaptureTest.testCaptureMultiple":291,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":144,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":116,"org.easymock.tests.CapturesMatcherTest.test":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.UsageTest.resumeIfFailure":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.StubTest.stubWithReturnValue":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":66,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":122,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":67,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":241,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":506,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":72,"org.easymock.tests2.CaptureTest.testCaptureNone":254,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":305,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests.UsageVarargTest.varargByteAccepted":376,"org.easymock.tests2.ThreadingTest.testThreadSafe":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":46,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":412,"org.easymock.tests2.StubTest.stub":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":53,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests.LimitationsTest.mockNativeMethod":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":297,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests2.NameTest.nameForMocksControl":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":477,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":3,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":2,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests2.CaptureTest.testCaptureLast":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":0,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":118,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":211,"org.easymock.samples.ExampleTest.removeNonExistingDocument":511,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":264,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":112,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":442,"org.easymock.tests.UsageVerifyTest.twoThrows":55,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests.LimitationsTest.privateConstructor":418,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":289,"org.easymock.tests2.UsageConstraintsTest.testNotNull":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":100,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests2.UsageTest.defaultResetToNice":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":304,"org.easymock.tests2.CallbackTest.callback":179,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":495,"org.easymock.tests.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":103,"org.easymock.tests.UsageCallCountTest.tooFewCalls":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":97,"org.easymock.tests.MockingTest.testStrictClassMocking":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.ObjectMethodsTest.testHashCode":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":278,"org.easymock.tests2.NameTest.nameForNiceMock":471,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":266,"org.easymock.tests2.DependencyTest.testInterfaceMocking":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":325,"org.easymock.samples.ExampleTest.addDocument":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":175,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":80,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":464,"org.easymock.tests.UsageVarargTest.varargLongAccepted":375,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageThrowableTest.noUpperLimit":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":186,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":501,"org.easymock.tests2.SerializationTest.test":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":251,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.samples.SupportTest.addDocument":508,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":458,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":479,"org.easymock.tests.GenericTest.testPackageScope":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":332,"org.easymock.tests2.NameTest.nameForMock":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":496,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":124,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":65,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":352,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests2.NameTest.nameForStrictMock":470,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":505,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":182,"org.easymock.tests2.UsageConstraintsTest.lessThan":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":256,"org.easymock.tests2.UsageConstraintsTest.testOr":192,"org.easymock.tests.UsageRangeTest.combination":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests2.MockBuilderTest.testWithConstructor":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":242,"org.easymock.tests2.CompareToTest.testLessThan":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests2.CaptureTest.testCaptureFromStub":257,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":407,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":299,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":393,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.CaptureTest.testCapture":292,"org.easymock.tests2.UsageConstraintsTest.constraints":187,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":276,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":512,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":384,"org.easymock.tests2.CompareToTest.testGreateThan":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":85,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":296,"org.easymock.tests.LimitationsTest.abstractClass":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":369}}]
