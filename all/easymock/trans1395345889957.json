[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[366,367,444,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[453,454,455],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[30,147,153,154,235,238,276,277,456,370,371,374,375,429,452],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[56],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[157,158,159,160,209,262,263,264,265,266,267,279,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,7,8,10,11,12,13,14,17,18,23,25,26,27,28,29,30,31,32,42,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,97,99,100,101,102,103,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,166,173,175,176,178,179,182,202,203,204,206,207,208,209,215,216,218,219,220,221,222,223,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,275,276,277,278,279,317,318,319,320,323,334,338,339,340,341,343,344,363,364,368,369,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,396,397,398,399,400,401,402,403,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,446,448,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[457,458,28,49,50,54,55,56,57,63,65,66,68,69,75,76,77,89,209,219,220,221,222,223,236,278,389,390,391,392,393,397,398,401,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,17,18,23,25,27,28,29,30,31,32,42,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,95,96,99,100,101,102,103,104,107,111,453,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,137,139,140,144,145,146,147,148,149,150,151,153,154,155,156,159,166,173,174,459,175,176,460,461,462,178,179,182,184,189,195,202,203,204,206,207,208,209,215,216,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,268,270,271,275,276,277,278,463,464,465,317,318,319,334,338,339,340,341,343,344,368,369,371,372,373,374,375,376,377,378,379,381,382,384,385,386,387,388,389,390,391,392,393,396,397,398,399,400,401,402,403,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,446,448,449,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[49,51,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[51,52,54,55,56,57,58,59,60,61,70,71,75,76,78,79,80,81,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[9,105,110,111,114,133,134,135,137,138,139,140,141,142,143,462,184,189,195,217,326,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[160,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[467,468,469,470,471,472,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,31,32,146,197,198,199,200,236,239,240,275,276,277,336,338,339,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[26,29,30,31,51,67,100,110,112,121,125,126,129,134,141,142,143,144,147,148,149,153,154,155,156,207,233,235,237,238,239,268,276,277,477,478,342,343,344,479,456,368,370,371,374,375,376,383,429],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[0,2,3,5,9,12,17,18,28,30,31,42,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,81,82,85,86,87,88,90,91,96,99,100,101,102,103,104,107,110,111,112,453,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,137,139,140,142,144,145,146,148,150,151,152,155,156,159,166,173,174,459,175,176,460,461,462,178,182,184,189,195,203,209,215,217,236,238,239,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,268,269,270,271,273,275,277,278,292,294,303,304,306,463,464,465,315,316,317,318,319,334,368,369,372,373,376,389,390,391,392,393,397,398,401,402,403,430,432,433,434,435,436,437,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[144,209,266,276,286,319,368,400,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,432,433,434,435,436,437,443,444,445,449],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[365,443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[105,114,133,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[7,23,25,49,65,68,77,79,85,86,91,115,116,117,146,206,207,242,248,254,258,260,295,299,319,369,409,415,421,425,427,429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[457,458,453,454,480,481,455,482,483,484,485,486,459,461,177,462,180,181,487,182,488,183,184,185,186,489,490,187,491,492,188,493,189,190,191,192,193,194,195,494,495],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[496],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[457,458,497,453,454,480,481,455,482,483,484,498,499,500,462],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":368,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":293,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":463,"org.easymock.tests.MockClassControlTest.testToString":359,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":196,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":409,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":397,"org.easymock.tests2.UsageTest.wrongArguments":147,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":212,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":329,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":428,"org.easymock.tests.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":438,"org.easymock.tests.UsageTest.argumentsOrdered":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.ReplayStateInvalidUsageTest.times":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":475,"org.easymock.tests2.DependencyTest.testClassMocking":15,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":36,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":442,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":424,"org.easymock.tests.LimitationsTest.mockFinalMethod":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":408,"org.easymock.tests2.DependencyTest.testClassMockingSupport":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":280,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":34,"org.easymock.tests.UsageThrowableTest.throwError":430,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":347,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":328,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":348,"org.easymock.tests2.CompareToTest.testLessOrEqual":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":187,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":418,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":210,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":471,"org.easymock.tests.UsageOverloadedMethodTest.overloading":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":253,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests2.EasyMockSupportClassTest.testAll":182,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":35,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests.MockNameTest.defaultName":395,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":345,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":388,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":407,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":436,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":232,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":396,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":249,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":387,"org.easymock.tests.GenericTest.testBridgedEquals":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":343,"org.easymock.tests.UsageExpectAndReturnTest.longType":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":427,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":344,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":414,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests.MockingTest.testNiceClassMocking":313,"org.easymock.tests.MockingTest.testClassMocking":308,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":159,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":319,"org.easymock.tests.MockTypeTest.fromEasyMockClass":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":473,"org.easymock.tests.UsageTest.exactCallCountByLastCall":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":258,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":162,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":98,"org.easymock.tests.UsageVarargTest.varargCharAccepted":381,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":224,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":467,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":456,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":360,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":299,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.UsageExpectAndThrowTest.object":419,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":402,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":403,"org.easymock.samples.ConstructorCalledMockTest.testTax":457,"org.easymock.tests.UsageStrictMockTest.range":238,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":420,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":355,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":211,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests.UsageUnorderedTest.message":429,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":477,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":386,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests2.StubTest.stub":208,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndThrowTest.longType":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":351,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":462,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.LimitationsTest.mockNativeMethod":334,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":39,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":373,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":465,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":413,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":24,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":464,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CompareToTest.testCompareEqual":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":37,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":309,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":417,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.samples.ExampleTest.removeNonExistingDocument":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":44,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":163,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":227,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.floatType":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":95,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":294,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":486,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":437,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":157,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":38,"org.easymock.tests.UsageVarargTest.differentLength":383,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":497,"org.easymock.tests.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":399,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":213,"org.easymock.tests.UsageThrowableTest.throwCheckedException":434,"org.easymock.tests.MockingTest.testStrictClassMocking":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests.ObjectMethodsTest.testHashCode":322,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests2.NameTest.nameForNiceMock":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":385,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.floatType":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":453,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":458,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageThrowableTest.noUpperLimit":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":170,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":19,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":226,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":243,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":186,"org.easymock.tests.GenericTest.testPackageScope":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":169,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":484,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":423,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":499,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":398,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":356,"org.easymock.tests2.NameTest.nameForStrictMock":198,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":20,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":491,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":371,"org.easymock.tests2.MockBuilderTest.testWithConstructor":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":489,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":384,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":248,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":378}}]
