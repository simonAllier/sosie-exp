[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,1,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[4,210,5,6,7,211,212,213,214,215,216,8,9,10,11,217,12,13,15,16,218,17,18,219,19,20,220,21,22,23,24,25,26,221,222,27,28,29,223,30,31,32,224,225,33,34,35,226,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,227,60,0,1,2,228,65,66,229,67,68,230,69,231,232,233,234,235,70,236,237,238,71,72,73,74,75,76,77,78,239,79,240,80,81,82,241,242,83,243,84,85,86,87,88,89,90,91,92,93,94,95,96,244,245,97,98,99,100,101,102,103,104,105,106,107,246,247,108,109,110,111,248,112,113,114,115,116,117,118,119,120,249,250,251,252,253,254,255,121,256,257,258,259,122,260,261,123,124,125,262,263,126,127,264,128,265,266,267,268,129,269,270,271,272,130,273,274,275,276,277,278,279,280,281,131,132,133,134,135,136,137,138,282,283,284,285,286,140,141,143,144,145,146,149,287,288,150,152,153,289,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,290,291,185,186,292,187,293,294,295,296,188,297,298,299,300,189,301,302,303,304,305,191,192,193,306,194,195,196,197,198,199,200,201,202,307,308,203,204,205,206,207,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[10,14,21,26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.LastControl:95","failures":[216,8,10,217,12,14,21,26,97,99,107],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[216,8,10,217,12,14,21,26,97,99,107],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[223,48,51,52,61,62,63,64,258,134,137,138,182,183,184,190,305,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[7,211,213,59,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[4,210,5,6,7,211,213,214,215,216,8,9,10,11,217,12,13,15,16,218,17,18,219,19,20,220,21,22,23,24,25,26,221,222,27,28,29,223,30,31,32,224,225,33,34,35,226,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,227,60,61,62,63,64,0,1,2,228,65,66,229,67,68,230,69,231,232,233,234,235,70,236,237,238,71,72,73,74,75,76,77,78,239,79,240,80,81,82,241,242,83,243,84,85,86,87,88,89,90,91,92,93,94,95,96,244,245,97,98,99,100,101,102,103,104,105,106,107,246,247,108,109,314,315,316,110,111,248,112,113,114,115,116,117,118,119,120,249,250,251,252,253,254,255,121,256,257,258,259,122,260,261,123,124,125,262,263,126,127,264,128,265,266,267,268,129,269,270,271,272,130,273,274,275,276,277,278,279,280,281,131,132,133,134,135,136,137,138,139,317,318,319,320,321,322,323,324,282,283,284,285,286,140,141,142,143,144,145,146,148,149,325,287,288,150,151,152,153,155,289,156,326,327,328,329,330,331,332,333,334,335,336,337,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,290,291,185,186,292,187,293,294,295,296,188,297,298,299,300,189,301,302,303,304,190,338,305,191,192,193,306,194,195,196,197,198,199,200,201,339,202,307,307,308,308,203,204,205,206,207,208,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[340,341,342,343,0,344,345,70,346],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[309,310],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[340,341,342,347,348,344,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[211,8,20,29,223,30,32,34,35,37,47,48,49,50,51,52,53,74,75,81,82,86,90,93,349,350,351,352,353,354,355,356,357,358,359,244,360,361,362,363,364,365,366,252,258,259,122,260,123,124,262,132,133,134,136,137,138,139,147,148,149,151,152,153,154,155,289,162,163,177,182,183,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,368],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[37,40,369,53,370,371,372,373,374,375,376,377,2,73,74,76,77,78,79,378,240,82,379,380,242,83,381,382,383,384,109,385,386,387,388,389,317,318,319,320,321,322,323,324,142,390,391,392,393,394,395,145,146,310,156,208,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[396],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[397,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[7,214,215,216,8,9,11,217,12,13,15,218,17,18,219,19,20,220,21,22,23,25,221,222,30,31,32,34,35,46,48,50,51,227,69,85,86,87,88,89,90,92,93,94,95,245,97,98,99,100,101,102,103,104,106,107,246,247,108,111,122,123,124,131,133,134,136,137,143,149,157,160,163,164,166,167,168,169,170,183],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[216,8,10,217,12,14,21,26,97,99,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[399,311,3,400,401],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[54,65,69,80,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[16,3,79],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[30,34,35,50,366,259,122,123,124,133,136,289,162,183,184],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[402],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[216,8,217,12,14,21,97,99,107],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[403,4,210,5,404,6,7,211,213,214,215,216,8,9,10,11,217,12,13,15,16,218,17,18,219,19,20,220,21,22,23,25,26,221,222,27,28,29,223,31,224,225,33,226,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,58,312,405,59,227,60,0,1,65,66,67,68,69,70,236,237,238,71,72,73,74,75,76,77,78,79,80,81,82,241,242,83,243,84,85,86,87,88,89,90,91,92,93,94,95,244,245,97,98,100,101,104,105,106,107,246,247,108,109,110,111,248,112,113,114,115,116,117,118,119,252,253,254,255,121,256,257,258,260,261,125,262,263,126,127,264,128,265,266,267,268,129,269,270,271,272,130,273,274,275,276,406,407,408,134,136,137,282,283,284,285,286,409,410,411,140,141,143,144,412,413,145,414,148,149,325,287,288,150,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,415,182,183,184,416,417,418,290,291,185,186,292,187,293,294,295,296,188,297,298,299,300,189,301,302,303,304,419,305,420,421,422,423,424,196,197,198,199,201,202,307,307,308,308,204,207],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,103,104,106,107,246,247,108,425],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,224,225,36,48,58,257,260,261,125,134,182,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[426,427,428,429,307,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[403,4,210,5,404,6,7,211,212,213,214,215,216,8,430,9,10,11,217,12,13,14,15,16,218,17,18,219,19,20,220,21,22,23,24,25,26,221,222,431,432,433,434,435,27,436,437,438,439,440,441,28,29,223,30,31,32,224,225,33,34,35,226,36,37,38,39,40,442,41,42,43,443,444,445,44,45,46,47,48,49,50,51,52,369,446,447,53,448,370,54,371,372,449,450,373,451,452,374,453,55,375,376,454,455,377,56,456,457,458,459,460,461,462,463,57,464,465,466,467,468,469,58,312,405,59,227,60,470,61,62,63,64,0,1,2,228,471,65,472,473,474,66,229,67,344,68,475,345,230,69,427,231,232,233,234,235,70,346,476,236,237,238,71,72,73,74,75,76,77,78,239,477,79,429,378,240,80,81,82,379,380,241,242,83,243,84,85,86,87,88,89,90,91,92,93,94,95,96,381,478,479,480,382,481,482,244,245,97,98,99,100,101,102,103,104,105,106,107,246,247,108,383,384,109,385,483,314,315,316,484,485,110,111,248,386,387,388,112,113,486,114,487,488,389,115,116,117,118,119,120,249,250,251,252,253,254,255,121,256,489,257,258,259,122,260,261,123,124,125,262,263,126,127,264,128,265,266,267,268,129,269,270,271,272,130,273,274,275,276,277,278,279,280,281,406,407,408,131,132,133,134,135,136,137,138,139,317,318,319,320,321,322,323,324,282,283,284,285,286,409,410,411,140,141,490,142,390,391,392,393,394,491,395,143,144,492,493,494,495,496,497,498,499,500,501,502,503,504,505,313,506,507,412,508,509,510,511,512,413,513,309,145,146,414,310,147,148,514,149,325,287,288,150,151,152,153,154,155,289,156,326,327,328,329,330,331,332,333,334,335,336,337,157,158,159,160,161,162,515,516,517,518,519,520,521,522,163,164,165,166,167,168,169,170,523,415,524,171,172,173,525,174,175,176,177,178,179,180,181,182,183,184,416,417,418,290,291,185,186,292,187,293,294,295,296,188,297,298,299,300,189,301,302,303,304,419,190,338,305,191,192,193,306,194,195,420,421,422,423,424,196,197,198,199,200,201,339,202,307,308,203,204,205,206,207,208,209],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[526,527,528],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[7,216,19,28,30,31,32,34,35,226,36,46,49,50,51,65,230,69,231,74,80,82,85,89,90,93,529,366,257,259,122,123,124,125,131,133,135,136,137,530,492,149,162,176,183,184,306,194,195],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":503,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":319,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":470,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":510,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":520,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":324,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":507,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":119,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":353,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.DependencyTest.testClassMocking":444,"org.easymock.tests2.AnswerTest.answer":58,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":508,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":517,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":424,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.DependencyTest.testClassMockingSupport":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":147,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.UsageThrowableTest.throwError":163,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":328,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":519,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":286,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":457,"org.easymock.samples.PartialClassMockTest.testGetArea":204,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests2.CompareToTest.testLessOrEqual":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":410,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":485,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":516,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":120,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":397,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":525,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":355,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":181,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":182,"org.easymock.samples.BasicClassMockTest.testPrintContent":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":198,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":521,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":86,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":403,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":87,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":294,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":71,"org.easymock.tests2.UsageTest.moreThanOneArgument":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":509,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":361,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests2.UsageConstraintsTest.testContains":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":9,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests.MockTypeTest.fromEasyMockClass":518,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":498,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":523,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":346,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.MockClassControlTest.testHashCode":322,"org.easymock.tests2.EasyMockSupportTest.testVerify":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":452,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":529,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":458,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":513,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":527,"org.easymock.tests.DefaultClassInstantiatorTest.object":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":80,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.CapturesMatcherTest.test":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":320,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":354,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":412,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":357,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":270,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":368,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":413,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":312,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":524,"org.easymock.tests.UsageExpectAndThrowTest.object":129,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":141,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":307,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":411,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.UsageUnorderedTest.message":162,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":530,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":402,"org.easymock.tests.UsageVerifyTest.twoReturns":184,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":375,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":484,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":208,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":511,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":160,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":512,"org.easymock.tests.UsageExpectAndThrowTest.longType":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.NameTest.nameForMocksControl":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests2.MockedExceptionTest.testMockedException":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.CompareToTest.testCompareEqual":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":23,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.samples.ExampleTest.removeNonExistingDocument":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":238,"org.easymock.tests2.ConstraintsToStringTest.andToString":356,"org.easymock.tests2.MockBuilderTest.testCreateMockString":231,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":476,"org.easymock.tests.UsageVerifyTest.twoThrows":183,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.tests.ResultTest.createDelegateResultToString":367,"org.easymock.samples.ExampleTest.voteAgainstRemoval":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":409,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":241,"org.easymock.tests2.UsageTest.defaultResetToNice":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.UsageVarargTest.differentLength":176,"org.easymock.tests2.CallbackTest.callback":7,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":41,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":60,"org.easymock.tests2.CompareToTest.testGreateOrEqual":400,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":347,"org.easymock.tests2.NameTest.nameForNiceMock":63,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":342,"org.easymock.samples.ExampleTest.addDocument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.DelegateToTest.testStubDelegate":210,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":475,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":502,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":308,"org.easymock.tests2.ConstraintsToStringTest.orToString":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests.UsageThrowableTest.noUpperLimit":164,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":381,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":398,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":291,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests2.NameTest.nameForMock":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":427,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":272,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":288,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":506,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":364,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":62,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":528,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":392,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":451,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":122,"org.easymock.tests2.MockBuilderTest.testWithConstructor":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":449,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":16,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests2.CompareToTest.testLessThan":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":327,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":472,"org.easymock.tests.UsageTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.UsageConstraintsTest.constraints":216,"org.easymock.samples.ExampleTest.addAndChangeDocument":202,"org.easymock.tests2.ConstraintsToStringTest.notToString":351,"org.easymock.tests.UsageStrictMockTest.testVerify":139,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CompareToTest.testGreateThan":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":293,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":90}}]
