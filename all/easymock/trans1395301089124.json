[{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[4,5,6,7],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,4,27,28,29,30,31,32,33,2,3,34,35,36,37,38,39,40,5,41,42,43,44,45,6,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,9,10,14,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[179],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[21,22,187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[188,28,40,68,189,71,190,191,192,75,76,78,82,83,86,89,193,92,194,94,9,14,195,196,114,115,197,198,142,199,200,201,152,202,203,204,205,156,206,161,0,207,208,209,177,178,210,211,212],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[213,214,15,215,16,17,216,18,217,218,219,220,221,222,19,223,20,188,21,22,187,224,225,226,227,228,229,230,231,232,23,233,234,24,235,236,237,238,239,240,241,242,243,25,244,245,246,247,248,26,249,250,251,252,253,4,27,28,29,254,30,31,32,33,2,3,255,34,35,36,37,38,39,40,5,41,42,43,44,45,6,46,47,48,49,256,257,258,50,259,260,261,262,263,51,52,53,54,55,264,265,56,57,58,59,266,60,61,62,267,63,64,65,66,268,269,67,270,271,272,68,69,70,189,71,190,72,73,74,191,192,75,76,77,78,79,80,81,82,83,84,85,86,87,88,273,274,275,276,277,278,279,280,89,281,282,8,283,90,91,284,285,193,92,194,93,94,95,96,97,98,286,287,99,288,289,290,9,10,14,291,292,100,101,102,103,293,104,105,106,294,295,296,107,108,297,298,299,300,301,109,302,303,304,305,306,307,308,309,310,311,312,110,186,313,314,315,316,317,111,318,319,320,321,322,323,324,325,112,326,195,327,113,196,114,115,328,329,116,330,331,332,333,334,117,118,335,336,337,338,339,340,341,342,343,344,119,120,345,121,346,347,348,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,349,350,351,352,353,354,355,356,357,142,143,144,145,358,359,360,361,362,363,364,365,366,146,367,368,369,370,371,372,373,374,375,376,377,378,199,379,380,381,382,383,147,148,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,179,414,415,416,417,418,149,150,419,420,151,152,153,202,203,154,155,204,205,156,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,157,158,159,160,206,161,441,442,443,444,445,446,447,448,449,450,451,452,453,454,162,455,163,164,165,166,167,168,456,457,169,458,459,460,461,462,463,170,464,171,172,173,174,175,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,0,207,497,208,176,209,177,178,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,210,211,212],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[213,214,522,523,21,230,231,232,23,233,234,24,235,236,237,238,239,240,241,242,243,25,244,245,246,247,248,26,249,250,524,525,180,285,526,527,102,106,294,110,186],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[213,213,214,214,219,220,19,21,187,224,227,230,231,232,23,233,234,24,235,236,237,238,239,240,241,242,243,25,244,245,246,247,248,26,249,250,280,528,89,281,282,8,283,90,91,285,193,92,529,194,93,94,96,97,98,286,99,288,289,290,9,10,14,291,292,100,101,102,103,105,106,530,531,110,186,324,325,112,335,336,337,338,339,340,341,342,343,344,119,120,121,348,357,358,359,360,361,362,363,364,365,366,146,367,368,369,407,444,449,456,457,169,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[40,190,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[180,532,181,182,183,184,185,533,186],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[256,50,259,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"method"}},{"position":"org.easymock.internal.RecordState:243","failures":[15,16,17,18,19,20,23,24,25,26,65,67,89,8,90,91,92,93,94,95,96,97,98,99,9,10,14,100,101,102,103,104,105,106,107,108,110,113,114,115,119,120,121,122,123,124,125,126,127,130,131,133,134,135,137,138,139,140,141,142,143,144,145,146,368,371,147,148,406,149,157,442,443,169,171,172,173,174,175,176,177,178,511,512,513,514],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[213,214,21,524,525,180,285,526,527,534,532,535,288,110,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,2,3,255,34,42,43,46,47,51,52,53,54,59,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[31,255,42,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[536],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[537],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[15,215,16,17,216,18,218,188,21,22,187,251,253,4,27,28,29,30,31,32,33,2,3,34,35,36,37,38,39,40,5,41,42,43,44,6,46,47,48,49,258,50,259,260,261,262,263,51,52,53,54,55,264,265,56,57,58,59,266,60,61,62,63,64,65,66,269,67,270,272,68,69,70,189,71,190,72,73,74,191,192,75,76,274,280,8,283,92,194,93,94,95,96,97,98,99,290,10,101,102,105,106,107,309,310,311,312,110,324,325,112,326,195,327,113,196,114,115,328,329,116,330,331,332,333,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,350,142,143,144,145,359,146,367,373,374,375,377,378,379,380,381,382,383,147,148,407,412,149,150,419,420,151,152,153,202,203,154,155,204,205,156,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,158,159,160,206,161,162,455,163,164,165,166,167,168,169,170,171,172,173,174,175,489,490,491,492,493,0,207,497,208,176,209,177,178,498,499,500,501,502,503,504,505,511,512,513,514,515,516,517,518,519,520,521],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.internal.RecordState:262","failures":[68,73,324,325,112,326,116,118,419,420,152,155,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,159,206,452,453,454,162,163,164,165,166,167,168,462,494,495,496,500,501,502,503,504,505],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[275,276,278],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[28,29,31,33,2,255,42,46,51,53,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[538,51,53,54,55,264,265,56,58,539,59,266,61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[21,180,285,181,182,183,184,185,186],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[189,191,192,114,198,202,203,204,205,206,161,0,208,177],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[21,180,285,181,182,183,184,185,186],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[252],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[536,540,541],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":475,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":222,"org.easymock.tests2.DelegateToTest.testReturnException":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":501,"org.easymock.tests.MockingTest.testPartialClassMocking":119,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":308,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":421,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":3,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":449,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":440,"org.easymock.tests.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":513,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":506,"org.easymock.tests.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":389,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":295,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":446,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":512,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":81,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":510,"org.easymock.tests2.DelegateToTest.testDelegate":272,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":436,"org.easymock.tests.LimitationsTest.mockFinalMethod":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":493,"org.easymock.tests2.DependencyTest.testClassMockingSupport":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":448,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":201,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":515,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":534,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":392,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.MockingTest.testInterfaceMocking":345,"org.easymock.tests2.CompareToTest.testLessOrEqual":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":422,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":239,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests2.ThreadingTest.testChangeDefault":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":536,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":430,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":516,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":248,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":438,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":491,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests.MockNameTest.defaultName":334,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":514,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":383,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":492,"org.easymock.samples.BasicClassMockTest.testPrintContent":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":505,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":533,"org.easymock.tests2.UsageConstraintsTest.greaterThan":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":393,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":291,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":537,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":407,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":79,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":500,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":489,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":529,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":439,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":406,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":511,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":453,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":426,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":101,"org.easymock.tests.MockingTest.testNiceClassMocking":348,"org.easymock.tests.MockingTest.testClassMocking":343,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":528,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":517,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":112,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":182,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":507,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":241,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":508,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":495,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":459,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":274,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests2.CaptureTest.testCaptureMultiple":538,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":488,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":540,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":88,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":494,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":9,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":427,"org.easymock.tests.ReplayStateInvalidCallsTest.times":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":503,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":6,"org.easymock.tests2.SerializationTest.testAllMockedMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":481,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":535,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":433,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":487,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":256,"org.easymock.tests.UsageExpectAndThrowTest.object":431,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":270,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":148,"org.easymock.tests.UsageStrictMockTest.range":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":213,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":228,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":432,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":443,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":276,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":200,"org.easymock.tests.UsageVerifyTest.twoReturns":161,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":244,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":521,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":420,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndThrowTest.longType":424,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":179,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":12,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":299,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":403,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":234,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":425,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":120,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":402,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.MockingTest.testTwoMocks":344,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":399,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":429,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":279,"org.easymock.samples.ExampleTest.removeNonExistingDocument":217,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":278,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":441,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":10,"org.easymock.tests.LimitationsTest.privateConstructor":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":523,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":324,"org.easymock.tests2.UsageTest.defaultResetToNice":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":298,"org.easymock.tests2.CallbackTest.callback":188,"org.easymock.tests2.UsageConstraintsTest.equals":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":419,"org.easymock.tests.UsageCallCountTest.tooFewCalls":519,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.MockingTest.testStrictClassMocking":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":104,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":184,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":401,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":183,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":245,"org.easymock.tests2.DelegateToTest.testStubDelegate":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":284,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageThrowableTest.noUpperLimit":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":224,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":264,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":293,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":386,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":236,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":346,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":384,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":527,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":435,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":145,"org.easymock.tests2.MockedExceptionTest.testRealException":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":541,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":227,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":390,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":530,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":240,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":275,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":203,"org.easymock.tests2.MockBuilderTest.testWithConstructor":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":237,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":340,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":404,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":257,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":281,"org.easymock.tests.UsageTest.unexpectedCallWithArray":202,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":400,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":520,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":526,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":539,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":499,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":490,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":531,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.LimitationsTest.abstractClass":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
