[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[27,28,29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"primitiveType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[36,37,38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,22,23,70,71,38,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,39,103,104,24,105,106,107,0,108,109,1,110,111,112,113,114,115,116,117,118,119,120,3,4,5,6,7,8,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,28,29,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,161,162,163,164,25,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,26,217,218,219,220,221,222,223,224,225,226,227,33,34,35,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[312,313,314,22,70,110,118,7,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,315,165,167,168,169,170,171,172,13,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110,316,317,318,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[267,319],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[219,320,33,321,322,323,324,325,326,327,328,329,330,331,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[27,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[107,0,109,111,7,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[55,71,81,87,93,97,99,140,141,147,153,157,159,25,333,334,181,182,199,202,248,249,250,253,267,270,279,294,300,301,306,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[335,22,23,38,72,75,76,39,24,119,25,203,209,210,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[27,28,29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,55,58,59,60,61,62,64,65,66,67,68,69,22,23,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,106,336,107,108,109,111,112,113,114,115,337,120,3,4,5,6,7,8,121,122,123,124,125,126,127,128,129,130,338,339,131,132,133,134,28,29,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,340,166,167,173,174,175,176,177,178,341,179,180,181,182,183,13,197,199,201,202,204,205,208,211,214,215,217,218,219,342,343,344,345,220,221,222,223,224,225,226,227,33,34,35,232,234,235,242,243,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,282,283,284,285,287,288,290,293,294,295,296,298,299,300,301,302,303,306,308,309,311,14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[43,43,44,44,46,47,49,50,51,52,54,55,312,313,314,346,69,22,23,70,71,73,74,77,347,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,24,105,348,349,350,351,107,0,108,109,1,110,111,116,117,118,337,120,3,4,5,6,7,8,121,122,123,124,125,9,10,11,131,28,30,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,25,334,318,165,166,167,168,169,170,171,172,352,353,354,355,356,173,174,175,176,177,178,341,179,180,181,182,183,13,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,204,206,207,208,211,212,215,26,217,219,220,357,358,221,222,223,33,34,228,229,230,231,233,234,236,237,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,281,282,283,284,285,287,289,290,291,292,293,294,296,297,300,301,302,303,304,305,306,307,359,308,309,310,360,311,14,15,16,17],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[42,43,43,44,44,45,46,47,48,49,50,51,52,53,54,361,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,22,23,70,71,38,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,39,103,104,24,105,106,336,107,0,108,109,1,110,111,362,363,316,364,365,366,367,368,369,370,2,371,112,113,114,115,116,117,118,337,119,120,3,4,5,6,7,8,121,122,123,124,125,126,127,128,129,130,338,339,131,132,133,134,135,136,137,28,29,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,25,372,340,373,374,375,376,377,378,379,380,381,382,165,166,167,168,169,170,171,172,173,174,175,176,177,178,341,179,180,181,182,183,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,26,217,218,219,342,343,344,345,220,221,222,223,224,225,226,227,33,34,35,228,229,230,231,232,233,234,235,236,237,238,239,240,383,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,14,15,16,17],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":256,"org.easymock.tests2.UsageTest.argumentsOrdered":210,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":6,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":48,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests2.DelegateToTest.testReturnException":308,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":324,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests.MockClassControlTest.testToString":373,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":153,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":318,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":141,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.UsageExpectAndThrowTest.object":151,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.DelegateToTest.testWrongClass":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":262,"org.easymock.tests2.UsageTest.wrongArguments":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":108,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":114,"org.easymock.samples.ExampleTest.answerVsDelegate":50,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":241,"org.easymock.tests2.UsageConstraintsTest.testNull":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":378,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.CaptureTest.testPrimitive":296,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":160,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":113,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":350,"org.easymock.tests2.CaptureTest.testCaptureNone":301,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":66,"org.easymock.tests2.ThreadingTest.testThreadSafe":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageVarargTest.varargIntAccepted":60,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":134,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":317,"org.easymock.tests2.CaptureTest.testCapture_2617107":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":144,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":307,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests2.AnswerTest.answer":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests2.CaptureTest.testAnd":293,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests2.NameTest.nameForMocksControl":345,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests2.DelegateToTest.testDelegate":311,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":145,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":237,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":156,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":325,"org.easymock.tests2.CaptureTest.testCaptureLast":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":247,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":278,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":316,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":250,"org.easymock.tests2.MockBuilderTest.testCreateMockString":240,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.floatType":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":221,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":348,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":290,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":142,"org.easymock.tests2.UsageConstraintsTest.testNotNull":277,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":234,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":63,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":150,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":115,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests.MockClassControlTest.testEquals":377,"org.easymock.tests2.EasyMockSupportClassTest.testAll":228,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":29,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":158,"org.easymock.tests2.CaptureTest.testCaptureAll":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":176,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.CompareToTest.testGreateOrEqual":319,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.NameTest.nameForNiceMock":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":252,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.ExampleTest.addDocument":53,"org.easymock.tests2.DelegateToTest.testStubDelegate":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":171,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests2.AnswerTest.stubAnswer":222,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":332,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":291,"org.easymock.tests.UsageVarargTest.varargLongAccepted":65,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":249,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":219,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":254,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.testSame":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":3,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests2.CaptureTest.testCaptureFirst":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests.GenericTest.testPackageScope":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":305,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":251,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":67,"org.easymock.tests.GenericTest.testBridgedEquals":31,"org.easymock.tests2.NameTest.nameForMock":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":242,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":339,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":257,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":287,"org.easymock.tests.ErrorMessageTest.testGetters":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":233,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":62,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":303,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.UsageConstraintsTest.testOr":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":320,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":281,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageTest.wrongArguments":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.MockClassControlTest.testHashCode":376,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":135,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests.UsageVarargTest.varargCharAccepted":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":312,"org.easymock.tests2.CaptureTest.testCaptureFromStub":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":148,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":289,"org.easymock.tests2.UsageConstraintsTest.constraints":255,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.samples.ExampleTest.addAndChangeDocument":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":147,"org.easymock.tests.CapturesMatcherTest.test":161,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190}}]
