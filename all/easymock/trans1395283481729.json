[{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[55,56,57,58,58,59,59,3,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","sourceCode":"return (((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[10,11,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[108,109,110,111,112,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[114,115,116,117,118,119,120,74,79,80,81,121,122,12,123,110,124,125,111,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[4,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[114,115,116,117,118,122,12,123,110,124,125,111,126,127,128,129,130,135,136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[137,138,114,115,139,5,116,140,141,117,118,119,142,143,144,145,146,147,148,120,74,79,80,81,83,90,92,121,122,12,123,149,110,150,124,125,13,111,126,127,128,151,152,132,133,134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[114,116,117,118,122,12,123,110,124,111,126,127,128,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[153,172,173,174,175,176,177,178,179,154,55,56,180,181,57,58,59,1,2,3,4,60,182,155,156,157,183,158,184,159,160,161,185,186,162,187,188,189,190,61,62,63,64,191,192,65,66,193,163,164,165,194,166,195,167,168,169,196,197,170,137,198,199,138,114,115,200,201,202,203,204,139,5,205,206,116,140,141,207,6,208,117,118,119,142,209,7,210,211,212,213,214,215,216,67,217,218,68,219,220,221,222,223,224,225,226,227,69,228,229,230,231,232,70,233,234,235,236,143,237,238,239,240,144,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,145,256,105,106,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,146,293,294,295,147,148,296,297,120,298,299,300,71,301,72,302,303,304,305,306,307,73,74,308,309,75,76,77,78,310,79,80,81,82,83,311,84,85,86,87,312,88,313,314,89,90,91,92,315,316,317,318,8,319,320,321,322,121,323,324,325,9,10,11,326,93,94,95,96,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,122,342,12,123,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,149,367,110,368,150,124,125,369,370,13,371,111,126,372,14,127,128,151,373,374,97,375,15,16,17,18,19,20,98,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,21,397,398,131,399,400,22,23,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,24,433,434,435,436,437,438,152,439,440,441,442,443,444,25,445,26,27,28,29,30,31,446,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,447,448,449,450,451,99,100,101,452,102,453,454,455,456,457,458,459,460,461,132,133,134,462,103,463,464,465,466,467,104,468,469,470,471,472,473,474,475,52,53,54,476,477,478,479,480,481,482,171,483,484],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[209,358,365,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[485,239,256,260],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[199,138,114,115,139,5,206,116,207,6,117,118,142,7,244,250,145,261,265,266,267,268,274,279,280,282,283,284,285,286,291,302,306,8,122,342,12,123,110,368,150,124,125,13,371,126,372,14,127,128,151,19,400,401,443,26],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[476,477,481],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[269,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[303,306,307,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[184,159,62,63,65,66,195,167,265,266,267,268,294,148,297,73,308,77,78,80,81,83,89,92,316,327,330,331,332,333,334,377,380,381,444,463,464,465],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[60,182,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[153,172,173,174,175,176,177,179,154,55,56,180,181,57,58,59,1,2,3,4,60,184,189,190,61,62,63,64,192,65,66,195,198,199,115,200,201,202,203,204,139,205,206,140,141,208,119,209,7,67,68,69,70,235,236,238,239,240,144,241,243,244,245,246,247,248,250,251,252,253,254,255,145,256,105,106,257,258,260,261,262,263,265,266,267,268,269,271,273,274,277,278,279,280,281,283,284,285,286,287,288,291,292,146,293,294,295,147,148,296,297,120,298,299,300,71,301,72,302,305,306,307,73,75,76,77,78,82,311,84,85,86,88,89,91,318,8,319,320,321,322,121,323,324,325,93,94,335,336,337,338,339,340,341,342,12,123,367,368,125,369,370,371,97,15,16,17,18,19,20,98,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,432,433,434,435,437,438,439,440,441,442,443,445,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,100,101,102,456,457,458,459,460,461,103,471,472,473,474,475,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,58,59,59,199,7,239,240,243,244,245,246,252,254,255,256,105,106,261,262,263,289,340,341,343,347,348,357,362,368,382,399,400,401,402,403,404,405,406,432,446,471,472,473,474,475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[274],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[58,59,490,491,313],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[244,249,106,261],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[71,301,72,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[172,174,175,177,181,57,60,189,190,61,62,63,64,192,65,66,199,114,115,67,68,69,70,237,274,74,75,77,78,80,82,83,311,84,85,86,88,90,91,92,317,121,323,324,325,93,95,340,341,368,124,125,97,399,402,403,404,405,406,407,408,409,410,411,412,415,416,418,419,420,422,423,424,425,426,446,448,449,100,101,102,469,471,472,473,474],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[114,116,117,118,122,12,123,110,124,111,126,127,128,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,7,350,15,16,17,18,19,20,22,24,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[496,75,90,91],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[57,58,59,1,60,182,497,68,69,70,71,73,490,74,308,498,309,75,76,77,488,78,499,310,79,80,491,81,87,313,90,91,316,326,95,327,332],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[137,114,115,139,140,146,147,148,120,80,121,149,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[273,275,302,394,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":241,"org.easymock.tests2.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":153,"org.easymock.tests2.DelegateToTest.testReturnException":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":100,"org.easymock.tests.MockClassControlTest.testToString":463,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":264,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":399,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.CaptureTest.testPrimitive":281,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":51,"org.easymock.tests.UsageTest.moreThanOneArgument":371,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":473,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":128,"org.easymock.tests.UsageVarargTest.varargIntAccepted":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":406,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.DependencyTest.testClassMocking":187,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":0,"org.easymock.tests2.AnswerTest.answer":302,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.CaptureTest.testAnd":278,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":329,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":431,"org.easymock.tests2.DelegateToTest.testDelegate":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":47,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":282,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":25,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":170,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":234,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests2.CompareToTest.testLessOrEqual":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":448,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":41,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":418,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":253,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":287,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":436,"org.easymock.tests.MockClassControlTest.testEquals":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests2.CaptureTest.testCaptureAll":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":443,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":342,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":30,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":276,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":315,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":293,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":272,"org.easymock.tests2.CaptureTest.testCaptureFirst":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":294,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":414,"org.easymock.tests2.UsageTest.moreThanOneArgument":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":290,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":442,"org.easymock.tests.GenericTest.testBridgedEquals":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":133,"org.easymock.tests.UsageExpectAndReturnTest.longType":410,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":50,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":471,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":134,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":29,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":457,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":8,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageExpectAndReturnTest.object":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":297,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":438,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":396,"org.easymock.tests.MockClassControlTest.testHashCode":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":164,"org.easymock.tests2.EasyMockSupportTest.testVerify":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":225,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageVarargTest.varargCharAccepted":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":9,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":38,"org.easymock.tests.CapturesMatcherTest.test":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":424,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":52,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.StubTest.stubWithReturnValue":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":416,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":359,"org.easymock.samples.SupportTest.voteForRemovals":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":109,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":44,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":365,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":42,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DelegateToTest.testWrongClass":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":340,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":341,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":449,"org.easymock.tests2.CaptureTest.testCaptureNone":286,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":107,"org.easymock.tests.UsageUnorderedTest.message":122,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":135,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":441,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageConstraintsTest.any":250,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":54,"org.easymock.tests.UsageExpectAndThrowTest.longType":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":480,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":426,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":157,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":158,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":36,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CompareToTest.testNotComparable":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":155,"org.easymock.tests2.CaptureTest.testCaptureLast":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":247,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.MockingTest.testTwoMocks":99,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":40,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.samples.ExampleTest.removeNonExistingDocument":178,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":165,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":219,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":497,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":69,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":156,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.CallbackTest.callback":139,"org.easymock.tests2.UsageConstraintsTest.equals":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":313,"org.easymock.tests.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":28,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":189,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":233,"org.easymock.tests2.DelegateToTest.testStubDelegate":274,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":368,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":499,"org.easymock.tests.UsageVarargTest.varargLongAccepted":440,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":445,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":283,"org.easymock.tests2.SerializationTest.test":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":408,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.samples.SupportTest.addDocument":180,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":220,"org.easymock.tests.GenericTest.testPackageScope":93,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":169,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":419,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":411,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":46,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":489,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":400,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests2.NameTest.nameForStrictMock":266,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":74,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":224,"org.easymock.tests2.CaptureTest.testCaptureRightOne":288,"org.easymock.tests2.UsageConstraintsTest.testOr":246,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageTest.wrongArguments":126,"org.easymock.tests2.MockBuilderTest.testWithConstructor":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":221,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":344,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":481,"org.easymock.tests.UsageVarargTest.varargShortAccepted":439,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":132,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":421,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageStrictMockTest.testVerify":370,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":154,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":413,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":405,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148}}]
