[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[49,50,51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[41,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,35],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[76,77,78,36,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[80,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[85,86,87,88,89,90,91,92,93,82,94,95,96,97,98],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[99,46,56,47,100,101,102,103,57,58,104,105,48,106,107,59,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[89,94,97,97,98,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[49,50,52,110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[111,112,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[113,114,115,116,117,118,119,120,121,122,80,123,124,125,126,127,128,129,130,38,39,131,40,132,41,42,133,43,55,134,135,111,136,137,109,138,139,44,140,141,142,143,45,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,46,56,47,100,101,102,103,57,58,104,48,106,107,59,164,165,166,167,84,1,168,169,170,171,172,173,60,174,76,175,176,177,178,2,179,180,181,182,183,184,3,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,4,214,5,6,7,8,9,10,61,62,63,64,65,215,216,217,218,11,219,220,221,222,223,224,225,226,227,228,112,229,230,231,232,233,66,67,68,69,70,12,71,234,235,236,237,238,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,239,240,241,242,243,244,245,246,247,248,249,250,72,73,251,252,253,254,255,256,257,258,259,0,260,261,262,74,263,264,265,266,267,268,269,53,75,270,77,271,272,273,33,274,54,275,276,34,277,278,279,280,281,282,283,284,285,286,35,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,36,79,315,316,317,318,319,320,321,322,323,37,324,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[327,94,328,329,330,331,332,333,334,335,336,337,168,169,170,95,96,338,339,340,341,342,343,344,345,346,347,348,81,349,350,351,352,353,354,355,356,357,358,359,360,361,201,362,363,364,365,366,367,368,97,97,98,98,369,370,229,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.LastControl:94","failures":[38,39,131,40,132,41,42,133,43,55,44,140,45,144,46,56,47,100,48,106],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[87,88,82,403,404,405,406,407,95,96],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[255],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[408,409,85,86,87,88,89,90,82,95,96,338,339,340,341,342,343,344,345,346,347,348,81,349,350,351,352,353,354,355,356,357,358,359,360,361,363,366,410,97,98],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[146,411,412,413,414,415,416,417,418,419,82,83,420,421,422,423,424,425,327,329,330,331,332,334,170,95,341,344,353,359,201,362,363,364,365,366,367,368,97,97,98,98,369,229,371,372,373,426,374,375,376,377,378,379,380,381,382,383,386,388,398,399,400,401],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[49,50,51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[113,114,115,116,117,118,119,120,121,122,80,123,124,125,126,127,128,129,130,38,39,131,40,132,41,42,133,43,55,134,135,111,136,137,109,138,139,44,140,141,142,143,45,144,145,411,413,415,416,418,82,147,83,420,421,148,422,423,424,327,330,331,332,153,154,155,156,157,158,159,160,161,162,163,46,56,47,100,101,102,103,57,58,104,48,106,107,59,164,165,84,1,168,169,170,171,95,172,173,60,174,76,175,176,341,344,353,359,177,2,179,180,181,182,183,184,3,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,362,363,364,202,365,366,367,368,97,97,98,98,203,369,204,205,206,207,208,209,210,211,212,213,4,214,5,6,7,8,9,10,61,62,63,64,65,215,216,217,218,11,219,220,221,222,223,224,225,226,227,228,112,229,371,372,230,231,232,233,66,67,68,69,70,12,71,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,239,240,241,242,243,245,246,72,73,252,253,386,256,257,258,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,259,443,444,445,446,447,0,448,260,261,262,74,268,269,53,75,270,77,271,272,273,388,33,274,275,276,34,277,278,279,280,281,282,283,284,285,286,35,287,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,36,79,315,316,317,318,319,399,400,401,321,323,37,325],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests2.UsageTest.argumentsOrdered":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":437,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.MockingTest.testPartialClassMocking":399,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":344,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests2.UsageTest.wrongArguments":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":208,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":383,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":274,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageTest.argumentsOrdered":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":65,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.AnswerTest.answer":190,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":152,"org.easymock.tests2.CaptureTest.testAnd":46,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":232,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests.LimitationsTest.mockFinalMethod":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":150,"org.easymock.tests.UsageThrowableTest.throwError":4,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":361,"org.easymock.samples.PartialClassMockTest.testGetArea":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":257,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":413,"org.easymock.tests2.MockBuilderTest.testCreateMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":49,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":122,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":341,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":151,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":265,"org.easymock.tests.MockNameTest.defaultName":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":212,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":9,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":407,"org.easymock.tests2.UsageConstraintsTest.greaterThan":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":231,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":332,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":119,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":283,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":120,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":418,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":245,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":246,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":8,"org.easymock.tests.MockingTest.testNiceClassMocking":402,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":362,"org.easymock.tests.MockingTest.testClassMocking":397,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":131,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests.MockTypeTest.fromEasyMockClass":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":404,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":237,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":323,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":350,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":166,"org.easymock.tests2.CaptureTest.testCaptureMultiple":99,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":389,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":330,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.CapturesMatcherTest.test":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":359,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":286,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":50,"org.easymock.samples.SupportTest.voteForRemovals":206,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":191,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":73,"org.easymock.samples.ConstructorCalledMockTest.testTax":97,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":258,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":354,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":243,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":238,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":367,"org.easymock.tests2.CaptureTest.testCapture_2617107":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.SerializationTest.testClass":82,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":116,"org.easymock.tests2.MockedExceptionTest.testMockedException":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":343,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":420,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":416,"org.easymock.tests.MockingTest.testNicePartialClassMocking":400,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":424,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":366,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":398,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":144,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":419,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":353,"org.easymock.samples.ExampleTest.voteAgainstRemoval":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":331,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":409,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":10,"org.easymock.tests2.UsageTest.defaultResetToNice":185,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":224,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":94,"org.easymock.tests.UsageTest.openCallCountByLastCall":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":70,"org.easymock.tests.UsageCallCountTest.tooFewCalls":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":7,"org.easymock.tests.MockingTest.testStrictClassMocking":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.ObjectMethodsTest.testHashCode":236,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests2.NameTest.nameForNiceMock":115,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":405,"org.easymock.samples.ExampleTest.addDocument":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":355,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":98,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":346,"org.easymock.tests.GenericTest.testPackageScope":229,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.NameTest.nameForMock":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":233,"org.easymock.tests2.MockedExceptionTest.testRealException":171,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":69,"org.easymock.tests2.NameTest.nameForStrictMock":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":337,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":392,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":411,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":349,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":421,"org.easymock.tests.UsageTest.wrongArguments":275,"org.easymock.tests2.MockBuilderTest.testWithConstructor":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":347,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":244,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":412,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":242,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests2.CaptureTest.testCapture":105,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageStrictMockTest.testVerify":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":204,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":63,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":64,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":80,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220}}]
