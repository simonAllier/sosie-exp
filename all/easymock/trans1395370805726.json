[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[4,0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0,2,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[60,61,62],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[63,64,65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[69,70,71,72,73,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[76,77,78,9,79,80,81,82,83,84,85,86,10,11,87,88,89,90,91,92,93,94,95,96,97,98,99,60,100,101,15,16,17,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,18,122,123,124,125,126,19,20,127,128,129,130,131,132,133,22,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,59,162,61,163,164,165,166,167,168,169,170,24,171,172,0,1,2,25,26,27,28,33,35,36,41,42,43,44,173,45,46,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,47,48,190,49,50,51,53,56,191,192,65,193,194,195,196,197,198,199,200,201,202,203,204,205,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[97,206,207,137,159,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[78,9,80,82,83,85,209,98,206,210,211,207,101,15,16,17,212,213,102,103,214,104,215,216,217,218,105,219,220,221,222,106,223,224,225,226,109,111,112,227,228,229,230,114,115,231,121,232,233,234,235,236,19,21,127,128,237,22,238,239,240,241,242,243,244,135,137,138,139,140,141,142,143,245,246,247,248,144,145,146,147,148,149,150,249,151,152,153,154,156,157,159,160,250,59,251,208,252,253,164,166,168,169,24,171,254,0,1,25,26,27,28,31,33,35,36,38,41,42,43,44,173,45,46,255,256,257,174,175,258,259,260,176,261,177,262,263,178,179,180,181,264,182,265,266,183,267,68,184,185,186,188,189,268,269,47,48,190,49,50,51,53,55,56,3,191,192,65,194,270,197,198,199,200,67,201,202,271,58],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[162,183,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"state","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:93","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[63,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[252,274],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[76,77,78,9,79,80,81,82,83,84,85,86,10,11,87,88,89,90,91,92,93,94,95,96,97,98,99,60,100,101,275,276,15,16,17,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,18,122,123,124,125,126,19,20,127,128,129,130,131,132,133,22,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,59,162,61,163,164,165,166,167,168,169,170,24,171,172,0,1,2,25,26,27,28,33,35,36,41,42,43,44,173,45,46,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,47,48,190,49,50,51,53,56,191,192,65,193,194,195,196,197,198,199,200,201,202,203,204,205,58],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":176,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.UsageTest.argumentsOrdered":163,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":162,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.MockingTest.testPartialClassMocking":15,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":229,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests2.CaptureTest.testPrimitive":194,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":231,"org.easymock.tests.UsageTest.moreThanOneArgument":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":228,"org.easymock.tests2.CaptureTest.testCaptureNone":198,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":98,"org.easymock.tests.UsageVarargTest.varargByteAccepted":94,"org.easymock.tests2.ThreadingTest.testThreadSafe":255,"org.easymock.tests.UsageTest.argumentsOrdered":100,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":232,"org.easymock.tests2.CaptureTest.testCapture_2617107":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":191,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":226,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.CaptureTest.testAnd":192,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.CaptureTest.testCaptureLast":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":276,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":275,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":268,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":257,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":183,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":172,"org.easymock.tests.UsageVerifyTest.twoThrows":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":233,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests2.UsageConstraintsTest.testNotNull":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.samples.ExampleTest.voteAgainstRemovals":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":106,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":62,"org.easymock.tests.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":122,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":182,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":199,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":20,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.testMatches":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":173,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":74,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests.UsageVarargTest.allKinds":96,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.UsageConstraintsTest.greaterThan":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":3,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":240,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":225,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":136,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":195,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests2.CaptureTest.testCaptureFirst":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":250,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":220,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":39,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":187,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":131,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.testContains":264,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":30,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":261,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":72,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":230,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":200,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageRangeTest.combination":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":223,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":104,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":221,"org.easymock.tests.UsageVarargTest.varargShortAccepted":92,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests2.CaptureTest.testCaptureMultiple":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":222,"org.easymock.tests2.CaptureTest.testCapture":273,"org.easymock.tests2.UsageConstraintsTest.constraints":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":86,"org.easymock.tests.CapturesMatcherTest.test":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":224,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":234,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":235,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
