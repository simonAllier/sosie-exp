[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[9,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[65,71,76,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[112,113,114,115,116,117,118,119,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,109,150,111],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[151,152,153,154,155],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[112,113,114,115,116,117,118,119,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,156,42,43,157,158,143,159,160,161,144,145,146,147,148,149,109,150,162,44,45,111],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[47,163,164,165,166,94,167,168,169,170,171,157,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[112,113,114,115,116,117,118,119,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,157,158,143,159,160,161,144,145,146,147,148,149,109,150,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[165,173,174,175,80,176,177,178,179,180,181,93,170,182,183,184,185,186,187,188,189,190],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[191,192,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[158,159],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[47,194,163,195,196,197,198,165,173,174,175,166,93,94,199,167,170,183,184,185,103,171,157,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[151,152,202,203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[204,205,206,207,208,209,210,211,212,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[213,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[215,216,217,218,219,220,221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[151,151,152,152,222,223,224,225,226,227,228,229,230,46,231,232,233,234,114,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,202,250,251,252,253,254,255,9,36,13,16,26,32,256,257,258,200,259,260,261,262,263,264,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[68,73,83,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[9,35,36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[9,35,36,37],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.UsageTest.argumentsOrdered":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":149,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":87,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":147,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":180,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":37,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":120,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":193,"org.easymock.tests.UsageExpectAndThrowTest.object":130,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests.UsageStrictMockTest.range":199,"org.easymock.samples.ConstructorCalledMockTest.testTax":151,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":4,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":241,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":139,"org.easymock.tests.UsageTest.moreThanOneArgument":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":186,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":103,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageTest.argumentsOrdered":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":223,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":98,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests2.UsageConstraintsTest.any":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests.UsageExpectAndThrowTest.longType":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":178,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":73,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":249,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":231,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":198,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.DelegateToTest.testDelegate":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":124,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":242,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":205,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":255,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":85,"org.easymock.tests.MockingTest.testTwoMocks":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":128,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":174,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":89,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":122,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":121,"org.easymock.tests2.UsageConstraintsTest.testNotNull":88,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":8,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":129,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageThrowableTest.throwCheckedException":160,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":137,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":247,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":252,"org.easymock.tests2.UsageConstraintsTest.testMatches":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":209,"org.easymock.tests2.NameTest.nameForNiceMock":197,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":211,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":202,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":152,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":40,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.UsageTest.moreThanOneArgument":165,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.GenericTest.testBridgedEquals":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":6,"org.easymock.tests2.NameTest.nameForMock":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":3,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":201,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":155,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":134,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests2.MockedExceptionTest.testRealException":115,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":251,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":236,"org.easymock.tests2.NameTest.nameForStrictMock":196,"org.easymock.tests2.UsageConstraintsTest.testContains":76,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.UsageStrictMockTest.range":194,"org.easymock.tests2.UsageConstraintsTest.lessThan":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":192,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.UsageTest.wrongArguments":183,"org.easymock.tests2.MockBuilderTest.testWithConstructor":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":42,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":267,"org.easymock.tests2.UsageConstraintsTest.cmpTo":75,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":238,"org.easymock.tests.UsageTest.unexpectedCallWithArray":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":127,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":232,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166}}]
