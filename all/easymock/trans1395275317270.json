[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[2,3,4,5],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[6,7,8,9,10,11,12],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,28,29,30,31,32,33,34,5,35,6,36,37,38,7,39,40,41,42,43,44,45,10,46,47,12,48],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[49,50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[26,53,54,55,56,57,6,36,58,59,60,12,48,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[62],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[63,64,25,65,0,66,28,67,32],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[68,69,70],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[106,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[63,108,64,109,110,25,111,65,0,112,66,28,113,114,115,50,116],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[71,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,132,133,134,135,136,137,138,139,99,140,24,141,142,26,53,143,54,144,69,145,146,55,147,27,56,148,149,150,151,152,153,153,154,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,62,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[131,191,192,193,194,195,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[197],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[198,199,200,201,202,203,204,205,206,132,137,140,141,63,144,55,150,151,207,208,209,210,211,212,58,213,214,161,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,176,177,178,179,180,181,182,183,230,231,232,233,234,235,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[130,236,192,193,194,195,196,237],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[165,238,239],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[240,241],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.Invocation:99","failures":[20,22,136,30,242,243,244,245,246,155,247,46],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[138,159],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,143,248,221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[71,249,117,199,200,201,202,250,251,252,253,254,255,256,257,258,259,260,13,14,261,262,203,263,15,264,265,23,125,126,128,129,130,266,267,268,269,49,270,132,133,136,137,140,24,141,63,108,64,271,272,273,274,109,110,275,25,276,277,111,142,26,278,53,143,54,144,69,55,147,27,56,3,279,65,0,280,112,281,66,28,29,30,70,282,31,283,284,248,4,285,32,33,34,286,5,113,287,241,150,151,152,288,289,290,291,292,293,294,295,296,297,35,298,57,299,6,36,300,301,302,243,244,303,245,208,246,304,305,306,37,307,209,210,211,212,308,114,115,50,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,160,330,331,58,332,333,334,335,38,336,337,213,338,339,340,341,214,342,343,344,345,346,347,348,7,161,215,216,217,218,219,220,221,222,223,224,225,226,170,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,39,40,370,41,42,43,44,45,371,372,227,228,229,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,116,173,174,176,177,178,179,180,181,182,183,389,10,11,390,391,392,393,394,395,396,397,398,399,230,231,232,233,234,235,46,400,401,402,47,403,59,60,404,12,48,405,61,187,188,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[284],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[288,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[406,407,58,408,409,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[71,249,117,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":21,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":14,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":374,"org.easymock.tests.MockingTest.testPartialClassMocking":187,"org.easymock.tests.MockClassControlTest.testToString":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests2.UsageTest.wrongArguments":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":302,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":159,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":53,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests2.CaptureTest.testPrimitive":271,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":368,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":392,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageVarargTest.varargIntAccepted":381,"org.easymock.tests.InvocationTest.testEquals":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":344,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":348,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.ReplayStateInvalidUsageTest.times":223,"org.easymock.tests2.DependencyTest.testClassMocking":118,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":202,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":401,"org.easymock.tests2.DelegateToTest.testDelegate":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":364,"org.easymock.tests.LimitationsTest.mockFinalMethod":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":235,"org.easymock.tests2.DependencyTest.testClassMockingSupport":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":200,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":98,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":218,"org.easymock.tests2.CompareToTest.testLessOrEqual":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":345,"org.easymock.tests2.UsageTest.niceToStrict":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":406,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":283,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":321,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":238,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests.MockClassControlTest.testEquals":182,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":366,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":233,"org.easymock.tests2.UsageConstraintsTest.testMatches":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":215,"org.easymock.samples.ExampleTest.voteForRemovals":245,"org.easymock.tests.UsageVarargTest.allKinds":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":389,"org.easymock.samples.BasicClassMockTest.testPrintContent":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":44,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":400,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":160,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":373,"org.easymock.tests2.CaptureTest.testCaptureFirst":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":265,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":317,"org.easymock.tests2.UsageTest.moreThanOneArgument":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":388,"org.easymock.tests.GenericTest.testBridgedEquals":62,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":390,"org.easymock.tests.UsageCallCountTest.tooManyCalls":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":43,"org.easymock.tests.MockingTest.testNiceClassMocking":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":125,"org.easymock.tests.MockingTest.testClassMocking":185,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":213,"org.easymock.tests2.UsageConstraintsTest.testContains":282,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":280,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":307,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":193,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":229,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":104,"org.easymock.tests.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests2.ConstraintsToStringTest.findToString":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":326,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":379,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":397,"org.easymock.tests.MockClassControlTest.testHashCode":181,"org.easymock.tests2.EasyMockSupportTest.testVerify":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":199,"org.easymock.tests.UsageVarargTest.varargCharAccepted":382,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests.DefaultClassInstantiatorTest.object":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":72,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":41,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.CapturesMatcherTest.test":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":327,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests2.UsageTest.resumeIfFailure":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":376,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":319,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":407,"org.easymock.samples.SupportTest.voteForRemovals":242,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":361,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":410,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":52,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":372,"org.easymock.samples.ConstructorCalledMockTest.testTax":153,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":225,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":408,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":387,"org.easymock.tests2.ThreadingTest.testThreadSafe":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":91,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":156,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":49,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":165,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":221,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.MockedExceptionTest.testMockedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":79,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":189,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.CompareToTest.testCompareEqual":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":369,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":357,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":287,"org.easymock.samples.ExampleTest.removeNonExistingDocument":208,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":219,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":163,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":295,"org.easymock.tests2.MockBuilderTest.testCreateMockString":141,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":81,"org.easymock.tests.UsageExpectAndThrowTest.floatType":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":251,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":169,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":45,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":325,"org.easymock.tests.UsageVarargTest.differentLength":384,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":145,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":115,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":409,"org.easymock.tests.MockingTest.testStrictClassMocking":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":126,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":253,"org.easymock.tests.ObjectMethodsTest.testHashCode":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":195,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":194,"org.easymock.samples.ExampleTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests2.AnswerTest.stubAnswer":252,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":386,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":405,"org.easymock.tests.UsageExpectAndReturnTest.floatType":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":154,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":120,"org.easymock.tests2.SerializationTest.test":249,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":273,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":162,"org.easymock.tests2.UsageConstraintsTest.testSame":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":82,"org.easymock.tests.GenericTest.testPackageScope":173,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":402,"org.easymock.tests2.MockedExceptionTest.testRealException":288,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":164,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":16,"org.easymock.tests2.CaptureTest.testCaptureRightOne":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":86,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":83,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":385,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":166,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":214,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests2.CompareToTest.testLessThan":240,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":216,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":134,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":324,"org.easymock.tests2.CaptureTest.testCapture":106,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":404,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests.UsageStrictMockTest.testVerify":61,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":346,"org.easymock.tests.LimitationsTest.abstractClass":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":316,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":347,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":19,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":380}}]
