[{"position":"org.easymock.internal.MockBuilder:159","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,140,141,142,143,144,145,146,147,0,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,12,13,194,195,1,196,197,198,199,200,201,202,14,203,204,15,205,206,3,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,17,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,4,5,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[24,63,64,69,70,83,84,86,88,89,92,93,95,96,98,119,120,121,122,155,210,212,213,269,270,272,273,274,275,276,277,280,317,319,322,324,325,326,349,360,377,400,401,411,412,414,415,420,431,487],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[495,57,76,82],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[406,407,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[496,70,147],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[38,48,54,6,145,0,150,151,154,161,12,13,195,196,197,199,200,202,203,204,15,206,207,426,429,440,445,4,4,5,5,494],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[86,92,93,98,155,210,269,273,274,277,324,326,412],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[212,213,414,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[497,73],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[165,166,167,169,172,173,176,215,216,217,219,222,223,226,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[88,210,212,213,270,324,325,326,412,414,415,499,500,501,502,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[503,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[59,67,73,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[72,360,411],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[250,255,283,297,303,310,311,332,395,458,464,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[166,167,168,169,172,173,174,175,176,216,217,218,219,222,223,224,225,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[38,48,54,6,145,150,151,154,195,196,197,200,201,202,203,205,206,207,429,440,445,494],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[75],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[267,268,407,408],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":371,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":480,"org.easymock.tests2.DelegateToTest.testReturnException":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":332,"org.easymock.tests.MockingTest.testPartialClassMocking":259,"org.easymock.tests.MockClassControlTest.testToString":434,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":118,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":294,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":499,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":475,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":292,"org.easymock.samples.ExampleTest.answerVsDelegate":487,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":445,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":479,"org.easymock.tests.UsageTest.moreThanOneArgument":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":313,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":396,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":399,"org.easymock.tests.UsageTest.argumentsOrdered":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.DependencyTest.testClassMocking":190,"org.easymock.tests2.AnswerTest.answer":155,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":442,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":403,"org.easymock.tests2.DelegateToTest.testDelegate":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":309,"org.easymock.tests.LimitationsTest.mockFinalMethod":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.DependencyTest.testClassMockingSupport":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":404,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.UsageThrowableTest.throwError":418,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":444,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":226,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":56,"org.easymock.samples.PartialClassMockTest.testGetArea":494,"org.easymock.tests.MockingTest.testInterfaceMocking":261,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests2.CompareToTest.testLessOrEqual":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":43,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":290,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":451,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":466,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":352,"org.easymock.tests.MockClassControlTest.testEquals":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":35,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":428,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":311,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests.MockNameTest.defaultName":240,"org.easymock.tests2.UsageConstraintsTest.testMatches":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.samples.ExampleTest.voteForRemovals":491,"org.easymock.tests.UsageVarargTest.allKinds":360,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":324,"org.easymock.samples.BasicClassMockTest.testPrintContent":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":424,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":336,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.samples.ExampleTest.voteForRemoval":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":153,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":323,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":331,"org.easymock.tests2.CaptureTest.testCaptureFirst":112,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":462,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":111,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":359,"org.easymock.tests.GenericTest.testBridgedEquals":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":458,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":312,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":394,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":423,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":265,"org.easymock.tests.MockingTest.testClassMocking":257,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests.MockTypeTest.fromEasyMockClass":443,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":125,"org.easymock.tests.UsageExpectAndReturnTest.object":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":354,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":471,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":450,"org.easymock.tests.MockClassControlTest.testHashCode":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":216,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":45,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":401,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":231,"org.easymock.tests.UsageVarargTest.varargCharAccepted":353,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":504,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":406,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":215,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":472,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":266,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests2.UsageTest.resumeIfFailure":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":334,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":464,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.samples.SupportTest.voteForRemovals":483,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":306,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":156,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":245,"org.easymock.tests.UsageExpectAndThrowTest.object":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":22,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.tests.UsageStrictMockTest.range":414,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":291,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":283,"org.easymock.tests.UsageUnorderedTest.message":431,"org.easymock.tests.UsageVerifyTest.twoReturns":326,"org.easymock.tests.UsageVarargTest.varargByteAccepted":358,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":49,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":484,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.LimitationsTest.mockNativeMethod":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":474,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":167,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.NameTest.nameForMocksControl":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":169,"org.easymock.tests2.MockedExceptionTest.testMockedException":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":37,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":298,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.CompareToTest.testCompareEqual":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":165,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":258,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":302,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":84,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":172,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":217,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":207,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":39,"org.easymock.tests.UsageExpectAndThrowTest.floatType":296,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":194,"org.easymock.tests.UsageVerifyTest.twoThrows":325,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":48,"org.easymock.samples.ExampleTest.voteAgainstRemoval":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":425,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":161,"org.easymock.tests2.UsageTest.defaultResetToNice":94,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":166,"org.easymock.tests.UsageVarargTest.differentLength":355,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.UsageConstraintsTest.equals":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":477,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":293,"org.easymock.tests.UsageThrowableTest.throwCheckedException":422,"org.easymock.tests.MockingTest.testStrictClassMocking":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":160,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.NameTest.nameForNiceMock":121,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":117,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":50,"org.easymock.tests2.DelegateToTest.testStubDelegate":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.AnswerTest.stubAnswer":159,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":412,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":204,"org.easymock.tests.UsageVarargTest.varargLongAccepted":357,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":457,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageThrowableTest.noUpperLimit":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":25,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":456,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":482,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":40,"org.easymock.tests.GenericTest.testPackageScope":427,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":223,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":263,"org.easymock.tests2.NameTest.nameForMock":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":467,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":3,"org.easymock.tests2.UsageStrictMockTest.differentMethods":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":308,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":476,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":120,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":29,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests.ErrorMessageTest.testGetters":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":212,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":369,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":44,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":140,"org.easymock.tests.UsageTest.wrongArguments":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":41,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":469,"org.easymock.tests2.CaptureTest.testCapture":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.samples.ExampleTest.addAndChangeDocument":493,"org.easymock.tests.UsageStrictMockTest.testVerify":417,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":481,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":461,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":350}}]
