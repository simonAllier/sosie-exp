[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[5,6,7],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[16,16,17,17,18,19,20,15,21],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,22,23,24,1,25,26,27,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[28,9,10,11,12,13,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[2,30,3,31,32,33,34,35,36,4,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,22,41,23,42,24,1,43,25,44,26,45,27,46,2,30,3,31,4,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[49,30,38,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[50,51,52,53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[56,57,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[110,111,112,113,114,115,116,117,54,118,119,120,89,121,122,123,55,124,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[48,127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.LastControl:92","failures":[0,22,24,1,25,26,2,3,4],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[128,18,129,130,131,132,133,134,135,113,136,137,138,139,140,141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[16,16,17,17,144,145,128,18,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,129,130,176,177,178,131,179,132,28,133,19,180,134,181,135,113,182,183,184,185,186,136,187,20,188,189,137,138,190,191,192,193,194,195,196,197,198,199,139,15,21,200,58,59,60,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,141,219,220,221,222,223,224,225,226,227,228,229,230,142,143,231,232,233,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[16,17,235,236,237,238,239,240,241,144,145,242,243,128,244,245,246,18,247,146,152,155,165,171,248,249,250,251,0,22,41,23,42,24,1,43,44,252,253,47,254,255,256,257,258,26,45,259,260,27,46,261,262,263,264,265,266,267,268,269,2,30,3,31,33,34,35,270,36,4,39,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,174,131,179,132,133,182,296,184,185,186,187,189,138,193,194,195,196,297,197,198,298,299,300,301,302,303,304,15,305,58,59,60,61,306,307,115,308,309,62,310,311,312,313,314,213,214,215,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,141,226,227,340,341,342,343,344,345,346,347,348,48,349,350,230,351,127,352,353,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,354,88,355,89,121,356,94,233,357,358,359,360,361,362,363,364,365,366,367,368,369,125,370,371,104,105,106,107,108,109,372,373,374,375,376,377,378,379,380,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[25],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.UsageTest.argumentsOrdered":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":107,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":280,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":146,"org.easymock.tests2.DelegateToTest.testReturnException":274,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":105,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.samples.SupportTest.voteForRemovals":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":51,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":225,"org.easymock.tests.MockClassControlTest.testToString":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.object":78,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":9,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":349,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":351,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":143,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":292,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests2.CaptureTest.testPrimitive":31,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageTest.moreThanOneArgument":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":52,"org.easymock.tests2.CaptureTest.testCaptureNone":270,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":116,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":271,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageVarargTest.varargIntAccepted":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":166,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":358,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":13,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":179,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":92,"org.easymock.tests.UsageExpectAndThrowTest.longType":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":106,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":206,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":334,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":228,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":269,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":140,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":189,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.DelegateToTest.testDelegate":276,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests.LimitationsTest.mockFinalMethod":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":8,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.MockingTest.testTwoMocks":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":5,"org.easymock.tests2.CaptureTest.testCapture1_2446744":32,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":76,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.tests.UsageThrowableTest.throwError":93,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":204,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests.UsageExpectAndThrowTest.floatType":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":156,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":200,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.PartialClassMockTest.testGetArea":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":359,"org.easymock.samples.ExampleTest.voteAgainstRemoval":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests2.UsageTest.niceToStrict":279,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":160,"org.easymock.tests.LimitationsTest.privateConstructor":232,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":99,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.UsageTest.defaultResetToNice":281,"org.easymock.tests2.MockBuilderTest.testCreateMock":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":168,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":77,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests.UsageOverloadedMethodTest.overloading":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":96,"org.easymock.tests.MockClassControlTest.testEquals":223,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.MockingTest.testStrictClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":85,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":268,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.samples.ExampleTest.voteForRemovals":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":12,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.samples.BasicClassMockTest.testPrintContent":145,"org.easymock.samples.ExampleTest.addDocument":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":167,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":172,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":98,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":109,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":190,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":370,"org.easymock.samples.ExampleTest.voteForRemoval":237,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":333,"org.easymock.tests.UsageExpectAndReturnTest.floatType":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":136,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":356,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":251,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":147,"org.easymock.tests2.SerializationTest.test":247,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":316,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.samples.SupportTest.addDocument":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":104,"org.easymock.tests2.CaptureTest.testCaptureFirst":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":286,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":157,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests2.UsageTest.moreThanOneArgument":278,"org.easymock.tests2.CaptureTest.testCapture2_2446744":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.GenericTest.testBridgedEquals":229,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":86,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests2.MockedExceptionTest.testRealException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.MockingTest.testNiceClassMocking":216,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testClassMocking":211,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":129,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageExpectAndReturnTest.object":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":148,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":205,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":291,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":284,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":161,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":183,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":175,"org.easymock.tests.MockClassControlTest.testHashCode":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":158,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":162,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":266,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests.UsageVarargTest.varargCharAccepted":343,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":201,"org.easymock.tests2.CaptureTest.testCaptureMultiple":49,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":294,"org.easymock.tests.DefaultClassInstantiatorTest.object":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":37,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":95,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":329,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":221,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":74,"org.easymock.tests.CapturesMatcherTest.test":40,"org.easymock.tests.UsageStrictMockTest.testVerify":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":90,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":242,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":360,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":321,"org.easymock.tests.LimitationsTest.abstractClass":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289}}]
