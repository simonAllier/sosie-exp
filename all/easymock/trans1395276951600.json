[{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.ConstructorArgs:77","failures":[28],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[29,30],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,1,31,52,53,54,55,2,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,30,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,8,167,9,10,168,169,170,171,172,173,174,175,176,176,177,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,225,12,226,227,13,14,228,229,230,231,232,233,234,235,236,237,15,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,19,20,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,22,23,323,24,25,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[83,195,335,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[277,291,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[110,112,114,117,120,8,9,10,225,22,23,24,25,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[34,73,77,337,78,338,339,340,341,79,342,343,80,344,345,346,347,348,349,350,351,352,81,353,354,355,356,357,82,358,359,360,361,362,363,364,365,366,367,176,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[95,97,105,124,125,127,129,130,132,142,147],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[368,369,370,371,372,32,33,373,374,375,376,377,34,35,378,36,37,38,39,40,41,42,43,44,45,379,380,46,47,48,381,49,50,51,0,1,31,52,53,54,55,2,3,56,57,382,383,384,385,386,387,388,58,59,60,61,62,63,64,65,66,67,68,69,389,70,71,72,73,74,390,75,76,77,337,78,338,391,339,340,341,79,342,343,80,344,345,346,347,348,349,350,351,352,81,353,354,355,356,357,82,358,359,334,4,5,6,7,83,84,85,360,86,87,361,392,88,89,90,362,91,393,363,92,93,365,94,394,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,395,116,396,397,117,118,119,120,398,121,122,123,124,125,399,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,30,149,150,151,152,400,401,402,403,404,153,154,405,406,407,408,409,155,156,157,158,159,160,161,162,163,164,165,166,410,8,167,9,10,168,411,169,412,170,171,172,173,413,174,414,175,415,176,177,178,416,417,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,418,419,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,225,12,226,227,13,14,228,229,230,231,420,421,232,422,423,424,425,426,427,233,234,235,236,237,15,428,429,430,431,432,26,433,434,435,238,436,437,438,439,440,441,442,443,444,445,446,447,448,449,239,450,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,451,262,263,264,265,266,267,268,269,270,271,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,335,272,467,468,469,470,471,273,472,473,274,474,275,276,277,278,279,280,281,282,283,284,285,286,475,476,477,478,479,480,481,482,483,484,485,287,486,288,487,289,290,291,488,292,293,294,295,296,297,19,20,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,489,313,314,315,316,317,318,319,320,321,322,490,22,23,323,24,25,324,336,491,492,325,326,327,493,328,494,495,496,329,330,331,332,333],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[368,369,370,371,372,32,33,373,374,375,376,377,34,35,378,36,37,38,39,40,41,42,43,44,45,379,380,46,47,48,381,49,50,51,0,1,31,52,53,54,55,2,3,56,57,382,383,384,386,387,388,58,59,60,61,62,63,64,65,66,67,68,69,389,70,71,72,73,74,390,75,76,77,337,78,338,339,340,341,79,342,343,80,344,345,346,347,348,349,350,351,352,81,353,354,355,356,357,82,358,359,334,4,5,6,7,83,84,85,86,87,392,88,89,90,91,393,363,92,93,94,394,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,395,116,396,397,117,118,119,120,398,121,497,498,499,500,501,122,123,124,125,399,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,30,149,150,151,152,400,401,402,403,404,153,154,405,406,407,408,409,155,156,157,158,159,160,161,502,162,163,164,165,166,410,8,167,9,10,168,411,169,412,170,171,172,173,413,174,414,175,415,176,177,178,416,417,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,418,419,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,225,12,226,227,13,14,228,229,230,231,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,420,421,232,422,423,424,425,426,427,233,234,235,236,237,15,429,430,431,432,26,433,435,238,436,437,438,439,440,441,442,443,444,445,446,447,448,449,239,450,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,451,262,263,264,265,266,267,268,269,270,271,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,335,272,467,468,469,470,471,273,472,473,274,474,275,276,277,278,279,280,281,282,283,284,285,286,475,476,477,478,479,480,481,482,483,484,485,287,486,288,487,289,290,291,488,292,293,294,295,296,297,19,20,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,490,22,23,323,24,25,324,336,491,492,325,326,327,493,328,494,495,496,329,330,331,332,333],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[128],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[125,130,142],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[162,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[34,35,378,40,43,44,45,46,48,49,50,51,0,1,31,52,53,54,2,3,56,57,70,72,73,76,77,78,83,84,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,30,149,150,151,152,156,157,158,160,161,162,163,164,165,410,8,167,9,10,168,170,171,172,173,413,174,175,182,183,184,185,186,192,193,194,195,196,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,12,226,227,13,14,228,232,422,423,424,426,427,233,234,235,236,237,15,440,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,281,282,283,284,285,286,475,476,477,479,480,482,483,484,485,287,288,487,19,20,21,298,299,300,301,302,303,305,306,308,318,320,321,490,22,23,323,24,25,324,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[32,33,50,0,1,31,52,2,3,56,57,59,61,63,64,66,67,70,72,73,76,77,4,5,6,7,85,86,87,90,91,92,93,94,110,117,120,121,124,139,153,154,166,8,167,9,10,168,197,198,199,200,201,202,224,11,225,12,13,14,228,420,232,422,425,426,427,15,238,260,261,276,279,280,481,292,293,294,19,20,21,304,307,308,309,318,322,22,23,323,24,25,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[26,525,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[526,527,225,528,529,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[530],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[531,532],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[50,1,31,52,2,3,56,57,59,63,64,67,70,86,92,93,94,110,118,120,124,139,166,167,9,10,224,225,12,13,14,228,425,426,427,15,481,20,21,533,489,534,535,318,322,22,323,24,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[95,97,105,124,125,127,129,130,132,142,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[127,132,142,147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[32,34,35,378,36,37,38,39,40,43,44,45,46,47,48,49,50,51,0,1,31,52,53,54,55,2,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,389,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,30,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,410,8,167,9,10,168,411,169,412,170,171,172,173,413,174,175,415,176,177,178,416,417,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,225,12,226,227,13,14,228,232,422,423,424,425,426,427,233,234,235,236,237,15,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,262,263,264,265,266,267,268,269,270,271,281,282,283,284,285,286,475,476,477,479,480,481,482,483,484,485,287,288,487,19,20,21,298,299,300,301,302,303,305,306,309,313,314,315,316,317,318,320,321,536,536,322,490,22,23,323,24,25,324,326,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[133,182],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[429,430,431,432,433,435],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[78,537,538,539,540,541,542,543],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[93,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":125,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":224,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":412,"org.easymock.tests2.DelegateToTest.testReturnException":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":326,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":334,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":16,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":538,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":192,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":189,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":200,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":495,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":67,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":196,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":300,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":542,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":237,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests2.DependencyTest.testClassMocking":379,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":39,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":419,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests2.UsageTest.strictResetToDefault":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":320,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests.LimitationsTest.mockFinalMethod":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests2.DependencyTest.testClassMockingSupport":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":260,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":199,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":302,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.MockingTest.testInterfaceMocking":493,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":234,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":180,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":348,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":28,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":187,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":525,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":238,"org.easymock.tests2.UsageConstraintsTest.testMatches":138,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":301,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":405,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":543,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":319,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":435,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":398,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":115,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":60,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":155,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":61,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":485,"org.easymock.tests.GenericTest.testBridgedEquals":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":426,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":532,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":427,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests.MockingTest.testNiceClassMocking":496,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests.MockingTest.testClassMocking":492,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":531,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":421,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockClass":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":539,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":480,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":278,"org.easymock.tests.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":475,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":350,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":534,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":479,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":428,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":53,"org.easymock.tests.DefaultClassInstantiatorTest.object":429,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":276,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":535,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.tests.CapturesMatcherTest.test":536,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":378,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":272,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":527,"org.easymock.samples.SupportTest.voteForRemovals":169,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":273,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":41,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":474,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":158,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":387,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":446,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":528,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":181,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":533,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":484,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":353,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":416,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":279,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":195,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":442,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests.LimitationsTest.mockNativeMethod":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":343,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":328,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":537,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":261,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":414,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":440,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":431,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":344,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":391,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.LimitationsTest.privateConstructor":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":55,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.UsageVarargTest.differentLength":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.CallbackTest.callback":70,"org.easymock.tests2.UsageConstraintsTest.equals":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":396,"org.easymock.tests.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":194,"org.easymock.tests.UsageCallCountTest.tooFewCalls":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":190,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":529,"org.easymock.tests.MockingTest.testStrictClassMocking":491,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":75,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":45,"org.easymock.tests.ObjectMethodsTest.testHashCode":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":541,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":540,"org.easymock.samples.ExampleTest.addDocument":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":354,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.stubAnswer":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":393,"org.easymock.tests.UsageVarargTest.varargLongAccepted":483,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":78,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":141,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":430,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":411,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":345,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":406,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":321,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":465,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":142,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":349,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.MockBuilderTest.testWithConstructor":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":346,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.UsageVarargTest.varargShortAccepted":482,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":425,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":42,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests2.CompareToTest.testLessThan":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":437,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":423,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests2.ConstraintsToStringTest.notToString":530,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":415,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":235,"org.easymock.tests.LimitationsTest.abstractClass":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":236,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":476,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":64}}]
