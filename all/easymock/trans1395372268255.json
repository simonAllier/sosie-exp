[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,5,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,4,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[332,333,334,335,336,337],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[7,9,10,11,12,14,17,19,20,21,22,23,28,29,30,31,32,33,34,338,49,61,62,67,68,71,72,73,74,79,80,81,105,111,112,113,114,116,117,121,126,128,132,133,150,155,156,157,158,163,170,177,178,179,180,181,182,183,184,185,339,340,231,234,235,236,238,239,263,266,267,269,270,271,272,273,274,275,276,277,278,279,280,285,288,289,318,319,320,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[343,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[346,347,348,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[8,26,27,80,81,83,163,327],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[125,126,132,133,351,352,353,354,179,355,356,357,261,262,263,266,267],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[15,15,16,16,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,5,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,162,163,4,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,358,358,224,225,226,230,233,234,235,236,237,238,239,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[359,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:73","sourceCode":"return java.lang.reflect.Field","type":"CtReturnImpl"},"failures":[343,360,344,361],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[176,362,363],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[362,363],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[96,364,365,366,148,367,368,369,370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.SerializationTest.testAllMockedMethod":150,"org.easymock.tests2.DelegateToTest.testReturnException":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":353,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.MockClassControlTest.testToString":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":298,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.object":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":367,"org.easymock.tests2.DelegateToTest.testWrongClass":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":167,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests2.UsageConstraintsTest.testNull":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":317,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":333,"org.easymock.tests.UsageUnorderedTest.message":318,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":97,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":236,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests2.StubTest.stub":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":284,"org.easymock.tests.UsageExpectAndThrowTest.longType":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.AnswerTest.answer":80,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":38,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":334,"org.easymock.tests2.NameTest.nameForMocksControl":158,"org.easymock.tests2.MockedExceptionTest.testMockedException":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.DelegateToTest.testDelegate":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":302,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":5,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":36,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":337,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests.UsageStrictMockTest.differentMethods":183,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":336,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":81,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":281,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":299,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":120,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":307,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":165,"org.easymock.tests.UsageCallCountTest.tooFewCalls":234,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":168,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockClassControlTest.testEquals":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":151,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":356,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.tests.ObjectMethodsTest.testHashCode":228,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":1,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":101,"org.easymock.tests2.NameTest.nameForNiceMock":157,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.testSame":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":238,"org.easymock.tests2.NameTest.nameForMock":155,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":314,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageCallCountTest.tooManyCalls":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":233,"org.easymock.tests2.MockedExceptionTest.testRealException":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":303,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":232,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests2.NameTest.nameForStrictMock":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":138,"org.easymock.tests2.UsageConstraintsTest.testFind":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":116,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":368,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":229,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":370,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":357,"org.easymock.tests2.UsageConstraintsTest.testOr":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":328,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests.MockClassControlTest.testHashCode":257,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":253,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":29,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":304,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests.CapturesMatcherTest.test":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.UsageStrictMockTest.testVerify":185,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":154,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":6,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":283,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
