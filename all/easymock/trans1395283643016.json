[{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[30],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,8,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,67,68,61,69,63,8,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,1,93,94,95,96,97,98,99,100,101,102,103,104,105,106,52,53,54,55,56,57,58,59,107,61,108,109,62,110,111,112,113,114,115,9,116,117,118,119,120,121,122,123,124,125,126,127,128,18,129,130,131,132,133,134,20,135,136,137,138,139,140,141,142,143,144,145,146,64,147,10,148,149,150,151,152,153,154,155,156,21,22,157,23,158,24,25,159,160,161,162,163,164,165,166,167,168,27,29,169,170,28,171,172,16,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,65,195,196,17,197,66,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[216,217,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[219,220,70,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,71,245,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,246,247,248,249,250,251,252,253,254,255,0,92,256,1,93,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,94,95,281,31,96,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,282,97,98,283,99,284,100,285,101,102,103,104,286,287,216,288,289,290,217,291,292,293,294,218,295,296,105,106,52,53,297,54,55,56,57,58,59,107,298,299,300,301,302,303,60,304,305,67,68,61,108,3,4,109,62,5,6,110,306,307,308,111,112,309,113,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,69,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,63,375,114,376,7,377,378,379,380,381,115,8,9,382,116,117,118,119,120,121,122,383,384,385,123,386,387,388,389,390,391,392,124,125,393,126,127,394,128,395,396,397,18,129,19,130,131,398,399,132,133,134,20,400,135,136,137,138,139,140,141,142,401,402,143,403,404,405,144,145,146,406,407,408,64,409,410,411,412,413,414,415,147,416,10,148,417,149,418,419,420,421,422,423,424,425,426,427,428,150,429,430,431,432,433,434,435,436,437,151,438,439,152,440,441,442,443,444,445,446,447,448,153,449,450,451,452,453,154,454,455,155,156,21,22,456,157,23,158,24,25,159,26,160,161,162,163,164,165,166,167,168,27,29,169,457,170,28,171,172,458,459,16,460,461,462,463,464,173,174,175,465,176,177,178,179,466,467,468,469,470,180,471,472,473,474,475,476,181,182,183,184,185,186,187,188,189,190,191,192,477,193,194,478,65,195,196,11,17,479,197,66,198,12,13,199,200,480,481,482,483,484,485,486,487,488,489,490,491,492,493,201,202,203,204,494,205,206,207,495,496,208,497,498,209,499,210,211,500,501,502,212,503,504,505,213,506,214,507,508,509,215,510],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[511,512,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[317,318,319,320,322,323],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[344,346,355,356,358],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,254,255,0,92,256,1,93,257,258,260,261,264,266,267,268,269,271,272,278,279,94,95,281,31,96,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,282,97,98,99,284,100,101,102,103,104,105,106,52,53,297,54,55,56,57,58,59,107,298,299,300,301,302,303,60,304,305,67,68,61,108,4,109,62,5,6,110,111,112,113,324,325,326,328,329,330,331,332,333,334,335,351,357,372,373,374,63,375,114,7,377,378,379,380,381,115,8,9,382,116,117,118,119,120,121,122,383,384,385,123,386,387,388,388,389,389,390,391,392,124,125,393,126,127,394,128,396,397,18,129,19,130,131,398,399,132,133,134,20,400,135,136,137,138,139,140,141,142,143,144,145,146,408,64,410,411,412,413,414,415,147,416,10,148,417,149,150,151,152,153,154,155,156,21,22,157,23,158,24,25,159,26,160,161,162,163,164,165,166,167,168,27,29,169,457,170,28,171,172,458,459,16,460,461,462,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,477,193,194,478,65,195,196,11,17,479,197,66,198,12,13,199,200,480,482,201,202,203,204,205,206,207,208,209,210,211,212,504,505,213,506,214,507,508,509,215,510],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,514,515,3,516,517],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,376,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[390,391,424,425,426,431,434,466,467,468,473,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,129,19,130,20,400,21,22,157,23,158,24,25,159,26,160,27,29,28,171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[518,193,194,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[18,19,130,131,398,399,132,134,15,20,400,136],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[512,519,520,521],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":479,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":391,"org.easymock.tests2.DelegateToTest.testReturnException":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.samples.ExampleTest.answerVsDelegate":393,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":251,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":296,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":379,"org.easymock.tests.UsageTest.argumentsOrdered":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":496,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.DependencyTest.testClassMocking":463,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":422,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":248,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":103,"org.easymock.tests2.DelegateToTest.testDelegate":462,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":47,"org.easymock.tests.LimitationsTest.mockFinalMethod":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":277,"org.easymock.tests2.DependencyTest.testClassMockingSupport":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":278,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":420,"org.easymock.tests.UsageThrowableTest.throwError":53,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":250,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":230,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":33,"org.easymock.tests2.UsageTest.niceToStrict":17,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests2.ThreadingTest.testChangeDefault":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":41,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":519,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":164,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":83,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":327,"org.easymock.tests2.EasyMockSupportClassTest.testAll":151,"org.easymock.tests.MockClassControlTest.testEquals":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":421,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":275,"org.easymock.tests.MockNameTest.defaultName":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":380,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":115,"org.easymock.samples.BasicClassMockTest.testPrintContent":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":58,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":146,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":231,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":401,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":223,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":382,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":458,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":334,"org.easymock.tests.GenericTest.testBridgedEquals":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":520,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":50,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":457,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests.MockingTest.testNiceClassMocking":312,"org.easymock.tests.MockingTest.testClassMocking":307,"org.easymock.tests2.UsageConstraintsTest.testContains":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":213,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":52,"org.easymock.tests.MockTypeTest.fromEasyMockClass":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":482,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndReturnTest.object":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":329,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":521,"org.easymock.tests.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":88,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":218,"org.easymock.tests2.EasyMockSupportTest.testVerify":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":419,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":423,"org.easymock.tests.UsageVarargTest.varargCharAccepted":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":511,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":305,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":287,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":144,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":229,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":38,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":89,"org.easymock.tests.ReplayStateInvalidCallsTest.times":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":154,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":351,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":517,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":44,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":518,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":357,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":507,"org.easymock.tests.UsageExpectAndThrowTest.object":42,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":29,"org.easymock.tests2.DelegateToTest.testWrongClass":460,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":388,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":435,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":514,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":225,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":98,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":490,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":30,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":333,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":386,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests2.StubTest.stub":408,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":416,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.SerializationTest.testClass":193,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":417,"org.easymock.tests2.NameTest.nameForMocksControl":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":505,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":481,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":36,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":211,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":240,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":308,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":237,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":40,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":493,"org.easymock.samples.ExampleTest.removeNonExistingDocument":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":492,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":503,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":34,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":509,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.LimitationsTest.privateConstructor":220,"org.easymock.tests2.UsageConstraintsTest.testNotNull":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":504,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":59,"org.easymock.tests2.UsageTest.defaultResetToNice":198,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":397,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":281,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":491,"org.easymock.tests.UsageThrowableTest.throwCheckedException":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":515,"org.easymock.tests.MockingTest.testStrictClassMocking":306,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":510,"org.easymock.tests.ObjectMethodsTest.testHashCode":216,"org.easymock.tests2.NameTest.nameForNiceMock":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":239,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.samples.ExampleTest.addDocument":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":332,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":168,"org.easymock.tests.UsageThrowableTest.noUpperLimit":297,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":483,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":398,"org.easymock.tests2.SerializationTest.test":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":73,"org.easymock.samples.SupportTest.addDocument":392,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":224,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":222,"org.easymock.tests2.NameTest.nameForMock":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":46,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":104,"org.easymock.tests2.MockedExceptionTest.testRealException":506,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":411,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":512,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":208,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":228,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":489,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":242,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":508,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":69,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":400,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":497,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":86,"org.easymock.tests2.CaptureTest.testCapture":15,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":396,"org.easymock.tests.UsageStrictMockTest.testVerify":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":390,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":274,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":78,"org.easymock.tests.LimitationsTest.abstractClass":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":325}}]
