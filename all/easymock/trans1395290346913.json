[{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[11,12,13,14,15,16,17,18,0,19,1,20,21,22,23],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[55,56,50,35,35,36,36,57,58,59,37,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,39,93,94,95,96,97,98,99,51,100,52,53,43,101,102,54,103,104,105,106,107,108,109,110,49,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,5,6,7,8,146,9,10],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[147,2,148,149,3,150,4,151,11,13,1],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[28,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[147,3,11,13,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:167","sourceCode":"final org.easymock.internal.ClassProxyFactory.MockMethodInterceptor org.easymock.internal.ClassProxyFactory.MockMethodInterceptor = new org.easymock.internal.ClassProxyFactory.MockMethodInterceptor(java.lang.reflect.InvocationHandler)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[150,154],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[155],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[59,156,157,158,159,24,160,161,25,162,163,164,165,166,167,168,26,169,170,171,172,173,174,175,147,2,176,148,177,149,3,178,154,179,180,181,182,183,184,185,186,4,187,188,189,151,190,191,11,12,14,15,18,0,19,1,20,21,22,192,193,194,195,196,197,198,199,200,201,202,203,39,204,27,51,105,107,110,113,114,115,205,206,207,208,209,210,211,29,30,212,213,214,215,216,217,31,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,32,233,152,153,234,235,236,237,238,239,240,241],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[242],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[110,49,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,5,6,7,8,146,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:36","sourceCode":"return (java.lang.Object != null) && (java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))","type":"CtReturnImpl"},"failures":[147,3,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[55,56,50,35,35,36,36,57,58,59,37,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,39,93,95,97,98,99,51,100,52,53,43,101,102,103,104,105,106,107,108,109,110,49,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,5,6,7,8,146,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[160,25,164,26,169,184,243,193,197,198,201,262,113,115,263,207,119,121,29,264,265,266,267,268,212,214,31,220,221,269,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[244,270,271,272,273,274,275,276,277,245,55,56,278,279,50,35,35,36,36,57,58,59,33,37,38,280,246,247,248,281,249,156,250,251,252,282,283,253,284,285,157,158,60,61,62,63,286,64,65,254,255,256,287,257,159,258,259,260,288,289,261,290,291,24,292,160,161,293,294,295,296,297,298,299,25,162,163,300,164,301,165,166,167,302,303,168,26,304,169,66,67,305,306,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,170,171,172,307,173,174,175,147,2,308,176,148,177,149,3,178,150,154,179,180,181,182,183,184,185,186,4,187,188,309,189,151,190,191,310,311,312,313,314,315,316,317,318,319,243,320,321,322,11,12,13,14,15,16,17,18,0,19,1,20,21,22,192,193,194,195,196,197,198,199,200,201,202,203,323,39,204,93,27,324,325,326,262,327,95,40,97,98,41,99,51,100,52,42,53,43,101,102,45,103,104,105,328,106,107,108,109,329,110,49,111,112,113,114,115,116,117,263,205,206,330,331,332,333,207,208,209,210,334,335,336,118,119,120,121,122,123,337,338,124,339,340,341,342,343,344,345,346,347,348,211,28,29,349,350,351,352,353,354,355,356,357,264,358,265,359,360,361,362,363,364,365,366,266,267,367,268,368,369,370,30,371,212,213,372,373,214,215,374,375,216,217,376,377,31,125,126,127,128,378,379,380,381,382,383,129,384,385,386,387,388,130,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,34,404,218,405,219,220,406,407,221,408,409,410,222,411,412,413,414,415,416,223,224,225,417,418,226,227,228,229,230,419,420,421,422,423,155,424,425,426,427,231,428,429,430,431,432,433,434,435,436,437,438,439,440,441,232,442,32,233,152,153,234,235,236,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,269,237,238,131,132,133,134,135,463,136,464,465,137,466,467,468,469,470,471,472,473,474,138,139,140,141,142,143,144,145,475,239,476,477,478,240,479,241,480,481,482,483,5,6,7,8,146,9,484,10,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[349,353,354,361,366],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[38,488,489,490,491,492,493,494,42,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.LastControl:92","failures":[147,2,149,3,150,4,11,13,1],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[495],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[496,178,182,191],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[147,2,148,149,3,150,4,151,11,13,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[244,270,271,272,273,274,275,276,277,245,55,56,278,279,50,57,58,59,33,246,247,248,281,249,156,250,251,252,282,283,253,284,285,157,158,60,61,63,286,497,254,255,256,287,257,159,258,259,260,288,289,261,290,291,24,292,160,161,293,294,295,296,297,298,299,25,162,163,300,164,301,165,166,167,302,303,168,26,304,169,66,67,305,306,68,69,71,73,74,75,76,79,82,84,85,86,87,88,89,90,170,171,172,307,173,174,175,147,2,308,176,148,177,149,3,178,150,154,179,180,181,182,183,184,185,186,4,187,188,309,189,151,190,191,310,311,312,313,314,315,316,317,318,319,243,320,321,322,11,12,13,14,15,16,17,18,0,19,1,20,21,22,192,193,194,195,196,197,198,199,200,201,202,203,323,204,93,27,324,325,326,262,327,95,97,98,99,51,100,52,53,101,102,103,104,105,328,106,107,108,109,329,110,111,112,113,114,115,116,117,263,205,206,330,331,332,333,207,208,209,210,334,335,336,118,119,120,121,122,123,337,338,124,339,340,341,342,343,344,345,346,347,348,211,28,29,349,350,351,352,353,354,355,356,357,264,358,265,359,360,361,362,363,364,365,366,266,267,367,268,368,369,370,30,371,212,213,372,373,214,215,374,375,216,217,376,377,31,125,126,127,128,378,379,380,381,382,383,129,384,385,386,387,388,130,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,34,404,218,405,219,220,406,407,221,408,409,410,222,411,412,413,414,415,416,223,224,225,417,418,226,227,228,229,230,419,420,421,422,423,155,424,425,426,427,231,428,429,430,431,432,433,434,435,436,437,438,439,440,441,232,442,32,233,152,153,234,235,236,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,269,237,238,131,132,133,463,464,465,137,466,467,468,469,470,471,472,473,474,138,139,140,141,142,143,144,145,475,239,476,477,478,240,479,241,480,481,482,483,5,6,7,8,146,9,484,10,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.UsageTest.argumentsOrdered":303,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":358,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":301,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testReturnException":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":379,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":140,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":310,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":443,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageTest.wrongArguments":300,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":124,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":465,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests2.CaptureTest.testPrimitive":14,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":462,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":155,"org.easymock.tests.UsageTest.argumentsOrdered":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":411,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.DependencyTest.testClassMocking":284,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":298,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":458,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":382,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.DependencyTest.testClassMockingSupport":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":485,"org.easymock.tests2.CaptureTest.testCapture1_2446744":15,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":296,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":232,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":338,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":92,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":444,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":452,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":19,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":120,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":460,"org.easymock.tests2.CaptureTest.testCaptureAll":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":441,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.samples.ExampleTest.voteForRemovals":275,"org.easymock.tests.UsageVarargTest.allKinds":440,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":484,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.samples.ExampleTest.voteForRemoval":272,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":109,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":378,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":439,"org.easymock.tests.GenericTest.testBridgedEquals":122,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":473,"org.easymock.tests.UsageExpectAndReturnTest.longType":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":461,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":459,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":477,"org.easymock.tests.UsageCallCountTest.tooManyCalls":474,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":448,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests.MockingTest.testNiceClassMocking":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testClassMocking":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":467,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests.MockTypeTest.fromEasyMockClass":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":317,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":434,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":387,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":420,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":403,"org.easymock.tests.MockClassControlTest.testHashCode":143,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":255,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":81,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":294,"org.easymock.tests.UsageVarargTest.varargCharAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":334,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":254,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":449,"org.easymock.tests.CapturesMatcherTest.test":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":421,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":480,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":381,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":418,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":48,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":455,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":453,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":454,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":68,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests.UsageUnorderedTest.message":348,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":438,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":471,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":482,"org.easymock.tests.UsageExpectAndThrowTest.longType":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":423,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":248,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":73,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":447,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":133,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":451,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":190,"org.easymock.samples.ExampleTest.removeNonExistingDocument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":172,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":138,"org.easymock.tests.UsageExpectAndThrowTest.floatType":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":75,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":326,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":280,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":247,"org.easymock.tests2.CallbackTest.callback":299,"org.easymock.tests2.UsageConstraintsTest.equals":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":49,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":406,"org.easymock.tests.UsageCallCountTest.tooFewCalls":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests.MockingTest.testStrictClassMocking":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":286,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":327,"org.easymock.tests2.CompareToTest.testGreateOrEqual":496,"org.easymock.tests.ObjectMethodsTest.testHashCode":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":173,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.DelegateToTest.testStubDelegate":243,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests.UsageVarargTest.varargLongAccepted":437,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":442,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":175,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":16,"org.easymock.tests2.SerializationTest.test":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":413,"org.easymock.tests2.UsageConstraintsTest.testSame":177,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":76,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":464,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":457,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":47,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":220,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":160,"org.easymock.tests2.UsageConstraintsTest.lessThan":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":357,"org.easymock.tests2.CaptureTest.testCaptureRightOne":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":80,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":375,"org.easymock.tests2.MockBuilderTest.testWithConstructor":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":77,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":350,"org.easymock.tests.UsageVarargTest.varargShortAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":472,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":374,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":470,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":371,"org.easymock.samples.ExampleTest.addAndChangeDocument":277,"org.easymock.tests2.ConstraintsToStringTest.containsToString":495,"org.easymock.tests.UsageStrictMockTest.testVerify":373,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":410,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":94,"org.easymock.tests.LimitationsTest.abstractClass":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":222,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198}}]
