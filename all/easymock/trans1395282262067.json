[{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,7,25,26,27,28,29,30,31,32,33,34,10,11,35,36,37,12,38,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,7,63,63,64,64,65,66,67,68,41,69,70,71,72,73,74,75,76,77,78,79,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,47,92,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[95,48,96,57,97],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[16,98,29],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[99,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[101,102,103,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[16,98,29],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[105],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[106,107,5,108,81,82,83,84,85,86,87,88,89,90,91,47,92,93,109,110,48,49,96,111,50,51,52,53,112,113,114,115,116,54,117,55,56,118,57,58,59,3,2,119,97,60,61,62,120,121,7,122,65,123,124,66,67,125,126,68,41,69,70,71,72,31,127,73,74,128,129,130,131,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[132,22,133,134,131],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,0,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[5,173,46,174,175,176,177,123,178,125,126,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,9,205,206,207,208,209,210,211,212,213,128,129,10,214,215,216,217],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[218,219,220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[221],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[135,169,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[132,22,223,133,134,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[206,207,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[224,225,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[226,43,227,44,228,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[230,231,232,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":44,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":168,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":211,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":222,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":63,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":133,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":158,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":126,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":224,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":20,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests2.DependencyTest.testClassMocking":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":233,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":114,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":167,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":42,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":2,"org.easymock.tests2.DependencyTest.testClassMockingSupport":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":32,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":45,"org.easymock.tests2.ConstraintsToStringTest.andToString":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.tests2.CompareToTest.testLessOrEqual":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":160,"org.easymock.tests2.UsageConstraintsTest.equals":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":134,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":78,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":64,"org.easymock.tests2.ConstraintsToStringTest.orToString":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":169,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":9,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":210,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":149,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.GenericTest.testBridgedEquals":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":161,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":13,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":153,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":140,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":216,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.DefaultClassInstantiatorTest.object":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":131,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests2.ConstraintsToStringTest.notToString":19,"org.easymock.tests.CapturesMatcherTest.test":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":181,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":163,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":37}}]
