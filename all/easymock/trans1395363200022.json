[{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10,11,12,13,14,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[24,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[6,8,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[36,37,38,39,40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,9,13,14,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[43,44,45,46,47,48,49,50,24,25,51,52,53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[60,61,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,56,74,75,76,77,78,79,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[5,82],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[83,84,85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[87,88,5,6,89,7,90,8,9,91,10,92,93,94,95,96,97,98,99,100,11,101,102,103,104,12,105,106,107,108,109,63,64,65,110,111,112,113,114,115,15,116,43,16,17,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,67,69,70,71,72,139,140,18,44,141,142,143,144,145,45,46,146,147,148,149,150,151,56,57,58,152,13,153,14,154,155,156,157,0,1,2,3,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,75,76,178,179,180,181,182,183,184,185,186,187,188,189,190,19,191,192,193,194,49,20,195,50,21,22,196,23,24,25,197,198,199,200,201,202,203,204,205,206,207,208,33,209,26,52,210,211,53,54,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,55,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,28,264,265,266,29,30,267,31,268,269,32,270,271,272,273,274,275,276,277,278,34,35,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[43,44,45,46,296,47,48,49,50,24,25,51,52,53,54,55],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[87,88,5,6,89,7,90,8,9,91,92,93,94,95,96,97,98,99,100,11,101,102,103,104,12,105,106,107,108,109,63,64,65,110,112,15,43,16,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,67,69,70,71,72,139,140,18,141,143,144,145,146,147,149,56,57,152,13,153,14,154,155,0,1,2,3,158,159,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,75,76,178,183,184,297,185,186,187,19,20,50,21,23,25,83,84,85,197,198,199,86,200,201,204,205,206,207,208,298,299,300,301,302,209,26,210,211,212,231,232,233,234,235,55,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,303,275,277,278,34,35,279,280,281,284,286,287,289,292,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[304,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[11,101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[307,308,110,309,310,184,49,20,51,52,210,211,53,54,212,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[43,44,45,46,312,47,48,49,50,24,25,51,52,53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[118,313,314,120,315,139,144,297,187,190,316,317,318,319,191,320,24,202,203,209,211,260,261,262,263,28,264,265,266,29,30,267,31,268,269,32,270,271,272,273,274,275,277,278,34,35,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[63,313,66,321,74,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[98,114,15,43,16,17,122,126,127,130,72,18,44,141,142,45,46,160,19,193,20,50,21,22,23,24,25,205,26,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":36,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":33,"org.easymock.tests.MockingTest.testPartialClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":4,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":308,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":62,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":38,"org.easymock.tests2.DelegateToTest.testWrongClass":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.samples.ExampleTest.answerVsDelegate":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":130,"org.easymock.tests2.CaptureTest.testPrimitive":154,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":274,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":85,"org.easymock.tests2.CaptureTest.testCaptureNone":1,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":321,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":255,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.MockedExceptionTest.testMockedException":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":125,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":28,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":270,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":176,"org.easymock.tests2.CaptureTest.testCaptureLast":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":155,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":29,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":275,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":111,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":232,"org.easymock.samples.ExampleTest.voteAgainstRemoval":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":280,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":251,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":160,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":30,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":202,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":272,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":113,"org.easymock.samples.ExampleTest.voteForRemovals":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":41,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":138,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":40,"org.easymock.samples.BasicClassMockTest.testPrintContent":294,"org.easymock.samples.ExampleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testStubDelegate":149,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":279,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests2.AnswerTest.stubAnswer":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":206,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":298,"org.easymock.samples.ExampleTest.voteForRemoval":286,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.floatType":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":152,"org.easymock.tests.UsageThrowableTest.noUpperLimit":276,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":192,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":123,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":237,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":124,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":243,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":248,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":271,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":208,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.MockedExceptionTest.testRealException":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":244,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":170,"org.easymock.tests.UsageExpectAndReturnTest.object":246,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":177,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":129,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":39,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":252,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":172,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":241,"org.easymock.tests2.EasyMockSupportTest.testVerify":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":249,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":188,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":296,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":132,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":68,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":278,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":250,"org.easymock.tests2.CaptureTest.testCapture":304,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.CapturesMatcherTest.test":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":253,"org.easymock.tests.UsageStrictMockTest.testVerify":196,"org.easymock.tests2.ConstraintsToStringTest.containsToString":82,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":283,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":234,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":127}}]
