[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1634","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,20,39,40,41,42,43,21,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[75,76],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[22,77,23,78,79,80,81,82,83,84,85,86,87,88,89,0,90,91,92,93,94,25,26,28,29,30,4,5,6,7,95,96,35,20,39,97,98,99,100,101,102,103,104,105,106,107,46,108,48,49,50,52,53,55,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,57,137,138,139,140,141,142,143,144,8,9,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,65,10,183,184,185,186,187,188,189,190,191,192,193,66,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,67,68,70,235,15,16,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,18,19,252,253,72,73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[254],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[22,77,23,255],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[257,258,259],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,260,261,262,263,10,264,11,12,13,265,266,267,17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[67,69,268],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[269,270,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[26,29,271,272,273,274,275,276,277,278,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.RecordState:262","failures":[280,281,96,135,136,57,137,282,155,283,284,285,286,287,288,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,289,216,290,291,292,293,294,219,220,221,222,223,224,15,295,296,297],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[280,1,90,91,2,3,93,298,299,300,301,302,94,37,42,43,44,47,54,56,111,125,303,304,305,9,285,264,11,12,13,306,307,308,309,14,310,15,16,311,312,313,314,247,315,17,316,317,19],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[318,78,79,80,81,92,319,320,321,35,39,42,44,97,51,53,135,136,322,323,156,157,158,159,264,184,307,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,70,341,342,343,344,345,346,347,242,243,244,245,246,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[348,139,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[350,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[351,352,353,354,355,318,356,357,358,359,360,361,22,77,23,78,79,80,81,82,362,363,83,84,85,364,365,86,366,87,367,88,280,89,0,1,90,91,368,281,92,2,3,93,298,369,370,371,372,319,299,373,374,375,300,301,320,376,302,377,378,321,94,24,25,26,27,379,28,29,30,272,380,381,382,383,31,384,385,32,386,387,388,389,390,391,392,393,394,33,395,396,397,398,399,34,400,401,402,4,5,6,7,95,96,35,273,37,38,274,403,20,39,40,275,41,404,42,43,277,44,405,97,98,99,100,406,101,102,103,104,105,106,407,408,107,46,47,108,48,49,50,51,409,52,410,411,53,54,55,56,412,413,109,110,111,112,414,113,114,115,116,117,118,415,119,120,121,122,123,124,125,126,127,128,129,130,416,131,132,133,134,135,136,57,137,417,418,419,420,421,322,422,423,424,425,426,427,348,138,139,428,429,140,141,142,430,431,143,303,144,8,304,305,9,145,432,433,434,146,147,148,149,150,151,323,152,435,58,58,59,59,60,61,62,436,437,438,153,282,439,154,155,156,157,158,159,440,160,161,283,284,162,63,441,442,64,443,444,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,65,285,10,264,11,445,286,12,13,306,446,287,288,183,184,185,186,187,188,307,308,309,189,190,191,192,193,14,447,324,75,448,449,450,76,451,452,453,325,326,327,328,329,330,331,332,333,334,335,336,454,455,66,456,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,457,458,214,289,215,216,290,291,292,293,294,217,218,459,460,461,462,463,464,465,466,467,468,349,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,337,338,339,486,487,219,220,221,222,223,224,225,226,227,488,228,229,310,230,231,232,233,234,489,67,68,69,268,340,70,341,342,343,344,345,346,235,15,16,236,237,238,239,240,490,491,492,295,493,241,347,494,296,297,242,243,244,245,246,247,248,249,250,315,251,17,18,316,317,19,252,253,495,496,71,72,73,497,74,498,499,500,501,502,503,504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[36,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[22,77,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[280,281,285,286,216,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[117,118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":349,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":434,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":72,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":499,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":302,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":346,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":162,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":501,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":318,"org.easymock.tests.ReplayStateInvalidUsageTest.times":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":256,"org.easymock.tests2.DependencyTest.testClassMocking":364,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":375,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":505,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":246,"org.easymock.tests2.DependencyTest.testClassMockingSupport":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":457,"org.easymock.tests2.CaptureTest.testCapture1_2446744":406,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":327,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":442,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.MockingTest.testInterfaceMocking":497,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":295,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.MockClassControlTest.testEquals":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":261,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":244,"org.easymock.tests.MockNameTest.defaultName":453,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":234,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":235,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":451,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":452,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":373,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":374,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":431,"org.easymock.tests2.CaptureTest.testCapture2_2446744":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests.GenericTest.testBridgedEquals":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":242,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":319,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.MockingTest.testNiceClassMocking":500,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":184,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":113,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests.MockTypeTest.fromEasyMockClass":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":376,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":229,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":339,"org.easymock.tests.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":502,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":179,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":269,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":503,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":405,"org.easymock.tests.UsageVarargTest.varargCharAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":447,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":481,"org.easymock.tests2.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":257,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":378,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":494,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":337,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests2.ConstraintsToStringTest.anyToString":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":270,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":474,"org.easymock.samples.SupportTest.voteForRemovals":433,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":480,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":362,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":484,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":311,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":254,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":284,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":450,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":331,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":322,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":286,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":71,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":448,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":83,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":380,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":279,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.CallbackTest.callback":94,"org.easymock.tests2.UsageConstraintsTest.equals":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":410,"org.easymock.tests.UsageTest.openCallCountByLastCall":445,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.MockingTest.testStrictClassMocking":495,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":379,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":85,"org.easymock.tests.ObjectMethodsTest.testHashCode":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":143,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.DependencyTest.testInterfaceMocking":86,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.AnswerTest.stubAnswer":84,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.floatType":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":215,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":369,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":164,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.samples.SupportTest.addDocument":432,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":498,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":175,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":471,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":336,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":37,"org.easymock.tests2.UsageStrictMockTest.range":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":76,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":407,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":38,"org.easymock.tests.UsageTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageStrictMockTest.testVerify":253,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":435,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":243,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":45,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":301}}]
