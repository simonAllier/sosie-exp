[{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[2,3],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[8,9,10,11,12,13],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,17,40,41,6,42,43,44,45,46,47,2,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,35,36,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[18,19,20,21,22,154,155,156,157,158,159,160,161,162,163,164,165,50,166,167,168,169,51,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,52,210,211,212,213,214,215,216,217,218,219,23,220,53,54,55,56,57,221,58,222,223,59,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,24,25,242,15,26,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,60,61,62,63,64,301,302,303,304,305,306,65,66,67,68,307,308,309,310,311,312,313,314,315,316,317,318,69,70,71,72,73,74,75,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,27,356,357,358,359,360,28,29,361,362,363,364,365,366,367,368,369,76,77,78,79,80,81,82,83,30,31,32,33,34,370,84,371,372,8,373,374,375,376,377,378,35,36,85,86,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,87,89,90,92,93,94,95,97,394,98,99,100,102,395,396,397,398,103,104,399,105,106,107,108,400,109,110,111,112,113,114,115,116,117,37,38,4,401,402,39,17,40,41,5,403,404,405,406,6,0,42,43,407,44,45,7,408,409,410,411,46,47,2,412,413,414,415,416,9,417,418,10,11,419,420,421,422,423,118,119,120,424,12,425,13,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,121,451,122,123,124,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,126,470,471,127,472,473,128,129,474,130,475,131,132,133,134,135,476,136,137,138,139,477,140,141,142,143,144,145,146,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,48,494,495,496,497,16,498,499,147,148,149,150,500,501,151,152,502,503,504,505,506,507,508,509,510,511,512,513,49,514,153],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[503,505,506,507,508,509,510,512,515,513,49,153],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[156,157,160,161,516,517,241,244,245,355,357,384,390,391,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[115,117,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[44,518],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[519],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[520],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[121,451,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[370,371,438,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[521,121,451,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[401,404],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,154,155,156,157,158,159,160,161,162,163,164,165,50,168,169,51,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,52,210,211,212,213,214,215,216,217,218,219,23,220,53,54,55,56,57,221,58,222,223,59,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,24,25,242,15,26,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,288,289,290,291,292,293,294,295,296,297,298,299,300,60,61,62,63,64,301,302,303,304,305,306,65,66,67,68,307,308,309,310,311,312,313,314,315,316,317,318,69,70,71,72,73,74,75,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,27,356,357,358,359,360,28,29,361,362,363,364,365,366,367,368,369,76,77,78,79,80,81,82,83,30,31,32,33,34,370,84,371,372,8,373,374,375,376,377,378,35,36,85,86,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,87,89,90,92,93,94,95,97,98,99,100,102,395,396,397,398,103,104,399,105,106,107,108,400,109,110,111,112,113,114,115,116,117,37,38,4,401,402,39,17,40,41,5,403,404,405,406,6,0,42,43,407,44,45,7,408,409,410,411,46,47,2,9,417,418,10,11,419,420,421,422,423,118,119,120,424,12,425,13,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,121,451,122,123,124,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,126,127,472,473,128,129,474,130,475,131,132,133,134,135,476,136,137,138,139,477,140,141,142,143,144,145,146,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,48,494,495,496,497,16,498,147,148,149,150,501,151,152,503,504,505,506,507,508,509,510,511,512,513,49,514,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[60,64],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[156,157,160,161,522,517,234,241,244,245,355,357,384,390,391,495],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[98,523,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[445,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[154,155,156,157,160,161,162,50,168,169,51,170,171,204,210,212,213,216,217,218,219,224,229,232,233,234,238,239,241,243,244,245,348,351,352,353,355,27,356,357,358,359,78,79,80,381,383,384,385,386,390,391,392,393,87,89,90,95,97,99,100,102,104,112,115,117,4,407,432,438,439,453,455,457,458,460,461,466,467,468,469,485,486,492,48,494,495,496,497,148,149,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[164,328,330,339,340,342,361,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[521,121,451,122],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[154,155,157,158,159,160,161,162,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,52,210,212,213,214,215,217,218,23,220,56,57,58,224,225,226,227,228,230,231,233,235,236,237,241,24,25,242,15,26,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,288,289,290,291,292,293,294,295,61,62,305,67,335,353,354,355,27,356,357,358,359,360,28,29,361,366,367,30,31,32,33,34,370,84,371,372,8,373,374,375,376,378,85,86,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,89,93,95,97,100,397,398,103,104,399,105,106,107,109,113,114,115,37,38,4,401,39,17,40,41,5,403,404,405,406,6,0,42,43,407,44,45,7,408,409,410,411,46,47,2,9,10,11,419,120,12,13,426,428,429,430,431,432,438,446,447,448,450,121,451,122,123,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,130,132,140,146,485,492,493,48,494,495,496,497,16,498,147,148,149,150,501,151,152,503,504,505,506,507,508,509,510,511,512,513,514,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":401,"org.easymock.tests2.UsageTest.argumentsOrdered":391,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":386,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":371,"org.easymock.tests2.DelegateToTest.testReturnException":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":398,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":403,"org.easymock.tests2.UsageTest.wrongArguments":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":345,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":51,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":461,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.CaptureTest.testPrimitive":506,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":20,"org.easymock.tests.UsageTest.argumentsOrdered":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":34,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":485,"org.easymock.tests.ReplayStateInvalidUsageTest.times":315,"org.easymock.tests2.DependencyTest.testClassMocking":395,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":423,"org.easymock.tests2.CaptureTest.testAnd":503,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":167,"org.easymock.tests2.UsageTest.strictResetToDefault":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.DelegateToTest.testDelegate":450,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":369,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.LimitationsTest.mockFinalMethod":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests2.DependencyTest.testClassMockingSupport":396,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":238,"org.easymock.tests2.CaptureTest.testCapture1_2446744":507,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":421,"org.easymock.tests.UsageThrowableTest.throwError":288,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":309,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":169,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":274,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.MockingTest.testInterfaceMocking":221,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.UsageTest.niceToStrict":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":136,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests2.ThreadingTest.testChangeDefault":427,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":512,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.CaptureTest.testCaptureAll":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests.MockNameTest.defaultName":219,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":307,"org.easymock.samples.ExampleTest.voteForRemovals":376,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":492,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":275,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":75,"org.easymock.samples.ExampleTest.voteForRemoval":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":267,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":381,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":454,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":445,"org.easymock.tests2.CaptureTest.testCaptureFirst":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":455,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":514,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":430,"org.easymock.tests2.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":519,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":217,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":410,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":18,"org.easymock.tests.UsageCallCountTest.tooManyCalls":218,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testNiceClassMocking":59,"org.easymock.tests.MockingTest.testClassMocking":54,"org.easymock.tests2.UsageConstraintsTest.testContains":6,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":211,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests.MockTypeTest.fromEasyMockClass":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":460,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":163,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":434,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockSupportTest.testVerify":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":138,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":228,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":522,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":420,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":463,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":175,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":517,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.ReplayStateInvalidCallsTest.times":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":392,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":498,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":122,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":523,"org.easymock.samples.SupportTest.voteForRemovals":380,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":521,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":165,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":408,"org.easymock.tests2.DelegateToTest.testWrongClass":448,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":357,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":472,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":344,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":269,"org.easymock.tests2.CaptureTest.testCaptureNone":511,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":413,"org.easymock.tests.UsageUnorderedTest.message":241,"org.easymock.tests.UsageVerifyTest.twoReturns":245,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":141,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageConstraintsTest.any":405,"org.easymock.tests2.StubTest.stub":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":174,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":313,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":494,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":438,"org.easymock.tests2.SerializationTest.testClass":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":67,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":482,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":497,"org.easymock.tests2.NameTest.nameForMocksControl":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":484,"org.easymock.tests2.MockedExceptionTest.testMockedException":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":131,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":425,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CaptureTest.testCaptureLast":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":480,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":284,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":409,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":390,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":416,"org.easymock.samples.ExampleTest.removeNonExistingDocument":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":487,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":311,"org.easymock.tests.UsageStrictMockTest.differentMethods":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":435,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":415,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":429,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.UsageVerifyTest.twoThrows":244,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.ExampleTest.voteAgainstRemoval":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":66,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.UsageTest.defaultResetToNice":389,"org.easymock.samples.ExampleTest.voteAgainstRemovals":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":481,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":432,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":110,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":346,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":414,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests.MockingTest.testStrictClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":486,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":501,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":419,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.NameTest.nameForNiceMock":468,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":431,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":283,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":397,"org.easymock.samples.ExampleTest.addDocument":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.DelegateToTest.testStubDelegate":447,"org.easymock.tests2.AnswerTest.stubAnswer":11,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":508,"org.easymock.tests2.SerializationTest.test":451,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.samples.SupportTest.addDocument":379,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":500,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":268,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":134,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":266,"org.easymock.tests2.NameTest.nameForMock":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":496,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":424,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":516,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":318,"org.easymock.tests2.NameTest.nameForStrictMock":467,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":127,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":495,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":272,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.CaptureTest.testCaptureRightOne":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":137,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":412,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":216,"org.easymock.tests2.UsageConstraintsTest.cmpTo":406,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":276,"org.easymock.tests2.CompareToTest.testLessThan":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":388,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":308,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":90,"org.easymock.tests.UsageTest.unexpectedCallWithArray":156,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.CaptureTest.testCapture":515,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":356,"org.easymock.samples.ExampleTest.addAndChangeDocument":378,"org.easymock.tests.UsageStrictMockTest.testVerify":360,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":370,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests2.CompareToTest.testGreateThan":518,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":32,"org.easymock.tests.LimitationsTest.abstractClass":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":33,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":458,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":199}}]
