[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[56],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[57,58,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[61,62,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[66,67,68,69,70,71],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[68,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[77,3,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,4,94,95,96,97,98,99,5,100,101,102,103,104,105,106,107,108,109,110,111,112,113,57,6,114,7,8,9,10,11,12,115,116,13,14,117,118,15,16,119,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,120,121,38,122,123,124,125,126,127,128,129,39,40,41,42,43,44,130,45,46,131,132,133,72,73,47,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,74,157,75,158,159,160,161,162,163,164,165,62,63,166,167,168,169,170,171,56,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,48,49,50,51,215,216,52,217,218,219,220,53,221,222,223,76,65,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,54,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[271,91,97,5,17,23,29,33,35,120,272,135,141,147,151,153,159,161,166,179,182,190,215,216,218,229,232,233,238,240,241,242,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[77,3,78,273,274,275,79,80,276,81,277,278,279,82,83,84,85,86,87,88,89,90,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,271,297,298,299,91,300,301,302,303,304,92,305,306,307,308,309,310,311,312,313,314,93,4,94,95,96,97,315,316,317,318,319,320,321,322,323,324,325,326,327,98,99,5,100,328,329,330,331,332,333,334,335,68,101,336,102,103,337,338,104,105,106,107,108,109,110,111,112,113,57,6,114,7,8,9,10,11,12,115,116,13,14,117,339,118,15,16,340,119,341,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,120,69,342,121,38,343,344,122,345,346,123,347,348,349,350,351,352,353,124,354,125,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,126,373,374,272,375,376,377,127,128,378,60,129,379,39,40,41,42,43,44,130,45,46,380,381,382,383,384,385,386,387,131,132,133,72,388,73,47,389,134,390,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,391,392,393,394,395,155,396,397,398,399,400,401,156,74,157,75,158,159,160,402,403,161,404,405,406,407,408,162,409,410,411,412,413,414,415,416,163,417,164,165,418,62,63,64,166,167,168,169,419,170,171,56,172,173,174,420,175,176,177,178,179,180,181,182,183,184,185,186,421,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,422,203,204,205,206,423,207,208,209,424,425,426,427,428,429,430,210,431,432,433,211,434,212,435,213,436,437,438,214,439,440,48,49,50,51,441,215,442,216,52,217,218,443,219,444,220,53,221,445,446,222,223,76,65,224,225,226,227,447,448,449,450,451,228,229,452,230,231,453,454,232,233,234,235,236,237,238,239,54,240,241,242,243,244,455,456,457,245,458,459,246,460,461,462,463,464,465,466,467,468,247,469,470,471,472,473,248,474,475,249,250,251,252,253,254,476,477,255,478,479,480,256,257,258,481,482,483,484,259,260,485,486,487,488,489,490,491,492,261,493,494,495,262,263,264,265,266,267,268,496,269,497,270,498],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[430,439,478,262,263],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[77,3,78,79,80,81,87,88,89,90,280,281,282,283,284,93,4,97,315,316,317,319,320,322,323,324,325,326,99,5,334,335,68,101,336,102,103,337,338,104,105,106,107,108,109,110,111,112,113,57,6,114,7,8,9,10,11,12,115,116,13,14,117,119,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,120,69,342,121,38,343,344,122,345,346,123,347,348,349,124,354,364,365,366,367,372,127,128,129,39,40,41,42,43,44,381,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,74,157,75,159,160,161,415,416,163,417,164,165,418,62,63,64,166,167,168,169,170,171,56,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,204,205,208,209,425,426,427,428,429,211,434,214,440,48,49,50,51,441,215,216,52,217,218,443,219,444,220,53,221,445,446,222,223,76,225,226,227,448,449,450,451,228,229,452,230,231,453,454,232,233,234,235,236,237,238,239,54,240,241,242,243,244,249,250,251,252,253,254,255,480,257,259,265,266,267,268,496,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[77,3,78,97,326,5,68,101,336,102,103,7,116,117,37,120,342,121,38,343,344,122,43,157,161,163,417,164,165,171,175,181,188,52,218,443,220,53,445,446,223,76,226,448,449,450,451,229,452,231,453,454,232,233,238,54],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[391,392,393,394,395,155,396,397,398,399,400,401,404,405,406,407,408,162,409,410,411,412,413,414,495,498],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[77,3,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,4,94,95,96,97,98,99,5,100,101,102,103,104,105,106,107,108,109,110,111,112,113,57,6,114,7,8,9,10,11,12,115,116,13,14,117,118,15,16,119,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,120,121,38,122,123,124,125,127,128,129,39,40,41,42,43,44,130,45,46,132,72,73,47,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,74,157,75,158,159,160,161,162,163,164,165,62,63,166,167,168,169,170,171,56,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,48,49,50,51,215,216,52,217,218,219,220,53,221,222,223,76,65,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,54,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:82","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[391,392,393,395,396,397,398,399,400,401,404,405,406,408,409,410,411,412,413,414,495,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[295,156,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[499,166,182,187],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[500,501,502],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[503],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"failures":[77,3,78,97,68,101,102,103,340,119,120,342,343,344,163,164,165,218,443,445,446,448,449,450,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[62,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[499,166,168],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[171,56,420,175,184,185,188,189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[93,101,104,105,106,107,108,109,110,111,112,113,115,116,117,127,128,163,166,167,170,171,56,172,177,179,180,182,183,188,189,190,236,262,262,263,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[504,505,506,507,508,160,402,62,435,437],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[66,67,68,69,70,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[353],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[419],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[420,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[61,62,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[77,3,78,68,101,102,103,120,342,343,344,511,163,164,165,218,443,445,446,448,449,450,451],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":169,"org.easymock.tests2.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":295,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":444,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":495,"org.easymock.tests2.DelegateToTest.testReturnException":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":382,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":246,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":511,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests2.UsageTest.wrongArguments":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests2.UsageConstraintsTest.testNull":171,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":200,"org.easymock.tests2.CaptureTest.testPrimitive":230,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":117,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":82,"org.easymock.tests.UsageTest.argumentsOrdered":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests.ReplayStateInvalidUsageTest.times":272,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":428,"org.easymock.tests2.CaptureTest.testAnd":228,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":358,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":480,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":195,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":58,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":284,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":340,"org.easymock.tests2.CaptureTest.testCapture1_2446744":231,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":426,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.samples.PartialClassMockTest.testGetArea":264,"org.easymock.tests.MockingTest.testInterfaceMocking":276,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":70,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":318,"org.easymock.tests.MockClassControlTest.testEquals":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":245,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":427,"org.easymock.tests2.CaptureTest.testCaptureAll":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":282,"org.easymock.tests.MockNameTest.defaultName":339,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":269,"org.easymock.tests.UsageVarargTest.allKinds":326,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":77,"org.easymock.samples.BasicClassMockTest.testPrintContent":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":283,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":11,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":258,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":481,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":476,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":193,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":194,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":243,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":325,"org.easymock.tests.GenericTest.testBridgedEquals":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":351,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":280,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":421,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":204,"org.easymock.tests.MockingTest.testNiceClassMocking":279,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":59,"org.easymock.tests.MockingTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":170,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":505,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":320,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":331,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":131,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":392,"org.easymock.tests.MockClassControlTest.testHashCode":385,"org.easymock.tests2.EasyMockSupportTest.testVerify":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":466,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":45,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":441,"org.easymock.tests.UsageVarargTest.varargCharAccepted":319,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":130,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":467,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":248,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":383,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":144,"org.easymock.tests2.SerializationTest.testAllMockedMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":71,"org.easymock.samples.SupportTest.voteForRemovals":261,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":65,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":133,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":75,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":128,"org.easymock.tests.UsageStrictMockTest.range":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":490,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":455,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":96,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":324,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":469,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":349,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":332,"org.easymock.tests2.CaptureTest.testCapture_2617107":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":373,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":417,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests2.NameTest.nameForMocksControl":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":459,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":275,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":103,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":393,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":440,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":403,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":247,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":257,"org.easymock.tests.LimitationsTest.privateConstructor":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.UsageVarargTest.differentLength":321,"org.easymock.tests2.CallbackTest.callback":161,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":478,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.UsageCallCountTest.tooFewCalls":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests.UsageThrowableTest.throwCheckedException":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":67,"org.easymock.tests.MockingTest.testStrictClassMocking":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":330,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":503,"org.easymock.tests2.NameTest.nameForNiceMock":450,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":506,"org.easymock.samples.ExampleTest.addDocument":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":436,"org.easymock.tests.UsageVarargTest.varargLongAccepted":323,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":485,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":453,"org.easymock.tests2.SerializationTest.test":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":136,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.samples.SupportTest.addDocument":492,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":423,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":461,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":277,"org.easymock.tests2.NameTest.nameForMock":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":439,"org.easymock.tests2.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":479,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":449,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":253,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":489,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":164,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":235,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageTest.wrongArguments":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":462,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":286,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":312,"org.easymock.tests.UsageVarargTest.varargShortAccepted":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":350,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":288,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":431,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":149,"org.easymock.tests2.CaptureTest.testCapture":55,"org.easymock.tests2.UsageConstraintsTest.constraints":168,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":498,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":281,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":197,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316}}]
