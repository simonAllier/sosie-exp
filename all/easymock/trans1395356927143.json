[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[101,102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[104,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[28,29,108,109,30,31,32,34,35,110,111,112,113,114,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[116,68,75,81],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[117,35,118,119,103,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,133,0,86,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[149,150,151,152,153,78,154,155,156,157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[158,159,160,161],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[163,164,165,166,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[14,17,167,168,169,170,171,172,173,174,175,42,176,50,51,52,132,132,133,133,177,178,179,53,54,55,180,181,56,57,58,59,60,182,116,183,184,185,74,186,187,188,189,190,75,191,192,76,77,193,194,159,161,195,97,98,196,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[149,150,151,152,153,78,154,155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:274","failures":[150,151,152,153,78,154,156,198,157],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[200,201,202,203,204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[25,207],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":96,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":161,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":208,"org.easymock.tests.MockClassControlTest.testToString":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":132,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":129,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":2,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":49,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":112,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":41,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests2.StubTest.stub":102,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":163,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests2.NameTest.nameForMocksControl":64,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":188,"org.easymock.tests2.CompareToTest.testNotComparable":7,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests.MockingTest.testTwoMocks":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":16,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":5,"org.easymock.tests2.MockBuilderTest.testCreateMockString":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":156,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":42,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests.UsageVarargTest.differentLength":24,"org.easymock.tests2.CallbackTest.callback":78,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":4,"org.easymock.tests2.EasyMockSupportClassTest.testAll":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":94,"org.easymock.tests.MockNameTest.defaultName":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.testMatches":142,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":204,"org.easymock.tests2.NameTest.nameForNiceMock":63,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":203,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":189,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":133,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":167,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.GenericTest.testPackageScope":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.GenericTest.testBridgedEquals":209,"org.easymock.tests2.NameTest.nameForMock":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests2.NameTest.nameForStrictMock":62,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":194,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":152,"org.easymock.tests.MockTypeTest.fromEasyMockClass":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":187,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":190,"org.easymock.tests.ErrorMessageTest.testGetters":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":202,"org.easymock.tests.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":79,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":1,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":206,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests.ResultTest.createThrowResultToString":115,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":11,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":148,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":55,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests2.ConstraintsToStringTest.anyToString":207,"org.easymock.tests2.CaptureTest.testCapture":106,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.tests.CapturesMatcherTest.test":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests2.UsageTest.resumeIfFailure":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":14,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":82}}]
