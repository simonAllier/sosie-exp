[{"position":"org.easymock.internal.MockBuilder:178","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[7,8,9,10,11,12],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[18,19,20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[28,29,30,31,32,33,11,34,35,36,12,37,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[20,44,45,46,47,48,49,50,26,51,52],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[53,54,55,56,57,58],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[28,29,30,31,32,33,11,34,35,36,12,37,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,17,18,89,90,91,92,93,19,16,94,95,96,97,98,99,41,100,101,102,103,104,105,106,107,44,108,109,110,45,111,112,113,114,115,116,117,118,119,28,120,42,29,30,121,122,123,124,125,43,126,127,128,129,130,131,132,133,31,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,0,155,156,157,158,159,160,161,162,163,164,165,166,167,32,168,169,170,171,172,173,174,175,176,177,178,34,35,36,179,180,181,182,183,184,12,185,186,37,187,188,189,190,191,192,193,194,195,196,197,198,38,39,199,200,201,202,203,204,205,206,207,208,209,210,211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[20,21,22,23,60,61,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[68,111,112,214,215,216],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[217,28,29,30,132,31,134,218,219,220,221,32,222,34,35,36,12,185,37,187,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[65,18,115,116,117,223,224,128,225,226,227,228,153,229,154,0,230,231,232,233,234,235],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":90,"org.easymock.tests2.DelegateToTest.testReturnException":91,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":63,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":115,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":137,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ExampleTest.answerVsDelegate":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":106,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageTest.moreThanOneArgument":222,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":176,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":196,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests2.UsageConstraintsTest.any":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":14,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.LimitationsTest.mockNativeMethod":168,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":1,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":235,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":50,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests2.NameTest.nameForMocksControl":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":182,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":0,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":55,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":6,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":116,"org.easymock.samples.PartialClassMockTest.testGetArea":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":4,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests2.CallbackTest.callback":150,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":7,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":205,"org.easymock.tests.UsageCallCountTest.tooFewCalls":194,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":201,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":109,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":60,"org.easymock.tests2.NameTest.nameForNiceMock":220,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":130,"org.easymock.tests.UsageVarargTest.allKinds":178,"org.easymock.tests2.DependencyTest.testInterfaceMocking":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.AnswerTest.stubAnswer":214,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests.UsageVarargTest.varargLongAccepted":175,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":5,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.SerializationTest.test":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.samples.SupportTest.addDocument":74,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":177,"org.easymock.tests2.NameTest.nameForMock":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":197,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.UsageCallCountTest.tooManyCalls":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":107,"org.easymock.tests2.NameTest.nameForStrictMock":219,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":173,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageRangeTest.combination":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":200,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.MockBuilderTest.testWithConstructor":49,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":13,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":57,"org.easymock.tests.UsageVarargTest.varargShortAccepted":174,"org.easymock.tests2.UsageConstraintsTest.cmpTo":98,"org.easymock.tests.UsageVarargTest.varargCharAccepted":172,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":2,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":195,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":224,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.samples.ExampleTest.addAndChangeDocument":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":117,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":233,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170}}]
