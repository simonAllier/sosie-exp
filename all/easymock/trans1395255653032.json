[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[4,5,60,61,9,62,63,64,65,66,67,44,47,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,70,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[71,72,73,74],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[76,71,72,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[76,77,78,79,69,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[86,87,88,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[91,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[4,4,5,5,93,94,95,96,97,98,99,100,6,101,102,7,8,103,104,9,62,105,106,10,107,11,108,109,110,111,112,113,12,114,115,13,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,86,87,131,132,133,134,135,136,137,138,139,140,141,142,16,17,143,18,19,20,21,22,144,145,23,24,25,26,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,27,161,162,163,164,165,166,167,30,168,32,33,34,169,36,170,171,172,173,174,175,176,177,178,179,180,181,182,183,76,77,184,185,78,186,79,69,71,80,187,188,189,190,72,191,192,193,194,81,195,196,197,198,82,199,73,200,201,202,203,204,205,40,206,41,44,45,207,46,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,83,233,84,234,235,236,237,238,239,240,85,241,242,243,91,244,245,92,246,247,248,249,1,250,251,252,253,254,255,256,49,257,258,259,2,260,261,262,263,264,265,88,89,266,267,268,269,50,270,271,272,273,274,275,276,3,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,90,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,51,52,53,362,363,364,365,366,367,368,369,54,370,371,372,373,374,375,376,377,55,56,57,378,58,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,59,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.Capture:82","failures":[83,84,234,235,236,237,238,240,466,85,241,243],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[148,151,152,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[34],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[80],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[93,94,95,96,97,98,100,9,105,10,118,120,467,468,469,470,122,123,124,125,126,127,128,129,130,86,87,131,132,16,17,143,18,19,20,22,23,25,147,150,151,152,154,155,156,158,159,160,27,161,162,163,28,32,33,37,39,182,183,76,77,185,78,186,79,69,71,187,188,189,190,72,191,192,193,194,81,195,196,198,82,199,73,200,201,202,203,204,40,206,41,43,44,46,47,208,209,210,211,212,213,214,215,216,217,218,219,220,83,233,84,234,235,236,237,238,239,240,85,241,242,243,91,244,245,92,246,247,248,249,250,251,252,253,254,255,258,261,262,263,264,265,88,89,266,267,50,278,279,280,281,282,283,90,318,319,326,327,328,329,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,51,52,366,367,54,371,372,373,374,375,56,57,58,383,389,397,398,399,400,401,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,59,435,436,437,439,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[100,118,120,122,123,124,132,158,182,72,193,73,210,233,238,239,243,258,299,303,341,347,353,357,359,412,418,424,428,430,434,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[83,233,84,234,235,236,237,238,239,240,85,241,242,243,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[4,4,5,5,93,94,95,96,97,98,100,6,101,102,7,8,103,104,9,10,11,12,13,118,120,467,468,469,470,122,123,124,125,126,127,128,129,130,86,87,131,132,133,134,135,472,136,137,473,138,474,139,140,141,142,16,17,143,18,19,20,22,24,25,26,147,148,149,150,151,152,153,154,155,156,157,158,159,160,27,161,162,163,30,32,34,35,37,175,182,183,76,77,185,78,186,79,69,71,80,187,188,189,190,72,191,192,193,194,81,195,196,197,198,82,199,73,204,205,40,206,41,42,43,44,45,207,46,47,208,209,210,211,212,213,214,215,216,217,218,219,220,226,83,233,84,234,235,236,237,238,239,240,85,241,242,243,91,244,245,92,246,247,248,249,1,250,251,252,253,254,255,258,259,2,260,261,262,263,264,265,88,89,266,267,3,278,280,281,282,283,285,286,303,309,90,318,319,326,327,328,329,330,331,332,333,334,335,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,51,52,53,363,364,365,366,367,54,371,372,373,374,375,56,57,58,382,383,397,398,399,400,401,403,404,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,59,435,436,437,439,440,441,442,443,444,445,446,447,448,454,455,457,458,459,460,461,462,463,464,465],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[6,21,28,29,30,31,32,33,34,35,36,37,0,38,39,40,48,49,53],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,4,5,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,26,475,27,28,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,269,50,270,271,272,273,274,275,325,51,52,53,362,54,55,56,57,58,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[93,94,95,96,97,98,100,101,102,7,8,103,104,10,118,120,122,123,124,125,126,127,128,129,130,86,87,131,132,133,134,135,472,136,137,473,474,139,140,141,142,16,17,143,18,19,20,22,26,147,150,151,152,154,155,156,158,159,160,27,161,162,163,175,182,183,76,77,185,78,186,79,69,71,187,188,189,190,72,191,192,193,194,81,195,196,197,198,82,199,73,204,205,206,41,42,45,207,208,209,210,211,212,213,214,215,217,218,219,220,226,83,233,84,234,235,236,237,238,239,240,85,241,242,243,91,244,245,92,246,247,248,249,250,251,252,253,254,255,258,259,261,262,263,264,265,88,89,266,267,274,275,280,281,282,283,285,286,90,318,319,320,323,326,328,329,330,332,333,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,51,52,362,366,367,54,371,372,373,374,375,397,398,399,400,401,403,404,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,59,435,436,437,439,440,441,442,443,444,445,446,447,448,454,455,457,458,459,460,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[127,130,86,87,132,134,137,473,139,17,24,26,30,36,37,39,76,192,208,211,212,213,217,218,219,220,258,261,263,265,88,89,284,285,286,318,319,326,476,477,478,479,441,454,456,457,460,461,462],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[361],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17,23,26,44,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[40,206,41,480],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[4,5,144,63,66,481,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[312,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[76,69,189,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":454,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":297,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":104,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":270,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":121,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":341,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":407,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":339,"org.easymock.samples.ExampleTest.answerVsDelegate":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":49,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":275,"org.easymock.tests2.CaptureTest.testPrimitive":234,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":411,"org.easymock.tests.UsageTest.moreThanOneArgument":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":399,"org.easymock.tests.UsageTest.argumentsOrdered":461,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageVarargTest.varargIntAccepted":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":375,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.AnswerTest.answer":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":356,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":453,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":401,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":117,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":372,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":2,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":350,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":337,"org.easymock.tests.UsageOverloadedMethodTest.overloading":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":240,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.MockClassControlTest.testEquals":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":358,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":14,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests.MockNameTest.defaultName":268,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.samples.ExampleTest.voteForRemovals":98,"org.easymock.tests.UsageVarargTest.allKinds":446,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.samples.ExampleTest.voteForRemoval":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":153,"org.easymock.tests2.CaptureTest.testCaptureFirst":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":472,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.CaptureTest.testCapture2_2446744":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":445,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":285,"org.easymock.tests.UsageExpectAndReturnTest.longType":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":359,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":279,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":434,"org.easymock.tests.MockTypeTest.fromEasyMockClass":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":261,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":179,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":474,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":440,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":323,"org.easymock.tests.UsageTest.exactCallCountByLastCall":462,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":403,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":428,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests.MockClassControlTest.testHashCode":273,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":105,"org.easymock.tests.UsageVarargTest.varargCharAccepted":439,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":463,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":173,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":347,"org.easymock.tests.CapturesMatcherTest.test":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":429,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":13,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":271,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.samples.SupportTest.voteForRemovals":102,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":353,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":148,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":277,"org.easymock.tests.UsageExpectAndThrowTest.object":351,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":366,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":367,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":166,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":138,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":352,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":338,"org.easymock.tests2.CaptureTest.testCaptureNone":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":260,"org.easymock.tests.UsageUnorderedTest.message":258,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":478,"org.easymock.tests.UsageVerifyTest.twoReturns":319,"org.easymock.tests.UsageVarargTest.varargByteAccepted":444,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":283,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":431,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":172,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":70,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":131,"org.easymock.tests2.NameTest.nameForMocksControl":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":459,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":170,"org.easymock.tests2.CaptureTest.testCaptureLast":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":349,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.samples.ExampleTest.removeNonExistingDocument":99,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":177,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":269,"org.easymock.tests.UsageExpectAndThrowTest.floatType":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":192,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":150,"org.easymock.tests.UsageVerifyTest.twoThrows":318,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":12,"org.easymock.samples.ExampleTest.voteAgainstRemoval":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":61,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.differentLength":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":171,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests2.UsageConstraintsTest.equals":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":144,"org.easymock.tests.UsageTest.openCallCountByLastCall":458,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":409,"org.easymock.tests.UsageCallCountTest.tooFewCalls":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":448,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":152,"org.easymock.tests2.CompareToTest.testGreateOrEqual":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":322,"org.easymock.tests2.NameTest.nameForNiceMock":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.samples.ExampleTest.addDocument":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.DelegateToTest.testStubDelegate":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":116,"org.easymock.tests2.AnswerTest.stubAnswer":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":264,"org.easymock.tests.UsageVarargTest.varargLongAccepted":443,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":230,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":183,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":164,"org.easymock.tests2.SerializationTest.test":206,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":413,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.samples.SupportTest.addDocument":101,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":108,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":424,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":67,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":355,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":329,"org.easymock.tests2.MockedExceptionTest.testRealException":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests2.NameTest.nameForStrictMock":468,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":165,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":457,"org.easymock.tests2.MockBuilderTest.testWithConstructor":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":109,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":284,"org.easymock.tests2.UsageConstraintsTest.cmpTo":188,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":456,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":282,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":426,"org.easymock.tests2.CaptureTest.testCapture":466,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":267,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":103,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":450,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":418,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":473,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":436}}]
