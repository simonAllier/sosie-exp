[{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:126","failures":[103,104,105,106,107],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[108,104,109,110,111,112,113,114,115,116,117],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[119,120,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[122,99,123,124,125,126,127],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,128,129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,104,34,194,107,195,196,197,198,199,200,201,202,109,110,203,204,205,206,207,208,209,72,83,91,210,211,212,213,214,111,215,116,117,216,217,218,119,219,220,221,222,120,223,224,225,226,227,228,229,230,231,121,232,233,234,235,236,237,238,239,240,241,242,243],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[244,245,201,218,119,220,222,120,246,121,235],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[238],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[247,131,132,248,249,133,134,250,0,251,252,253,254,255,2,3,135,136,256,257,137,7,138,139,258,259,140,260,141,142,143,144,261,145,146,147,148,262,149,150,151,152,263,264,265,266,267,153,268,154,269,270,271,272,273,274,13,275,276,277,278,279,280,281,282,283,155,284,156,157,285,286,158,159,160,161,162,163,164,165,166,167,168,169,287,288,170,171,172,173,174,289,290,291,292,293,294,295,296,297,298,175,176,299,300,177,301,178,179,180,181,302,182,183,184,185,303,186,187,188,189,27,28,29,304,305,306,307,190,191,308,309,192,193,310,311,312,313,104,314,315,316,317,318,105,194,106,107,319,320,321,322,60,323,61,244,195,245,196,197,324,325,198,199,200,201,326,327,202,109,110,328,63,64,66,67,68,72,73,78,79,80,81,329,82,83,84,86,89,91,330,331,210,332,211,212,333,334,95,96,97,335,98,213,214,336,337,338,111,339,215,340,341,342,343,112,115,116,117,216,217,218,119,219,220,221,222,120,223,224,344,225,226,227,228,229,230,231,121,232,233,234,235,236,237,345,238,239,346,240,347,241,242,348,349,350,243,351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[0,352,1,2,3,4,5,6,7,8,9,10,353,354,11,12,355,13,14,16,17,18,19,20,21,23,24,25,356,357,26,27,28,29,358,30,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,359,68,360,69,70,71,72,73,74,75,76,77,78,361,362,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,363,364,365,366,367,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[17,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[41,73,85,95],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[218,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[369,60,323,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,371,104,105,106,372,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.internal.RecordState:262","failures":[132,373,134,256,257,138,139,258,259,140,260,141,142,143,144,261,145,146,147,148,262,149,150,151,152,264,265,266,267,153,268,269,374,375,376,169,288,170,171,172,173,174,377,378,379,190,193,95,96,97,335,215,345,242],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[109,380],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[256,264,265,266,267,153,268,269,377,378,379,95,96,97,335],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[336],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[382,383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[81,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[60,122,76,98,99,123,124,125,386,387],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[281,156,157,158,204,206,207,208,78,330,211,212,111,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[388,389,283,308,390,391],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[339],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[60,122,76,98,99,123,124,125,387],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[388,389,283,308,390,391],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[359,360,72,90,91],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.UsageTest.argumentsOrdered":350,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":347,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":265,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.tests.MockClassControlTest.testToString":8,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":11,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":363,"org.easymock.tests2.CaptureTest.testPrimitive":196,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":152,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.UsageTest.argumentsOrdered":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests2.DelegateToTest.testDelegate":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.UsageThrowableTest.throwError":169,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":59,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":144,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":364,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":317,"org.easymock.tests.UsageVarargTest.allKinds":298,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":173,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":268,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":387,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":23,"org.easymock.samples.ExampleTest.voteForRemoval":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":93,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":0,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.CaptureTest.testCapture2_2446744":327,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":337,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":78,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":378,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":63,"org.easymock.tests.MockingTest.testNiceClassMocking":358,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.UsageConstraintsTest.testContains":225,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":276,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":360,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":293,"org.easymock.tests.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":103,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":292,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":15,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":16,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":368,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":377,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":267,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":391,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":369,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":384,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":113,"org.easymock.tests.UsageExpectAndThrowTest.object":261,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":129,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests.UsageUnorderedTest.message":263,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests2.CaptureTest.testCapture_2617107":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests2.StubTest.stub":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":379,"org.easymock.tests.UsageExpectAndThrowTest.longType":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":20,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests.LimitationsTest.mockNativeMethod":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":4,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.CompareToTest.testNotComparable":381,"org.easymock.tests2.CaptureTest.testCaptureLast":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":349,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":336,"org.easymock.tests2.MockBuilderTest.testCreateMockString":79,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":258,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":115,"org.easymock.tests.UsageVerifyTest.twoThrows":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests2.UsageTest.defaultResetToNice":348,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":303,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":389,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":64,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":126,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":338,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":125,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.AnswerTest.stubAnswer":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.floatType":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":217,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":100,"org.easymock.tests2.SerializationTest.test":323,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":176,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":43,"org.easymock.tests.GenericTest.testPackageScope":2,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.UsageStrictMockTest.differentMethods":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":101,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":211,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":365,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":201,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":44,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests2.UsageConstraintsTest.cmpTo":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":114,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.CaptureTest.testCaptureFromStub":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.constraints":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":318,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.LimitationsTest.abstractClass":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":290}}]
