[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,26,27,28,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,20,20,21,21,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,7,125,126,127,128,10,11,12,129,130,131,132],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[133,134,135],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[136,137,138,139,140,141,142,143,144,145,0],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,146,3,147,148,149,150,151,152,153,5,154,155,156],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[157,1,2,158,146,159,160,3,161,162,163,164,165,166,147,148,149,150,167,36,37,38,168,169,170,171,172,49,173,174,175,176,177,178,179,180,181,152,182,63,183,153,68,79,84,86,184,185,186,187,5,188,189,139,190,118,123,125,191,192,154,193,194,155,156,195,196,197,198,199,200,201],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[202,203,146,159,204,205,206,207,208,209,210,211,212,213,214,215,216,217,153,73,218,136,219,137,220,221,222,223,224,225,226,138,227,228,229,186,230,231,139,140,232,141,233,142,143,234,144,235,236,237,238,239,240,190,241,242,145,243,244,245,246,0,247,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[251,12,252,129],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[253],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[251,12,252,129],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[202,203,157,1,2,254,255,256,257,258,31,158,259,146,159,160,3,161,162,260,164,165,166,147,148,261,262,149,150,167,33,263,264,265,266,267,268,269,34,35,36,37,38,39,40,41,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,168,295,296,297,298,204,169,299,300,301,45,46,47,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,205,343,171,344,345,206,207,208,209,210,173,346,174,175,347,348,176,177,178,211,212,213,214,215,349,179,350,351,181,152,50,352,353,354,355,356,357,358,359,58,59,216,217,153,64,65,66,360,361,362,20,20,21,21,363,364,365,366,367,368,369,370,371,372,373,67,68,374,69,70,71,72,73,76,77,78,79,82,83,84,85,375,86,87,91,94,104,110,136,219,137,220,221,222,223,224,225,226,138,227,228,229,113,114,115,376,184,185,377,186,187,5,188,189,378,379,380,381,382,383,230,231,139,140,232,141,233,142,143,234,235,236,237,238,239,240,190,241,242,145,243,244,245,246,0,247,248,116,118,121,122,123,124,125,126,128,191,384,192,154,193,194,385,386,387,155,156,195,196,197,10,388,389,390,391,392,393,394,395,396,198,249,250,397,199,398,399,400,200,401,402,403,201,404,405,406,12,252,129,407,408,409,410,411,412,413,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[204,141,245,395],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[202,203,415,416,417,157,1,2,254,255,256,257,258,418,419,420,31,421,422,158,259,146,159,160,3,161,162,260,423,424,425,426,427,163,164,165,166,147,148,261,262,149,150,167,33,263,264,265,266,267,268,269,34,35,36,37,38,39,40,41,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,168,295,296,297,298,204,169,299,300,301,44,45,46,47,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,428,429,430,431,432,433,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,205,343,171,344,345,206,207,208,209,210,173,346,174,175,347,348,176,177,178,434,211,212,213,214,215,349,179,350,351,180,181,152,50,352,353,354,355,356,357,358,359,58,59,60,216,217,153,64,65,66,360,361,362,20,20,21,21,363,364,365,366,367,368,369,370,371,372,373,67,68,374,69,70,71,72,73,76,77,78,79,82,83,84,85,375,86,87,91,94,104,110,136,219,137,220,221,222,223,224,225,226,138,227,228,229,113,114,115,376,184,185,377,186,187,5,188,189,378,379,380,435,436,381,382,383,230,231,139,140,232,141,233,142,143,234,235,236,237,238,239,240,190,241,242,145,243,244,245,246,0,247,248,116,118,121,122,123,124,125,126,128,191,384,192,154,193,194,385,386,387,155,156,195,196,197,10,437,388,389,390,438,391,392,393,394,395,396,198,249,250,397,199,398,399,400,200,401,402,403,201,404,405,406,12,252,129,407,408,409,410,411,412,413,414],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[202,203,415,416,417,157,1,2,254,255,256,257,258,418,419,420,29,30,31,32,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,421,456,457,458,459,460,422,461,158,259,146,159,160,3,161,162,260,423,424,425,426,427,163,164,439,165,166,147,148,261,262,149,150,167,33,263,264,265,266,267,268,269,34,35,36,37,38,39,40,41,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,462,293,294,168,295,296,297,298,204,169,299,300,301,42,43,44,45,46,463,47,464,465,48,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,428,429,430,431,432,433,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,205,343,170,466,171,344,345,172,49,206,207,208,209,210,173,346,174,175,347,348,176,177,178,434,211,212,213,214,215,349,179,350,351,180,181,152,50,51,52,53,54,55,56,352,353,354,355,356,357,358,359,57,58,59,60,61,216,217,62,467,468,182,469,63,470,183,153,64,65,66,360,361,362,20,21,363,364,365,366,367,368,369,370,371,471,472,372,373,67,68,374,69,70,71,72,473,73,74,75,76,77,78,79,80,81,82,83,84,85,474,375,86,87,475,218,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,136,219,137,220,221,222,223,224,225,226,138,227,228,229,113,114,115,376,184,185,377,186,187,5,188,189,378,379,380,435,436,381,382,383,230,231,139,140,476,232,141,233,142,143,234,144,235,236,237,238,239,240,190,241,242,145,243,244,245,246,0,247,248,116,118,119,120,121,122,123,124,477,7,125,126,128,191,384,192,154,193,194,385,386,387,155,156,195,196,478,479,480,481,482,197,483,484,485,486,487,488,10,11,437,388,389,390,438,391,392,393,394,395,396,489,490,491,492,493,198,494,495,496,497,498,499,249,500,250,397,199,398,399,400,200,401,402,403,201,404,405,406,12,252,129,407,408,409,410,501,411,412,413,414,130,131,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[28,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[233],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:61","failures":[202,203,146,159,204,205,206,207,208,209,210,211,212,213,214,215,216,217,153,73,218,136,219,137,220,221,222,223,224,225,226,138,227,228,229,186,230,231,139,140,232,141,233,142,143,234,144,235,236,237,238,239,240,190,241,242,145,243,244,245,246,0,247,248,395,249,250],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[202,416,417,157,2,419,31,159,3,161,165,166,261,262,167,263,264,265,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,169,299,300,301,45,46,47,206,207,208,209,210,211,212,215,181,352,354,355,356,357,358,359,58,60,216,217,66,362,364,366,367,369,372,373,67,68,374,69,70,71,73,77,78,79,82,83,84,85,375,86,87,91,94,104,110,136,219,220,221,224,225,226,138,228,229,115,186,5,188,379,382,230,231,139,140,232,141,233,142,143,234,235,236,237,238,239,240,190,241,242,145,243,244,246,0,247,248,118,121,123,124,126,191,384,192,193,385,386,387,195,196,197,10,389,392,393,394,395,396,198,397,199,398,399,400,200,401,402,403,201,404,405,12,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[28,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,449,451,459,460,461,3,165,167,212,215,5,379,382,191,196,389],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[57,60,62,63,66,20,21,72,74,77,78,81,94,104,110,113,116,506,118,119,507,120,121,122,123,6,124,477,7,125,126,508,128,10,11,509,12],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.UsageTest.argumentsOrdered":156,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":363,"org.easymock.tests2.DelegateToTest.testReturnException":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":340,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":36,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":501,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":234,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":365,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":465,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":69,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":215,"org.easymock.tests.UsageTest.moreThanOneArgument":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.UsageVarargTest.varargIntAccepted":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.ReplayStateInvalidUsageTest.times":310,"org.easymock.tests2.DependencyTest.testClassMocking":471,"org.easymock.tests2.AnswerTest.answer":380,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":410,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":136,"org.easymock.tests2.UsageTest.strictResetToDefault":384,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":318,"org.easymock.tests2.DependencyTest.testClassMockingSupport":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":163,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":408,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":304,"org.easymock.tests.UsageThrowableTest.throwError":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":112,"org.easymock.samples.PartialClassMockTest.testGetArea":66,"org.easymock.tests.MockingTest.testInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":99,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":49,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":28,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":328,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":25,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":239,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":351,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":281,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":238,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests.MockClassControlTest.testEquals":40,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":409,"org.easymock.tests2.CaptureTest.testCaptureAll":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":316,"org.easymock.tests.MockNameTest.defaultName":170,"org.easymock.tests2.UsageConstraintsTest.testMatches":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":302,"org.easymock.samples.ExampleTest.voteForRemovals":369,"org.easymock.tests.UsageVarargTest.allKinds":204,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":358,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":495,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":79,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":56,"org.easymock.samples.ExampleTest.voteForRemoval":366,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":398,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":339,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":437,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":399,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":395,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":298,"org.easymock.tests.GenericTest.testBridgedEquals":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":23,"org.easymock.tests.UsageExpectAndReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":337,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":254,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":357,"org.easymock.tests.MockingTest.testNiceClassMocking":48,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":117,"org.easymock.tests2.UsageConstraintsTest.testContains":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageExpectAndReturnTest.object":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":294,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":286,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.MockClassControlTest.testHashCode":39,"org.easymock.tests2.EasyMockSupportTest.testVerify":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":101,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":407,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":218,"org.easymock.tests.UsageVarargTest.varargCharAccepted":293,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":504,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":405,"org.easymock.tests.DefaultClassInstantiatorTest.object":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":431,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":171,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":38,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":37,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":342,"org.easymock.tests2.StubTest.stubWithReturnValue":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":421,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":9,"org.easymock.samples.SupportTest.voteForRemovals":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":492,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":331,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":422,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":435,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests.UsageExpectAndThrowTest.object":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":243,"org.easymock.tests2.DelegateToTest.testWrongClass":390,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":217,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":502,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":330,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":417,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":134,"org.easymock.tests.UsageUnorderedTest.message":153,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":297,"org.easymock.tests2.ThreadingTest.testThreadSafe":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":105,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":214,"org.easymock.tests2.UsageConstraintsTest.any":235,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":309,"org.easymock.tests2.StubTest.stub":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndThrowTest.longType":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":93,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":500,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":13,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":164,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":244,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":327,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.samples.ExampleTest.removeNonExistingDocument":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":135,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":52,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":394,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":95,"org.easymock.tests.UsageExpectAndThrowTest.floatType":321,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":509,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests.LimitationsTest.privateConstructor":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":0,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":359,"org.easymock.tests2.UsageTest.defaultResetToNice":387,"org.easymock.samples.ExampleTest.voteAgainstRemovals":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.UsageVarargTest.differentLength":168,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":74,"org.easymock.tests.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":213,"org.easymock.tests.UsageCallCountTest.tooFewCalls":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":356,"org.easymock.tests.MockingTest.testStrictClassMocking":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":375,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":383,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.NameTest.nameForNiceMock":413,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.stubAnswer":382,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":477,"org.easymock.tests.UsageVarargTest.varargLongAccepted":296,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatType":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":497,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":242,"org.easymock.tests.UsageThrowableTest.noUpperLimit":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testSame":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":271,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":96,"org.easymock.tests.GenericTest.testPackageScope":58,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":496,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":464,"org.easymock.tests2.NameTest.nameForMock":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":508,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":333,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":313,"org.easymock.tests2.NameTest.nameForStrictMock":412,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":100,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":133,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":97,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":55,"org.easymock.tests.UsageVarargTest.varargShortAccepted":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":176,"org.easymock.tests2.UsageConstraintsTest.cmpTo":236,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CaptureTest.testCaptureFromStub":227,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":303,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":119,"org.easymock.tests.UsageTest.unexpectedCallWithArray":147,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":284,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.samples.ExampleTest.addAndChangeDocument":371,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":360,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":208,"org.easymock.tests.LimitationsTest.abstractClass":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":401,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":291}}]
