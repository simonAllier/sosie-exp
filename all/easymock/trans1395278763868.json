[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[194,195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.Range:36","failures":[197,198,199,200,201,15,202,203,204,205,206,207,0,16,208,209,210,211,212,17,213,214,18,19,215,216,217,20,21,218,219,220,22,23,24,221,25,26,27,28,222,223,224,29,30,225,226,227,228,229,230,231,31,32,33,34,35,36,37,232,38,39,40,41,233,42,234,235,236,237,238,239,240,241,242,1,2,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,43,44,274,3,275,276,4,277,45,278,46,5,47,279,6,280,281,8,282,283,48,49,284,285,286,287,288,50,51,289,52,290,291,53,292,54,293,294,55,295,296,297,298,12,299,300,301,56,302,303,304,305,306,307,57,308,309,58,310,59,60,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,61,327,328,329,330,331,332,333,334,335,336,337,62,338,339,340,341,342,343,344,63,64,65,345,66,67,68,69,346,70,347,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,348,86,87,13,14,349,88,89,350,351,352,90,353,91,92,93,354,355,356,357,358,94,95,96,97,98,359,360,361,362,363,364,365,366,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,367,119,120,368,369,121,122,370,371,123,372,373,374,375,376,377,378,379,380,381,382,383,124,125,126,127,128,129,384,385,386,387,388,194,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,409,410,411,150,151,152,153,154,155,156,157,158,159,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,160,161,162,163,164,165,166,167,168,445,169,170,446,171,172,173,174,175,447,448,176,449,450,451,452,453,454,455,456,457,458,177,178,179,180,181,182,183,184,185,459,186,187,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,188,477,189,190,191,192,193,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[269,270,54,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,1,2,45,279,6,280,282,12,56,304,447,449],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[197,198,199,200,201,15,202,203,204,205,206,207,0,16,208,209,210,211,212,17,213,214,18,19,215,216,217,20,21,218,219,220,22,23,24,221,25,26,27,28,222,223,224,29,30,225,226,227,229,230,231,31,32,33,34,35,36,37,232,38,39,40,41,233,42,234,235,236,237,238,239,240,241,242,1,2,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,43,44,274,275,276,277,45,278,46,47,279,6,280,281,282,283,48,49,284,285,286,287,288,50,51,289,52,290,291,53,292,54,293,294,55,295,296,297,298,12,299,300,301,56,302,303,304,496,497,498,499,500,305,306,307,57,308,309,58,310,59,60,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,61,327,328,329,330,331,332,333,334,335,336,337,62,338,339,340,341,342,343,344,63,64,65,345,66,67,501,68,69,346,70,347,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,348,86,87,13,14,349,88,89,350,351,352,90,353,91,92,93,354,355,356,357,358,94,95,96,97,98,359,360,361,362,363,364,365,366,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,367,119,120,368,369,121,122,370,371,123,372,373,374,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,375,376,377,378,379,380,381,382,383,124,125,126,127,128,129,385,386,387,388,194,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,409,410,411,150,151,152,153,154,155,156,157,158,159,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,160,161,162,163,164,165,166,167,168,445,169,170,446,171,172,173,174,175,447,448,176,449,450,451,452,453,454,455,456,457,458,177,178,179,180,181,182,183,184,185,459,186,187,460,461,462,463,464,465,467,468,469,470,471,472,473,474,475,476,188,477,189,190,191,192,193,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15,0,16,17,19,20,21,22,23,24,25,27,28,222,29,30,31,32,33,34,35,36,37,232,38,39,40,41,234,235,236,237,239,240,241,1,247,250,260,266,44,275,45,46,47,281,48,49,285,286,50,51,289,52,291,53,292,54,293,294,55,295,298,301,56,302,305,306,307,57,309,58,310,59,60,311,313,314,315,316,317,318,319,320,321,322,323,324,326,61,327,328,331,62,64,67,68,69,346,70,72,74,75,78,80,82,83,85,349,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,407,150,152,153,154,155,156,157,158,159,448,451,177,179,461,472,473,474,475,189,191,192,482,483,485],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[44,329,330,331,332,353,96,160,161,162,163,164,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[386,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[44,290,305,306,309,58,310,59,315,317,318,320,321,322,61,327,328,72,13,13,14,14,90,94,95,98,124,125,126,127,128,158,159,180,181,182,183,184,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.ConstructorArgs:60","failures":[236,241,242,2,3,4,5,7,8,524,525],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[45,526,527,528,301,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[385,386,387,388,389,391],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[529,530,531,532,533,534],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[22,221,25,26,223,224,29,30,32,36,37,39,42,275,280,281,282,54,301,302,307,319,347,73,74,75,119,368,369,370,371,123,381,382,383,129,446,178,179,535,466,536,537,472,476,477,190,191,192],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[15,0,16,17,215,20,21,22,23,25,222,30,31,32,33,34,35,36,37,232,38,39,40,41,234,235,236,237,239,240,241,1,247,250,260,266,275,45,46,47,281,48,49,284,285,286,50,51,289,52,53,292,54,293,294,55,295,298,301,56,302,57,309,58,310,60,311,313,314,316,317,319,320,322,323,324,325,326,61,331,62,63,65,66,346,70,72,74,75,78,80,81,82,83,85,349,90,353,91,92,94,95,98,101,102,104,109,114,123,124,125,126,127,128,129,407,132,133,135,140,145,409,410,150,152,153,154,155,156,157,158,159,164,448,178,179,185,459,186,187,460,461,472,189,191,192,482,483,485],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[332,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[538],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,16,208,539],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[2,5,10,529,530,531,540,532,533,534],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[194,195,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[344,422],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[250,260,13,14,349],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[428],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,243,3,4,5,279,6,8,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[26,55,319,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[22,28,44,329,330,331,332,353,93,96,97,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,156,157,160,161,162,163,164,165,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[1,2,5,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[3,7,8,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[48,284,52,307,57,58,59,60,312,322,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.UsageTest.argumentsOrdered":224,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":422,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testReturnException":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":161,"org.easymock.tests.MockingTest.testPartialClassMocking":482,"org.easymock.tests.MockClassControlTest.testToString":453,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":269,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":21,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":523,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageTest.wrongArguments":221,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":356,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":39,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":533,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":128,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":507,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests2.DependencyTest.testClassMocking":216,"org.easymock.tests2.AnswerTest.answer":17,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":361,"org.easymock.tests2.UsageTest.strictResetToDefault":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":493,"org.easymock.tests2.DelegateToTest.testDelegate":66,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":506,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":471,"org.easymock.tests2.DependencyTest.testClassMockingSupport":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":409,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":466,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":510,"org.easymock.samples.PartialClassMockTest.testGetArea":349,"org.easymock.tests.MockingTest.testInterfaceMocking":484,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":255,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageOverloadedMethodTest.overloading":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":110,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":91,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":195,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":316,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":445,"org.easymock.tests.MockClassControlTest.testEquals":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":247,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":469,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests.MockNameTest.defaultName":392,"org.easymock.tests2.UsageConstraintsTest.testMatches":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":470,"org.easymock.samples.BasicClassMockTest.testPrintContent":89,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":156,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":534,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":511,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":391,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":503,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":367,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":33,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":34,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":382,"org.easymock.tests.UsageExpectAndReturnTest.longType":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":467,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":31,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":325,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageCallCountTest.tooManyCalls":383,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":155,"org.easymock.tests.MockingTest.testNiceClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":235,"org.easymock.tests.MockingTest.testClassMocking":480,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":93,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":220,"org.easymock.tests.UsageExpectAndReturnTest.object":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":170,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":442,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":186,"org.easymock.tests.MockClassControlTest.testHashCode":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":185,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":536,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":283,"org.easymock.tests.UsageVarargTest.varargCharAccepted":169,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":384,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":27,"org.easymock.tests.DefaultClassInstantiatorTest.object":385,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":463,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":440,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":537,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":258,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":528,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":509,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.ReplayStateInvalidCallsTest.times":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":116,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":372,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":516,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":266,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":163,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":208,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":428,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":539,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":213,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":438,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":323,"org.easymock.tests2.DelegateToTest.testWrongClass":65,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":513,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":159,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":230,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":244,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":355,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":505,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":129,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":535,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":538,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":380,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":443,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":88,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":97,"org.easymock.tests2.UsageConstraintsTest.any":313,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":407,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":118,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":527,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":521,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.NameTest.nameForMocksControl":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":249,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":483,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":520,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":241,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":324,"org.easymock.tests.MockingTest.testTwoMocks":481,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":517,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":223,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":69,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":451,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":18,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":525,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":222,"org.easymock.samples.ExampleTest.voteAgainstRemovals":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":114,"org.easymock.tests.UsageVarargTest.differentLength":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":12,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":357,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":498,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests.MockingTest.testStrictClassMocking":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":215,"org.easymock.tests.ObjectMethodsTest.testHashCode":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":532,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":519,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.NameTest.nameForNiceMock":272,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":514,"org.easymock.tests2.DependencyTest.testInterfaceMocking":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":279,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":117,"org.easymock.tests.UsageExpectAndReturnTest.floatType":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":1,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":225,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":100,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":238,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":448,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":502,"org.easymock.tests2.NameTest.nameForMock":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":475,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":425,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests2.NameTest.nameForStrictMock":271,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":275,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":508,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":540,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":32,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests.UsageRangeTest.combination":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":522,"org.easymock.tests2.UsageConstraintsTest.cmpTo":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":214,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":368,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":518,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":379,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":113,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.UsageConstraintsTest.constraints":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":86,"org.easymock.tests.UsageStrictMockTest.testVerify":478,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":468,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":126,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":127,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37}}]
