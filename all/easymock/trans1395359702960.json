[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[366,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[86,181,206,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,11,12,64,65,66,67,178,281,284,285,353,354,355,453,491,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[0,3,4,5,8,10,11,13,14,21,28,30,31,32,33,37,40,50,56,59,61,62,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,101,102,103,104,111,112,114,115,118,119,120,121,122,123,124,130,137,138,139,140,141,142,143,144,145,146,147,148,156,157,158,159,161,162,163,165,172,173,174,175,176,177,178,180,182,183,184,187,188,189,191,192,193,194,196,197,198,201,202,203,204,205,206,207,208,210,213,215,221,222,223,225,226,228,230,231,232,233,235,240,241,242,243,244,245,246,247,248,249,250,251,252,253,281,283,284,287,288,289,290,294,296,297,325,327,329,330,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,452,453,456,457,460,469,470,471,473,474,475,476,477,478,479,480,484,485,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,3,4,5,7,8,9,10,11,12,13,14,15,21,28,30,31,32,33,37,40,50,56,59,61,62,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,103,104,111,112,113,114,115,116,117,118,119,120,121,123,124,130,137,138,139,140,141,142,143,145,146,147,148,149,158,161,162,163,165,176,177,178,179,180,181,182,183,185,186,188,189,191,192,193,194,196,197,198,201,202,203,204,205,206,207,210,215,221,222,223,224,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,249,251,252,253,279,280,281,282,283,284,285,292,294,325,327,329,330,348,349,350,351,352,353,354,355,367,368,371,372,373,375,376,378,379,380,381,382,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,452,453,455,456,457,458,459,460,469,470,471,472,473,474,475,476,477,478,479,484,485,487,493,494,495,496,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[86,181,206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,106,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,8,176,182,183,188,281,353,355,452,456,457,460],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,3,4,5,6,7,8,9,10,11,12,13,14,15,28,30,31,32,33,59,61,62,64,65,66,67,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,156,157,158,159,161,162,163,165,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,197,198,200,201,202,203,204,205,206,207,210,213,215,221,230,231,232,233,234,235,237,240,241,242,243,244,245,246,247,248,249,250,252,253,278,279,280,281,282,283,284,285,286,287,288,289,290,292,294,295,296,297,312,325,332,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,371,372,373,375,376,378,379,380,381,382,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,452,453,454,455,456,457,458,459,460,467,469,470,471,472,473,474,475,476,477,478,479,480,484,485,487,491,492,493,494,495,496,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[8,68,69,73,74,75,76,82,84,85,87,88,94,95,96,122,225,225,226,226,240,241,242,243,244,281,348,349,352,356,357,358,359,360,469,470,479],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[13,14,15,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[510,511,512],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[276],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[10,11,283,284,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,3,4,5,7,8,11,12,13,14,15,28,30,33,59,61,62,64,65,66,67,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,101,102,111,112,113,114,116,117,118,119,120,121,124,156,157,158,159,161,162,165,172,173,174,175,177,178,180,181,184,187,189,192,193,197,198,200,201,202,204,205,206,207,210,213,215,221,230,231,232,233,234,235,237,240,241,242,243,244,245,246,247,248,249,250,252,253,279,281,284,285,286,287,288,289,290,292,294,295,296,297,325,332,348,349,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,371,372,373,375,376,378,379,380,381,382,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,453,469,470,472,473,479,484,485,487,491,492,493,494,495,496,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[513,514,200,280,281,515,516,353,454,455,456,457,458,459,460,461],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[517],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[518],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[161,163,164,165,231,256,329],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[519],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[334,336],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":452,"org.easymock.tests2.UsageTest.argumentsOrdered":186,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":484,"org.easymock.tests.MockClassControlTest.testToString":502,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":63,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":410,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":222,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":451,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":348,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":489,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":205,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageTest.moreThanOneArgument":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":429,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":459,"org.easymock.tests.UsageVarargTest.varargIntAccepted":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":435,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":511,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":219,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":339,"org.easymock.tests2.UsageTest.strictResetToDefault":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":425,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":466,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageThrowableTest.throwError":471,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":341,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":438,"org.easymock.samples.PartialClassMockTest.testGetArea":223,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":411,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":45,"org.easymock.tests2.ThreadingTest.testChangeDefault":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":513,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":419,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":400,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":374,"org.easymock.tests.MockClassControlTest.testEquals":506,"org.easymock.tests2.EasyMockSupportClassTest.testAll":37,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":427,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":235,"org.easymock.tests.UsageVarargTest.allKinds":382,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":353,"org.easymock.samples.BasicClassMockTest.testPrintContent":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":477,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":6,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":250,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":216,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":439,"org.easymock.samples.ExampleTest.voteForRemoval":232,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":208,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":431,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":396,"org.easymock.tests2.UsageTest.moreThanOneArgument":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":381,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":498,"org.easymock.tests.UsageExpectAndReturnTest.longType":392,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":428,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":426,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":499,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":512,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":476,"org.easymock.tests.MockingTest.testNiceClassMocking":490,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests.MockingTest.testClassMocking":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":253,"org.easymock.tests.MockTypeTest.fromEasyMockClass":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndReturnTest.object":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":405,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":329,"org.easymock.tests.MockClassControlTest.testHashCode":505,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":47,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":510,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":327,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":518,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":375,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":298,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":504,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":416,"org.easymock.tests.ReplayStateInvalidCallsTest.times":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":406,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":444,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.UsageTest.resumeIfFailure":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":508,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":514,"org.easymock.samples.SupportTest.voteForRemovals":228,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":422,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":276,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":420,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":441,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":470,"org.easymock.samples.ConstructorCalledMockTest.testTax":225,"org.easymock.tests.UsageStrictMockTest.range":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":170,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":421,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":515,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":433,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":151,"org.easymock.tests.UsageUnorderedTest.message":409,"org.easymock.tests.UsageVerifyTest.twoReturns":355,"org.easymock.tests.UsageVarargTest.varargByteAccepted":380,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":51,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":496,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":238,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":351,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests2.StubTest.stub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageExpectAndThrowTest.longType":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests.LimitationsTest.mockNativeMethod":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":408,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":152,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":39,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":457,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":414,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":60,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":485,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":207,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":483,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":445,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":418,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":185,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":155,"org.easymock.samples.ExampleTest.removeNonExistingDocument":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.UsageStrictMockTest.differentMethods":284,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":154,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":31,"org.easymock.tests2.MockBuilderTest.testCreateMockString":109,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":500,"org.easymock.tests.UsageExpectAndThrowTest.floatType":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":41,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":354,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":50,"org.easymock.samples.ExampleTest.voteAgainstRemoval":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":215,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":478,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests2.UsageTest.defaultResetToNice":184,"org.easymock.samples.ExampleTest.voteAgainstRemovals":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests.UsageVarargTest.differentLength":377,"org.easymock.tests2.CallbackTest.callback":62,"org.easymock.tests2.UsageConstraintsTest.equals":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":211,"org.easymock.tests.UsageTest.openCallCountByLastCall":456,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":350,"org.easymock.tests.UsageCallCountTest.tooFewCalls":494,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":153,"org.easymock.tests.UsageThrowableTest.throwCheckedException":475,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":516,"org.easymock.tests.MockingTest.testStrictClassMocking":481,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":480,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":447,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":33,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":442,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.samples.ExampleTest.addDocument":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":52,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":281,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":105,"org.easymock.tests.UsageVarargTest.varargLongAccepted":379,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":407,"org.easymock.tests.UsageExpectAndReturnTest.floatType":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":189,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":226,"org.easymock.tests.UsageThrowableTest.noUpperLimit":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.SerializationTest.test":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":390,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.samples.SupportTest.addDocument":227,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":432,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":42,"org.easymock.tests.GenericTest.testPackageScope":367,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":430,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":401,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":424,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":349,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":169,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":436,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":262,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":46,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":150,"org.easymock.tests2.UsageConstraintsTest.testOr":76,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":203,"org.easymock.tests.UsageTest.wrongArguments":455,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":43,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":306,"org.easymock.tests.UsageVarargTest.varargShortAccepted":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":497,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":450,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":257,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":454,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":446,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":403,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":237,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":229,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":395,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":372}}]
