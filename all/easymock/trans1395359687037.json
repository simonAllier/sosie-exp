[{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,17,69],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[71,55,72,65,73,74,75,76,77,78,79,80,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[20,81,82,83,84,85,86,87,88,4,5,6,89,40,90,91,92,93,94,95,96,97,98,7,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,45,46,47,48,49,56,115,116,117,118,119,120,121,57,62,63,64,65,73,74,122,123,124,125,75,126,127,128,129,76,130,131,132,133,67,68,134,135,136],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[0,137,138,139,88,140,4,141,5,6,142,89,143,144,145,109,146,70,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[24,148,149,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[150],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,151,152,137,153,84,85,86,87,138,139,88,140,4,141,5,6,142,89,143,144,38,90,91,92,93,94,96,97,98,7,100,101,102,145,103,154,104,105,106,109,43,43,44,44,155,156,157,121,146,70,158,159,147,160,134,135,136,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[163,164,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[166,167,168,169,18,19,170,171,20,172,81,82,173,0,1,151,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,83,189,190,191,192,84,193,194,85,195,196,197,198,199,200,201,202,203,86,204,205,206,207,208,87,209,210,211,212,213,214,215,216,217,218,219,21,22,220,2,221,23,24,25,26,3,222,148,223,224,27,163,28,29,225,30,31,149,226,227,228,229,32,33,34,138,230,88,140,231,232,4,141,5,233,6,234,142,89,235,144,236,237,238,239,240,241,242,243,244,245,246,247,35,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,36,37,38,39,275,276,40,277,278,279,280,281,282,283,284,285,71,286,287,288,289,290,291,292,293,294,295,296,297,298,299,90,300,301,91,92,93,94,95,96,97,41,42,98,7,99,100,101,102,145,302,103,303,304,154,104,105,106,305,306,307,308,107,108,109,309,43,43,44,44,310,110,311,111,312,112,113,313,114,314,315,155,156,45,46,47,48,49,50,51,52,53,54,55,316,8,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,164,56,344,115,116,345,346,347,348,72,349,350,157,351,117,118,119,120,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,121,381,382,383,384,385,386,387,388,389,390,391,146,392,393,70,394,395,396,397,398,57,58,59,60,61,399,400,401,62,63,64,65,66,402,403,404,405,406,150,158,159,147,407,408,9,10,409,11,12,410,13,14,15,16,165,411,412,413,414,415,416,73,74,122,123,124,125,417,418,75,126,419,127,128,129,420,76,130,131,132,133,421,77,78,422,423,424,425,426,427,79,428,429,430,431,432,433,80,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,67,68,455,456,457,458,459,460,461,462,17,69,463,464,160,134,135,465,136,466,467,468,469,470,471,472,473,474,475,476,477,478,161,479,480,481,482,483,484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:158","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl()","type":"CtReturnImpl"},"failures":[166,169,18,19,170,171,20,172,81,82,173,0,1,151,186,187,188,83,189,211,213,214,216,217,218,219,21,22,220,2,23,24,25,26,3,222,223,224,27,163,28,29,225,30,31,149,226,227,228,229,32,33,34,138,88,4,141,142,89,144,237,238,239,240,241,242,243,244,245,246,247,35,248,249,36,37,38,39,276,40,277,279,284,285,71,286,287,288,289,290,291,292,293,294,295,296,297,298,299,90,92,93,96,97,41,42,98,7,99,100,101,102,145,103,154,104,105,106,107,109,111,312,112,113,313,114,314,315,45,46,47,48,49,50,51,52,53,54,55,316,8,317,342,343,164,56,344,115,116,345,346,347,348,72,349,157,117,118,119,120,356,364,365,366,367,368,369,370,371,372,373,374,375,121,382,384,385,387,388,396,57,58,59,60,61,399,400,401,62,63,64,65,66,402,403,404,405,406,158,159,408,9,10,11,12,410,13,14,15,16,165,412,413,414,73,74,122,123,124,125,417,418,75,126,419,127,128,129,420,76,130,131,132,133,421,77,78,422,423,424,425,426,427,79,428,429,430,431,432,433,80,434,435,436,437,438,439,440,441,442,443,444,445,446,67,68,455,456,457,458,459,460,461,462,17,69,160,134,135,136,469,470,471,472,473,474,475,476,477,478,161,479,480,481,482,483,484],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,151,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:298","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[166,167,168,169,18,19,170,171,20,172,81,82,173,0,1,151,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,83,189,190,191,192,84,193,194,85,195,196,197,198,199,200,201,202,203,86,204,205,206,207,208,87,209,210,211,212,213,214,215,216,217,218,219,21,22,220,2,221,23,24,25,26,3,222,148,223,224,27,163,28,29,225,30,31,149,226,227,228,229,32,33,34,138,230,88,140,231,232,4,141,5,233,6,234,142,89,235,144,236,237,238,239,240,241,242,243,244,245,246,247,35,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,36,37,38,39,275,276,40,277,278,279,280,281,282,283,284,285,71,286,287,288,289,290,291,292,293,294,295,296,297,298,299,90,300,301,91,92,93,94,95,96,97,41,42,98,7,99,100,101,102,145,302,103,303,304,154,104,105,106,305,306,307,308,107,108,109,309,43,43,44,44,310,110,311,111,312,112,113,313,114,314,315,155,156,45,46,47,48,49,50,51,52,53,54,55,316,8,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,164,56,344,115,116,345,346,347,348,72,349,350,157,351,117,118,119,120,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,121,381,382,383,384,385,386,387,388,389,390,391,146,392,393,70,394,395,396,397,398,57,58,59,60,61,399,400,401,62,63,64,65,66,402,403,404,405,406,150,158,159,147,407,408,9,10,409,11,12,410,13,14,15,16,165,411,412,413,414,415,416,73,74,122,123,124,125,417,418,75,126,419,127,128,129,420,76,130,131,132,133,421,77,78,422,423,424,425,426,427,79,428,429,430,431,432,433,80,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,67,68,455,456,457,458,459,460,461,462,17,69,463,464,160,134,135,465,136,466,467,468,469,470,471,472,473,474,475,476,477,478,161,479,480,481,482,483,484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[58,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[279],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[211,213,228,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":438,"org.easymock.tests2.UsageTest.argumentsOrdered":297,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":479,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":215,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":72,"org.easymock.samples.ExampleTest.answerVsDelegate":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":271,"org.easymock.tests2.CaptureTest.testPrimitive":240,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.moreThanOneArgument":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":437,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":447,"org.easymock.tests.UsageTest.argumentsOrdered":445,"org.easymock.tests.UsageVarargTest.varargIntAccepted":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":307,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":237,"org.easymock.tests2.UsageTest.strictResetToDefault":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":451,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":80,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":406,"org.easymock.tests2.DependencyTest.testClassMockingSupport":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":452,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.UsageThrowableTest.throwError":455,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":210,"org.easymock.samples.PartialClassMockTest.testGetArea":109,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":199,"org.easymock.tests2.UsageTest.niceToStrict":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":428,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":409,"org.easymock.tests.MockClassControlTest.testEquals":483,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":435,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests2.CaptureTest.testCaptureAll":238,"org.easymock.tests.MockNameTest.defaultName":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":165,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":405,"org.easymock.samples.BasicClassMockTest.testPrintContent":156,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":461,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":257,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":278,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.samples.ExampleTest.voteForRemoval":112,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":145,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":264,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":249,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":265,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":299,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":418,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests2.CaptureTest.testCapture2_2446744":248,"org.easymock.tests2.UsageTest.moreThanOneArgument":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":16,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":476,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":402,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":436,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":143,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":477,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":425,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":460,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":464,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":470,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":139,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":317,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests.UsageExpectAndReturnTest.object":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":12,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":414,"org.easymock.tests.UsageTest.exactCallCountByLastCall":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":448,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":300,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":384,"org.easymock.tests.MockClassControlTest.testHashCode":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":201,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":236,"org.easymock.tests.UsageVarargTest.varargCharAccepted":11,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":352,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":177,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":250,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":481,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":376,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":87,"org.easymock.tests2.UsageTest.resumeIfFailure":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.samples.SupportTest.voteForRemovals":110,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":431,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":167,"org.easymock.tests.UsageExpectAndThrowTest.object":429,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":391,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":67,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":68,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":282,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":430,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests.UsageUnorderedTest.message":421,"org.easymock.tests.UsageVerifyTest.twoReturns":401,"org.easymock.tests.UsageVarargTest.varargByteAccepted":15,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":204,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":155,"org.easymock.tests2.CaptureTest.testCapture_2617107":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests2.StubTest.stub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageExpectAndThrowTest.longType":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":176,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":153,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests2.NameTest.nameForMocksControl":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":178,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":194,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":6,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":174,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":181,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":252,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":144,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":169,"org.easymock.tests.UsageVerifyTest.twoThrows":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":301,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":462,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests2.UsageTest.defaultResetToNice":295,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":175,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.UsageTest.openCallCountByLastCall":442,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":459,"org.easymock.tests.MockingTest.testStrictClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":95,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":19,"org.easymock.tests.ObjectMethodsTest.testHashCode":413,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.NameTest.nameForNiceMock":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":205,"org.easymock.tests2.DelegateToTest.testStubDelegate":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.stubAnswer":18,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests.UsageVarargTest.varargLongAccepted":14,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":456,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":280,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":196,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":258,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":433,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":217,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests.ErrorMessageTest.testGetters":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":200,"org.easymock.tests2.CaptureTest.testCaptureRightOne":247,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.UsageTest.wrongArguments":441,"org.easymock.tests2.MockBuilderTest.testWithConstructor":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":197,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":13,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":475,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":140,"org.easymock.tests.UsageTest.unexpectedCallWithArray":440,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":420,"org.easymock.tests2.UsageConstraintsTest.constraints":220,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":315,"org.easymock.tests.UsageStrictMockTest.testVerify":346,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":243,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":417,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":268}}]
