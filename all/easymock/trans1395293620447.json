[{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[89,90,7,91,92,93,94,95,96,15,97,98,99,100,101,102,103,104,105,106,107,24,25,26,27,29,30,33,34,36,37,38,108,39,109,110,40,41,42,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,50,130,131,132,133,82,134,135,136,137,83,84,85,138],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[129,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[139,140,93,141],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[105,106,107,153,154,155,156,157,158,159,160,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[16,162,163,105,108,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,142,184,143,185,186,187,188,189,190,191,144,192,193,194,195,196,145,146,197,147,198,148,149,199,150,200,201,202,203,204,205,206,207,208,151,209,210,211,212,152,213,214,215,105,106,107,153,216,217,218,219,28,220,221,222,223,224,32,225,226,227,228,229,230,231,232,233,234,235,236,237,35,238,239,240,241,43,242,154,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,56,304,305,57,58,59,60,306,307,308,309,310,311,312,313,161,85,86],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[122,123,124,125,127,128],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[316,317,318,319,320,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[164,168,169,220,321,224,322,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[324,325,326,327,328,329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[3,164,4,5,331,6,332,333,9,334,139,140,93,10,167,335,168,169,170,171,172,173,336,12,14,337,175,176,178,179,180,183,142,184,143,185,187,188,189,190,191,144,194,195,196,145,146,197,147,198,148,149,199,200,201,202,203,204,205,206,207,208,151,209,210,212,152,213,214,162,20,163,105,106,107,153,216,217,218,219,25,26,29,30,220,321,223,224,31,322,338,339,340,33,35,36,37,38,39,110,41,240,43,242,341,244,245,246,247,249,342,343,46,47,48,49,344,113,155,156,157,158,159,160,256,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,257,258,259,364,260,262,263,264,265,266,115,50,130,365,52,54,366,367,286,291,292,293,294,295,296,368,369,57,58,59,60,61,62,63,64,65,66,370,371,67,68,372,69,70,71,373,72,73,74,75,76,77,78,79,80,81,82,306,307,308,309,310,311,312,313,374,83,84,85,86,87],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[335,375,376,105,106,107,153,377,154,243,248,342,250,378,379,251,252,155,156,157,158,159,160,256,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,285,380,369,307,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:314","failures":[382,383,384,385],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[13,177,181,182,241,381,320,53,287,288,289,290,300,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,13,14,176,386,316,387,388,389,390,253,254,319,391,381,52,53,54,286,300,306,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[3,164,4,5,331,6,332,89,90,392,8,393,394,333,9,395,334,140,93,10,11,166,167,335,168,169,336,12,396,13,14,337,375,175,176,178,179,397,376,181,183,398,142,184,143,185,186,187,188,189,190,191,144,192,193,194,195,196,145,146,197,147,198,148,149,199,200,201,202,203,204,205,206,207,208,151,209,210,211,212,152,213,214,15,215,105,106,107,153,24,27,28,220,321,223,224,322,338,339,399,32,340,225,226,227,228,229,230,231,233,234,235,236,237,33,34,35,36,37,38,39,323,400,377,43,242,154,243,341,248,249,342,250,378,379,251,252,46,47,48,49,344,113,155,156,157,158,159,160,256,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,257,258,259,364,260,262,263,264,265,266,268,269,120,121,50,130,131,365,52,401,53,54,366,285,286,402,380,289,403,293,294,295,296,298,299,300,404,303,56,368,369,57,59,60,61,62,63,64,65,66,370,371,67,68,372,69,70,71,373,72,73,74,75,76,77,78,79,80,81,82,306,307,308,374,161,86,87],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[13,14,348,352,353,355,358,53,54,65,67,68,69,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[405,406,407,408,409],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[410,411,412,413,414,415],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":179,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":394,"org.easymock.tests2.DelegateToTest.testReturnException":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":156,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":256,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":164,"org.easymock.tests2.UsageConstraintsTest.testNull":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":36,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":234,"org.easymock.tests2.CaptureTest.testPrimitive":185,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":341,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":363,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":267,"org.easymock.tests.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":328,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":281,"org.easymock.tests2.AnswerTest.answer":220,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":173,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":271,"org.easymock.tests2.DelegateToTest.testDelegate":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":359,"org.easymock.tests.LimitationsTest.mockFinalMethod":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":171,"org.easymock.tests.UsageThrowableTest.throwError":248,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":44,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":361,"org.easymock.tests2.CaptureTest.testCaptureAll":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":273,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":306,"org.easymock.samples.BasicClassMockTest.testPrintContent":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":160,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":128,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":155,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":398,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":371,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":131,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":298,"org.easymock.tests.UsageExpectAndReturnTest.longType":64,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":362,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":55,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":379,"org.easymock.tests.MockingTest.testNiceClassMocking":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":136,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":292,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests.UsageExpectAndReturnTest.object":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":325,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":303,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":374,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":400,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":237,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageVarargTest.varargCharAccepted":364,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":397,"org.easymock.tests.DefaultClassInstantiatorTest.object":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":236,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":301,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":250,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":388,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":18,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":158,"org.easymock.tests2.StubTest.stubWithReturnValue":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":304,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":317,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":356,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":141,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":221,"org.easymock.tests.UsageExpectAndThrowTest.object":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":209,"org.easymock.tests2.DelegateToTest.testWrongClass":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":283,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":318,"org.easymock.tests2.CaptureTest.testCaptureNone":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":45,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":411,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":308,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":89,"org.easymock.tests2.CaptureTest.testCapture_2617107":143,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":157,"org.easymock.tests.UsageExpectAndThrowTest.longType":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":126,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.SerializationTest.testClass":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":82,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":412,"org.easymock.tests2.NameTest.nameForMocksControl":219,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":380,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":38,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.MockingTest.testTwoMocks":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":213,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":415,"org.easymock.samples.ExampleTest.removeNonExistingDocument":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":124,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":399,"org.easymock.tests2.ConstraintsToStringTest.andToString":389,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":321,"org.easymock.tests.UsageVerifyTest.twoThrows":307,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":133,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":72,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":402,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":154,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":413,"org.easymock.tests.UsageThrowableTest.throwCheckedException":378,"org.easymock.tests.MockingTest.testStrictClassMocking":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":28,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.ObjectMethodsTest.testHashCode":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":327,"org.easymock.tests2.NameTest.nameForNiceMock":218,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":326,"org.easymock.samples.ExampleTest.addDocument":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":9,"org.easymock.tests2.AnswerTest.stubAnswer":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests.UsageExpectAndReturnTest.floatType":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.tests2.ConstraintsToStringTest.orToString":386,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":62,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":99,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":270,"org.easymock.tests2.NameTest.nameForMock":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":358,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":60,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":391,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":284,"org.easymock.tests2.NameTest.nameForStrictMock":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":95,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests2.CaptureTest.testCaptureRightOne":144,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":410,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":288,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":127,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":297,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":376,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":274,"org.easymock.tests.UsageTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":373,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":401,"org.easymock.tests2.UsageConstraintsTest.constraints":145,"org.easymock.samples.ExampleTest.addAndChangeDocument":332,"org.easymock.tests2.ConstraintsToStringTest.notToString":387,"org.easymock.tests.UsageStrictMockTest.testVerify":367,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":393,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.LimitationsTest.abstractClass":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":231,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258}}]
