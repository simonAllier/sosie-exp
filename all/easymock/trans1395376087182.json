[{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:95","failures":[52,0,53,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[7,62,8,9,63,10,64,65,66,67,68,69,70,2,71,72,39,40,41,42,43,44,73,74,75,76,77,78,79,80,81,12,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,4,100,101,102,16,103,104,105,106,107,108,109,110,45,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,11,145,146,17,18,19,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,46,172,173,21,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,22,197,198,24,25,199,200,201,202,203,204,205,26,206,27,28,207,208,209,210,211,47,48,49,50,212,213,52,0,1,53,214,54,55,215,216,217,218,219,220,221,222,223,224,57,225,226,227,228,58,229,230,231,232,233,234,235,236,237,59,238,60,239,240,241,242,243,244,245,61,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,35,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,51,304,305,306,307,308,309,310,36,311,37,38,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[53,56,57,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[313,314,315,316,317,6,7,62,8,9,63,10,65,318,319,2,71,320,72,39,40,41,42,43,44,75,76,77,78,80,81,12,82,94,95,96,97,98,99,4,100,101,102,16,104,105,106,107,108,109,110,45,111,112,113,114,115,116,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,11,145,146,17,18,19,147,148,149,150,151,152,153,154,155,156,157,164,165,166,168,169,170,171,46,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,203,204,205,26,206,27,28,207,208,321,211,322,323,324,325,326,327,328,329,330,331,332,333,47,48,49,50,212,213,52,0,1,53,214,54,55,215,216,217,218,219,220,221,222,223,224,57,225,226,227,228,58,229,230,232,233,234,235,236,237,334,59,238,60,239,240,241,242,243,244,245,61,246,247,248,249,335,251,252,253,254,255,256,268,269,35,270,271,272,273,274,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,294,298,336,337,338,303,51,304,309,310,36,311,37,38,312,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[269,340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[341,342,343,344,3,250,263,345,346,265,267,280,347,348,297,349,350,351],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:63","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:98","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[352,353,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[120,121,122,301,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[298,349,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[341,342,342,343,343,6,7,62,8,9,10,65,357,318,319,358,359,2,3,72,39,40,41,42,43,44,75,12,94,95,96,97,98,99,4,100,101,360,102,16,105,106,109,110,45,361,352,353,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,11,145,146,17,18,19,166,167,168,169,170,171,46,172,173,21,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,362,194,195,196,197,198,24,363,354,355,26,27,28,364,365,5,366,367,322,323,324,325,326,327,328,368,329,330,331,332,47,48,49,50,212,213,52,0,1,53,214,54,55,215,216,217,218,219,220,221,222,223,224,57,225,226,228,58,229,230,232,233,234,235,236,237,334,59,238,239,240,243,244,245,61,246,247,248,249,335,250,251,369,253,254,255,370,256,262,263,371,372,266,268,269,35,271,273,274,275,278,279,280,281,373,374,282,283,284,285,286,287,288,289,290,291,292,294,296,297,298,336,299,300,337,338,301,302,303,51,304,36,37,38,339,350,351,375],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[87,377,378,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[368,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[59,60,239,240,241,242,243,245,379,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[341,313,314,315,342,343,316,317,6,7,62,8,9,63,10,65,66,67,68,69,70,2,71,72,39,40,41,42,43,44,75,76,77,78,79,80,81,12,94,95,96,97,98,99,4,100,101,102,16,103,104,105,106,107,108,109,110,45,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,11,145,146,17,18,19,147,148,149,150,151,152,153,154,155,156,157,166,168,169,170,171,46,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,25,199,200,201,202,203,204,205,26,206,27,28,207,322,323,324,325,326,327,328,368,329,330,331,332,333,47,48,49,50,212,213,52,0,1,53,214,54,55,215,216,217,218,219,220,221,222,223,224,57,225,226,227,228,58,229,230,232,233,234,235,236,237,334,59,238,60,239,240,241,242,243,244,245,61,246,247,248,249,335,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,371,372,265,266,267,268,269,35,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,381,286,287,288,289,290,291,292,293,294,295,296,297,298,336,299,300,337,338,301,302,303,51,304,309,310,36,311,37,38,312,339,350,351,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[262,266,296,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[250,382,346,280,347,383,384,385,386,387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[342,342,343,343,250,346,280,347,348],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[157,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":331,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":315,"org.easymock.tests2.DelegateToTest.testReturnException":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":376,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":350,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":201,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":290,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":330,"org.easymock.tests2.CaptureTest.testPrimitive":239,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":173,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":97,"org.easymock.tests.UsageTest.argumentsOrdered":108,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":149,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":380,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":90,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests2.AnswerTest.answer":281,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":326,"org.easymock.tests2.DelegateToTest.testDelegate":256,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":20,"org.easymock.tests2.CaptureTest.testCapture1_2446744":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.UsageThrowableTest.throwError":111,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":99,"org.easymock.samples.PartialClassMockTest.testGetArea":341,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":263,"org.easymock.tests2.MockBuilderTest.testCreateMock":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":30,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":4,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":219,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":245,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureAll":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests2.UsageConstraintsTest.testMatches":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":82,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":117,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":167,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":324,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":325,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":266,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":80,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":66,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":95,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":81,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":74,"org.easymock.tests2.UsageConstraintsTest.testContains":218,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":286,"org.easymock.tests.UsageExpectAndReturnTest.object":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":384,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":318,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":197,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":231,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":361,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":209,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":114,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":375,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":382,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":366,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":342,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":371,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":5,"org.easymock.tests2.CaptureTest.testCaptureNone":244,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":78,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":172,"org.easymock.tests2.UsageConstraintsTest.any":216,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":89,"org.easymock.tests2.StubTest.stub":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":88,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests2.SerializationTest.testClass":250,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":142,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":372,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":292,"org.easymock.tests2.CaptureTest.testCaptureLast":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.samples.ExampleTest.removeNonExistingDocument":64,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":86,"org.easymock.tests2.ConstraintsToStringTest.andToString":33,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":267,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":222,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":282,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":351,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.CallbackTest.callback":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":348,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":202,"org.easymock.tests.UsageThrowableTest.throwCheckedException":115,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":338,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":385,"org.easymock.samples.ExampleTest.addDocument":63,"org.easymock.tests2.DelegateToTest.testStubDelegate":254,"org.easymock.tests2.AnswerTest.stubAnswer":283,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":345,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":280,"org.easymock.tests2.ConstraintsToStringTest.orToString":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":343,"org.easymock.tests.UsageThrowableTest.noUpperLimit":112,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":241,"org.easymock.tests2.SerializationTest.test":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.UsageConstraintsTest.testSame":214,"org.easymock.samples.SupportTest.addDocument":317,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":87,"org.easymock.tests.GenericTest.testPackageScope":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":135,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":169,"org.easymock.tests2.MockedExceptionTest.testRealException":50,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":93,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":291,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":262,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":323,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.UsageConstraintsTest.testOr":54,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":288,"org.easymock.tests.UsageTest.wrongArguments":104,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":136,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":79,"org.easymock.tests2.UsageConstraintsTest.cmpTo":217,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":83,"org.easymock.tests.UsageTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":77,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":137,"org.easymock.tests2.CaptureTest.testCapture":379,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":65,"org.easymock.tests2.ConstraintsToStringTest.notToString":31,"org.easymock.tests.UsageStrictMockTest.testVerify":208,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":328}}]
