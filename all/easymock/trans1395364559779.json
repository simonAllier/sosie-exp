[{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,121,122,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[253,254,7,8,23,26,40,50,255,54,256,68,72,73,76,89,257,92,258,259,260,96,97,109,115,117,261,262,263,147,148,151,179,180,264,208,229,265,266,267,268,233,269,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[6,7,8,276,277,278,279,91,257,259,260,280,281,282,262,146,147,148,178,179,180,208,230,266,267,268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[87,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[285,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[9,288,289,290,291,17,292,293,18,294,295,296,297,298,299,300,301,302,19,303,304,305,306,307,20,308,309,310,311,50,312,313,314,51,315,52,316,53,317,255,54,318,256,79,80,81,319,320,321,322,98,323,324,99,100,101,102,104,105,108,109,111,112,113,325,114,326,327,328,115,116,117,329,330,331,332,120,121,121,122,122,333,334,149,335,336,337,338,339,340,341,342,343,344,345,162,346,347,348,349,186,350,187,351,352,353,354,249,250,251,355,356,357,358,359,360,361,362,363],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,3,4,5,365,6,8,366,9,10,288,12,13,16,21,22,23,276,277,278,279,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,310,51,315,55,56,367,57,368,369,59,60,61,62,65,79,80,81,82,84,85,88,370,371,372,373,90,91,92,258,95,96,98,100,101,104,105,106,107,108,110,111,112,113,114,328,116,118,124,125,126,127,374,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,375,146,148,376,377,378,379,380,381,149,151,152,153,154,162,166,173,174,177,178,179,180,181,182,183,184,185,382,383,384,385,386,186,350,387,388,389,390,391,392,393,394,395,396,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,397,237,238,240,241,247,249,250,251,398,399,252,400,401,402,357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[349,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[18,310,315,79,325,330],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[89,94,107,139,143,403,155,156,157,165,176,179,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,239,241,242,243,244,245,246],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[404,405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[349,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.UsageTest.argumentsOrdered":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":364,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":258,"org.easymock.tests2.DelegateToTest.testReturnException":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":136,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.CaptureTest.testPrimitive":57,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.UsageTest.argumentsOrdered":268,"org.easymock.tests.UsageVarargTest.varargIntAccepted":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":134,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests2.DependencyTest.testClassMocking":331,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":373,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":71,"org.easymock.tests2.DelegateToTest.testDelegate":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":386,"org.easymock.tests2.DependencyTest.testClassMockingSupport":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":371,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":309,"org.easymock.samples.PartialClassMockTest.testGetArea":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":171,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":307,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":384,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":396,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":385,"org.easymock.samples.BasicClassMockTest.testPrintContent":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":140,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":87,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":343,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":69,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":135,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":70,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":270,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":382,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":405,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":271,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":353,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":399,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":261,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":75,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":247,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":167,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":300,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":390,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":335,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":138,"org.easymock.tests2.StubTest.stubWithReturnValue":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":288,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":144,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":145,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":169,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":44,"org.easymock.tests2.DelegateToTest.testWrongClass":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests.UsageStrictMockTest.range":147,"org.easymock.samples.ConstructorCalledMockTest.testTax":121,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":172,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":208,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":303,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests2.StubTest.stub":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":137,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests2.NameTest.nameForMocksControl":279,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":293,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":45,"org.easymock.tests.MockingTest.testTwoMocks":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":14,"org.easymock.tests2.MockBuilderTest.testCreateMockString":256,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":294,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":345,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.UsageVarargTest.differentLength":264,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":326,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests.MockingTest.testStrictClassMocking":352,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":16,"org.easymock.tests2.NameTest.nameForNiceMock":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":118,"org.easymock.samples.ExampleTest.addDocument":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":304,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":146,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":376,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":122,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":319,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":295,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests2.NameTest.nameForMock":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests2.NameTest.nameForStrictMock":277,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":322,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":43,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":281,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":299,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.MockBuilderTest.testWithConstructor":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":296,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests.UsageStrictMockTest.testVerify":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":383,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.LimitationsTest.abstractClass":344,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":133,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":73,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":282}}]
