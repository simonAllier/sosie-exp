[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,5,6,7,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,8,9,10,11,12,13,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,1,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,14,2,217,3,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,15,289,290,291,292,293,294,20,295,296,297,298,299,300,301,302,303,21,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,4,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,22,450,451,452,453,454,455,23,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,0,478,479,16,17,18,19,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[27,166,190,197,288],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[184,186,195,196,198],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[489,490],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[200,204],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,5,6,7,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,8,9,10,11,12,13,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,1,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,14,2,217,3,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,265,266,266,267,268,269,270,271,272,273,274,275,276,277,281,282,283,284,285,286,287,288,15,289,290,291,292,293,294,20,295,296,297,298,299,300,301,302,303,21,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,4,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,22,451,452,454,455,23,456,458,460,461,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,0,478,479,16,17,18,19,480,481,482,483,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[188,433],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[492,493,494,495,496],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[74,220,497,498,499,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[34,35,36,38,64,111,116,201,202,203,248,249,250,251,257,259,262,263,264,265,265,266,266,289,290,292,293,294,20,296,299,300,301,302,21,393,394,395,396,399,400,405,408,418,424,428,22,451,452,455,23,456,458,461,462,464,0,479,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[290,299,302,395,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[49,72,75,77,79,85,89,90,92,95,124,125,126,127,142,151,205,206,207,209,219,221,224,225,231,235,236,238,241,288,332,334,336,338,357,365,366,369,371,372,378,381,382,384,391,439,440,441,442,446,447,448,462,466,470,471,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[25,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[46,270,359,361,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[260,261,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,38,41,111,116,129,130,131,132,133,134,136,200,201,202,203,204,247,248,249,250,251,252,253,254,255,256,257,258,259,262,263,264,265,265,266,266,277,281,289,290,292,293,294,20,296,297,298,299,300,301,302,303,21,393,394,395,396,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,22,451,452,454,455,23,456,458,460,461,462,464,0,479,16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[26,27,72,73,74,75,76,77,78,79,80,102,103,140,142,143,144,145,147,148,152,153,154,156,157,158,159,160,161,162,163,164,176,183,187,192,193,199,202,209,221,224,225,259,260,261,262,263,267,268,269,271,272,273,274,276,288,332,333,334,335,336,337,338,344,345,348,349,350,351,356,357,375,376,388,389,434,440,442,446,447,451,455,462,468,474,475,476,477,479,481,482,483,484,485,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[343,345,353,366,373],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[343,345,353,366,367,370,372,373,375,385,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[501,502,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[24,25,26,27,29,30,35,36,38,44,46,47,49,73,74,75,76,77,78,79,83,84,86,91,96,124,143,144,145,147,148,149,150,152,153,154,156,157,159,160,161,162,163,199,201,202,206,207,208,209,210,211,212,213,214,215,221,224,225,226,229,230,232,237,242,257,259,260,261,262,263,264,267,268,269,270,271,272,273,274,276,286,287,289,290,291,292,293,294,296,301,309,325,333,334,335,336,337,338,4,342,343,344,345,346,348,349,350,351,352,353,356,357,359,361,363,367,370,373,374,376,377,379,382,385,386,387,388,389,390,393,394,395,396,398,399,400,405,408,418,424,428,431,434,437,438,440,441,442,446,447,449,455,456,458,465,466,467,468,469,470,471,473,474,475,476,477,0,478,479,18],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[29,30,45,48,49,50,72,74,75,76,77,78,79,158,199,205,206,207,218,219,220,221,224,225,226,497,505,498,506,507,508,509,510,499,511,512,513,514,515,516,500,517,518,290,300,302,332,334,335,336,337,338,357,366,382,437,439,440,441,442,446,447,449,466,470,471,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":367,"org.easymock.tests2.UsageTest.argumentsOrdered":447,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":442,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":374,"org.easymock.tests2.UsageTest.wrongArguments":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":57,"org.easymock.samples.ExampleTest.answerVsDelegate":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":116,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":40,"org.easymock.tests2.UsageConstraintsTest.testNull":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":474,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.CaptureTest.testPrimitive":346,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageTest.moreThanOneArgument":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":101,"org.easymock.tests.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageVarargTest.varargIntAccepted":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":513,"org.easymock.tests.ReplayStateInvalidUsageTest.times":171,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests2.DependencyTest.testClassMocking":284,"org.easymock.tests2.AnswerTest.answer":431,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":319,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":113,"org.easymock.tests2.CaptureTest.testAnd":343,"org.easymock.tests2.UsageTest.strictResetToDefault":438,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":105,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests2.DependencyTest.testClassMockingSupport":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":29,"org.easymock.tests2.CaptureTest.testCapture1_2446744":347,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":317,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":166,"org.easymock.tests.UsageThrowableTest.throwError":208,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":115,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":65,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":426,"org.easymock.samples.PartialClassMockTest.testGetArea":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":167,"org.easymock.tests.MockingTest.testInterfaceMocking":37,"org.easymock.tests2.CompareToTest.testLessOrEqual":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.UsageTest.niceToStrict":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":413,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":455,"org.easymock.tests2.MockBuilderTest.testCreateMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":328,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":470,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":55,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":380,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":379,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":352,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":155,"org.easymock.tests2.EasyMockSupportClassTest.testAll":405,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":515,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":318,"org.easymock.tests2.CaptureTest.testCaptureAll":344,"org.easymock.tests.MockNameTest.defaultName":71,"org.easymock.tests2.UsageConstraintsTest.testMatches":381,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":69,"org.easymock.samples.ExampleTest.voteForRemovals":274,"org.easymock.tests.UsageVarargTest.allKinds":163,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":214,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":311,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":135,"org.easymock.tests2.UsageConstraintsTest.greaterThan":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":136,"org.easymock.samples.ExampleTest.voteForRemoval":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":20,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":437,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":467,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":356,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":468,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":449,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.UsageTest.moreThanOneArgument":439,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":4,"org.easymock.tests2.CaptureTest.testCapture2_2446744":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":193,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":162,"org.easymock.tests.GenericTest.testBridgedEquals":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":147,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":388,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":66,"org.easymock.tests.UsageCallCountTest.tooManyCalls":148,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":505,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":394,"org.easymock.tests.MockingTest.testNiceClassMocking":41,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":141,"org.easymock.tests2.UsageConstraintsTest.testContains":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":369,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests.MockTypeTest.fromEasyMockClass":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":487,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":473,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":157,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":62,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":102,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":2,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":508,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":429,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":305,"org.easymock.tests2.EasyMockSupportTest.testVerify":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":415,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":512,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":103,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":316,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":128,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":198,"org.easymock.tests2.UsageTest.openCallCountByLastCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":476,"org.easymock.tests.DefaultClassInstantiatorTest.object":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":51,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":60,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":304,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":5,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":424,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests2.UsageTest.resumeIfFailure":448,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":268,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":197,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":432,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":3,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":386,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":42,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":43,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":282,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests2.CaptureTest.testCaptureNone":351,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":502,"org.easymock.tests.UsageUnorderedTest.message":199,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":161,"org.easymock.tests2.ThreadingTest.testThreadSafe":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":419,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":145,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":63,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":345,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":195,"org.easymock.tests2.UsageConstraintsTest.any":376,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":170,"org.easymock.tests2.StubTest.stub":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":196,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":169,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests.LimitationsTest.mockNativeMethod":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":491,"org.easymock.tests2.NameTest.nameForMocksControl":484,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":486,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":458,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.CompareToTest.testCompareEqual":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests2.CaptureTest.testCaptureLast":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":400,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":373,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":387,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":446,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":391,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":275,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":306,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":131,"org.easymock.tests2.ConstraintsToStringTest.andToString":516,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":341,"org.easymock.tests2.MockBuilderTest.testCreateMockString":464,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":430,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":418,"org.easymock.samples.ExampleTest.voteAgainstRemoval":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":301,"org.easymock.tests.LimitationsTest.privateConstructor":256,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":390,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":215,"org.easymock.tests2.UsageTest.defaultResetToNice":445,"org.easymock.samples.ExampleTest.voteAgainstRemovals":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":321,"org.easymock.tests2.CallbackTest.callback":357,"org.easymock.tests2.UsageConstraintsTest.equals":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":26,"org.easymock.tests.UsageCallCountTest.tooFewCalls":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":58,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":503,"org.easymock.tests.UsageThrowableTest.throwCheckedException":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":398,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":436,"org.easymock.tests2.CompareToTest.testGreateOrEqual":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":61,"org.easymock.tests2.NameTest.nameForNiceMock":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.samples.ExampleTest.addDocument":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":425,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":435,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":459,"org.easymock.tests.UsageVarargTest.varargLongAccepted":160,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":428,"org.easymock.tests2.ConstraintsToStringTest.orToString":510,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":384,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":365,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":277,"org.easymock.tests2.SerializationTest.test":478,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":371,"org.easymock.samples.SupportTest.addDocument":267,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":410,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":312,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":39,"org.easymock.tests2.NameTest.nameForMock":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":283,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":188,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":334,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.NameTest.nameForStrictMock":482,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":454,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":385,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":451,"org.easymock.tests2.UsageStrictMockTest.range":336,"org.easymock.tests2.UsageConstraintsTest.lessThan":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":414,"org.easymock.tests2.CaptureTest.testCaptureRightOne":353,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":501,"org.easymock.tests2.UsageConstraintsTest.testOr":372,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":290,"org.easymock.tests.UsageTest.wrongArguments":221,"org.easymock.tests2.MockBuilderTest.testWithConstructor":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":411,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":159,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":146,"org.easymock.tests2.UsageConstraintsTest.cmpTo":377,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":433,"org.easymock.tests2.CompareToTest.testLessThan":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":178,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":444,"org.easymock.tests2.CaptureTest.testCaptureFromStub":354,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":165,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":452,"org.easymock.tests.UsageTest.unexpectedCallWithArray":220,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.tests2.UsageConstraintsTest.constraints":366,"org.easymock.samples.ExampleTest.addAndChangeDocument":276,"org.easymock.tests2.ConstraintsToStringTest.notToString":511,"org.easymock.tests.UsageStrictMockTest.testVerify":80,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests2.CompareToTest.testGreateThan":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.LimitationsTest.abstractClass":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":471,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":153}}]
