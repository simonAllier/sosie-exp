[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.RecordState:318","failures":[17,18],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[64],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,6,13,66,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,64,81,82,83,84,85,86,87,88,89,90,91,19,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,17,115,116,18,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,20,248,21,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,22,23,318,319,320,321,24,25,26,27,28,29,30,31,32,33,34,35,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,36,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,37,38,39,40,41,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,42,391,392,393,43,394,395,396,397,398,44,399,400,401,402,403,404,405,406,45,407,408,409,410,411,412,413,414,415,46,416,417,47,418,48,419,0,420,421,1,2,422,423,424,425,426,427,428,429,430,4,5,6,7,8,9,10,11,431,12,13,14,15,16,432,433,434,49,435,436,50,437,51,438,439,440,441,442,52,53,54,55,56,57,58,59,60,61,62,63,443,444,445,446,447,448,66,449,450,451,452,453,454,65,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[299,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[174,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[244,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[108,479,480,149,481,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[64,84],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[483,474,475,476],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[455],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[108,479,480,149,481,482],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[68,87,180,181,182,233,234,235,236,237,238,360,361,362,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:40","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,64,81,82,83,84,485,85,86,87,88,89,90,91,19,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,17,115,116,18,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,20,248,21,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,486,295,296,297,298,299,300,487,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,22,23,318,319,320,321,24,25,26,27,28,29,30,31,32,33,34,35,322,323,324,325,326,327,328,329,330,331,332,333,334,335,488,489,490,336,337,338,36,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,491,37,38,39,40,41,371,492,372,373,493,374,375,376,377,494,378,379,380,381,382,495,383,384,385,386,387,388,389,390,42,391,392,393,43,394,395,396,397,398,44,399,400,401,402,403,404,405,406,45,407,408,409,410,411,412,413,414,415,46,416,417,47,418,48,419,0,420,421,1,2,422,423,424,425,426,427,428,429,430,4,5,6,7,8,9,10,11,431,12,13,14,15,16,432,433,434,49,435,436,50,437,51,438,439,440,441,442,52,53,54,55,56,57,58,59,60,61,62,63,443,444,445,446,447,448,66,449,450,451,452,453,454,65,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[108,479,480,149,481,482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[86,89,90,108,109,110,111,112,116,147,148,150,151,152,153,154,155,212,237,263,288,289,290,328,329,330,331,334,347,349,350,353,354,356,357,359,38,39,40,41,419,1,427,5,6,8,9,10,11,431,16,452,457,463,471,477],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[68,87,233,234,235,236,237,238,334,360,361,362,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":449,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":166,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":226,"org.easymock.tests.MockClassControlTest.testToString":255,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":37,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageTest.wrongArguments":350,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":248,"org.easymock.tests2.UsageConstraintsTest.testNull":452,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":438,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":260,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":89,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":304,"org.easymock.tests.UsageTest.argumentsOrdered":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":184,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":188,"org.easymock.tests.ReplayStateInvalidUsageTest.times":98,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":419,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":446,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":246,"org.easymock.tests2.UsageTest.strictResetToDefault":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests2.DelegateToTest.testDelegate":430,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.LimitationsTest.mockFinalMethod":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":193,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":141,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":444,"org.easymock.tests.UsageThrowableTest.throwError":17,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":92,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":20,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":405,"org.easymock.samples.PartialClassMockTest.testGetArea":317,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":93,"org.easymock.tests.MockingTest.testInterfaceMocking":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":43,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests2.UsageTest.niceToStrict":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":156,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":375,"org.easymock.tests2.MockBuilderTest.testCreateMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":60,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":481,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":436,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":71,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":460,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":204,"org.easymock.tests2.EasyMockSupportClassTest.testAll":387,"org.easymock.tests.MockClassControlTest.testEquals":259,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":191,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests.MockNameTest.defaultName":252,"org.easymock.tests2.UsageConstraintsTest.testMatches":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":305,"org.easymock.samples.ExampleTest.voteForRemovals":312,"org.easymock.tests.UsageVarargTest.allKinds":212,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":192,"org.easymock.samples.BasicClassMockTest.testPrintContent":319,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":119,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":301,"org.easymock.samples.ExampleTest.voteForRemoval":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":418,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":411,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":434,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":349,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":211,"org.easymock.tests.GenericTest.testBridgedEquals":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":79,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":469,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":302,"org.easymock.tests.UsageCallCountTest.tooManyCalls":80,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":118,"org.easymock.tests.MockingTest.testNiceClassMocking":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":339,"org.easymock.tests.MockingTest.testClassMocking":224,"org.easymock.tests2.UsageConstraintsTest.testContains":459,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":73,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":362,"org.easymock.tests2.UsageConstraintsTest.testFind":451,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests.MockTypeTest.fromEasyMockClass":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":51,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":161,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":144,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests.MockClassControlTest.testHashCode":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":395,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":443,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":442,"org.easymock.tests.UsageVarargTest.varargCharAccepted":205,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":179,"org.easymock.tests2.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":69,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":416,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.CapturesMatcherTest.test":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":256,"org.easymock.tests2.UsageTest.resumeIfFailure":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":494,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":476,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":482,"org.easymock.samples.SupportTest.voteForRemovals":321,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":483,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":178,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":146,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":467,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":337,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":384,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":479,"org.easymock.tests2.CaptureTest.testCaptureNone":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":215,"org.easymock.tests.UsageUnorderedTest.message":90,"org.easymock.tests.UsageVerifyTest.twoReturns":290,"org.easymock.tests.UsageVarargTest.varargByteAccepted":210,"org.easymock.tests2.ThreadingTest.testThreadSafe":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":44,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":88,"org.easymock.tests2.UsageConstraintsTest.any":457,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":97,"org.easymock.tests2.StubTest.stub":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":96,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.SerializationTest.testClass":474,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":54,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":56,"org.easymock.tests2.MockedExceptionTest.testMockedException":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":389,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":406,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":378,"org.easymock.tests.MockingTest.testNicePartialClassMocking":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":410,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":468,"org.easymock.tests.MockingTest.testTwoMocks":225,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":472,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":59,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":297,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":366,"org.easymock.tests2.MockBuilderTest.testCreateMockString":383,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":289,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":398,"org.easymock.samples.ExampleTest.voteAgainstRemoval":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":417,"org.easymock.tests.LimitationsTest.privateConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testNotNull":471,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":360,"org.easymock.tests2.UsageTest.defaultResetToNice":355,"org.easymock.samples.ExampleTest.voteAgainstRemovals":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":53,"org.easymock.tests.UsageVarargTest.differentLength":207,"org.easymock.tests2.CallbackTest.callback":477,"org.easymock.tests2.UsageConstraintsTest.equals":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":414,"org.easymock.tests.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":87,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":480,"org.easymock.tests.MockingTest.testStrictClassMocking":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":343,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.tests2.NameTest.nameForNiceMock":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":324,"org.easymock.samples.ExampleTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":379,"org.easymock.tests.UsageVarargTest.varargLongAccepted":209,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":369,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":465,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":448,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.SerializationTest.test":475,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":296,"org.easymock.tests2.UsageConstraintsTest.testSame":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.samples.SupportTest.addDocument":320,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":342,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":391,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":230,"org.easymock.tests2.NameTest.nameForMock":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":495,"org.easymock.tests2.UsageStrictMockTest.differentMethods":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests2.MockedExceptionTest.testRealException":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":169,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":86,"org.easymock.tests2.NameTest.nameForStrictMock":39,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":466,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":372,"org.easymock.tests2.UsageStrictMockTest.range":330,"org.easymock.tests2.UsageConstraintsTest.lessThan":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":394,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":454,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":150,"org.easymock.tests2.MockBuilderTest.testWithConstructor":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":392,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.UsageVarargTest.varargShortAccepted":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":78,"org.easymock.tests2.UsageConstraintsTest.cmpTo":458,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":19,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":373,"org.easymock.tests.UsageTest.unexpectedCallWithArray":149,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.samples.ExampleTest.addAndChangeDocument":314,"org.easymock.tests.UsageStrictMockTest.testVerify":114,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":190,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.LimitationsTest.abstractClass":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":187,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":50,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202}}]
