[{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:168","sourceCode":"for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : org.easymock.internal.UnorderedBehavior.getMessages(null)) {\n    org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0);\n}","type":"CtForEachImpl"},"failures":[16,3,4,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,16,3,4,47,17,5,6,48,49,7,8,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9,18,90,10,19,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,20,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,11,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,21,12,212,213,214,215,216,13,14,217,218,219,220,22,221,15,23,222,223,24,25,26,27,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[323,324,325,326],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[251,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[327,328,329,330,28,29,30,31,32,33,34,35,331,323,324,36,37,38,39,40,41,42,43,44,45,46,332,333,16,3,4,47,17,5,6,48,49,7,8,50,334,51,52,54,55,57,58,335,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9,18,90,10,19,91,92,336,337,338,339,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,340,20,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,341,325,326,138,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,11,175,342,343,344,184,185,186,345,187,188,189,190,191,192,193,194,346,347,348,349,350,195,196,197,198,199,200,201,202,203,204,205,206,207,351,352,353,354,355,356,357,358,359,360,361,362,363,208,364,209,210,211,21,12,212,213,214,215,216,13,14,217,218,219,220,22,221,15,23,222,223,24,25,26,27,224,1,365,225,226,227,228,229,230,231,233,244,245,366,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,367,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,368,369,370,371,372,373,374,375,376,377,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,378,379,380,381,382,383,384,385,386,387,315,316,317,388,318,319,320,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[389,390],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[327,391,392,328,329,393,330,28,29,30,31,32,33,35,394,395,36,37,38,39,40,41,42,43,44,45,46,16,3,4,47,17,5,6,48,49,7,8,50,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9,18,90,10,19,91,93,94,95,96,97,98,99,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,11,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,351,352,353,354,355,356,357,358,359,360,361,362,363,208,364,209,210,211,21,12,212,213,214,215,216,13,14,217,218,219,220,22,221,15,23,222,223,224,225,226,227,228,229,230,231,232,233,234,396,397,398,399,235,236,239,240,400,401,241,242,243,245,246,247,402,366,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,372,301,302,303,304,305,306,307,308,309,310,311,312,313,314,382,315,316,317,318,319,320,321,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[281,403],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[391,391,392,392,393,394,395,53,56,335,61,62,64,121,147,148,404,172,175,176,177,178,179,180,405,223,232,234,396,397,398,399,235,236,237,239,240,400,401,241,242,243,245,246,247,402,248,249,282,283,285,286,287,288,289,291,292,293,294,406,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[301,303,304,305,306,307,310,407,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[327,391,391,392,392,328,329,393,330,28,29,30,31,32,33,34,35,394,395,36,37,38,39,40,41,42,43,44,45,46,16,3,4,47,17,5,6,48,49,7,8,50,51,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9,18,90,10,19,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,20,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,11,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,351,352,353,354,355,356,357,358,359,360,361,362,363,208,364,209,210,211,21,12,212,213,214,215,216,13,14,217,218,219,220,22,221,15,23,222,223,24,25,26,27,224,225,226,227,228,229,230,231,232,233,234,396,397,398,399,235,236,239,240,400,401,241,242,243,245,246,247,402,366,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,372,301,302,303,304,305,306,307,308,309,310,311,312,313,314,382,315,316,317,318,319,320,321,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,120,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,16,3,4,47,17,5,6,48,49,7,8,50,51,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9,18,90,10,19,91,92,93,94,95,96,97,98,99,104,112,113,114,115,20,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,11,176,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,21,12,212,213,214,215,216,13,14,217,218,219,220,22,221,15,23,222,223,24,25,26,27,224,225,226,227,228,229,230,231,232,233,234,235,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,289,291,293,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,120,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:269","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[333,337,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[408,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[391,391,392,392,393,394,395,53,56,59,60,335,61,62,64,67,121,389,147,148,404,390,411,412,172,413,175,177,178,179,180,181,182,183,414,415,416,417,418,419,405,223,420,232,234,421,422,423,396,424,425,397,426,427,428,429,430,431,432,433,434,398,435,436,437,438,439,399,440,441,235,236,237,238,239,240,400,401,442,241,242,243,245,246,247,402,248,249,282,283,285,286,287,288,289,443,290,291,292,293,294,295,406,444,299,445,446,319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":258,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":123,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":177,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":264,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":114,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":56,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":66,"org.easymock.tests2.UsageConstraintsTest.testNull":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":285,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":360,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":445,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":197,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":297,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":132,"org.easymock.tests.ReplayStateInvalidUsageTest.times":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":382,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":355,"org.easymock.tests2.DelegateToTest.testDelegate":318,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.LimitationsTest.mockFinalMethod":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":102,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":55,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":441,"org.easymock.samples.PartialClassMockTest.testGetArea":393,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":103,"org.easymock.tests.MockingTest.testInterfaceMocking":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":112,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests2.EasyMockSupportClassTest.testAll":396,"org.easymock.tests.MockClassControlTest.testEquals":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests.MockNameTest.defaultName":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":198,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.samples.BasicClassMockTest.testPrintContent":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":136,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":193,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":219,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":410,"org.easymock.tests2.UsageConstraintsTest.greaterThan":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":419,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":288,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":121,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":353,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":122,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":354,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":45,"org.easymock.tests.GenericTest.testBridgedEquals":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":145,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":277,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests.MockingTest.testNiceClassMocking":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests.MockingTest.testClassMocking":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":139,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":321,"org.easymock.tests2.UsageConstraintsTest.testFind":259,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests.MockTypeTest.fromEasyMockClass":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":186,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":420,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests.MockClassControlTest.testHashCode":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":244,"org.easymock.tests.UsageVarargTest.varargCharAccepted":39,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":183,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":331,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":184,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":446,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":399,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":178,"org.easymock.tests2.UsageTest.resumeIfFailure":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":125,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":234,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":275,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":391,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":377,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":421,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":113,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":143,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":394,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":98,"org.easymock.tests2.UsageConstraintsTest.any":265,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":107,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":124,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":106,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":372,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.NameTest.nameForMocksControl":27,"org.easymock.tests2.MockedExceptionTest.testMockedException":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":425,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":401,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":287,"org.easymock.tests2.CaptureTest.testCaptureLast":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":249,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":263,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":276,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":280,"org.easymock.samples.ExampleTest.removeNonExistingDocument":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":104,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":398,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":293,"org.easymock.tests.LimitationsTest.privateConstructor":412,"org.easymock.tests2.UsageConstraintsTest.testNotNull":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":319,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests.UsageVarargTest.differentLength":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":443,"org.easymock.tests.UsageTest.openCallCountByLastCall":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":97,"org.easymock.tests.UsageCallCountTest.tooFewCalls":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":115,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests.MockingTest.testStrictClassMocking":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":366,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":185,"org.easymock.tests2.NameTest.nameForNiceMock":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":43,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":223,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":273,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":444,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.tests2.UsageConstraintsTest.testSame":261,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":408,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":65,"org.easymock.tests2.NameTest.nameForMock":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests2.MockedExceptionTest.testRealException":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":300,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests2.NameTest.nameForStrictMock":25,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":274,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":236,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests2.UsageConstraintsTest.testOr":262,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":283,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":418,"org.easymock.tests.UsageVarargTest.varargShortAccepted":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":365,"org.easymock.tests2.CompareToTest.testLessThan":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":101,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests2.CaptureTest.testCapture":407,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.UsageConstraintsTest.constraints":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.UsageStrictMockTest.testVerify":92,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":327,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":134,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":130,"org.easymock.tests.LimitationsTest.abstractClass":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":131,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
