[{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[171,172,173,174,175],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,176,176,177,177,178,179,3,180,181,182,183,184,185,186,47,48,49,68,69,70,72,73,74,187,75,188,76,77,78,94,95,96,97,98,101,189,190,191,192,116,117,118,119,121,122,193,194,123,195,124,196,125,126,197,127,198,199,170],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[1,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,3,180,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,227,182,228,229,230,231,232,233,234,235,236,237,238,183,239,240,241,242,243,244,245,246,30,247,31,32,248,249,33,34,250,251,35,36,252,37,184,253,254,185,255,256,38,39,257,258,40,41,259,260,42,261,262,263,264,265,266,267,268,269,270,43,271,272,273,274,44,275,45,46,276,277,278,279,47,48,280,49,281,282,283,57,284,285,286,287,288,289,290,291,58,59,60,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,61,62,63,64,65,312,313,314,315,316,317,318,319,320,321,322,66,67,68,323,324,69,70,71,72,73,74,187,75,325,188,76,77,78,326,79,80,327,81,82,328,329,83,84,85,86,330,87,88,89,90,91,92,93,331,332,333,98,334,99,335,100,336,101,102,189,117,118,121,122,337,338,339,340,341,342,343,344,193,123,195,345,124,196,197,127,199,346,347,348,349,350,128,129,130,351,131,352,132,133,134,353,354,135,136,355,356,137,357,138,139,358,359,360,361,362,140,363,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,364,166,167,168,169,365,366,367,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[368,369],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[211,215,216,218,221,9,13,14,16,19,45,46,370,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,201,202,2,203,204,372,373,374,178,179,375,209,210,212,217,222,3,180,7,8,10,15,20,182,245,246,30,247,31,32,248,249,251,252,37,258,259,260,42,267,269,270,43,273,274,275,276,47,48,49,287,288,290,291,58,59,304,312,313,314,315,316,318,319,320,321,322,68,323,69,70,71,72,73,74,75,77,79,80,327,81,328,329,83,84,85,86,88,92,93,94,95,96,97,98,99,335,101,102,189,103,104,105,106,107,108,109,111,112,113,114,376,115,116,117,118,119,120,121,122,341,343,124,125,126,128,129,351,131,352,353,354,136,356,357,358,140,141,143,147,152,153,154,155,157,160,163,164,165,364,166,365,366,170],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[146,152,156,163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[227,250,261,262,263,264,265,266,332,333,98,334,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[377,169],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[4,29,227,33,34,250,251,35,265,44,61,62,63,64,65,66,67,80,83,84,88,137,151,154],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[270,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[101,102,189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[185,125],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[380,36,252,37,39,258,259,260,274,44,45,46,337,338,339,340,130,351,353,354,137,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[101,102,189],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[381,101,102,189],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[382,383,33,258,40,41,259,260,42,261,274,44,384,385,386],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[163,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[4,382,387,383,388,389,390,391,36,252,37,39,257,258,259,260,268,392,43,271,274,44,45,46,393,323,394,384,395,396,397,398,399,400,385,401,402,130,351,353,354,137,138,139,160],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[403],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[0,1,201,202,2,203,204,205,206,372,373,374,176,176,177,177,178,179,375,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,404,405,406,407,408,409,368,3,180,181,369,410,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,227,411,412,413,414,415,416,182,228,171,172,173,417,174,175,229,230,231,232,233,234,235,236,237,418,419,420,238,183,239,240,241,242,243,244,245,246,30,247,31,32,248,249,33,34,250,251,35,36,252,37,184,253,254,185,255,256,38,39,257,258,40,41,259,260,42,261,262,263,264,265,266,267,268,269,270,392,43,271,272,273,274,44,275,45,46,276,277,278,279,186,47,48,280,49,281,282,283,421,422,423,424,425,426,378,371,370,50,427,51,428,429,430,431,52,432,433,434,53,54,55,56,57,284,285,286,287,288,289,290,291,58,59,60,292,293,294,295,296,435,297,298,299,436,437,300,301,302,303,304,305,306,307,308,309,310,311,61,62,63,64,65,438,439,440,312,313,314,441,315,316,317,318,319,320,321,322,66,67,442,443,68,444,393,323,324,69,70,71,72,73,74,187,445,75,446,325,188,76,77,78,326,447,79,80,327,81,82,328,329,83,84,85,86,330,87,88,89,90,91,92,93,448,449,450,94,451,452,95,453,454,455,456,457,458,459,460,461,96,462,463,464,465,466,97,467,468,331,332,333,98,334,99,379,469,335,100,336,101,102,189,103,104,105,106,107,108,109,110,111,112,113,114,376,470,471,472,473,474,115,475,476,477,478,479,480,116,117,118,119,120,121,122,481,337,338,339,340,386,341,342,343,482,344,193,123,195,345,124,196,125,126,483,197,127,199,484,349,485,350,128,129,130,351,131,352,132,133,134,353,354,135,136,355,356,137,357,138,139,358,359,360,361,362,486,487,140,141,363,142,488,489,490,491,492,143,493,494,495,496,497,498,144,145,146,147,499,148,149,150,151,152,153,500,154,155,156,157,158,159,160,161,162,163,164,165,364,166,167,168,169,365,366,501,367,170,502],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[79,327,86,146,147,149,151,152,500,163,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[471,472,474,476,477,480,489,490,492,494,495,498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[403,161],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,37,38,42,45,50,51,53,54,56,100,342,128,136,138,142],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":375,"org.easymock.tests2.DelegateToTest.testReturnException":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":239,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":481,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":380,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageTest.wrongArguments":351,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":185,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":35,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":497,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":65,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests.ReplayStateInvalidUsageTest.times":308,"org.easymock.tests2.DependencyTest.testClassMocking":486,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":27,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":416,"org.easymock.tests2.DelegateToTest.testDelegate":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":237,"org.easymock.tests2.DependencyTest.testClassMockingSupport":487,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":254,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":498,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":468,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":280,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":158,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":16,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":58,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":85,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":94,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":180,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":190,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":300,"org.easymock.samples.ExampleTest.voteForRemovals":204,"org.easymock.tests.UsageVarargTest.allKinds":322,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":236,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":494,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":26,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":175,"org.easymock.samples.ExampleTest.voteForRemoval":202,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":386,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":321,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":290,"org.easymock.tests.UsageExpectAndReturnTest.longType":8,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":387,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":283,"org.easymock.tests.MockingTest.testClassMocking":279,"org.easymock.tests2.UsageConstraintsTest.testContains":156,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":284,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":148,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":60,"org.easymock.tests.MockTypeTest.fromEasyMockClass":253,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":367,"org.easymock.tests.UsageExpectAndReturnTest.object":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":316,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":390,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":489,"org.easymock.tests.MockClassControlTest.testHashCode":242,"org.easymock.tests2.EasyMockSupportTest.testVerify":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":396,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":365,"org.easymock.tests.UsageVarargTest.varargCharAccepted":315,"org.easymock.tests2.CaptureTest.testCaptureMultiple":200,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":56,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.DefaultClassInstantiatorTest.object":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":22,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":418,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":240,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":14,"org.easymock.tests2.SerializationTest.testAllMockedMethod":189,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":385,"org.easymock.samples.SupportTest.voteForRemovals":373,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":55,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":409,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":343,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":66,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":382,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":406,"org.easymock.tests2.CaptureTest.testCaptureNone":84,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":320,"org.easymock.tests2.ThreadingTest.testThreadSafe":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":288,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests2.CaptureTest.testCapture_2617107":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests2.StubTest.stub":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":306,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":357,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":452,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":501,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":353,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":168,"org.easymock.samples.ExampleTest.removeNonExistingDocument":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":490,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":172,"org.easymock.tests2.ConstraintsToStringTest.andToString":400,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":91,"org.easymock.tests2.MockBuilderTest.testCreateMockString":199,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":335,"org.easymock.tests.UsageVerifyTest.twoThrows":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testNotNull":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":317,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.UsageConstraintsTest.equals":499,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":446,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":250,"org.easymock.tests.UsageCallCountTest.tooFewCalls":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests.MockingTest.testStrictClassMocking":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":383,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":93,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.samples.ExampleTest.addDocument":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":342,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":319,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":50,"org.easymock.tests.UsageExpectAndReturnTest.floatType":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":170,"org.easymock.tests2.ConstraintsToStringTest.orToString":394,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":496,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":171,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":6,"org.easymock.samples.SupportTest.addDocument":372,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":495,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":281,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":17,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":28,"org.easymock.tests2.MockedExceptionTest.testRealException":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":311,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":173,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":138,"org.easymock.tests2.UsageConstraintsTest.lessThan":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":86,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":18,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":174,"org.easymock.tests.UsageVarargTest.varargShortAccepted":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":289,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests2.CompareToTest.testLessThan":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":195,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":19,"org.easymock.tests2.UsageConstraintsTest.constraints":146,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":206,"org.easymock.tests2.ConstraintsToStringTest.notToString":395,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":374,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests2.CompareToTest.testGreateThan":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":63,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":11,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":313}}]
