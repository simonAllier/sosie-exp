[{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,9,40,41,42,43,44,45,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,6,133,134,135,136,137,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[157,158,159,160],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[161,162,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[166,167,168,169,170,118,119,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,157,188,120,189,190,191,192,193,194,195,196,197,18,19,20,21,22,198,199,23,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,25,122,243,244,245,246,247,248,249,250,251,252,253,254,123,28,29,30,255,256,257,258,259,163,260,261,262,156,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,126,127,296,297,32,298,299,300,301,302,303,304,305,306,307,308,309,310,40,41,44,311,312,45,45,46,46,313,314,315,316,317,318,319,320,47,48,49,140,141,321,322,323,324,325,326,128,129,327,328,329,330,331,52,53,56,57,58,59,61,62,63,64,65,66,67,332,68,69,70,71,333,72,73,74,75,76,79,80,81,82,334,88,91,101,107,335,336,337,338,339,14,340,341,342,110,343,344,345,164,346,112,113,114,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,160,370,371,372,373,374,130,131,375,5,132,6,3,133,376,134,135,377,378,379,380,136,381,382,137,117,7,138,383,384,385,386,8,15,139,387,388,389,115,390,116,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[243,244,126,407,130],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,119,120,236,121,122,123,124,125,126,127,299,128,129,130,131,132,6,133,134,135,136,137,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[408,165,409,410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[411,412,56,80,81],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[167,173,120,241,242,243,244,245,295,126,413,407,321,331,361,374,130,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[414,60,415,416,417,418,419,420,421,422,423,424,110,111,425,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[169,118,172,426,292,294,126,297,324,128,329,52,362,372,130,5,3,7],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[169,427,10,293,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[203,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[428,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.UsageTest.argumentsOrdered":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":2,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":326,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":141,"org.easymock.tests2.DelegateToTest.testReturnException":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests.MockClassControlTest.testToString":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageTest.wrongArguments":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":269,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":357,"org.easymock.tests2.CaptureTest.testPrimitive":394,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.UsageTest.argumentsOrdered":172,"org.easymock.tests.UsageVarargTest.varargIntAccepted":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":423,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":310,"org.easymock.tests.ReplayStateInvalidUsageTest.times":262,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests2.DependencyTest.testClassMocking":428,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":339,"org.easymock.tests2.CaptureTest.testAnd":391,"org.easymock.tests2.UsageTest.strictResetToDefault":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":352,"org.easymock.tests2.DelegateToTest.testDelegate":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.LimitationsTest.mockFinalMethod":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests2.DependencyTest.testClassMockingSupport":429,"org.easymock.tests2.CaptureTest.testCapture1_2446744":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":337,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.UsageThrowableTest.throwError":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":0,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":109,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.UsageTest.niceToStrict":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":147,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":381,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.MockClassControlTest.testEquals":199,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.CaptureTest.testCaptureAll":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":424,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":38,"org.easymock.tests2.UsageConstraintsTest.greaterThan":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":39,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":83,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":350,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":351,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":221,"org.easymock.tests2.CaptureTest.testCapture2_2446744":403,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.UsageTest.moreThanOneArgument":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":62,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":426,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.UsageCallCountTest.tooManyCalls":242,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":412,"org.easymock.tests2.UsageConstraintsTest.testContains":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":235,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":133,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":419,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":178,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":213,"org.easymock.tests.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":161,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":150,"org.easymock.tests.MockClassControlTest.testHashCode":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":98,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":125,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":31,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests.DefaultClassInstantiatorTest.object":32,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":149,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":22,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":21,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests2.StubTest.stubWithReturnValue":370,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":414,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":416,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.samples.SupportTest.voteForRemovals":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":159,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":162,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":384,"org.easymock.tests2.DelegateToTest.testWrongClass":368,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":427,"org.easymock.tests2.CaptureTest.testCaptureNone":399,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":165,"org.easymock.tests.UsageUnorderedTest.message":245,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests2.UsageConstraintsTest.any":379,"org.easymock.tests2.StubTest.stub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":374,"org.easymock.tests2.SerializationTest.testClass":115,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":335,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":144,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests2.NameTest.nameForMocksControl":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":417,"org.easymock.tests2.CaptureTest.testCaptureLast":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":377,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":385,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":410,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":146,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":34,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":425,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":229,"org.easymock.tests.UsageVarargTest.differentLength":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":143,"org.easymock.tests2.CallbackTest.callback":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":270,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":409,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":332,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":342,"org.easymock.tests.ObjectMethodsTest.testHashCode":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":422,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":346,"org.easymock.tests2.NameTest.nameForNiceMock":364,"org.easymock.tests2.DependencyTest.testInterfaceMocking":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":420,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.DelegateToTest.testStubDelegate":367,"org.easymock.tests2.AnswerTest.stubAnswer":341,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":396,"org.easymock.tests2.SerializationTest.test":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":33,"org.easymock.tests2.UsageConstraintsTest.testSame":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":93,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":154,"org.easymock.tests2.NameTest.nameForMock":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":78,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":264,"org.easymock.tests2.NameTest.nameForStrictMock":363,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":405,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":51,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":413,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":35,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":152,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":349,"org.easymock.tests2.CaptureTest.testCaptureRightOne":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":97,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":408,"org.easymock.tests2.UsageConstraintsTest.testOr":135,"org.easymock.tests.UsageRangeTest.combination":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":94,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":240,"org.easymock.tests2.UsageConstraintsTest.cmpTo":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":169,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":228,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageStrictMockTest.testVerify":297,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":308,"org.easymock.tests.LimitationsTest.abstractClass":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":220,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":309,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":407,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":354}}]
