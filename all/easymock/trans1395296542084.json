[{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[70,71,72,73,74],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[30,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[75,12,13,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[79,80,81,82,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[75,85,70,86,87,88,89,90,91,92,93,94,95,96,14,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,76,84,149,150,151,152,153,29,154,31,155,156,157,158,159,160,32,161,162,163,164,165,166,167,168,71,169,72,73,79,33,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,77,78,190,191,192,193,194,195,196,197,198,199,200,201,26,202,203,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,74,54,228,229,230,55,231,232,233,56,234,235,236,237,238,239,240,241,57,242,243,58,244,245,246,59,60,247,248,249,250,61,251,252,253,254,255,256,257,258,259,260,261,262,263,264,62,63,265,11,266,267,268,269,68,270,271,272,273,274,275,276,277,278,279,280,281,282,10,283,284,285,286,287,288],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[125,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[14,15,18,19,290,291,292,293,26],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[206,208,222,223,295,279],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[296,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[299],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[296,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[75,12,12,13,13,85,70,86,87,88,89,300,90,91,92,93,94,95,96,14,301,302,303,304,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,115,116,3,117,118,119,120,121,122,305,306,307,308,309,123,124,310,125,126,311,127,312,128,129,130,131,132,133,134,135,136,137,138,313,139,140,141,142,143,144,145,146,314,147,315,148,76,84,149,150,151,152,153,27,28,29,30,154,31,155,156,157,158,159,160,32,316,161,162,163,164,165,166,167,168,317,71,169,72,318,73,79,33,170,171,172,173,174,175,176,177,178,179,180,181,182,183,319,184,185,186,187,188,189,77,78,190,191,320,321,192,193,194,195,196,197,198,199,200,201,26,202,203,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,322,323,324,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,325,224,225,226,326,327,80,4,328,329,330,331,332,333,334,335,295,336,337,338,339,227,340,74,54,341,342,343,344,345,346,228,347,229,230,55,231,9,232,233,56,234,235,236,237,348,238,239,349,350,351,352,353,354,355,356,240,357,358,359,241,57,242,243,58,244,245,246,59,60,247,248,294,249,250,61,360,82,251,252,253,254,255,256,257,258,259,260,261,361,362,363,364,365,366,367,368,262,263,264,62,63,265,369,370,371,372,11,266,267,268,269,373,374,375,376,377,378,64,65,66,67,68,69,270,271,272,379,380,273,274,275,276,381,277,278,279,280,281,282,10,283,284,285,286,287,288,382,383,384],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[15,18,290,291,292,385,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[387],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[157,161,162,199,343,388,9,232,234,235,240,271,272,10,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":101,"org.easymock.tests2.UsageTest.argumentsOrdered":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":91,"org.easymock.tests2.DelegateToTest.testReturnException":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":65,"org.easymock.tests.MockingTest.testPartialClassMocking":224,"org.easymock.tests.MockClassControlTest.testToString":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":34,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":107,"org.easymock.tests2.UsageTest.wrongArguments":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":371,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":368,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":53,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":337,"org.easymock.tests.UsageTest.argumentsOrdered":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":332,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":308,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.DelegateToTest.testDelegate":73,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":344,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":306,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":80,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":339,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":22,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":298,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":43,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":369,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.MockClassControlTest.testEquals":367,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":51,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":338,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":270,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":59,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":69,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":64,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":156,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":260,"org.easymock.tests.GenericTest.testBridgedEquals":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":52,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":278,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":98,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":378,"org.easymock.tests.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":241,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":238,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":74,"org.easymock.tests.MockClassControlTest.testHashCode":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":188,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageVarargTest.varargCharAccepted":254,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests2.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":296,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":357,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":376,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":190,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":364,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":67,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":203,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":360,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":24,"org.easymock.samples.SupportTest.voteForRemovals":96,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":46,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":320,"org.easymock.tests.UsageExpectAndThrowTest.object":44,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":3,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":272,"org.easymock.tests.UsageVarargTest.varargByteAccepted":259,"org.easymock.tests2.ThreadingTest.testThreadSafe":149,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":276,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.UsageConstraintsTest.any":108,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageExpectAndThrowTest.longType":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":330,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":38,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":225,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":146,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":42,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.samples.ExampleTest.removeNonExistingDocument":300,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":151,"org.easymock.tests2.MockBuilderTest.testCreateMockString":312,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.floatType":36,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":271,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":60,"org.easymock.tests2.UsageTest.defaultResetToNice":316,"org.easymock.samples.ExampleTest.voteAgainstRemovals":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":256,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":372,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":153,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":292,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":169,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests.UsageVarargTest.varargLongAccepted":258,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":115,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":133,"org.easymock.tests2.SerializationTest.test":202,"org.easymock.tests2.UsageConstraintsTest.testSame":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.samples.SupportTest.addDocument":95,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests.GenericTest.testPackageScope":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":21,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":23,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":335,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":145,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests.UsageRangeTest.combination":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":16,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.UsageVarargTest.varargShortAccepted":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CaptureTest.testCaptureFromStub":313,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":275,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":90,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":94,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252}}]
