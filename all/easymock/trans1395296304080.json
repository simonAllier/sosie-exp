[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,15,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[71,72],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[16,17,73,74,75,76],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[77,78,79,80,81,82,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[16,16,17,17,84,85,86,87,88,89,20,90,91,21,92,23,24,25,26,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,13,111,112,113,114,115,116,117,118,119,0,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,1,147,148,149,2,3,150,151,4,152,153,154,155,156,157,158,159,160,161,162,163,29,31,33,34,36,39,40,164,41,15,42,44,46,47,48,49,50,51,52,165,53,54,166,167,168,57,169,170,171,58,172,5,173,174,175,176,177,178,60,61,62,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,64,66,204,205,206,207,208,209,67,210,211,212,213,214,6,215,7,8,9,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,10,239,11,240,241,242,243,244,245,246,247,248,249,250,251,252,253,70,254,255,256,257,258,259,260,261,262,263,264,265,266,267,71,12,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[287,288,289],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[104,109,119,290],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[291,292,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[173,174,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[293,294,295,296,297,298],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[95,111,116,299],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,15,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[23,147,152,301],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[84,86,87,302,88,89,18,19,303,304,305,90,22,306,126,307,308,309,129,130,135,14,155,161,162,163,310,31,311,312,173,174,313,175,65,314,315,316,317,318,319,320,321,322,323,67,212,247,71,324,325,268,269,326,286,327,328,329,330,331],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[21,31,332,333,35,38,76,47,334,57,83,335,66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[21,92,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[336,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[338,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[125,307,127,128,308,309,129,131,339,132,133,135],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[335,64,65,66,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[100,306,139,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[18,19,22,341,342,343,23,344,345,346,347,348,349,350,351,39,40,41,15,42,44,301,45,48,352,334,49,52,171,58,353,336,354,355,356,337,357,358,359,59,360,361,63,362,363,364,365,366,367,64,65,340,67,368,369,70,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[119,371],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[293,294,295,296,297,298],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":273,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":14,"org.easymock.tests2.StubTest.stubWithReturnValue":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":263,"org.easymock.tests.MockingTest.testPartialClassMocking":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":294,"org.easymock.samples.SupportTest.voteForRemovals":90,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":335,"org.easymock.tests.MockClassControlTest.testToString":362,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":120,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":78,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageStrictMockTest.range":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests2.CaptureTest.testCaptureNone":130,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":321,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":82,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":272,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.times":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":280,"org.easymock.tests2.DelegateToTest.testDelegate":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":42,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests2.CaptureTest.testCaptureLast":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests.UsageThrowableTest.throwError":246,"org.easymock.tests.UsageStrictMockTest.differentMethods":269,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":122,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests2.CompareToTest.testLessOrEqual":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":253,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":287,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":76,"org.easymock.tests.UsageTest.openCallCountByLastCall":7,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":212,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":351,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.UsageThrowableTest.throwCheckedException":250,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":55,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.tests2.CompareToTest.testGreateOrEqual":290,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests.UsageVarargTest.allKinds":323,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests2.DependencyTest.testInterfaceMocking":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":80,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":252,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":275,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests.UsageVarargTest.varargLongAccepted":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":357,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":247,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":341,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":308,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":270,"org.easymock.tests2.CaptureTest.testCaptureFirst":135,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":346,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":322,"org.easymock.tests.GenericTest.testBridgedEquals":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":306,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":75,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.MockedExceptionTest.testRealException":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":211,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":28,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":289,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":355,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":72,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":79,"org.easymock.tests.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":204,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor":73,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":63,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":278,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageVarargTest.varargShortAccepted":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests.UsageVarargTest.varargCharAccepted":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":121,"org.easymock.tests2.CompareToTest.testLessThan":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":288,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":265,"org.easymock.tests2.CaptureTest.testCaptureFromStub":133,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.CaptureTest.testCapture":339,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":364,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":363,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":309,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":56,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158}}]
