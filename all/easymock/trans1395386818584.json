[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[26,45,44,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[47,48,49,50,4,51,52,53,54,55,5,6,7,8,9,10,11,12,13,14,15,17,18,56,57,58,59,21,22,60,61,62,63,23,24,25,26,64,27,28,30,65,66,67,68,36,69,70,39,40,41,42,43,71,72],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[73,74,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[80,81,74,82,75,83,84,79],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[85,6,7,8,9,12,86,87,88,89,24,27,28,90,91,92,93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[94,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[154,155,156,157,158,159],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[173,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,94,195,196,197,95,198,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,56,214,19,215,216,217,57,58,59,161,20,21,218,219,22,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,31,252,45,253,65,254,255,256,66,32,257,33,258,259,260,261,170,171,262,263,264,172,265,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[273,274,275,276,277,278,0,1,2,47,48,49,50,177,279,280,173,281,282,174,283,284,285,286,287,288,80,289,290,291,181,182,183,187,292,293,294,295,296,297,298,299,300,301,302,3,303,304,305,306,307,190,191,4,51,52,53,54,55,5,85,6,7,308,309,8,9,10,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,194,11,330,12,331,13,14,15,332,333,334,335,336,337,338,339,96,97,98,99,100,340,101,102,103,104,105,106,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,16,361,362,363,364,365,366,367,368,369,17,18,370,371,372,373,374,200,201,202,203,204,205,206,207,375,376,377,378,379,380,381,382,383,81,384,385,386,387,388,389,56,19,217,57,20,21,22,390,391,76,392,393,60,61,62,63,394,395,396,397,398,399,400,401,402,23,403,89,24,25,26,404,405,64,27,28,29,30,251,31,406,252,45,253,65,254,66,32,257,33,34,39,407,408,40,41,42,409,410,411,43,272,412,413,414,415,416,417,418,419,420,421,422,423,44,46,424,425,426,427,428,429,430,431,432,170,153,433,434,435,262,263,264,436,172,437,265,267,268,270,271,82,75,83,79,438,154,439,155,440,441,442,156,157,158,443,444,445,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":272,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":73,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":181,"org.easymock.tests.MockClassControlTest.testToString":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":310,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":417,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":370,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":49,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":176,"org.easymock.tests2.UsageConstraintsTest.testNull":413,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":220,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":374,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":377,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":368,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":112,"org.easymock.tests.ReplayStateInvalidUsageTest.times":103,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests2.AnswerTest.answer":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":63,"org.easymock.tests2.CaptureTest.testAnd":438,"org.easymock.tests2.UsageTest.strictResetToDefault":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":362,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":325,"org.easymock.tests.LimitationsTest.mockFinalMethod":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":61,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":98,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":115,"org.easymock.samples.PartialClassMockTest.testGetArea":210,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":365,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":311,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":319,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":47,"org.easymock.tests.UsageOverloadedMethodTest.overloading":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":422,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":352,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":380,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":421,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests2.EasyMockSupportClassTest.testAll":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":221,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":62,"org.easymock.tests2.UsageConstraintsTest.testMatches":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":378,"org.easymock.samples.ExampleTest.voteForRemovals":387,"org.easymock.tests.UsageVarargTest.allKinds":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":54,"org.easymock.samples.BasicClassMockTest.testPrintContent":212,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":285,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":169,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":116,"org.easymock.samples.ExampleTest.voteForRemoval":384,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":198,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":258,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":177,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":67,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":348,"org.easymock.tests2.CaptureTest.testCapture2_2446744":445,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":392,"org.easymock.tests2.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":193,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":1,"org.easymock.tests.UsageExpectAndReturnTest.longType":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":51,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":2,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":284,"org.easymock.tests.MockingTest.testNiceClassMocking":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests.MockingTest.testClassMocking":179,"org.easymock.tests2.UsageConstraintsTest.testContains":420,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":264,"org.easymock.tests2.UsageConstraintsTest.testFind":412,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":395,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests.UsageExpectAndReturnTest.object":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":165,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":302,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":338,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":80,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":143,"org.easymock.tests.MockClassControlTest.testHashCode":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":301,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests2.UsageTest.openCallCountByLastCall":404,"org.easymock.tests.DefaultClassInstantiatorTest.object":194,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":142,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.ReplayStateInvalidCallsTest.times":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":121,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":248,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":265,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":92,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":322,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":426,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":335,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":48,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":86,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":110,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":243,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":278,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":439,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":373,"org.easymock.tests2.UsageConstraintsTest.any":418,"org.easymock.tests2.StubTest.stub":396,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.UsageExpectAndThrowTest.longType":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":197,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.SerializationTest.testClass":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":133,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":224,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":126,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":409,"org.easymock.tests2.NameTest.nameForMocksControl":401,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":135,"org.easymock.tests2.MockedExceptionTest.testMockedException":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":231,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":163,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":271,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":427,"org.easymock.tests.MockingTest.testTwoMocks":180,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":318,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":431,"org.easymock.samples.ExampleTest.removeNonExistingDocument":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":137,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":144,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":195,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":233,"org.easymock.tests.UsageExpectAndThrowTest.floatType":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":228,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":433,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":242,"org.easymock.samples.ExampleTest.voteAgainstRemoval":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":257,"org.easymock.tests.LimitationsTest.privateConstructor":186,"org.easymock.tests2.UsageConstraintsTest.testNotNull":430,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":286,"org.easymock.tests2.UsageTest.defaultResetToNice":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":132,"org.easymock.tests.UsageVarargTest.differentLength":3,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":372,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":50,"org.easymock.tests.UsageThrowableTest.throwCheckedException":283,"org.easymock.tests.MockingTest.testStrictClassMocking":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":104,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":435,"org.easymock.tests.ObjectMethodsTest.testHashCode":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":168,"org.easymock.tests2.NameTest.nameForNiceMock":400,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":393,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":124,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":119,"org.easymock.tests2.DependencyTest.testInterfaceMocking":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":166,"org.easymock.samples.ExampleTest.addDocument":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":244,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.AnswerTest.stubAnswer":434,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":331,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests.UsageExpectAndReturnTest.floatType":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":170,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":411,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":260,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":441,"org.easymock.tests2.SerializationTest.test":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":94,"org.easymock.tests2.UsageConstraintsTest.testSame":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":109,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":234,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":107,"org.easymock.tests2.NameTest.nameForMock":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":353,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":363,"org.easymock.tests2.MockedExceptionTest.testRealException":436,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":371,"org.easymock.tests2.NameTest.nameForStrictMock":399,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":261,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":196,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":113,"org.easymock.tests2.UsageConstraintsTest.lessThan":432,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":146,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":35,"org.easymock.tests2.CaptureTest.testCaptureRightOne":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":238,"org.easymock.tests2.UsageConstraintsTest.testOr":415,"org.easymock.tests.UsageRangeTest.combination":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":235,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":354,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":0,"org.easymock.tests2.UsageConstraintsTest.cmpTo":419,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":127,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":117,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":405,"org.easymock.tests2.CaptureTest.testCaptureFromStub":444,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":97,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":215,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":123,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":355,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":389,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":442,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":366,"org.easymock.tests.LimitationsTest.abstractClass":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299}}]
