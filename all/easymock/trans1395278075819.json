[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[8,9,10],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[12,13,14,15,16,4,5,17,18,6,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[50,49,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,8,68,9,10,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,2,283,284,285,3,286,287,288,289,290,291,292,293,294,295,296,297,298,299,12,12,13,13,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,14,338,339,340,15,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,4,5,363,364,365,366,367,368,369,370,371,372,373,374,375,19,376,377,378,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,11,469,470,471,472,473,474,475,476,477,478,479,480,1,49,51,52,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[403],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[482,483,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[471],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[49,51,52],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[50,49,51,52],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[64,65,66,485,486,74,93,96,97,487,488,136,137,140,141,187,271,276,277,327,328,344,350,351,352,369,376,377,378,434],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[53,54,58,59,60,61,62,63,64,65,66,8,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,134,135,136,137,138,139,140,141,142,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,192,193,194,195,196,197,198,199,204,205,206,213,214,216,220,221,222,223,224,225,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,288,289,290,291,292,293,294,295,296,297,298,299,321,323,324,325,326,327,328,329,330,331,337,14,340,15,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,4,364,365,366,367,368,369,372,373,376,377,378,379,380,381,382,383,384,385,387,390,391,392,393,396,399,400,401,402,404,406,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,443,450,451,452,453,454,455,456,457,459,460,461,462,463,464,466,467,468,11,469,470,471,472,473,474,475,476,477,478,479,480,1,49,51,52,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[8,9,69,89,94,96,97,108,109,110,111,112,113,116,117,119,120,121,123,124,125,126,127,132,171,172,173,174,175,201,202,209,213,214,216,237,238,248,271,272,273,274,287,288,289,290,292,294,295,297,300,306,321,322,325,327,328,336,337,14,338,339,340,15,361,4,369,372,374,375,377,25,28,38,44,379,380,381,382,383,384,387,391,392,393,407],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[50,49,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[492,411,412,413,414,415,416,417,418,419,420,421,422,423,424],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[64,65,66,485,486,74,91,93,95,96,97,487,488,134,136,137,140,141,142,194,271,276,277,323,326,327,328,341,344,345,346,350,351,352,353,369,376,377,378,380,391,393,426,430,431,434,456,471,481],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[387,388,389,390,391,392,393,394,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[8,68,9,10,89,170,208,212,213,214,216,231,234,240,241,242,243,244,245,246,247,12,12,13,13,300,303,304,336,337,14,338,340,15,356,4,368,369,370,372,373,374,375,376,377,378,25,28,38,44,379,380,382,383,384,385,387,390,391,392,393,395,49,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[53,54,8,69,70,73,74,89,94,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,135,138,139,142,159,171,172,173,174,175,176,181,183,184,186,213,214,216,224,237,238,240,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,292,293,294,295,297,300,306,312,321,322,325,327,328,331,336,337,14,338,339,340,15,341,342,343,345,347,348,349,352,353,356,358,359,360,361,362,4,369,372,374,375,377,25,28,38,44,379,380,381,382,383,384,387,391,392,393,396,400,401,406,407,408,410,411,412,413,414,415,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,443,454,455,456,457,459,460,461,462,463,464,466,467,468,11,469,470,471,472,473,474,475,476,477,478,479,480,1,49,51,481],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[493,494,495,496,497,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[489,490,491],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[56,57,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[407],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[93,498,499,136,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":457,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.UsageTest.argumentsOrdered":351,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":153,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":346,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":301,"org.easymock.tests2.DelegateToTest.testReturnException":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":251,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageTest.wrongArguments":344,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":234,"org.easymock.tests2.UsageConstraintsTest.testNull":460,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":382,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":434,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.CaptureTest.testPrimitive":414,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":73,"org.easymock.tests.UsageTest.moreThanOneArgument":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":270,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.UsageTest.argumentsOrdered":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":226,"org.easymock.tests.UsageVarargTest.varargIntAccepted":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":491,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":443,"org.easymock.tests.ReplayStateInvalidUsageTest.times":83,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":396,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":453,"org.easymock.tests2.CaptureTest.testAnd":411,"org.easymock.tests2.UsageTest.strictResetToDefault":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":273,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":266,"org.easymock.tests.LimitationsTest.mockFinalMethod":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":180,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":128,"org.easymock.tests2.CaptureTest.testCapture1_2446744":415,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":451,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":77,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":233,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":46,"org.easymock.samples.PartialClassMockTest.testGetArea":300,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":78,"org.easymock.tests.MockingTest.testInterfaceMocking":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":33,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":252,"org.easymock.tests2.UsageTest.niceToStrict":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":11,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":420,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":452,"org.easymock.tests2.CaptureTest.testCaptureAll":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":178,"org.easymock.tests.MockNameTest.defaultName":239,"org.easymock.tests2.UsageConstraintsTest.testMatches":470,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":179,"org.easymock.samples.BasicClassMockTest.testPrintContent":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":106,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":314,"org.easymock.tests2.UsageConstraintsTest.greaterThan":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":393,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":286,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":341,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":427,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.CaptureTest.testCaptureFirst":424,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":428,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":353,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":423,"org.easymock.tests2.UsageTest.moreThanOneArgument":343,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":161,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":65,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":269,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":477,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":66,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":489,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":105,"org.easymock.tests.MockingTest.testNiceClassMocking":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":337,"org.easymock.tests.MockingTest.testClassMocking":211,"org.easymock.tests2.UsageConstraintsTest.testContains":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":59,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":356,"org.easymock.tests2.UsageConstraintsTest.testFind":459,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests.MockTypeTest.fromEasyMockClass":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":206,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":131,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":35,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":450,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":166,"org.easymock.tests2.UsageTest.openCallCountByLastCall":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":482,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":436,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":55,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":204,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":257,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.UsageTest.resumeIfFailure":352,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":331,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":263,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":165,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":397,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":133,"org.easymock.tests.UsageExpectAndThrowTest.object":261,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":475,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":334,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":202,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":485,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":39,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":63,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":303,"org.easymock.tests2.CaptureTest.testCapture_2617107":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":72,"org.easymock.tests2.UsageConstraintsTest.any":466,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":82,"org.easymock.tests2.StubTest.stub":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":285,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":81,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests2.NameTest.nameForMocksControl":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":255,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.CaptureTest.testCaptureLast":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":476,"org.easymock.tests.MockingTest.testTwoMocks":212,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":259,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":350,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":480,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":360,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":29,"org.easymock.tests.UsageExpectAndThrowTest.floatType":253,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":399,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":392,"org.easymock.tests.LimitationsTest.privateConstructor":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":479,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":354,"org.easymock.tests2.UsageTest.defaultResetToNice":349,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.CallbackTest.callback":481,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":71,"org.easymock.tests.UsageCallCountTest.tooFewCalls":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":339,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":401,"org.easymock.tests.ObjectMethodsTest.testHashCode":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":362,"org.easymock.tests2.NameTest.nameForNiceMock":366,"org.easymock.tests2.DependencyTest.testInterfaceMocking":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":40,"org.easymock.tests2.DelegateToTest.testStubDelegate":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.AnswerTest.stubAnswer":400,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":473,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":455,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":332,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":416,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests2.UsageConstraintsTest.testSame":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":30,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":315,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":217,"org.easymock.tests2.NameTest.nameForMock":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":21,"org.easymock.tests2.UsageStrictMockTest.differentMethods":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":265,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":274,"org.easymock.tests2.MockedExceptionTest.testRealException":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":156,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":86,"org.easymock.tests2.NameTest.nameForStrictMock":365,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":474,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":369,"org.easymock.tests2.UsageStrictMockTest.range":327,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":34,"org.easymock.tests2.UsageConstraintsTest.testOr":462,"org.easymock.tests.UsageRangeTest.combination":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":380,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":31,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":64,"org.easymock.tests2.UsageConstraintsTest.cmpTo":467,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":398,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":146,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":348,"org.easymock.tests2.CaptureTest.testCaptureFromStub":422,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":76,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":62,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.constraints":456,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":99,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":177,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.LimitationsTest.abstractClass":87,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":431,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":189}}]
