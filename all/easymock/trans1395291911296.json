[{"position":"org.easymock.internal.MockBuilder:229","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[5,7,8],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[9,10,3,11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[19,20,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,33,34,86,35,36,37,38,39,87,88,89,90,40,91,92,93,23,94,95,96,24,97,98,99,100,101,102,103,104,41,105,106,107,108,109,42,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[277,278,279,280,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,286,82,287,288,16,220,17,289,227,290,235,271,272],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[72,286,82,287,291,288,16,220,17,289,227,290,235,271,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[70,72,73,77,292,12,293,294,295,296,297,13,298,299,300,14,301,15,302,288,16,218,220,221,224,17,235,270,271,272],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[41,149],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[303,303,304,304,70,89,91,92,94,95,96,24,101,103,104,105,106,111,112,113,155,156,159,168,169,170,171,172,218,264,265,266,267,268,273,275,276],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[70,72,73,77,286,82,287,292,12,293,294,295,296,305,297,13,298,306,307,308,309,291,299,300,14,301,15,302,310,288,16,218,220,221,224,17,289,227,290,235,270,271,272],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[311,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[312,26,27,28,313,31,314,315,32,316],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[312,317,318,319,320,321,322,323,324,325,114,326,327,0,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,315,346,347],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[34,88,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:36","failures":[43,44,45,46,47,48,348,49,50,51,349,52,53,54,303,304,55,350,56,57,58,351,59,312,60,61,352,353,62,63,354,355,356,357,358,64,359,360,361,362,363,364,365,366,367,368,369,370,371,65,66,67,372,68,373,374,375,376,377,69,70,71,72,73,74,75,76,77,286,78,79,80,81,378,82,287,83,84,85,33,34,86,35,36,37,38,39,87,88,89,90,40,91,92,93,23,379,94,95,96,24,97,98,380,99,100,101,102,103,104,41,105,106,107,108,109,42,110,111,112,113,323,324,325,114,326,327,0,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,381,382,383,1,384,385,386,10,387,388,314,389,6,315,390,2,391,392,393,394,395,396,397,115,398,399,400,401,402,403,116,117,118,119,18,404,405,406,407,120,408,409,121,410,122,411,412,413,123,414,415,124,125,126,32,316,416,127,128,129,130,131,132,133,134,135,136,137,138,139,417,140,141,142,143,144,145,146,147,148,149,150,418,419,151,420,421,422,3,11,423,424,4,152,307,153,154,308,309,291,425,426,427,155,156,157,158,159,428,429,430,431,160,161,162,163,164,165,166,167,19,20,21,299,300,432,277,278,279,168,169,170,171,172,173,174,175,176,177,178,179,433,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,434,203,204,435,205,206,207,208,209,436,210,211,437,438,439,440,441,442,443,444,212,213,445,446,447,448,449,450,451,452,453,454,214,215,455,216,456,217,16,218,219,220,221,222,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,223,224,17,289,225,226,227,290,228,479,480,229,230,231,232,481,233,234,235,236,482,483,237,484,485,238,239,240,486,487,488,22,489,490,491,492,493,280,494,281,495,496,497,498,499,500,501,502,282,283,503,284,241,504,242,243,505,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,506,507,269,508,270,271,272,509,510,511,512,513,273,274,514,515,516,517,518,519,520,521,522,523,275,276,524,285,525],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[211,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[98,99,102,41,106,107,108,109,110,2,135,141,241,273],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[447,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":494,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testReturnException":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":517,"org.easymock.tests.MockClassControlTest.testToString":441,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":18,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":26,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":430,"org.easymock.samples.ExampleTest.answerVsDelegate":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":522,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":436,"org.easymock.tests.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":295,"org.easymock.tests.ReplayStateInvalidUsageTest.times":466,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests2.DependencyTest.testClassMocking":352,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":473,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":422,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":438,"org.easymock.tests2.DelegateToTest.testDelegate":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":508,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":513,"org.easymock.tests2.DependencyTest.testClassMockingSupport":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":460,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":475,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.samples.PartialClassMockTest.testGetArea":349,"org.easymock.tests.MockingTest.testInterfaceMocking":519,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":485,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":12,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":428,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":434,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":511,"org.easymock.tests2.CaptureTest.testCaptureAll":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":433,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":512,"org.easymock.samples.BasicClassMockTest.testPrintContent":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":452,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":504,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":423,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":453,"org.easymock.samples.ExampleTest.voteForRemoval":45,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":424,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":418,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.CaptureTest.testCaptureFirst":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":2,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":317,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":509,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.UsageCallCountTest.tooManyCalls":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests.MockingTest.testNiceClassMocking":523,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":408,"org.easymock.tests.MockingTest.testClassMocking":515,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":480,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":9,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.MockTypeTest.fromEasyMockClass":474,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":68,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":27,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":237,"org.easymock.tests.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":524,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests.MockClassControlTest.testHashCode":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":394,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":294,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":445,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastCall":80,"org.easymock.tests.DefaultClassInstantiatorTest.object":446,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":393,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":425,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":442,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":343,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":499,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":503,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":525,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests.UsageStrictMockTest.range":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":303,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":388,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":468,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":7,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":272,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":232,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":484,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":34,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":465,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":450,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":464,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests2.NameTest.nameForMocksControl":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":327,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":520,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":389,"org.easymock.tests.MockingTest.testNicePartialClassMocking":518,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":412,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":516,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":395,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":448,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.ConstraintsToStringTest.andToString":297,"org.easymock.tests2.MockBuilderTest.testCreateMockString":392,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":439,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":416,"org.easymock.tests.UsageVerifyTest.twoThrows":271,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":337,"org.easymock.samples.ExampleTest.voteAgainstRemoval":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":11,"org.easymock.tests.LimitationsTest.privateConstructor":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.UsageTest.defaultResetToNice":378,"org.easymock.samples.ExampleTest.voteAgainstRemovals":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":420,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":157,"org.easymock.tests.UsageCallCountTest.tooFewCalls":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":431,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.MockingTest.testStrictClassMocking":514,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":411,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":467,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":29,"org.easymock.tests2.NameTest.nameForNiceMock":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":28,"org.easymock.samples.ExampleTest.addDocument":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":339,"org.easymock.tests2.DelegateToTest.testStubDelegate":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":218,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.tests2.ConstraintsToStringTest.orToString":292,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":36,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":447,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":410,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":329,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":521,"org.easymock.tests2.NameTest.nameForMock":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":391,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":243,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":405,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":333,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":5,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.UsageTest.wrongArguments":289,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":330,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":451,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":459,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests2.ConstraintsToStringTest.notToString":293,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":54,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":510,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.LimitationsTest.abstractClass":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":201}}]
