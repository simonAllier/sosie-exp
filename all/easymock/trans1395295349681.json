[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[96,97,98,99,100,101,102,92,103,104,105,106,107,108,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[111,38,112,39],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,113,114,2,115,116,3,4,5,117,118,119,6,7,8,9,120,121,122,123,124,125,126,127,128,10,129,130,131,132,133,134,11,12,15,16,17,18,19,20,21,22,23,135,24,25,26,27,136,137,138,139,28,140,29,141,142,143,144,145,146,147,30,148,149,150,151,152,31,32,33,35,36,39,40,42,43,153,44,45,46,47,48,49,51,154,155,156,157,56],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[158,159,160,161,162,163,97,69,98,99,100,101,164,165,102,166,92,103,167,104,168,105,169,18,25,27,170,171,42,48,49,51,93,106,172,173,107,108,174,175,176,177,178,179,180,181,182,109,183],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[184],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[116,3,4,5,117],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[13,14,186,38,187,188,189,190,191,192,193,194,195,52,196],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[13,14,197,198,199,200,201,202,203,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[204],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,189,190,52,196,206,207,208,110,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[211,212,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[216,217,218,219,220,221,222,223,224,158,159,160,225,226,227,0,228,229,230,231,1,232,233,234,235,236,237,238,59,239,240,241,242,243,244,245,60,246,61,62,63,64,65,66,247,248,249,250,251,252,253,254,67,255,256,257,258,68,259,260,96,261,262,263,264,265,266,267,268,269,270,271,272,69,273,98,99,274,70,100,101,164,275,276,277,278,279,280,165,281,282,283,284,285,286,287,288,113,114,2,115,57,289,116,3,4,5,117,290,291,292,293,294,295,211,296,297,298,299,300,301,302,303,210,185,304,305,306,307,308,309,310,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,118,119,6,7,8,331,9,332,333,120,102,334,335,336,91,337,338,121,122,123,124,125,126,339,127,340,341,342,343,344,345,346,347,348,349,350,351,166,352,353,354,355,356,357,358,359,360,361,362,363,128,10,129,130,131,132,133,134,11,364,92,103,365,366,367,368,369,167,370,104,371,168,105,169,372,373,12,374,375,376,377,378,379,380,381,13,14,382,383,384,385,15,16,17,18,386,19,20,21,22,387,23,186,135,24,25,26,27,136,137,138,139,388,28,389,140,29,141,142,143,390,144,145,146,147,391,30,148,149,150,151,152,31,392,393,32,33,34,35,394,395,36,37,396,397,398,399,400,401,170,402,184,403,404,405,406,407,408,409,58,410,411,412,413,414,171,415,416,417,418,419,420,421,422,423,424,38,112,39,40,187,42,43,188,153,44,45,46,189,47,425,190,48,49,192,51,93,426,427,106,172,173,428,94,429,107,108,174,175,154,155,430,431,432,212,433,434,213,214,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,176,452,453,454,177,178,455,456,179,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,52,196,477,156,157,56,478,180,479,480,481,482,483,484,95,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,181,510,511,182,109,183,512],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[261,262,263,264,265,266,267,2,311,312,313,314,315,316,319,320,322,323,324,326,327,328,329,330,7,8,9,334,166,352,353,354,355,356,357,358,371,105,169,12,374,376,377,379,385,17,18,386,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,395,36,37,42,44,46,47,49,52,482,487,488,491,511,109,183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.RecordState:327","failures":[217,218,226,227],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[513,514],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":402,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":299,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":382,"org.easymock.tests2.DelegateToTest.testReturnException":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.tests.MockClassControlTest.testToString":129,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":460,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":408,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":334,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":249,"org.easymock.samples.ExampleTest.answerVsDelegate":375,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":404,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":134,"org.easymock.tests2.CaptureTest.testPrimitive":498,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests.UsageTest.moreThanOneArgument":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":267,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":470,"org.easymock.tests.ReplayStateInvalidUsageTest.times":348,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":432,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":438,"org.easymock.tests2.CaptureTest.testAnd":495,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":229,"org.easymock.tests2.UsageTest.strictResetToDefault":426,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":353,"org.easymock.tests2.DelegateToTest.testDelegate":494,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.LimitationsTest.mockFinalMethod":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":361,"org.easymock.tests2.CaptureTest.testCapture1_2446744":499,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":436,"org.easymock.tests.UsageThrowableTest.throwError":60,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":231,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":331,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":235,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":219,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":200,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":413,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":68,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":322,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":513,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":412,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":504,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":278,"org.easymock.tests.MockClassControlTest.testEquals":133,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":53,"org.easymock.tests2.CaptureTest.testCaptureAll":496,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":245,"org.easymock.tests2.UsageConstraintsTest.testMatches":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.samples.ExampleTest.voteForRemovals":379,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":364,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":65,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests2.UsageConstraintsTest.greaterThan":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":209,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":127,"org.easymock.samples.ExampleTest.voteForRemoval":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":480,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":452,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":508,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":453,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":318,"org.easymock.tests2.CaptureTest.testCapture2_2446744":507,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":482,"org.easymock.tests2.UsageTest.moreThanOneArgument":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.GenericTest.testBridgedEquals":117,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":201,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":198,"org.easymock.tests.UsageExpectAndReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":420,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":160,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":64,"org.easymock.tests.MockingTest.testNiceClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests.MockingTest.testClassMocking":119,"org.easymock.tests2.UsageConstraintsTest.testContains":411,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":41,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":220,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":403,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests.MockTypeTest.fromEasyMockClass":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":399,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndReturnTest.object":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":202,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":286,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":196,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.MockClassControlTest.testHashCode":132,"org.easymock.tests2.EasyMockSupportTest.testVerify":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":509,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":338,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":458,"org.easymock.tests.DefaultClassInstantiatorTest.object":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":216,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":225,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":320,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":185,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":195,"org.easymock.samples.SupportTest.voteForRemovals":385,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":212,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":418,"org.easymock.tests2.DelegateToTest.testWrongClass":492,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests.UsageStrictMockTest.range":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":138,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":248,"org.easymock.tests2.CaptureTest.testCaptureNone":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":236,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":161,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":148,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":224,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests2.StubTest.stub":484,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":227,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":125,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":444,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":467,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":55,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":512,"org.easymock.tests2.NameTest.nameForMocksControl":464,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":469,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":140,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":398,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CompareToTest.testNotComparable":205,"org.easymock.tests2.CaptureTest.testCaptureLast":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":362,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":419,"org.easymock.tests.MockingTest.testTwoMocks":6,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":423,"org.easymock.samples.ExampleTest.removeNonExistingDocument":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":123,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":481,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":141,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":477,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":114,"org.easymock.tests2.UsageConstraintsTest.testNotNull":422,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":66,"org.easymock.tests2.UsageTest.defaultResetToNice":429,"org.easymock.samples.ExampleTest.voteAgainstRemovals":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":466,"org.easymock.tests.UsageVarargTest.differentLength":165,"org.easymock.tests2.CallbackTest.callback":180,"org.easymock.tests2.UsageConstraintsTest.equals":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":186,"org.easymock.tests.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":336,"org.easymock.tests.UsageCallCountTest.tooFewCalls":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests.UsageThrowableTest.throwCheckedException":63,"org.easymock.tests.MockingTest.testStrictClassMocking":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":395,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":214,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":483,"org.easymock.tests2.NameTest.nameForNiceMock":463,"org.easymock.tests2.DependencyTest.testInterfaceMocking":487,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":208,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":371,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":425,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":298,"org.easymock.tests.UsageExpectAndReturnTest.floatType":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":416,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":401,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":500,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":122,"org.easymock.tests2.UsageConstraintsTest.testSame":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":312,"org.easymock.samples.SupportTest.addDocument":384,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":394,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":142,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":332,"org.easymock.tests2.NameTest.nameForMock":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":323,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":354,"org.easymock.tests2.MockedExceptionTest.testRealException":478,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":194,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":351,"org.easymock.tests2.NameTest.nameForStrictMock":462,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":397,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":155,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":124,"org.easymock.tests.ErrorMessageTest.testGetters":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests2.UsageConstraintsTest.testOr":406,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":143,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":324,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":126,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":158,"org.easymock.tests2.UsageConstraintsTest.cmpTo":410,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":506,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":223,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":325,"org.easymock.tests2.UsageConstraintsTest.constraints":170,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.samples.ExampleTest.addAndChangeDocument":381,"org.easymock.tests.UsageStrictMockTest.testVerify":373,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":383,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":501,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":265,"org.easymock.tests.LimitationsTest.abstractClass":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":317,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":178,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
