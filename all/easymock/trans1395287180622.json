[{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[24,25,26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,0,70,71,72,73,74,75,26,76,77,78,79,80,81,82,83,84,85,1,2,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,6,7,8,9,10,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,164,165,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,11,200,201,12,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,15,16,17,18,19,20,21,22,23,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[322,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[124,136,142,143,324,253,260,263,269,270,273,274,303,304,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[325,326,327,328,27,28,29,30,31,32,33,34,35,36,37,38,329,39,40,41,42,330,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,331,0,70,71,72,24,73,74,75,26,76,332,77,78,79,80,81,82,83,84,333,334,85,1,2,86,335,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,336,337,338,339,340,117,118,119,6,7,8,9,10,120,341,121,342,122,123,124,125,126,343,344,345,127,346,347,128,348,349,350,351,352,353,354,355,356,129,357,358,359,360,361,130,362,363,364,365,366,367,368,131,132,369,370,371,372,373,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,374,375,376,377,378,152,153,379,380,381,382,383,154,384,155,156,157,158,159,160,161,162,163,385,386,164,164,165,165,387,166,388,389,167,168,169,170,171,390,172,391,173,174,175,176,177,178,179,180,181,182,183,184,185,186,392,187,393,188,189,190,191,394,395,396,397,398,399,400,401,402,403,404,192,405,193,406,194,407,195,196,197,198,199,11,200,201,12,202,203,408,204,409,410,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,411,412,227,228,229,413,414,415,416,417,230,418,419,420,421,422,423,231,232,233,234,235,236,237,238,239,240,241,242,243,424,425,426,427,428,429,430,431,432,433,13,434,435,436,244,437,245,246,247,438,439,440,441,442,443,444,14,445,446,447,448,449,450,451,452,248,453,454,455,456,457,249,458,250,251,252,253,254,255,256,257,258,259,459,260,261,262,263,264,265,460,266,267,268,269,270,271,272,273,274,275,15,16,17,18,19,20,21,22,23,276,277,278,279,461,322,462,463,464,323,465,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,466,302,303,304,305,306,307,308,309,310,467,468,311,312,313,469,314,470,471,472,315,316,317,318,319,320,321],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[253,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[474],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[407],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[475,24,476,26,477,478,479,480,481,482,483,120,341],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[124,263,484,303,304],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[325,326,327,328,122,124,125,135,136,142,143,253,260,261,263,264,268,270,273,274,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[475,478,479,480,482,486,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[487,103,104,105,106,107,108,109,110,111,112,488,113,114,115,116,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[489,490,491,333,164,165],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[80,82,122,124,125,260,261,263,264,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.Range:52","failures":[325,326,327,328,44,45,50,51,64,65,102,122,124,125,133,135,136,139,140,142,143,145,146,169,176,191,394,192,193,418,420,423,240,241,253,260,261,263,264,267,268,270,271,272,273,274,275,302,303,304],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[124,136,142,143,324,253,260,263,269,270,273,274,303,304,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[405],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[99,6,124,133,145,150,201,203,446,448,456,457,458,263,267,275,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[495,68,0,71,72,74,496,75,26,83,1,2,497,4,166,412,231,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[433],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[335,94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ThrowableWrapper:23","sourceCode":"-4434322855124959723L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,76,332,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[324],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":387,"org.easymock.tests2.DelegateToTest.testReturnException":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":19,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests.MockClassControlTest.testToString":227,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":48,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":278,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":234,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":44,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":36,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests.UsageTest.moreThanOneArgument":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageVarargTest.varargIntAccepted":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":91,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests2.DelegateToTest.testDelegate":102,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":300,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":233,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":166,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":0,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageOverloadedMethodTest.overloading":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":291,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":53,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests.MockClassControlTest.testEquals":414,"org.easymock.tests2.EasyMockSupportClassTest.testAll":127,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":406,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":3,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":256,"org.easymock.tests.MockNameTest.defaultName":310,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.samples.BasicClassMockTest.testPrintContent":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":465,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":83,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":29,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":18,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":30,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":404,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":422,"org.easymock.tests.UsageExpectAndReturnTest.longType":283,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":254,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":423,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests.MockingTest.testNiceClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":417,"org.easymock.tests2.UsageConstraintsTest.testContains":52,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":9,"org.easymock.tests2.UsageConstraintsTest.testFind":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":191,"org.easymock.tests.MockTypeTest.fromEasyMockClass":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":479,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":399,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":410,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests.MockClassControlTest.testHashCode":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":340,"org.easymock.tests.UsageVarargTest.varargCharAccepted":398,"org.easymock.tests2.CaptureTest.testCaptureMultiple":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests.DefaultClassInstantiatorTest.object":461,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":204,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":1,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.tests.CapturesMatcherTest.test":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":228,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":21,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":475,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":332,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":25,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":249,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":147,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":393,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":60,"org.easymock.tests2.DelegateToTest.testWrongClass":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.samples.ConstructorCalledMockTest.testTax":164,"org.easymock.tests.UsageStrictMockTest.range":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":338,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":277,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests.UsageUnorderedTest.message":253,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":403,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":420,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":385,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":205,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":202,"org.easymock.tests2.UsageConstraintsTest.any":50,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":299,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":4,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":328,"org.easymock.tests2.MockedExceptionTest.testMockedException":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":477,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":61,"org.easymock.tests.MockingTest.testTwoMocks":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":65,"org.easymock.samples.ExampleTest.removeNonExistingDocument":391,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":411,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":149,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":129,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":2,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testNotNull":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":7,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":295,"org.easymock.tests.UsageVarargTest.differentLength":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.UsageConstraintsTest.equals":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":333,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":418,"org.easymock.tests2.ConstraintsToStringTest.nullToString":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":279,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":151,"org.easymock.tests.ObjectMethodsTest.testHashCode":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":327,"org.easymock.tests2.DependencyTest.testInterfaceMocking":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":480,"org.easymock.samples.ExampleTest.addDocument":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":402,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":165,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":336,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":108,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests2.UsageConstraintsTest.testSame":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.samples.SupportTest.addDocument":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests2.NameTest.nameForMock":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.MockedExceptionTest.testRealException":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":339,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests2.NameTest.nameForStrictMock":326,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":337,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":473,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":46,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":78,"org.easymock.tests.UsageTest.wrongArguments":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":401,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":421,"org.easymock.tests2.UsageConstraintsTest.cmpTo":51,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":419,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":294,"org.easymock.tests2.CaptureTest.testCapture":488,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests.UsageStrictMockTest.testVerify":460,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":388,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":459,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":484,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":33}}]
