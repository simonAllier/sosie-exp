[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[4,76,153,155,156],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[2,208,208,209,209,210,211,212,29,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,82,83,84,239,240,95,96,97,99,100,101,241,102,242,243,244,103,104,105,245,246,106,247,248,249,122,250,251,123,252,253,254,255,256,257,258,259,260,124,261,262,263,264,265,125,266,267,268,269,127,131,270,146,147,148,149,151,152,271,272,157,273,274,275,158,276,159,277,160,278,279,161,280,281,282,283,204,284,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[83,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[131,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[286,131,132,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[106,108,114,180,181,183,185,186,287,197,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[227],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[106,108,114,180,181,183,185,186,287,197,202],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[288,289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[291,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[294,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[55,298,299,300,301,302,74,303,268,269,127,304],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[214],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[286,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[59,60,67],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[286,131,132,270],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,306,7,307,308,309,8,310,208,208,209,209,210,211,311,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,213,312,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,216,218,313,314,315,316,317,318,319,320,321,226,227,228,229,230,231,232,233,56,322,57,58,59,60,61,62,63,64,298,323,65,66,67,68,69,70,324,325,71,72,326,327,73,299,300,301,302,74,303,75,328,76,77,78,329,330,331,332,79,333,80,81,334,335,82,83,84,336,337,338,339,340,341,342,343,344,85,86,87,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,88,89,90,91,92,365,366,367,368,369,370,371,372,373,374,375,93,94,95,376,96,97,98,99,100,101,241,102,244,103,104,105,106,107,108,109,110,377,378,111,112,113,114,379,115,116,117,118,119,120,121,122,123,124,125,126,268,269,127,304,128,380,129,130,131,132,270,133,134,135,136,137,138,139,140,141,142,143,144,381,145,146,147,148,149,150,151,152,382,383,384,385,153,154,155,156,271,157,158,276,159,160,279,161,281,162,163,164,386,165,387,166,167,168,388,389,169,170,390,391,171,392,172,173,393,394,395,396,397,174,175,289,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,398,399,204],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[194],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,308,8,208,208,209,209,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,400,294,401,295,29,214,215,402,312,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,296,297,403,404,405,305,216,313,314,315,317,318,319,320,321,406,407,408,228,229,230,232,233,56,322,57,58,59,60,61,62,63,64,298,323,65,66,67,68,234,409,410,235,411,412,69,70,324,325,71,72,326,327,73,299,300,301,302,74,303,75,76,77,78,330,332,79,333,80,81,334,82,83,84,290,288,338,85,86,87,345,346,347,348,349,413,350,351,352,414,415,88,89,90,91,92,416,417,418,375,93,94,95,419,376,96,97,98,99,100,101,102,244,103,104,105,246,106,107,108,109,110,377,378,111,112,113,114,379,115,116,117,118,119,120,121,122,123,124,125,126,268,269,127,304,128,420,421,380,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,422,146,147,148,149,150,151,152,423,153,154,155,424,156,271,157,273,158,159,160,161,281,162,163,164,386,165,387,166,167,168,388,389,169,170,390,171,392,172,173,393,394,395,396,174,175,289,176,177,425,178,179,180,181,182,183,184,185,186,187,287,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,398,399,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[286,131,132,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[2,82,83,84,89,95,96,98,99,101,120,122,123,124,125,146,147,148,149,150,151,152,154,157,158,159,160,161,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[183,287,197,202],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[197,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[286,131,132,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,306,7,307,308,309,8,310,208,209,210,211,311,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,400,294,401,426,295,427,212,29,213,214,215,402,312,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,296,297,403,404,405,305,216,218,219,220,221,222,223,225,313,314,315,316,317,318,319,320,321,406,407,408,226,227,228,229,230,231,232,233,56,322,57,58,59,60,61,62,63,64,298,323,65,66,67,68,234,428,429,409,410,235,411,412,69,70,324,325,71,72,326,327,73,299,300,301,302,74,303,75,328,76,77,430,78,329,330,331,332,79,333,80,81,334,335,236,237,238,82,83,431,84,432,433,239,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,290,450,451,452,453,454,288,455,336,337,338,339,340,341,342,343,344,85,86,87,345,346,347,348,349,413,350,351,352,414,415,353,354,355,356,357,358,359,360,361,362,363,364,88,89,90,91,92,416,417,418,365,366,367,456,368,369,370,371,372,373,374,375,93,94,240,293,95,457,419,376,458,96,97,98,99,100,101,241,459,102,242,243,244,103,104,105,245,246,106,107,108,109,110,377,378,111,112,113,114,379,115,116,117,118,119,120,121,247,248,249,122,250,251,123,252,253,254,255,256,257,258,259,260,124,261,262,263,264,265,125,266,267,126,268,269,127,304,128,420,421,380,129,130,131,132,270,133,134,135,136,137,138,139,140,141,142,143,144,381,460,461,462,463,464,145,422,465,466,467,468,469,146,147,148,149,470,150,151,152,471,472,382,383,384,385,423,153,154,155,424,156,271,157,273,275,158,276,159,160,278,279,161,281,282,283,473,474,162,163,164,386,165,387,166,167,168,388,389,169,170,390,391,171,392,172,173,393,394,395,396,397,475,476,174,175,289,176,477,478,479,480,481,177,425,482,483,484,485,486,178,179,180,181,487,182,183,184,185,186,187,287,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,398,488,399,204,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[461,462,464,465,466,469,478,479,481,482,483,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[312,54,55,63,64,298,323,65,74,332,79,88,89,90,91,92,375,93,94,102,106,107,108,109,110,377,378,111,112,113,114,379,115,116,171,178,179,180,181,182,183,184,185,186,187,287,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,489,398,399],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[444,423,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,306,7,307,308,309,8,310,208,209,210,211,311,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,400,294,401,426,295,427,212,29,213,214,215,402,312,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,296,297,403,404,405,305,216,218,219,220,221,222,223,225,313,314,315,316,317,318,319,320,321,406,407,408,226,227,228,229,230,231,232,233,56,322,57,58,59,60,61,62,63,64,298,323,65,66,67,68,234,409,410,235,411,412,69,70,324,325,71,72,326,327,73,299,300,301,302,74,303,75,328,76,77,430,78,329,330,331,332,79,333,80,81,334,335,236,237,238,82,83,431,84,432,433,239,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,290,450,451,452,453,454,288,455,336,337,338,339,340,341,342,343,344,85,86,87,345,346,347,348,349,413,350,351,352,414,415,353,354,355,356,357,358,359,360,361,362,363,364,88,89,90,91,92,416,417,418,365,366,367,456,368,369,370,371,372,373,374,375,93,94,240,293,95,457,419,376,458,96,97,98,99,100,101,241,459,102,242,243,244,103,104,105,245,246,106,107,108,109,110,377,378,111,112,113,114,379,115,116,117,118,119,120,121,247,248,249,122,250,251,123,252,253,254,255,256,257,258,259,260,124,261,262,263,264,265,125,266,267,126,268,269,127,304,128,420,421,380,129,130,131,132,270,133,134,135,136,137,138,139,140,141,142,143,144,381,460,461,462,463,464,145,422,465,466,467,468,469,146,147,148,149,150,151,152,472,382,383,384,385,423,153,154,155,424,156,271,157,273,275,158,276,159,160,278,279,161,281,282,283,473,474,162,163,164,386,165,387,166,167,168,388,389,169,170,390,391,171,392,172,173,393,394,395,396,397,475,476,174,175,289,176,477,478,479,480,481,177,425,482,483,484,485,486,178,179,180,181,487,182,183,184,185,186,187,287,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,398,488,399,204,284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[2,3,4,5,6,306,7,308,309,8,310,210,211,311,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,213,312,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,403,404,216,56,322,57,58,59,60,61,62,63,64,298,323,65,66,67,68,69,70,325,71,72,326,327,73,74,75,76,77,78,330,331,332,79,333,80,81,334,335,82,83,84,336,338,339,340,341,343,344,85,86,87,88,89,90,91,92,365,366,367,368,369,370,371,372,373,374,375,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,377,378,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,380,129,130,131,132,270,133,134,135,136,137,138,139,140,141,142,143,144,381,145,146,147,148,149,150,151,152,382,383,384,385,153,154,155,156,157,158,159,160,161,162,163,164,386,165,387,166,167,168,388,389,169,170,390,391,171,392,172,173,393,174,175,289,176,177,178,179,180,181,182,183,184,185,186,187,287,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,398,399,204],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":181,"org.easymock.tests2.UsageTest.argumentsOrdered":389,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":387,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":311,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.tests.MockClassControlTest.testToString":228,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests2.UsageTest.wrongArguments":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":235,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":233,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":28,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":92,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests.ReplayStateInvalidUsageTest.times":361,"org.easymock.tests2.DependencyTest.testClassMocking":475,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":397,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":106,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":52,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":24,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":291,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":321,"org.easymock.tests2.DependencyTest.testClassMockingSupport":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":419,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":395,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":355,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":294,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":18,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":85,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":191,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.MockClassControlTest.testEquals":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":396,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":319,"org.easymock.tests.MockNameTest.defaultName":402,"org.easymock.tests2.UsageConstraintsTest.testMatches":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":353,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":375,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":195,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":225,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":423,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":374,"org.easymock.tests.GenericTest.testBridgedEquals":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":343,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":27,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":344,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":147,"org.easymock.tests.MockingTest.testNiceClassMocking":239,"org.easymock.tests.MockingTest.testClassMocking":237,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":292,"org.easymock.tests2.UsageConstraintsTest.testContains":190,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":182,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":87,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":399,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.object":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":231,"org.easymock.tests2.EasyMockSupportTest.testVerify":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":217,"org.easymock.tests2.CaptureTest.testCaptureMultiple":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":229,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.StubTest.stubWithReturnValue":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":290,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":21,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":286,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":420,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":19,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":198,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":247,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":401,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.UsageUnorderedTest.message":312,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":373,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":210,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":392,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":393,"org.easymock.tests2.NameTest.nameForMocksControl":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":376,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":199,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":17,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":203,"org.easymock.samples.ExampleTest.removeNonExistingDocument":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":226,"org.easymock.tests.UsageExpectAndThrowTest.floatType":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":285,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":293,"org.easymock.tests2.UsageConstraintsTest.testNotNull":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests2.UsageConstraintsTest.equals":487,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":242,"org.easymock.tests.UsageTest.openCallCountByLastCall":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockingTest.testStrictClassMocking":236,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":206,"org.easymock.tests2.NameTest.nameForNiceMock":384,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests2.DependencyTest.testInterfaceMocking":174,"org.easymock.samples.ExampleTest.addDocument":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests.UsageVarargTest.varargLongAccepted":372,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":196,"org.easymock.tests.UsageThrowableTest.noUpperLimit":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":179,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests2.UsageConstraintsTest.testSame":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":470,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":23,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":53,"org.easymock.tests2.MockedExceptionTest.testRealException":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.NameTest.nameForStrictMock":383,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":283,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.UsageConstraintsTest.testOr":185,"org.easymock.tests.UsageRangeTest.combination":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":97,"org.easymock.tests.UsageTest.wrongArguments":325,"org.easymock.tests2.MockBuilderTest.testWithConstructor":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":43,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageVarargTest.varargShortAccepted":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":189,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":421,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":273,"org.easymock.tests.UsageTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":44,"org.easymock.tests2.UsageConstraintsTest.constraints":180,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":308,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":310,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":318,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":36,"org.easymock.tests.LimitationsTest.abstractClass":240,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":366}}]
