[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[4,5,6,28,29,30,9,10,31,32],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,33,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,34,100,35,36,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,37,38,131,132,133,134,135,42,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,43,44,45,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,46,330,47,48,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,49,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,30,9,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,10,386,387,31,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,26,27,438,439,440,441,442,443,444,445,446,12,13,14,15,16,17,18,19,20,21,22,23,24,25,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,32,506,507,508],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[151,226,229,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[495],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[509,510,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[512,32,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[12,14,22,479,480,483,485,486,488,498,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[503],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[87,354,421,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \").append(org.easymock.internal.Invocation.toString())","type":"CtInvocationImpl"},"failures":[33,99,35,36,136,137,140,141,187,44,45,47,48,352,358,359,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.ConstructorArgs:50","failures":[303,304,343,348,349,30,9,378,381,10,31,513,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,514,515,516,32],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[12,14,15,16,17,18,19,21,517,22,23,25],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[91,150,167,168,169,220,221,222,223,224,225,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[70,71,72,73,74,93,94,95,96,170,208,210,211,212,213,214,216,219,231,236,242,243,244,245,246,247,248,249,282,283,284,285,286,287,289,303,303,304,304,305,308,309,519,334,338,341,342,343,344,347,348,362,363,364,30,9,377,520,379,380,382,383,384,385,386,31,388,389,521,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,421,422,423,425,426,427,428,429,430,431,432,433,32,507],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[33,111,117,123,127,129,42,155,252,253,259,265,269,271,49,366,367,368,446,13,19,20,25,477,493,496,505,508],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[99,522,39,136,51,523],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[58,167],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[512,32,506,507],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[524,477,496,502],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,33,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,34,100,35,36,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,37,38,131,132,133,134,135,42,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,43,44,45,277,278,279,280,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,46,330,47,48,331,332,333,334,338,339,340,341,342,343,344,345,346,347,348,349,350,351,49,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,30,9,372,373,374,375,376,377,379,380,382,383,384,385,386,387,31,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,26,27,438,439,440,441,442,443,444,445,446,12,13,14,15,16,17,18,19,20,21,22,23,24,25,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,32,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[443],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[421,495],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[303,304,343,348,349,30,9,378,381,10,31,513,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,514,515,32],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[525,12,14,15,16,17,18,19,21,517,22,23,25],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":480,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":153,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":354,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testReturnException":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":244,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageTest.wrongArguments":352,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":279,"org.easymock.samples.ExampleTest.answerVsDelegate":296,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":236,"org.easymock.tests2.UsageConstraintsTest.testNull":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":456,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":249,"org.easymock.tests2.CaptureTest.testPrimitive":15,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":272,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.UsageTest.argumentsOrdered":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":226,"org.easymock.tests.UsageVarargTest.varargIntAccepted":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":158,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":511,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":466,"org.easymock.tests.ReplayStateInvalidUsageTest.times":89,"org.easymock.tests2.DependencyTest.testClassMocking":324,"org.easymock.tests2.AnswerTest.answer":434,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":476,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":233,"org.easymock.tests2.UsageTest.strictResetToDefault":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":275,"org.easymock.tests2.DelegateToTest.testDelegate":446,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":268,"org.easymock.tests.LimitationsTest.mockFinalMethod":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":180,"org.easymock.tests2.DependencyTest.testClassMockingSupport":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":37,"org.easymock.tests2.CaptureTest.testCapture1_2446744":16,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":474,"org.easymock.tests.UsageThrowableTest.throwError":103,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":83,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":235,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":75,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":416,"org.easymock.samples.PartialClassMockTest.testGetArea":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":84,"org.easymock.tests.MockingTest.testInterfaceMocking":215,"org.easymock.tests2.CompareToTest.testLessOrEqual":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":254,"org.easymock.tests2.UsageTest.niceToStrict":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":383,"org.easymock.tests2.MockBuilderTest.testCreateMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":469,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":262,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":452,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":1,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":493,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":492,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":21,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":395,"org.easymock.tests.MockClassControlTest.testEquals":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":178,"org.easymock.tests2.CaptureTest.testCaptureAll":13,"org.easymock.tests.MockNameTest.defaultName":241,"org.easymock.tests2.UsageConstraintsTest.testMatches":494,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":300,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":179,"org.easymock.samples.BasicClassMockTest.testPrintContent":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":109,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":29,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":274,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":431,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":289,"org.easymock.samples.ExampleTest.voteForRemoval":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":423,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":449,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":441,"org.easymock.tests2.CaptureTest.testCaptureFirst":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":450,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":161,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":74,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":68,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":176,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":521,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":271,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":501,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":69,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":509,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":471,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":108,"org.easymock.tests.MockingTest.testNiceClassMocking":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":342,"org.easymock.tests.MockingTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":520,"org.easymock.tests2.UsageConstraintsTest.testContains":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":364,"org.easymock.tests2.UsageConstraintsTest.testFind":482,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":440,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":455,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":516,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.MockClassControlTest.testHashCode":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":313,"org.easymock.tests2.EasyMockSupportTest.testVerify":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":510,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":473,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":460,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":281,"org.easymock.tests2.CaptureTest.testCaptureMultiple":525,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":166,"org.easymock.tests2.UsageTest.openCallCountByLastCall":355,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":458,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":58,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":204,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":429,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":259,"org.easymock.tests.CapturesMatcherTest.test":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":414,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":53,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":245,"org.easymock.tests2.UsageTest.resumeIfFailure":360,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":523,"org.easymock.samples.SupportTest.voteForRemovals":311,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":265,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":512,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":165,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":435,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":134,"org.easymock.tests.UsageExpectAndThrowTest.object":263,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":499,"org.easymock.tests2.DelegateToTest.testWrongClass":444,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":240,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":303,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":339,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":522,"org.easymock.tests2.CaptureTest.testCaptureNone":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":202,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":45,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":66,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":489,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":88,"org.easymock.tests2.StubTest.stub":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":87,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":317,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests2.NameTest.nameForMocksControl":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":465,"org.easymock.tests2.MockedExceptionTest.testMockedException":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":439,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":257,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":386,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":422,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":461,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":348,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":500,"org.easymock.tests.MockingTest.testTwoMocks":212,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":261,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":468,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":85,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":314,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":284,"org.easymock.tests2.ConstraintsToStringTest.andToString":54,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":368,"org.easymock.tests2.MockBuilderTest.testCreateMockString":391,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":255,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":437,"org.easymock.tests.UsageVerifyTest.twoThrows":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":371,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":408,"org.easymock.samples.ExampleTest.voteAgainstRemoval":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":430,"org.easymock.tests.LimitationsTest.privateConstructor":94,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":515,"org.easymock.tests2.UsageConstraintsTest.testNotNull":503,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":110,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":362,"org.easymock.tests2.UsageTest.defaultResetToNice":357,"org.easymock.samples.ExampleTest.voteAgainstRemovals":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":462,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.CallbackTest.callback":508,"org.easymock.tests2.UsageConstraintsTest.equals":481,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":280,"org.easymock.tests.UsageThrowableTest.throwCheckedException":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":39,"org.easymock.tests.MockingTest.testStrictClassMocking":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":27,"org.easymock.tests.ObjectMethodsTest.testHashCode":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":370,"org.easymock.tests2.NameTest.nameForNiceMock":375,"org.easymock.tests2.DependencyTest.testInterfaceMocking":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.stubAnswer":26,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":387,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.tests2.ConstraintsToStringTest.orToString":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":304,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":497,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":478,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":334,"org.easymock.tests2.SerializationTest.test":506,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":17,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":518,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":283,"org.easymock.tests2.UsageConstraintsTest.testSame":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":345,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":217,"org.easymock.tests2.NameTest.nameForMock":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":390,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":267,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":276,"org.easymock.tests2.MockedExceptionTest.testRealException":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":340,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":156,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":92,"org.easymock.tests2.NameTest.nameForStrictMock":374,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":338,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":505,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":316,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.UsageConstraintsTest.testOr":485,"org.easymock.tests.UsageRangeTest.combination":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":418,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":490,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":146,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":356,"org.easymock.tests2.CaptureTest.testCaptureFromStub":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":82,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":65,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.CaptureTest.testCapture":517,"org.easymock.tests2.UsageConstraintsTest.constraints":479,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.samples.ExampleTest.addAndChangeDocument":302,"org.easymock.tests2.ConstraintsToStringTest.notToString":52,"org.easymock.tests.UsageStrictMockTest.testVerify":102,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":177,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":18,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":519,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.LimitationsTest.abstractClass":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":453,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":189}}]
