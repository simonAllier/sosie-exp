[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,9,60,61,62,14,17,27,33,63,64,36,65,66,67,37,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[5,117,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[118,2,41,119,3,120,42,121,43,4,44,122,5,123,45,7,124,8,125,126,53,54,127,128,9,10,129,17,27,33,39,40,68,130,131,132,133],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,116,148,149,150,151,152,153,154,155,156,157,158,159,160,52,56,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,60,176,177,74,75,76,77,78,178,179,180,85,181,182,183,184,86,87,185,186,90,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[188,189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[192,193,194,195,196,197,198,199,200,201,202,203,134,135,136,137,138,139,140,141,142,143,145,146,147,116,148,149,150,151,152,153,154,155,157,158,159,160,41,42,43,44,45,8,204,46,47,48,49,50,51,52,53,54,55,205,206,207,56,208,57,161,162,164,165,168,169,170,171,173,174,58,59,209,210,9,60,61,62,14,17,27,33,211,212,213,214,215,216,217,218,219,220,221,222,63,64,36,65,66,67,37,68,69,70,71,72,73,223,224,225,226,227,228,229,74,75,76,77,78,230,231,232,233,131,81,82,83,84,179,85,181,184,86,87,88,90,91,92,234,235,236,237,238,93,94,95,96,97,98,239,240,99,100,241,101,102,103,242,104,105,106,107,108,243,244,113,114,115,245],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[192,193,194,195,196,197,198,199,200,201,202,203,134,135,136,137,138,139,140,141,142,143,145,146,147,116,148,149,150,151,152,153,154,155,157,158,159,160,41,42,43,44,45,8,204,46,47,48,49,50,51,52,53,54,55,205,206,207,56,208,57,161,162,164,165,168,169,170,171,173,174,58,59,209,210,9,60,61,62,14,17,27,33,211,212,213,214,215,216,217,218,219,220,246,221,222,63,64,36,65,66,67,37,68,69,70,71,72,73,223,224,225,226,227,228,229,74,75,76,77,78,230,231,232,233,131,81,82,83,84,179,85,181,184,86,87,88,90,91,92,234,235,236,237,238,93,94,95,96,97,98,239,240,99,100,241,101,102,103,242,104,105,106,107,108,243,244,113,114,115,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[247,248,249,250,251,192,193,194,195,196,197,198,199,200,201,202,203,252,134,135,136,137,253,138,139,140,141,142,143,144,145,146,147,116,148,149,150,151,152,153,154,155,156,157,158,159,160,118,2,41,119,3,120,42,121,43,4,44,122,5,123,45,7,124,8,204,254,46,47,48,49,50,51,125,255,52,126,256,257,53,54,55,258,127,259,260,261,262,205,206,207,56,208,188,263,57,264,189,265,161,162,163,164,165,166,167,168,169,170,171,172,173,174,266,267,268,269,270,271,272,175,273,274,58,59,275,209,128,276,210,277,9,10,129,278,279,60,280,61,62,281,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,282,283,284,285,286,211,287,288,289,290,291,292,212,213,214,293,215,191,216,217,218,294,295,219,220,246,296,297,298,221,299,300,301,302,303,304,222,305,306,307,308,309,310,176,311,177,312,63,64,36,65,313,66,67,37,38,314,315,39,40,316,68,317,318,69,70,319,71,72,320,73,321,322,223,323,224,225,226,227,228,229,74,75,76,77,78,324,79,325,80,230,231,232,326,327,328,329,330,331,332,333,334,335,336,178,130,233,337,131,338,339,81,82,83,84,179,180,85,181,182,183,184,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,132,383,384,385,386,133,387,388,86,87,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,88,408,409,89,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,185,438,439,440,441,442,443,444,186,90,445,91,92,446,447,448,234,235,449,450,236,237,451,452,238,453,454,455,456,457,458,459,187,460,461,462,463,464,465,466,467,468,469,470,471,472,473,93,94,95,96,97,98,239,240,99,100,241,101,102,103,242,104,105,106,107,108,474,475,476,243,477,244,109,110,111,112,478,479,480,481,482,113,114,483,115,484,485,486,487,488,489,490,491,245,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[4,5,493,117,8,494,495,496,497,498,499,500,501,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[263,264,189,265,319,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[8,204,254,502],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[470,503,504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[505,506,507,508,186,449],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[136,143,148,160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[248,249,250,251,192,193,194,195,196,197,198,199,200,201,202,203,252,134,135,136,137,138,139,140,141,142,143,145,146,147,116,148,149,150,151,152,153,154,155,157,158,159,160,118,42,121,43,44,8,204,254,46,48,49,50,51,52,257,54,259,260,261,262,205,206,208,263,57,265,161,162,163,164,166,167,168,169,170,171,174,58,59,275,209,128,276,210,277,9,279,60,62,281,14,17,27,33,211,213,214,215,191,218,219,246,298,221,299,222,176,177,312,63,64,36,65,66,67,37,314,315,39,40,316,68,317,318,69,70,319,71,72,320,73,322,323,224,74,75,76,77,78,231,232,326,327,328,330,331,333,334,335,336,178,233,337,81,82,83,84,179,85,181,184,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,374,375,376,377,378,379,86,87,88,438,439,440,441,442,444,90,92,446,447,448,235,456,457,458,459,187,460,461,462,463,464,93,94,95,96,97,98,239,240,99,100,241,101,102,103,242,104,105,106,107,108,476,243,477,244,109,110,111,112,478,113,114,115,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[118,41,119,42,121,43,44,123,45,124,8,125,53,54,127,17,27,33,68,131,132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[509,510,511,512,513,514,5,8,515,516,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[209,212,217,223,224,225,226,227,228,229,232,183,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,234,237,187,477,490],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[494,495,496,497,499,500,501,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:36","sourceCode":"return (java.lang.Object != null) && (java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))","type":"CtReturnImpl"},"failures":[142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[193,194,195,196,197,198,200,201,202,203,134,135,136,137,138,140,141,142,143,145,147,116,148,149,150,151,152,153,154,155,157,159,160,45,161,162,163,164,165,166,167,168,170,171,172,173,174,209,278,60,61,62,293,215,191,294,295,221,312,223,323,225,226,227,228,229,231,81,179,85,183,443,186,90,91,92,450,451,452,477],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[42,53,54,517,518,519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[520],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[61,62,91,92,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.UsageTest.argumentsOrdered":295,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests.MockClassControlTest.testToString":368,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":247,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":319,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":133,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.CaptureTest.testPrimitive":164,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.UsageTest.argumentsOrdered":452,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":389,"org.easymock.tests.UsageVarargTest.varargIntAccepted":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":118,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests2.DependencyTest.testClassMocking":273,"org.easymock.tests2.AnswerTest.answer":246,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":384,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":393,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":442,"org.easymock.tests2.DependencyTest.testClassMockingSupport":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":474,"org.easymock.tests2.CaptureTest.testCapture1_2446744":165,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.UsageThrowableTest.throwError":223,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":386,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":35,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":22,"org.easymock.tests2.UsageTest.niceToStrict":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":289,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":461,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":511,"org.easymock.tests.UsageOverloadedMethodTest.overloading":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":329,"org.easymock.tests2.EasyMockSupportClassTest.testAll":14,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests.MockNameTest.defaultName":479,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.samples.ExampleTest.voteForRemovals":73,"org.easymock.tests.UsageVarargTest.allKinds":178,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":460,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":473,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":448,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":56,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":336,"org.easymock.tests.GenericTest.testBridgedEquals":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":512,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":509,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":381,"org.easymock.tests.UsageExpectAndReturnTest.longType":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":438,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.UsageCallCountTest.tooManyCalls":382,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":227,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":481,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":210,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":232,"org.easymock.tests.MockTypeTest.fromEasyMockClass":385,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageExpectAndReturnTest.object":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":513,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":190,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":24,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":330,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":465,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":515,"org.easymock.tests.DefaultClassInstantiatorTest.object":466,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":519,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":369,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":254,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":296,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":325,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests.UsageStrictMockTest.range":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":271,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":510,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":451,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":169,"org.easymock.tests.UsageUnorderedTest.message":185,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":335,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":28,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":379,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":470,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":16,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":494,"org.easymock.tests2.CaptureTest.testCaptureLast":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":482,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":468,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":124,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":18,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":298,"org.easymock.tests.UsageVerifyTest.twoThrows":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":129,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":409,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":283,"org.easymock.tests.UsageVarargTest.differentLength":332,"org.easymock.tests2.CallbackTest.callback":312,"org.easymock.tests2.UsageConstraintsTest.equals":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":126,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":520,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":66,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":299,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":57,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":122,"org.easymock.tests.UsageVarargTest.varargLongAccepted":334,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests.UsageThrowableTest.noUpperLimit":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":266,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":166,"org.easymock.tests2.SerializationTest.test":204,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":94,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":313,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":19,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":84,"org.easymock.tests2.MockedExceptionTest.testRealException":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":516,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":61,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests2.CaptureTest.testCaptureRightOne":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":23,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageTest.wrongArguments":450,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":20,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":103,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":471,"org.easymock.tests.UsageVarargTest.varargShortAccepted":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CaptureTest.testCaptureFromStub":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":119,"org.easymock.tests.UsageTest.unexpectedCallWithArray":449,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":378,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":445,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageStrictMockTest.testVerify":447,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":439,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":327}}]
