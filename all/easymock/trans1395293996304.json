[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[41,42],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[43,44,45,27,46,47,28,48,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[61,62,63,64],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[65,66,67,68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,43,83,83,84,84,85,86,87,88,89,90,26,91,92,93,24,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,44,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,15,16,133,61,134,17,18,135,19,136,137,138,139,140,141,65,41,142,20,143,144,62,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,21,166,22,167,168,169,170,171,172,173,23,174,175,176,177,0,178,179,180,181,182,183,184,185,186,187,188,45,46,28,189,48,49,190,50,52,191,192,193,194,195,196,197,198,53,199,200,29,30,201,202,203,204,205,63,206,207,208,209,1,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,2,242,243,244,54,245,246,25,247,248,249,3,250,4,251,252,253,254,255,256,257,258,259,260,261,262,263,5,6,264,265,266,267,268,269,270,271,272,273,274,275,32,276,277,33,34,35,278,279,7,280,281,282,283,284,285,286,287,8,288,9,289,290,291,292,293,294,295,296,297,298,299,300,301,10,11,302,36,37,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,38,329,330,12,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,39,40,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,64,365,366,367,368,369,370,371,372,373,374,375],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[44,110,111,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[377,378,379],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[15,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[131,41,145,380],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[17,136,151,166,171,172,176,232,233,234,235,236,237,2,242,284,285,315,334,336,337,338,339,340],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[98,235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[404,57,405],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[44,110,111,376],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[71,126,128,129,130,384,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[81,82,43,83,83,84,84,86,100,101,102,103,106,44,111,182,183,184,185,187,188,45,46,28,189,48,49,190,50,52,193,194,196,197,198,53,199,200,29,30,201,207,208,238,239,240,241,243,244,54,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":286,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":135,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":56,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":11,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":281,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":340,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":272,"org.easymock.tests2.AnswerTest.answer":160,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":179,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":343,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":245,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":0,"org.easymock.tests.UsageThrowableTest.throwError":32,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":283,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":267,"org.easymock.tests2.CompareToTest.testLessOrEqual":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests2.UsageTest.niceToStrict":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":58,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":324,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":178,"org.easymock.tests2.CaptureTest.testCaptureAll":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":282,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":64,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":328,"org.easymock.samples.BasicClassMockTest.testPrintContent":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":114,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":115,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":10,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":51,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":62,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":133,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":120,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":60,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":323,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":124,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":404,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.CapturesMatcherTest.test":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":103,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":67,"org.easymock.samples.SupportTest.voteForRemovals":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":376,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":247,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":161,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":214,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests.UsageStrictMockTest.range":317,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":1,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":329,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":203,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":81,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":270,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":6,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.NameTest.nameForMocksControl":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":105,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":9,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":49,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":76,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":268,"org.easymock.tests.UsageStrictMockTest.differentMethods":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":205,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.floatType":8,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":163,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":102,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":146,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":24,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":180,"org.easymock.tests2.UsageConstraintsTest.equals":13,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":69,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":285,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":165,"org.easymock.tests.ObjectMethodsTest.testHashCode":366,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":381,"org.easymock.tests2.NameTest.nameForNiceMock":158,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.AnswerTest.stubAnswer":164,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":315,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":5,"org.easymock.tests.UsageExpectAndReturnTest.floatType":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":142,"org.easymock.tests.UsageThrowableTest.noUpperLimit":276,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.UsageConstraintsTest.testSame":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":249,"org.easymock.samples.SupportTest.addDocument":78,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":269,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.NameTest.nameForMock":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":344,"org.easymock.tests2.MockedExceptionTest.testRealException":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":275,"org.easymock.tests2.NameTest.nameForStrictMock":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":265,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests.UsageStrictMockTest.testVerify":320,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":85,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests2.CompareToTest.testGreateThan":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
