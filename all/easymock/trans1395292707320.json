[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[93,54,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,94,1,2,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,18,117,118,119,120,121,122,123,124,125,126,127,128,20,21,22,23,129,130,24,25,26,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,28,189,190,191,192,193,194,29,195,196,197,198,199,200,201,202,31,203,204,35,36,37,38,205,39,40,41,42,43,44,206,207,208,209,210,211,212,213,214,45,215,216,93,217,218,46,219,49,50,51,52,220,221,222,223,53,224,225,226,227,228,229,230,231,232,233,234,235,236,54,237,238,239,240,241,242,243,244,245,246,247,248,55,249,250,61,62,63,251,64,65,66,67,252,253,254,68,69,70,71,255,256,257,258,259,260,261,262,80,81,82,83,263,264,265,266,267,86,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,87,295,88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,299,22,23,24,25,28,36,37,39,42,65,68,69,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[300,301,302,0,94,1,2,95,96,3,4,5,303,304,305,6,306,307,7,8,9,10,11,308,309,310,311,97,98,312,12,313,314,13,14,15,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,315,16,316,317,17,18,19,117,118,318,119,120,121,122,123,124,125,126,127,128,20,21,22,23,129,130,24,25,26,131,132,133,319,134,135,27,136,137,138,139,140,320,321,322,323,324,141,325,142,143,326,144,145,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,296,344,345,346,347,348,349,297,350,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,351,352,353,186,187,354,188,355,356,357,28,189,190,191,192,193,358,359,360,361,362,363,364,365,366,367,368,298,369,194,370,371,372,373,374,375,376,29,195,196,197,198,199,200,201,202,377,30,31,378,379,203,32,33,34,380,381,382,204,35,36,37,383,384,385,386,387,38,205,39,40,41,42,43,44,206,388,207,208,209,210,211,212,389,213,390,391,392,393,394,395,396,397,214,45,215,216,93,217,398,399,218,400,401,46,402,219,47,403,48,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,49,50,430,431,432,51,52,433,220,434,221,222,223,53,224,435,225,226,227,228,229,230,436,231,232,233,234,235,236,54,237,238,239,240,241,437,242,243,244,245,246,247,248,55,438,56,57,439,440,249,250,58,441,59,442,443,60,61,444,62,63,251,64,65,66,67,252,253,254,68,69,70,71,445,446,447,448,449,450,451,255,452,453,256,257,258,259,260,261,262,454,455,456,457,458,72,73,459,460,461,462,463,464,74,465,75,466,76,77,467,78,79,468,469,470,471,80,81,82,83,472,473,474,475,476,84,85,477,478,479,480,481,263,482,483,264,265,266,267,86,268,269,270,271,272,273,274,484,485,275,486,487,276,277,278,488,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,87,295,88,89,90,91,92],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[21,23,24,25,28,35,36,37,39,40,42,43,64,65,68,69,80,81,82,83,88,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,299,22,23,24,25,28,36,37,39,42,65,68,69,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,299,22,23,24,25,28,36,37,39,42,65,68,69,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[300,301,302,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[140,39,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[0,1,2,95,96,4,5,97,98,100,101,115,18,117,118,119,120,121,122,123,20,21,23,24,25,26,131,132,133,134,135,27,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,28,189,190,191,192,193,29,195,196,197,204,35,36,37,38,205,39,40,41,42,43,44,388,207,208,209,210,211,212,213,392,393,394,395,396,397,214,45,215,216,93,217,218,402,219,47,407,410,420,426,429,49,50,430,432,51,52,220,221,222,223,53,224,225,226,227,228,229,230,231,232,233,234,235,236,54,237,238,239,240,241,242,243,244,245,246,247,248,56,249,58,59,61,63,251,64,65,66,67,68,69,70,71,255,256,257,258,72,464,74,465,75,466,76,77,78,79,468,469,470,80,81,82,83,84,263,266,86,268,269,272,273,274,275,486,276,277,279,280,281,282,283,285,286,287,288,289,290,293,87,295,88,89,90,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[491,246,247,248],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[436],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[441,482,492,493,494,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[6,9,141,144,145,327,353,186,187,188,203,204,388,390,390,391,391,396,397,214,45,216,93,217,398,218,46,402,219,47,407,410,420,426,429,49,50,430,51,52,246,248,55,497,56,57,249,250,58,59,60,61,498,62,263,499,500,501,502,266],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[280,282,283,284,285,286,289,503,290],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[300,301,302,0,94,1,2,95,96,3,4,5,303,304,305,308,309,310,311,97,98,12,313,314,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,315,16,316,317,17,18,19,117,118,119,120,121,122,123,124,125,126,127,128,20,21,22,23,129,130,24,25,26,131,132,133,134,135,27,136,137,138,139,140,142,143,28,189,190,191,192,193,39,40,218,220,221,222,223,53,224,225,226,227,228,229,230,436,231,232,233,234,235,236,54,237,238,239,240,241,437,242,243,244,245,272,275,486,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,88],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[458,459,461,462,476,477,479,480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[53,224,226,228,229,436,239,243,280,282,290],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":224,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":392,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":112,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests.MockClassControlTest.testToString":32,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":471,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":109,"org.easymock.samples.ExampleTest.answerVsDelegate":208,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":9,"org.easymock.tests2.UsageConstraintsTest.testNull":226,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":382,"org.easymock.tests2.CaptureTest.testPrimitive":283,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":165,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":383,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":307,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":387,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":161,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":128,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":30,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":8,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":428,"org.easymock.samples.PartialClassMockTest.testGetArea":388,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":147,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":14,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":249,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":155,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":107,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":234,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":319,"org.easymock.tests2.EasyMockSupportClassTest.testAll":407,"org.easymock.tests.MockClassControlTest.testEquals":381,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests.MockNameTest.defaultName":15,"org.easymock.tests2.UsageConstraintsTest.testMatches":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":367,"org.easymock.samples.ExampleTest.voteForRemovals":212,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.samples.BasicClassMockTest.testPrintContent":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":209,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":403,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":398,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":204,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":465,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":487,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":4,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":124,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":437,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":5,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":94,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":266,"org.easymock.tests2.UsageConstraintsTest.testFind":225,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":221,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.MockClassControlTest.testHashCode":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":417,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":294,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":358,"org.easymock.tests2.CaptureTest.testCaptureMultiple":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":469,"org.easymock.tests.DefaultClassInstantiatorTest.object":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":300,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":12,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":502,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":402,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":426,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":33,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":114,"org.easymock.tests2.StubTest.stubWithReturnValue":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":242,"org.easymock.tests2.SerializationTest.testAllMockedMethod":248,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.samples.SupportTest.voteForRemovals":395,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":158,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":297,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":452,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":390,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":467,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":108,"org.easymock.tests2.CaptureTest.testCaptureNone":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":396,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageConstraintsTest.any":231,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageExpectAndThrowTest.longType":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":89,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests2.SerializationTest.testClass":246,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":474,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests2.NameTest.nameForMocksControl":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":409,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":434,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":150,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":472,"org.easymock.tests2.CaptureTest.testCaptureLast":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":154,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":244,"org.easymock.samples.ExampleTest.removeNonExistingDocument":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":411,"org.easymock.tests.UsageExpectAndThrowTest.floatType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":420,"org.easymock.samples.ExampleTest.voteAgainstRemoval":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":473,"org.easymock.tests.UsageVarargTest.differentLength":27,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":400,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":110,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":432,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.NameTest.nameForNiceMock":82,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":442,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":445,"org.easymock.tests2.SerializationTest.test":247,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.tests2.UsageConstraintsTest.testSame":227,"org.easymock.samples.SupportTest.addDocument":394,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":431,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":412,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":355,"org.easymock.tests2.NameTest.nameForMock":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":444,"org.easymock.tests2.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":160,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":81,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":90,"org.easymock.tests2.UsageConstraintsTest.lessThan":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":416,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":490,"org.easymock.tests2.UsageConstraintsTest.testOr":228,"org.easymock.tests.UsageRangeTest.combination":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":413,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":3,"org.easymock.tests2.UsageConstraintsTest.cmpTo":232,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":368,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageStrictMockTest.testVerify":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":393,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77}}]
