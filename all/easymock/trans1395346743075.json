[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,2,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[75,215],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[231,332],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[210,333,224,229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,334,335,336,337,338,21,22,23,24,25,339,26,27,340,341,342,343,28,344,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,367,368,369,370,66,67,68,69,70,71,72,73,74,75,76,371,372,373,77,78,79,80,81,82,83,84,85,374,375,376,377,378,379,380,381,382,86,87,383,88,384,385,386,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,387,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,388,389,390,391,392,393,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,399,165,166,167,400,168,169,401,170,171,402,403,404,172,173,174,175,176,177,178,179,180,181,182,183,184,405,406,407,408,185,186,187,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,188,189,190,191,192,193,194,195,196,197,198,199,200,435,436,437,438,439,440,201,202,203,204,205,206,207,208,441,209,210,211,212,213,214,333,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,442,443,444,445,446,233,447,448,449,450,451,452,234,453,235,236,237,238,454,455,456,457,458,239,459,460,461,462,463,464,240,241,242,243,244,245,246,247,248,249,250,251,252,253,465,466,254,255,256,257,258,467,259,260,261,468,262,263,264,265,266,267,268,469,470,269,270,271,272,471,472,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,2,3,289,473,474,290,291,292,293,475,294,295,296,297,298,299,300,301,476,302,477,478,303,304,305,306,479,480,307,308,309,310,481,311,312,313,482,314,315,316,483,317,318,319,320,321,322,323,324,325,326,327,484,485,486,487,328,488,489,329,490,491,492,493,494,495,496,497,498,330,499,500,501,502,503,331,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[207,214,219,231],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[143,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[4,269,271,272,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,42,43,44,507,508,509,510,68,69,72,73,115,116,136,171,178,181,182,197,268,273,274,275,279,285,286,287,325,326],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[68,178,179,181,182,184,296,298,300,303,306,323,325,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[417,473,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[66,70,71,74,114,116,179,276,282,283,288,289,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[67,114,115,116,390,170,179,182,183,278,323,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[4,5,6,8,8,9,9,26,27,340,28,57,382,86,87,88,129,391,396,203,256,258,267,511,268,469,269,270,271,272,273,274,506,275,2,512,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,328,329,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[511,269,513,514,304,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[515,256,257,258],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[516],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[201,267,270,301,480,329],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,8,9,9,45,58,59,60,61,62,75,109,110,111,112,113,140,141,144,399,165,166,179,411,415,416,425,430,205,206,209,210,211,212,217,219,220,222,223,229,230,231,251,315,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[4,5,6,8,8,9,9,26,27,340,28,57,382,86,87,88,129,203,256,258,267,268,269,270,271,272,273,274,275,2,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.UsageTest.argumentsOrdered":286,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":281,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":130,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":483,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":145,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":255,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":396,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":298,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":197,"org.easymock.tests2.CaptureTest.testPrimitive":243,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":164,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":60,"org.easymock.tests.UsageTest.argumentsOrdered":73,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":113,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":350,"org.easymock.tests.ReplayStateInvalidUsageTest.times":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":516,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":289,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":240,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":338,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":160,"org.easymock.tests.LimitationsTest.mockFinalMethod":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":25,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":47,"org.easymock.tests.UsageThrowableTest.throwError":77,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":510,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":505,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":353,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":48,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":146,"org.easymock.tests2.UsageTest.niceToStrict":280,"org.easymock.tests2.ThreadingTest.testChangeDefault":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":269,"org.easymock.tests2.MockBuilderTest.testCreateMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":154,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageOverloadedMethodTest.overloading":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":63,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":218,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests.MockClassControlTest.testEquals":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":23,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":61,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":24,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":83,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":354,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":479,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":346,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":126,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":21,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":58,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":82,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests.MockingTest.testClassMocking":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":36,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":65,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":294,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":121,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":187,"org.easymock.tests.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":335,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":443,"org.easymock.tests.MockClassControlTest.testHashCode":133,"org.easymock.tests2.EasyMockSupportTest.testVerify":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":507,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":232,"org.easymock.tests.UsageVarargTest.varargCharAccepted":120,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":282,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":371,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":185,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":442,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.ReplayStateInvalidCallsTest.times":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":359,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":331,"org.easymock.tests2.UsageTest.resumeIfFailure":287,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":258,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":157,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":515,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":473,"org.easymock.tests.UsageExpectAndThrowTest.object":155,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":165,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":356,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":166,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":509,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":125,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":499,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":40,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests2.CaptureTest.testCapture_2617107":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":52,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":51,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":324,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests2.SerializationTest.testClass":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":340,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":364,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":489,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":149,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":272,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":313,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":363,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests.MockingTest.testTwoMocks":382,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":360,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":153,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":49,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":444,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":484,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":275,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":147,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":290,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":330,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":343,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":284,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.UsageVarargTest.differentLength":122,"org.easymock.tests2.CallbackTest.callback":316,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":477,"org.easymock.tests.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":81,"org.easymock.tests.MockingTest.testStrictClassMocking":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":292,"org.easymock.tests.ObjectMethodsTest.testHashCode":186,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":319,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":362,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":254,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.DelegateToTest.testStubDelegate":260,"org.easymock.tests2.AnswerTest.stubAnswer":291,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":471,"org.easymock.tests.UsageVarargTest.varargLongAccepted":124,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":78,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":435,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests2.SerializationTest.test":257,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.tests2.UsageConstraintsTest.testSame":211,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":347,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":491,"org.easymock.tests.GenericTest.testPackageScope":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":345,"org.easymock.tests2.NameTest.nameForMock":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.UsageStrictMockTest.differentMethods":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":478,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":159,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":56,"org.easymock.tests2.NameTest.nameForStrictMock":318,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":268,"org.easymock.tests2.UsageStrictMockTest.range":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":351,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":495,"org.easymock.tests2.CaptureTest.testCaptureRightOne":250,"org.easymock.tests2.UsageConstraintsTest.testOr":212,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":492,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.UsageVarargTest.varargShortAccepted":123,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":474,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":355,"org.easymock.tests2.CompareToTest.testLessThan":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":46,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":469,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":184,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":22,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":512,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.LimitationsTest.abstractClass":342,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":194}}]
