[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[9,10,10,11,11,12,13,3,4,5,6,7,14,15,1,16,17,18,2,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[113],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[130,131,132,133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[134,135,136,137,138,139],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[9,140,134,141,142,143,144,145,146,147,148,12,13,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,5,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,14,195,196,197,198,199,200,201,202,116,203,204,205,206,207,208,209,210,211,119,120,123,212,126,213,214,215,216,33,34,35,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,40,42,242,44,46,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,63,73,79,258,84,259,260,261,262,85,263,86,264,265,266,267,268,269,270,271,272,273,274,89,90,91,92,275,93,94,136,137,138,139,100,102,103,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,111],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[10,11,49,323,324,325,326],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[140,134,141,142,143,144,327,145,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,5,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,328,192,193,194,329,14,15,330,331,332,333,334,335,336,337,338,20,21,22,23,24,25,26,27,195,196,197,198,199,200,201,202,116,203,204,205,206,207,208,209,210,211,117,118,119,120,121,122,123,124,339,340,341,342,343,344,345,135,346,347,348,349,212,125,126,213,214,215,216,350,33,34,35,351,352,217,218,219,220,353,221,222,354,223,224,355,356,357,358,359,360,361,362,363,364,365,0,366,367,368,369,370,371,372,373,225,226,227,228,229,230,231,232,233,234,374,235,236,237,238,239,240,241,40,375,42,43,242,44,45,46,47,48,51,52,53,54,243,244,245,246,376,247,248,249,250,251,252,377,378,253,254,379,255,256,257,258,82,83,84,380,259,260,261,262,85,263,86,90,91,93,94,381,382,383,384,136,137,138,139,95,97,100,101,105,106,108,276,8,277,385,278,279,280,281,386,387,388,389,282,390,283,284,285,286,287,288,391,392,393,394,289,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[395],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[329,204,124,339,340,341,342,343,82,83,84,380,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[9,140,134,142,327,10,10,11,11,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,328,192,193,194,329,15,330,331,332,333,334,335,336,337,338,20,21,22,23,24,25,26,27,195,197,198,199,200,201,202,116,203,205,206,207,208,209,210,211,117,118,119,120,121,122,123,124,339,340,341,342,343,344,345,135,346,347,348,349,125,126,213,214,215,216,350,33,34,35,352,353,354,223,224,355,356,357,358,359,360,361,362,363,364,365,0,366,367,368,369,370,371,372,373,225,226,227,228,229,240,241,40,375,42,43,242,44,45,46,47,48,51,52,53,54,243,246,376,251,252,377,378,254,379,255,256,257,60,63,73,79,82,83,84,380,259,260,261,262,85,263,264,396,265,266,267,268,397,398,269,270,271,272,273,274,89,90,91,92,275,93,94,136,137,138,139,95,100,101,102,103,105,106,108,276,8,277,385,278,280,281,386,387,388,389,282,390,284,285,286,287,288,391,392,393,394,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,140,134,141,142,143,144,145,146,147,148,10,11,12,13,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,5,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,328,192,193,194,14,330,331,332,333,334,335,336,337,338,21,196,197,116,203,206,207,208,209,211,124,339,340,341,342,343,347,212,126,215,216,350,33,34,35,351,352,217,218,219,220,223,224,355,356,357,358,359,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,40,399,42,242,44,45,46,48,51,53,243,244,245,246,247,248,249,250,251,252,253,254,379,257,60,63,73,79,258,82,83,84,380,259,260,261,262,85,263,86,264,396,265,266,267,268,397,398,269,270,271,272,273,274,89,90,91,92,275,93,94,381,382,383,384,136,137,139,95,100,101,102,103,8,277,278,279,386,389,283,284,287,288,391,392,393,394,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[400,401,402,403,404,405,112],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[56,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[9,140,134,141,142,143,144,327,145,146,147,148,10,10,11,11,12,13,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,5,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,328,192,193,194,329,14,15,330,331,332,333,334,335,336,337,338,20,21,22,23,24,25,26,27,195,196,197,198,199,200,201,202,116,203,204,205,206,207,208,209,210,211,117,118,119,120,121,122,123,124,339,340,341,342,343,344,135,346,347,348,349,212,125,126,213,214,215,216,350,33,34,35,351,352,217,218,219,220,353,221,222,354,223,224,355,356,357,358,359,360,361,362,363,364,365,0,366,367,368,369,370,371,372,373,225,226,227,228,229,230,231,232,233,234,374,235,236,237,238,239,240,241,40,42,43,242,44,45,46,47,48,51,52,53,54,243,244,245,246,376,247,248,249,250,251,252,377,378,253,254,379,255,256,257,60,63,73,79,258,82,83,84,380,259,260,261,262,85,263,86,264,396,265,266,267,268,397,398,269,270,271,272,273,274,89,90,91,92,275,93,94,381,382,383,384,136,137,138,139,95,97,100,101,102,103,105,106,108,276,8,277,385,278,279,280,281,386,387,388,389,282,390,283,284,285,286,287,288,391,392,393,394,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,406,321,322,111],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[407],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[408,48,305],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[207,214,215,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:127","sourceCode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"mockType","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[4,6,7],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":297,"org.easymock.tests2.UsageTest.argumentsOrdered":388,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":279,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":149,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests.MockClassControlTest.testToString":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests2.UsageTest.wrongArguments":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":29,"org.easymock.tests2.UsageConstraintsTest.testNull":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests2.CaptureTest.testPrimitive":246,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.ReplayStateInvalidUsageTest.times":370,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":394,"org.easymock.tests2.CaptureTest.testAnd":243,"org.easymock.tests2.UsageTest.strictResetToDefault":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":392,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":81,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":68,"org.easymock.tests2.UsageTest.niceToStrict":278,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":127,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":354,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":251,"org.easymock.tests.MockClassControlTest.testEquals":26,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":393,"org.easymock.tests2.CaptureTest.testCaptureAll":244,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":363,"org.easymock.samples.ExampleTest.voteForRemovals":144,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":207,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":55,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":14,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":265,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":124,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":266,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":256,"org.easymock.tests2.UsageTest.moreThanOneArgument":277,"org.easymock.tests2.CaptureTest.testCapture2_2446744":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":174,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":222,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":96,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":322,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":401,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests.MockClassControlTest.testHashCode":25,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":391,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":406,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.UsageTest.openCallCountByLastCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":15,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":24,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":389,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.samples.SupportTest.voteForRemovals":147,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":128,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":314,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":214,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":114,"org.easymock.tests2.CaptureTest.testCaptureNone":250,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":131,"org.easymock.tests.UsageUnorderedTest.message":170,"org.easymock.tests.UsageVerifyTest.twoReturns":209,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":205,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":369,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.SerializationTest.testClass":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests2.NameTest.nameForMocksControl":384,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.CompareToTest.testNotComparable":407,"org.easymock.tests2.CompareToTest.testCompareEqual":408,"org.easymock.tests2.CaptureTest.testCaptureLast":249,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":315,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":319,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":133,"org.easymock.samples.ExampleTest.removeNonExistingDocument":327,"org.easymock.tests.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":64,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":208,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":318,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.UsageTest.defaultResetToNice":386,"org.easymock.samples.ExampleTest.voteAgainstRemovals":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.UsageVarargTest.differentLength":374,"org.easymock.tests2.CallbackTest.callback":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":49,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":204,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":132,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":115,"org.easymock.tests.MockingTest.testStrictClassMocking":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":403,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.NameTest.nameForNiceMock":383,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":402,"org.easymock.samples.ExampleTest.addDocument":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":75,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.floatType":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":295,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":247,"org.easymock.tests2.SerializationTest.test":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":172,"org.easymock.tests2.UsageConstraintsTest.testSame":300,"org.easymock.samples.SupportTest.addDocument":146,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":65,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests2.NameTest.nameForMock":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.UsageStrictMockTest.differentMethods":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":193,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":203,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":373,"org.easymock.tests2.NameTest.nameForStrictMock":382,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":110,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":17,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":286,"org.easymock.tests2.UsageConstraintsTest.lessThan":320,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":69,"org.easymock.tests2.CaptureTest.testCaptureRightOne":252,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":130,"org.easymock.tests2.UsageConstraintsTest.testOr":301,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":2,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":353,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":377,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":364,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.UsageConstraintsTest.constraints":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":145,"org.easymock.tests2.ConstraintsToStringTest.containsToString":113,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":148,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":397,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231}}]
