[{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[0,1,2,3],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,130,131,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,1,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[48,256,55,76,77,79,81,82,257,93,97],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[152,221,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[258,259,260,261,262,15,263,264,265,266,267,268,269,270,271,272,273,115,274,275,276,277,278,279,280,281],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[195,196,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[282,121,122,130,131,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[283,284,285],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[13,14,287,149,150,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[31,33,41,42,43,44,45,46,47,70,100,102,103,105,110,111,112,113,114,120,121,122,123,133,187,188,189,190,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[48,256,50,51,291,292,52,54,293,55,56,58],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[294,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[33,297,298,37,299,41,42,43,44,46,47,300,301,100,101,103,104,105,302,106,303,304,305,107,108,109,306,307,308,309,110,310,311,111,312,112,113,313,314,114,315,282,116,117,118,316,317,318,120,319,320,121,321,322,323,324,325,326,327,328,329,122,330,331,332,333,334,123,335,336,337,338,130,130,131,131,133,339,340,341,342,343,283,344,345,290,146,346,147,347,348,349,350,351,352,353,354,355,356,357,187,358,359,360,361,188,189,190,362,363,364,249],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[6,11,34,125,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[283,284,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[12,49,52,53,58,81,84,134,148,157,158,159,160,161,219,220,222,223,224,225,226,243,244,254],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[12,56,74,75,78,79,80,81,86,88,89,91,92,97,98,99,130,130,131,131,138,139,140,141,142,148,157,158,161,219,222,223,224,225,226,243,244],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[13,365,366,367,134,287,149,368,232,233,288,369,370,371,372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[35,36,373,97],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[48,256,55,76,77,79,81,82,257,93,97],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[6,9,11,34,35,36,125,245],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[60,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[290,146,346,147,347],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests2.UsageTest.argumentsOrdered":367,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":96,"org.easymock.tests2.SerializationTest.testAllMockedMethod":299,"org.easymock.tests2.DelegateToTest.testReturnException":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":155,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.samples.SupportTest.voteForRemovals":132,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":290,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":272,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":7,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":5,"org.easymock.tests2.DelegateToTest.testWrongClass":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests2.UsageTest.wrongArguments":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":130,"org.easymock.tests.UsageStrictMockTest.range":149,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":316,"org.easymock.tests.UsageTest.moreThanOneArgument":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":233,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":330,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":312,"org.easymock.tests2.UsageConstraintsTest.any":84,"org.easymock.tests2.StubTest.stub":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":20,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.DelegateToTest.testDelegate":73,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":113,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests.LimitationsTest.mockFinalMethod":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":366,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":342,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":279,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":142,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":286,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.PartialClassMockTest.testGetArea":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":108,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":325,"org.easymock.tests2.UsageTest.niceToStrict":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests.LimitationsTest.privateConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":296,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":265,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":284,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":87,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":346,"org.easymock.tests.MockingTest.testStrictClassMocking":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.testMatches":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":141,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.tests2.DependencyTest.testInterfaceMocking":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":70,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.AnswerTest.stubAnswer":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":72,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":148,"org.easymock.tests2.UsageConstraintsTest.greaterThan":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":109,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":345,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":306,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":277,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":92,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":313,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":18,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":68,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":19,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":322,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":165,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":276,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":373,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":333,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":267,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests.MockingTest.testNiceClassMocking":362,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":360,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":309,"org.easymock.tests2.UsageConstraintsTest.testContains":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":343,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":266,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":163,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":297,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":323,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":327,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":164,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":136,"org.easymock.tests2.UsageConstraintsTest.cmpTo":85,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests2.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests.DefaultClassInstantiatorTest.object":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":294,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":310,"org.easymock.tests.UsageTest.unexpectedCallWithArray":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":293,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":107,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":143,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":280,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":363,"org.easymock.tests.LimitationsTest.abstractClass":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22}}]
