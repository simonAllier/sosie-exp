[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[0,1,2,3,4,5,6],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:557","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,0,132,133,134,135,136,136,137,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,1,193,194,2,3,195,4,6,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[10,11,12,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[256,226,243,248],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[257,54,61],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[258,259,260,261,173,262,263,264,252],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[265,266],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[232],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[258,259,260,267,268,261],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[156],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[269,89,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[8,119,178,215,222,235,236,239,242,244,245,246,247,248],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,270,24,271,272,273,274,275,276,124,125,144,277,278,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[280,13,281,23,25,282,57,123,124,125,143,145,283,157,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[288,119,132,133,134,135,138,139,175,222,224,236],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[289],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[290,291,292,293,294,140,295,296,297,298,299,300,301,302,303,304,305,225,306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[8,9,280,312,13,281,313,314,315,316,317,14,318,16,17,18,19,20,21,319,320,321,7,322,323,324,325,326,327,328,329,22,330,331,270,23,332,24,25,282,333,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,334,56,57,272,273,58,59,274,275,60,66,67,68,69,70,71,335,336,337,338,339,72,340,73,74,75,276,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,80,81,357,82,358,359,360,83,84,85,86,87,88,361,362,363,364,365,366,94,95,367,368,369,370,371,372,373,374,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,375,376,377,378,379,126,127,128,129,130,131,0,132,133,380,134,381,135,141,382,383,143,384,144,145,283,146,147,385,386,387,388,389,149,150,153,154,155,156,157,277,158,390,159,160,161,278,279,162,163,164,165,166,167,168,169,170,171,172,173,284,285,286,287,391,174,392,393,175,394,395,178,396,183,184,185,186,187,188,397,189,398,399,190,191,192,400,1,2,3,195,4,6,197,198,199,201,202,203,401,204,205,402,403,206,207,208,209,210,211,212,404,225,405,406,407,408,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,409,248,249,250,251,252,253,410,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[270,411,412,272,413,414],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[265,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[265,15,361,364,136,136,137,137,138,164,173,262,391,174,392,393,175,176,177,415,264,178,396,180,181,182,397,416,190,191,417,252],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[270,411,412,272,413,414],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,270,24,271,272,273,274,275,124,125,144,277,278,279],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.UsageTest.argumentsOrdered":279,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":390,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":99,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.UsageTest.wrongArguments":277,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests2.UsageConstraintsTest.testNull":231,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":204,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":118,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":89,"org.easymock.tests.UsageTest.argumentsOrdered":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":343,"org.easymock.tests.InvocationTest.testEquals":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":326,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":408,"org.easymock.tests2.CaptureTest.testAnd":202,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":93,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":257,"org.easymock.tests2.CaptureTest.testCapture1_2446744":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":406,"org.easymock.tests.UsageThrowableTest.throwError":26,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":321,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":130,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":7,"org.easymock.tests.MockingTest.testInterfaceMocking":357,"org.easymock.tests2.CompareToTest.testLessOrEqual":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":77,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":100,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.MockBuilderTest.testCreateMock":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":413,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":108,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":45,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests2.EasyMockSupportClassTest.testAll":179,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":407,"org.easymock.tests2.CaptureTest.testCaptureAll":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":319,"org.easymock.samples.ExampleTest.voteForRemovals":134,"org.easymock.tests.UsageVarargTest.allKinds":351,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":192,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":397,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":66,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":41,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":178,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":350,"org.easymock.tests.GenericTest.testBridgedEquals":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":316,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":409,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":64,"org.easymock.tests.UsageCallCountTest.tooManyCalls":317,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests.MockingTest.testClassMocking":356,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":312,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":166,"org.easymock.tests2.UsageConstraintsTest.testFind":230,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":6,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.object":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":259,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":345,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":354,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":50,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":405,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":404,"org.easymock.tests.UsageVarargTest.varargCharAccepted":344,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":10,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":182,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":410,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":414,"org.easymock.samples.SupportTest.voteForRemovals":139,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":111,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":62,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":193,"org.easymock.tests.UsageExpectAndThrowTest.object":109,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":136,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":78,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageVarargTest.varargByteAccepted":349,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":65,"org.easymock.tests.UsageExpectAndThrowTest.longType":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":324,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":384,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":103,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":5,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":188,"org.easymock.tests2.CompareToTest.testNotComparable":289,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":107,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.samples.ExampleTest.removeNonExistingDocument":381,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":396,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.floatType":101,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":2,"org.easymock.tests.UsageVerifyTest.twoThrows":124,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests.UsageVarargTest.differentLength":346,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":416,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":412,"org.easymock.tests.MockingTest.testStrictClassMocking":355,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.ObjectMethodsTest.testHashCode":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":267,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":260,"org.easymock.samples.ExampleTest.addDocument":380,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":348,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":137,"org.easymock.tests.UsageThrowableTest.noUpperLimit":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":402,"org.easymock.tests2.SerializationTest.test":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":35,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":323,"org.easymock.tests.GenericTest.testPackageScope":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":358,"org.easymock.tests2.NameTest.nameForMock":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":46,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":398,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":329,"org.easymock.tests2.NameTest.nameForStrictMock":285,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":174,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests.UsageRangeTest.combination":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":184,"org.easymock.tests.UsageTest.wrongArguments":273,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":47,"org.easymock.tests.UsageVarargTest.varargShortAccepted":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":315,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":320,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":392,"org.easymock.tests.UsageTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.constraints":228,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.samples.ExampleTest.addAndChangeDocument":135,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":342}}]
