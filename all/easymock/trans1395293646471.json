[{"position":"org.easymock.internal.matchers.Contains:40","failures":[0],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[1,172,2,173,174,175,3,4,176,5,177,178,179,180,181,182,183,184,6,185,7,8,186,187,188,189,190,191,192,193,194,195,196,197,198,199,9,200,10,201,202,203,204,205,206,207,208,11,12,209,13,210,211,212,213,214,215,216,14,217,15,16,17,218,219,220,221,222,223,224,225,226,227,228,229,230,18,19,20,231,232,233,234,235,236,237,238,239,240,21,241,22,23,242,243,24,25,26,27,28,244,245,246,247,248,249,29,250,30,31,32,33,34,35,36,37,251,252,38,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,40,280,281,41,42,282,283,43,284,285,286,287,288,289,290,291,292,293,44,294,45,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,46,47,320,321,48,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,49,341,342,343,344,345,346,347,348,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,349,350,351,352,353,70,354,355,356,357,358,359,360,361,71,362,363,364,72,365,366,367,368,369,370,371,73,372,373,374,375,376,377,378,379,74,380,75,76,381,77,78,382,79,80,81,82,383,83,84,85,86,87,88,384,89,90,91,92,93,94,95,96,97,98,99,100,385,101,102,103,104,105,106,107,108,109,110,111,386,112,113,114,115,387,116,117,118,119,388,120,121,122,389,390,391,392,393,394,395,396,397,123,398,124,125,399,400,401,402,403,404,405,406,407,408,409,410,411,126,127,128,412,129,413,130,131,414,415,416,132,133,134,417,418,419,135,420,421,422,423,424,425,136,137,426,138,139,427,428,140,141,142,143,429,144,145,430,146,147,148,149,150,151,431,432,433,152,434,435,153,436,437,438,439,440,441,442,443,444,154,445,446,447,448,449,155,450,451,156,157,158,159,160,161,452,453,162,454,455,456,457,163,458,459,460,461,462,164,165,463,464,465,466,467,166,468,469,470,471,472,167,168,473,169,170,474,171,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[342,366,409,411,134,417,418,419,135,420,473],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[1,172,2,3,4,5,6,185,7,8,186,187,188,189,190,14,217,218,219,220,221,223,224,226,227,228,229,230,19,20,238,239,240,21,241,22,23,242,243,24,25,26,27,28,244,245,246,247,248,249,29,250,30,31,32,33,34,35,36,37,251,252,38,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,40,280,281,41,42,282,283,43,284,285,286,287,288,289,44,294,304,305,306,307,309,311,312,314,317,319,46,47,48,323,324,325,326,327,328,333,347,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,361,71,362,364,72,366,73,378,379,74,380,75,76,381,77,78,382,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,386,112,113,114,115,387,116,117,118,119,120,121,122,390,391,392,393,394,123,398,124,125,402,403,404,405,406,407,409,411,126,127,128,412,129,413,130,131,414,415,416,132,133,134,419,135,420,422,423,424,425,136,137,426,138,139,427,428,140,141,142,143,429,144,145,430,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,456,163,164,165,467,166,468,469,470,471,471,472,472,167,168,473,169,170,474,171,476,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[0],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[1,172,2,218,479,480,481,482,483,484,240,21,22,23,257,258,40,280,281,282,283,343,346,347,348,485,486,487,488,489,490,491,492,493,494,495,74,75,76,128,412,415,416],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[496,497,498,499,500,72,365,77,501,400],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[350,351,353,355,356,359,368,369,371,373,374,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[14,217,37,38,327,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[217,20,30,34,35,251,252,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,42,323,324,325,326,327,328,345,404,405,406,407,126,131,146],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[81,82,84,86,87,384,98,102,136,426,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[191,195,196,203,208,231,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[14,21,24,25,26,27,28,244,245,246,247,248,36,37,38,46,47,74,79,80,83,84,85,86,91,93,94,96,97,102,103,104,429,471,471,472,472],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,172,2,173,174,175,176,177,178,179,180,181,182,183,184,6,185,7,8,186,187,188,189,190,191,192,193,194,195,196,197,198,199,9,200,10,201,202,203,204,205,206,207,208,11,12,209,13,502,210,211,212,213,214,215,503,216,14,217,15,16,17,218,219,220,221,222,223,224,225,226,227,228,229,230,18,19,20,231,232,233,234,235,236,237,238,239,240,21,241,22,23,242,243,24,25,26,27,28,244,245,246,247,248,249,29,250,30,31,32,33,34,35,36,37,251,252,38,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,40,280,281,41,42,282,283,43,284,285,286,287,288,289,290,291,292,293,44,294,45,295,296,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,46,47,320,321,48,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,49,341,342,343,344,345,346,347,348,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,349,350,351,352,353,70,354,355,356,357,358,359,360,361,71,362,363,364,366,367,368,369,370,371,73,372,373,374,375,376,377,378,379,74,380,75,76,381,78,382,79,80,81,82,383,83,84,85,86,87,88,384,89,90,91,92,93,94,95,96,97,98,99,100,385,101,102,103,104,105,106,107,108,109,110,111,386,112,113,114,115,387,116,117,119,120,389,390,391,392,393,394,395,396,397,123,398,124,125,401,402,403,404,405,406,407,408,409,410,411,126,127,128,412,129,413,130,131,414,415,416,132,133,134,417,418,419,135,420,421,422,423,424,425,136,137,426,138,139,427,428,140,141,142,143,429,144,145,430,146,147,148,149,150,151,431,432,152,435,153,436,437,440,443,154,445,446,447,448,449,155,156,157,158,159,160,161,452,453,162,455,456,457,163,458,459,460,461,462,164,165,463,464,465,466,467,166,468,469,470,167,168,473,169,170,474,171,475,476,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[1,172,2,173,174,175,3,4,176,5,177,178,179,180,181,182,183,184,6,185,7,8,186,187,188,189,190,191,192,193,194,195,196,197,198,199,9,200,10,201,202,203,204,205,206,207,208,11,12,209,13,210,211,212,213,214,215,216,14,217,15,16,17,218,219,220,221,222,223,224,225,226,227,228,229,230,18,19,20,231,232,233,234,235,236,237,238,239,240,21,241,22,23,242,243,24,25,26,27,28,244,245,246,247,248,249,29,250,30,31,32,33,34,35,36,37,251,252,38,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,40,280,281,41,42,282,283,43,284,285,286,287,288,289,290,291,292,293,44,294,45,295,296,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,46,47,320,321,48,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,49,341,342,343,344,345,346,347,348,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,349,350,351,352,353,70,354,355,356,357,358,359,360,361,71,362,363,364,72,365,366,367,368,369,370,371,73,372,373,374,375,376,377,378,379,74,380,75,76,381,77,78,382,79,80,81,82,383,83,84,85,86,87,88,384,89,90,91,92,93,94,95,96,97,98,99,100,385,101,102,103,104,105,106,107,108,109,110,111,386,112,113,114,115,387,116,117,118,119,120,121,122,390,391,392,393,394,395,396,397,123,398,124,125,400,401,402,403,404,405,406,407,409,410,411,126,127,128,412,129,413,130,131,414,415,416,132,133,134,417,418,419,135,420,421,422,423,424,425,136,137,426,138,139,427,428,140,141,142,143,429,144,145,430,146,147,148,149,150,151,431,432,433,152,434,435,153,436,437,438,439,440,441,442,443,444,154,445,446,447,448,449,155,450,451,156,157,158,159,160,161,452,453,162,454,455,456,457,163,458,459,460,461,462,164,165,463,464,465,466,467,166,468,469,470,471,471,472,472,167,168,473,169,170,474,171,475,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[479,481,240,280,486,493],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[385,102,409,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[1,172,2,6,185,7,8,20,238,21,22,242,250,264,268,269,271,274,40,281,282,283,286,347,54,58,59,61,64,366,378,74,75,381,80,81,83,85,86,91,94,95,97,103,106,110,111,113,402,128,412,129,413,415,416,132,430],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[1,172,2,218,479,480,481,482,483,484,240,21,22,23,257,258,40,280,281,282,283,343,346,347,348,485,486,487,488,489,490,491,492,493,494,495,74,75,76,128,412,415,416],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[1,172,2,173,174,175,3,4,176,5,177,178,179,180,181,182,183,184,6,185,7,8,186,187,188,189,190,191,192,193,194,195,196,197,198,199,9,200,10,201,202,203,204,205,206,207,208,11,12,209,13,502,210,211,212,213,214,215,503,216,14,217,15,16,17,218,219,220,221,222,223,224,225,226,227,228,229,230,505,18,19,20,231,232,233,234,235,236,237,238,239,240,21,241,22,23,242,243,24,25,26,27,28,244,245,246,247,248,249,29,250,30,31,32,33,34,35,36,37,251,252,38,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,39,40,280,281,41,42,282,283,43,284,285,286,287,288,289,290,291,292,293,44,294,45,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,46,47,320,321,48,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,49,341,342,343,344,345,346,347,348,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,349,350,351,352,353,70,354,355,356,357,358,359,360,361,71,362,363,364,72,365,506,366,367,368,369,370,371,73,372,373,374,375,376,377,378,379,74,380,75,76,381,77,78,382,79,80,81,82,383,83,84,85,86,87,88,384,89,90,91,92,93,94,95,96,97,98,99,100,385,101,102,103,104,105,106,107,108,109,110,111,386,112,113,114,115,387,116,117,118,119,388,120,121,122,389,390,391,392,393,394,507,395,396,508,397,123,398,124,501,125,399,400,401,402,509,403,404,405,406,407,408,409,410,411,126,127,128,412,129,413,130,131,414,415,416,132,133,134,417,418,419,135,420,421,422,423,424,425,136,137,426,138,139,427,428,140,141,142,143,429,144,145,430,146,147,148,149,150,151,431,432,433,152,434,435,153,436,437,438,439,440,441,442,443,444,154,445,446,447,448,449,155,450,451,156,157,158,159,160,161,452,453,162,454,455,456,457,163,458,459,460,461,462,164,165,463,510,511,512,464,465,466,467,166,468,469,470,471,472,167,168,473,169,170,474,171,475,476,477],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[14,89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[496,497,498,513,514,365,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[16,231,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests2.UsageTest.argumentsOrdered":416,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":200,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":413,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":470,"org.easymock.tests2.DelegateToTest.testReturnException":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":324,"org.easymock.tests.MockingTest.testPartialClassMocking":3,"org.easymock.tests.MockClassControlTest.testToString":334,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":421,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":473,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":301,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":178,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":339,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":38,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":180,"org.easymock.tests.UsageTest.argumentsOrdered":283,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":514,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":511,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":489,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":136,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":298,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":508,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":184,"org.easymock.tests2.DelegateToTest.testDelegate":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":257,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":451,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests.MockingTest.testInterfaceMocking":176,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":440,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests.UsageOverloadedMethodTest.overloading":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":345,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":222,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.MockClassControlTest.testEquals":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests2.CaptureTest.testCaptureAll":137,"org.easymock.tests.MockNameTest.defaultName":253,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":171,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":1,"org.easymock.samples.BasicClassMockTest.testPrintContent":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":503,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":458,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":512,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":452,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":323,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":291,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":385,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":480,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests.MockingTest.testNiceClassMocking":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testClassMocking":174,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":406,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests.MockTypeTest.fromEasyMockClass":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":411,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":181,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":483,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":344,"org.easymock.tests.MockClassControlTest.testHashCode":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":442,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":488,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":408,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":13,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":115,"org.easymock.tests.DefaultClassInstantiatorTest.object":210,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":457,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":335,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":510,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":326,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":382,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":205,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.DelegateToTest.testWrongClass":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":471,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":465,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":479,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":17,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":445,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":468,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":252,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests2.StubTest.stub":430,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":380,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":381,"org.easymock.tests2.NameTest.nameForMocksControl":425,"org.easymock.tests2.MockedExceptionTest.testMockedException":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":410,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":4,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests.MockingTest.testTwoMocks":175,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":415,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.samples.ExampleTest.removeNonExistingDocument":475,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":212,"org.easymock.tests2.ConstraintsToStringTest.andToString":492,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":403,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests.LimitationsTest.privateConstructor":321,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":404,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.UsageTest.defaultResetToNice":414,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":201,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.CallbackTest.callback":366,"org.easymock.tests2.UsageConstraintsTest.equals":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":454,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":251,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":481,"org.easymock.tests.MockingTest.testStrictClassMocking":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":420,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":513,"org.easymock.tests2.NameTest.nameForNiceMock":424,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":399,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.ConstraintsToStringTest.orToString":485,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":472,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":463,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":427,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.samples.SupportTest.addDocument":467,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":388,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":437,"org.easymock.tests.GenericTest.testPackageScope":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":177,"org.easymock.tests2.NameTest.nameForMock":422,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":509,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests2.MockedExceptionTest.testRealException":407,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":423,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":464,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":213,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":395,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":441,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":438,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":192,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":215,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":290,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":194,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":476,"org.easymock.tests2.ConstraintsToStringTest.notToString":487,"org.easymock.tests2.ConstraintsToStringTest.containsToString":0,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":477,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.LimitationsTest.abstractClass":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220}}]
