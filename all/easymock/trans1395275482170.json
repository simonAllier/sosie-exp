[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,5,42,6,43,44,45,46,47,10,48,49],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[11,12,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[89,90,91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[93,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[95,46],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[11,12,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[97,98,99,100,101,102,103,104,11,11,12,12,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,13,157,14,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,15,16,187,188,17,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,18,222,223,224,225,226,227,228,229,230,231,232,233,234,235,24,25,26,27,28,236,237,238,29,30,31,32,33,239,240,241,242,34,35,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,0,259,1,260,261,262,263,264,265,266,2,36,267,268,269,270,271,272,273,53,56,66,72,274,275,276,277,278,96,279,280,281,282,283,75,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,76,301,302,303,77,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,37,334,335,336,337,338,339,340,341,342,343,344,38,345,346,39,40,3,4,41,5,42,6,7,347,8,348,349,43,350,44,45,351,46,47,9,352,353,354,355,10,48,49,356,357,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.Capture:82","failures":[0,1,260,261,262,263,264,266,358,2,36,268],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[359,75,284,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[132,361,362,363,189,190,191,199,201,204,205,221,18,223,224,364,365,366,367,322,323,329,330,37,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:907","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[359,75,284,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[157,173,174,175,187,207,208,209,210,211,212,368,275,276,277,278,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[369,44,353,49],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[95,46],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[131,132,189,190,191,193,197,199,200,201,204,205,221,18,223,224,236,237,244,245,297,370,322,323,329,330,37,335,336,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[157,187,207,208,209,210,211,212,275,276,277,278,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[97,11,11,12,12,371,372,373,129,374,130,375,163,376,93,377,378,379,94,380,381,382,176,177,178,383,384,385,192,195,386,387,226,227,228,229,388,389,390,243,391,246,247,249,250,251,252,253,392,393,254,255,256,257,394,258,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,275,276,277,75,360,299,300,76,301,303,77,310,311,312,395,313,314,315,316,84,317,318,319,396,397,398,399,400,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[132,361,362,401,363,189,190,191,199,18,223,224,322,37,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[132,402,403,404,405,190,191,200,201,204,205,221,223,224,323,329,330,335,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[406,407,408,409,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[132,405,190,191,200,201,204,205,219,221,223,323,329,330,335],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[410,406,411,199,200,201,204,205,221,408,412,409,413,322,323,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[359,75,284,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,6,7,8,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[97,98,99,100,101,102,103,104,11,11,12,12,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,13,157,14,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,15,16,187,188,17,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,18,222,223,224,225,226,227,228,229,230,231,232,233,234,235,24,25,26,27,28,236,237,238,29,30,31,32,33,239,240,241,242,34,35,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,0,259,1,260,261,262,263,264,265,266,2,36,267,268,269,270,271,272,273,53,56,66,72,274,275,276,277,278,96,279,280,281,282,283,75,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,76,301,302,303,77,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,37,334,335,336,337,338,339,340,341,342,343,344,38,345,346,39,40,3,4,41,5,42,6,7,347,8,348,349,43,350,44,45,351,46,47,9,352,353,354,355,10,48,49,356,357,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.UsageTest.argumentsOrdered":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":325,"org.easymock.tests2.DelegateToTest.testReturnException":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":227,"org.easymock.tests.MockClassControlTest.testToString":176,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":105,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":361,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":15,"org.easymock.tests2.UsageTest.wrongArguments":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":249,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":294,"org.easymock.tests2.CaptureTest.testPrimitive":260,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":124,"org.easymock.tests.UsageTest.moreThanOneArgument":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":158,"org.easymock.tests.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":33,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests2.DependencyTest.testClassMocking":399,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":321,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":289,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":162,"org.easymock.tests2.DelegateToTest.testDelegate":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":120,"org.easymock.tests.LimitationsTest.mockFinalMethod":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":172,"org.easymock.tests2.DependencyTest.testClassMockingSupport":400,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":244,"org.easymock.tests2.CaptureTest.testCapture1_2446744":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.samples.PartialClassMockTest.testGetArea":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests2.UsageTest.niceToStrict":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":313,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":408,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":114,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":233,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":350,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":266,"org.easymock.tests.MockClassControlTest.testEquals":384,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":374,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureAll":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.MockNameTest.defaultName":131,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":27,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests.UsageVarargTest.allKinds":242,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":372,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":308,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.samples.ExampleTest.voteForRemoval":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":252,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":163,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":287,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.CaptureTest.testCaptureFirst":268,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":288,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":267,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":318,"org.easymock.tests.GenericTest.testBridgedEquals":375,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":168,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":123,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":14,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":24,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":300,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":277,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":357,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":293,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":411,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":215,"org.easymock.tests.MockClassControlTest.testHashCode":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":89,"org.easymock.tests2.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":296,"org.easymock.tests.DefaultClassInstantiatorTest.object":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":236,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":331,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":230,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":409,"org.easymock.samples.SupportTest.voteForRemovals":104,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":117,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":359,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":231,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":279,"org.easymock.tests.UsageExpectAndThrowTest.object":115,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":127,"org.easymock.tests2.CaptureTest.testCaptureNone":265,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":402,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":371,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests2.UsageConstraintsTest.any":348,"org.easymock.tests2.StubTest.stub":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.SerializationTest.testClass":75,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":130,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests2.NameTest.nameForMocksControl":367,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":109,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":316,"org.easymock.tests.MockingTest.testNicePartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":251,"org.easymock.tests2.CaptureTest.testCaptureLast":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":226,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":113,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":224,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.floatType":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":256,"org.easymock.tests.LimitationsTest.privateConstructor":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":80,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests2.UsageTest.defaultResetToNice":328,"org.easymock.samples.ExampleTest.voteAgainstRemovals":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":407,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":406,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":302,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.NameTest.nameForNiceMock":366,"org.easymock.tests2.DependencyTest.testInterfaceMocking":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":306,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":87,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":396,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":262,"org.easymock.tests2.SerializationTest.test":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.NameTest.nameForMock":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":86,"org.easymock.tests2.UsageStrictMockTest.differentMethods":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests2.NameTest.nameForStrictMock":365,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":250,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":362,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests.ErrorMessageTest.testGetters":401,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":311,"org.easymock.tests2.UsageStrictMockTest.range":335,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":247,"org.easymock.tests.UsageTest.wrongArguments":201,"org.easymock.tests2.MockBuilderTest.testWithConstructor":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":349,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests2.CompareToTest.testLessThan":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CaptureTest.testCaptureFromStub":36,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":221,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests2.CaptureTest.testCapture":358,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":169,"org.easymock.tests2.CompareToTest.testGreateThan":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":32,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":291,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":363}}]
