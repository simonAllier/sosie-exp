[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[4,5,6],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[10,11,12,13,6,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[30,31,32,33,34,35,36,1,37,38],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[41],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[30,31,32,34,35,36,1,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[7,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[41],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,7,73,74,75,76,77,78,79,80,81,82,83,84,85,42,43,43,44,44,86,87,88,89,90,91,92,93,94,95,96,97,45,98,99,100,101,102,103,104,105,106,46,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,36,146,147,148,149,47,150,151,152,1,3,37,38,153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[155,19,156,157,158,159,160,161,162,147,163,23,164,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[6,14,166,19,23],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[8],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[48,168,169,170,49,171,172,173,174,175,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[129,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:583","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[55,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[177,178,179,180,181,182,183,165],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[30,31,32,33,34,35,36,1,37,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[184,185,6,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[208,209,210,183],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[211,30,31,32,212,213,34,35,1,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[53,54,55,56,184,214,10,11,215,185,12,13,216,217,218,219,220,221,222,223,224,225,226,227,228,4,5,229,230,231,6,14,186,187,232,233,188,234,189,190,191,192,235,193,194,195,196,236,197,198,199,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,77,269,270,271,272,201,273,274,275,202,276,277,278,279,280,281,282,283,284,285,177,286,287,288,289,290,16,291,292,293,17,155,18,294,295,19,156,296,80,82,297,298,299,300,301,302,303,304,203,305,157,306,307,308,309,310,311,312,313,314,315,316,178,317,318,319,320,42,43,43,44,44,321,158,322,323,324,159,160,325,326,161,327,328,179,180,181,209,329,182,210,183,205,330,331,20,162,332,333,206,334,21,22,335,336,337,338,48,168,339,169,340,170,49,341,171,167,342,343,39,344,345,346,347,348,172,349,350,351,352,173,353,354,86,87,88,89,355,90,91,95,45,46,112,356,357,358,359,360,40,207,115,116,361,117,118,119,120,121,124,125,126,127,362,363,364,365,366,367,368,137,139,142,143,144,145,146,147,47,150,151,152,369,1,2,370,371,372,373,374,37,174,375,175,376,377,378,379,380,381,382,176,383,384,385,163,386,387,23,164,388,389,390,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:85","failures":[391,392,393,54,55,56,184,214,10,11,215,185,12,13,216,60,220,221,222,394,223,395,396,397,398,399,400,61,62,63,64,65,66,67,68,69,225,226,227,228,4,5,229,230,231,6,14,186,187,232,233,188,234,189,190,191,192,235,193,194,195,196,236,197,198,199,200,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,264,265,266,267,268,77,269,270,271,272,201,273,274,275,202,276,277,278,279,280,281,282,283,284,285,177,287,288,290,16,292,293,17,155,401,18,294,295,19,156,296,402,80,81,403,404,405,406,407,408,409,410,411,412,297,298,299,300,301,302,303,304,203,305,157,306,307,308,311,413,414,415,416,417,418,419,420,421,422,423,84,85,424,315,316,178,317,318,425,319,426,320,42,427,43,43,44,44,428,321,158,322,323,324,159,160,325,326,161,327,328,429,179,180,181,182,210,183,205,330,331,20,162,332,333,206,334,21,22,335,336,337,338,48,168,339,169,340,170,49,341,167,342,343,39,344,345,346,347,348,172,349,350,351,352,173,353,354,86,87,88,89,355,90,91,95,45,46,112,356,357,358,359,360,40,207,115,116,361,117,118,119,120,121,124,125,126,127,430,431,432,433,362,364,365,366,368,137,139,142,143,144,145,146,147,47,150,151,152,369,1,2,3,370,371,372,373,374,434,37,174,375,175,376,377,378,379,380,381,382,176,383,384,385,163,435,386,387,23,164,388,389,390,165],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":332,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":428,"org.easymock.tests2.DelegateToTest.testReturnException":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":63,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":341,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":300,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":68,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":130,"org.easymock.tests2.CaptureTest.testPrimitive":376,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":362,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":174,"org.easymock.tests2.UsageTest.strictResetToDefault":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":324,"org.easymock.tests2.DelegateToTest.testDelegate":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":414,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":114,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":102,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":298,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":382,"org.easymock.tests.MockClassControlTest.testEquals":67,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests2.CaptureTest.testCaptureAll":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":311,"org.easymock.samples.ExampleTest.voteForRemovals":319,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":273,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":74,"org.easymock.samples.ExampleTest.voteForRemoval":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":128,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":371,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":322,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":385,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":323,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":384,"org.easymock.tests2.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":412,"org.easymock.tests.GenericTest.testBridgedEquals":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":399,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":291,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":400,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":5,"org.easymock.tests.MockingTest.testNiceClassMocking":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":52,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":394,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":138,"org.easymock.tests2.UsageConstraintsTest.testContains":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":339,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":180,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":326,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":31,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":220,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":287,"org.easymock.tests.MockClassControlTest.testHashCode":66,"org.easymock.tests2.EasyMockSupportTest.testVerify":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":104,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":434,"org.easymock.tests.UsageVarargTest.varargCharAccepted":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":312,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":64,"org.easymock.tests2.UsageTest.resumeIfFailure":335,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":352,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":309,"org.easymock.samples.SupportTest.voteForRemovals":315,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":209,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":349,"org.easymock.tests2.DelegateToTest.testWrongClass":366,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":261,"org.easymock.tests2.CaptureTest.testCaptureNone":381,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":25,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":411,"org.easymock.tests2.ThreadingTest.testThreadSafe":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":107,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":397,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests2.CaptureTest.testCapture_2617107":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":203,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":219,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":418,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":387,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":360,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":134,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":388,"org.easymock.tests2.NameTest.nameForMocksControl":433,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":26,"org.easymock.tests2.MockedExceptionTest.testMockedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":145,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":211,"org.easymock.tests2.CaptureTest.testCaptureLast":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":350,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":353,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":29,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":416,"org.easymock.tests.UsageStrictMockTest.differentMethods":156,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":28,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":372,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.LimitationsTest.privateConstructor":76,"org.easymock.tests2.UsageConstraintsTest.testNotNull":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":334,"org.easymock.samples.ExampleTest.voteAgainstRemovals":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.UsageCallCountTest.tooFewCalls":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":301,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":27,"org.easymock.tests.UsageThrowableTest.throwCheckedException":4,"org.easymock.tests.MockingTest.testStrictClassMocking":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":221,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":355,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":212,"org.easymock.tests2.NameTest.nameForNiceMock":432,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":32,"org.easymock.samples.ExampleTest.addDocument":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.DelegateToTest.testStubDelegate":365,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":410,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":338,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":153,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":378,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.tests2.UsageConstraintsTest.testSame":340,"org.easymock.samples.SupportTest.addDocument":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":99,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests2.NameTest.nameForMock":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":369,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":386,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":303,"org.easymock.tests2.NameTest.nameForStrictMock":431,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":118,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":154,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":132,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":103,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":24,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests.UsageRangeTest.combination":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":100,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.UsageVarargTest.varargShortAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":398,"org.easymock.tests2.UsageConstraintsTest.cmpTo":342,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":383,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":413,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":140,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":427,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":379,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.LimitationsTest.abstractClass":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160}}]
