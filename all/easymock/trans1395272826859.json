[{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[17,18,20,22,23,248,34,38,68,70,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[249,250,251],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[252,65,253,254,255,256,257,105,258,259,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[17,18,22,23,248,34,68,70,77],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[103,260,261,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[65,263,264,265,266,267,255,256,105,258],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[263,264,265,268,269,255,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[270,271,272,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[17,18,22,23,248,34,68,70,77],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[101],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.RecordState:136","failures":[15,16,19,20,21,22,27,29,30,32,33,38,39,40,276,84,119,119,120,120,135,136,137,138,139,140,179,180,181,182,183,193,230,231,245,246,247],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,277,8,9,10,11,278,12,13,279,14,280,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,281,37,38,39,40,41,42,43,44,45,46,282,283,47,48,284,49,50,285,51,52,286,287,53,288,289,54,290,55,56,57,58,59,60,291,61,62,63,64,65,66,67,68,69,70,71,292,72,73,74,75,76,77,276,293,78,79,80,81,82,294,83,84,295,296,85,86,87,88,89,90,91,92,97,98,297,99,100,101,102,298,299,300,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,301,141,142,143,144,145,302,146,147,148,149,150,151,153,154,155,303,156,157,304,305,306,307,308,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,309,310,311,312,179,180,181,182,183,313,184,272,314,315,316,317,318,319,185,186,187,188,189,190,191,320,321,192,273,193,322,323,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,324,221,222,225,226,227,228,325,326,327,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,328,262,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[329,60,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[65,66,67,331],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,277,8,9,10,11,12,13,279,14,280,41,42,43,44,283,60,84,296,85,91,92,297,99,101,102,298,299,300,105,122,124,126,127,129,332,133,135,136,137,138,139,151,152,153,154,155,303,158,159,160,161,162,163,166,167,169,170,171,173,174,175,176,177,179,180,181,182,185,186,187,188,193,323,194,230,231,232,245,246],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[270,271,272,273,274,275],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[59,291,61,125,310],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[263,264,265,268,269,255,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[277,9,11,13,280,84,296,85,272,273,193,323,194,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[334,335,336,337,338],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[284,287,79,80,81,82,104,301,303,157,304,305,306,307,308,311,313,316,189,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,222,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[339,288,317],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[340],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[342,343,344,345],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.UsageTest.argumentsOrdered":289,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":330,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.DelegateToTest.testReturnException":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":271,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests2.UsageTest.wrongArguments":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageStrictMockTest.range":323,"org.easymock.samples.ConstructorCalledMockTest.testTax":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":247,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":8,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":181,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests.UsageUnorderedTest.message":320,"org.easymock.tests.UsageVerifyTest.twoReturns":190,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":45,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":228,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":260,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":100,"org.easymock.tests2.StubTest.stub":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":155,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":58,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests2.DelegateToTest.testDelegate":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":7,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":11,"org.easymock.tests2.CompareToTest.testCompareEqual":336,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":36,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":56,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":288,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.samples.ExampleTest.removeNonExistingDocument":332,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":259,"org.easymock.tests.UsageVerifyTest.twoThrows":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.PartialClassMockTest.testGetArea":133,"org.easymock.tests2.CompareToTest.testLessOrEqual":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":136,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests2.UsageTest.niceToStrict":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":298,"org.easymock.tests2.UsageTest.defaultResetToNice":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":252,"org.easymock.tests.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageCallCountTest.tooFewCalls":226,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":28,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":220,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":4,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":182,"org.easymock.tests2.CompareToTest.testGreateOrEqual":337,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":268,"org.easymock.tests2.NameTest.nameForNiceMock":95,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":47,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":235,"org.easymock.samples.BasicClassMockTest.testPrintContent":132,"org.easymock.samples.ExampleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.AnswerTest.stubAnswer":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":267,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":280,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":46,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":120,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":256,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.samples.SupportTest.addDocument":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":329,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":293,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":225,"org.easymock.tests2.MockedExceptionTest.testRealException":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":224,"org.easymock.tests2.NameTest.nameForStrictMock":94,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":10,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":297,"org.easymock.tests2.UsageStrictMockTest.range":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":264,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":266,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":258,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":277,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.UsageTest.wrongArguments":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":310,"org.easymock.tests2.MockBuilderTest.testWithConstructor":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":251,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageConstraintsTest.cmpTo":26,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests2.CompareToTest.testLessThan":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests2.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests.DefaultClassInstantiatorTest.object":249,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":279,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests.UsageStrictMockTest.testVerify":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests2.CompareToTest.testGreateThan":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":233,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142}}]
