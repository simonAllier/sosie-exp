[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[105,106,107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[109,110,111,112,113,114,115,116,117,105,118,10,119,120,121,13,15,16,122,123,124,19,20,125,126,21,22,127,128,129,130,131,132,133,134,135,136,137,138,23,139,140,141,142,143,144,145,25,146,27,147,148,29,149,30,150,31,32,151,33,34,152,153,154,155,156,35,157,158,159,160,161,162,163,164,165,166,167,168,169,36,170,171,172,173,174,175,176,177,178,179,180,181,42,182,44,45,47,49,183,50,52,184,185,186,56,57,187,188,189,190,191,192,193,58,60,194,195,196,197,198,199,200,201,202,203,204,205,206,65,67,68,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,87,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,95,247,248,249,96,97,250,251,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[116,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[15,51,54,55,59,60,254,64,67,88,89,98,99,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,255,104,256,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[258,109,110,259,111,112,260,113,261,262,263,263,264,264,265,114,266,267,268,115,116,117,105,118,10,119,120,121,12,269,13,14,15,16,17,122,123,270,18,124,19,20,125,126,21,22,127,128,129,130,131,271,272,132,133,134,135,273,136,137,138,23,139,140,141,142,274,143,24,144,145,25,275,276,277,278,146,279,27,280,281,282,283,284,147,285,286,148,29,149,30,150,31,32,151,33,34,152,153,287,103,154,155,156,35,157,158,159,160,161,162,163,164,165,166,167,168,169,36,170,171,172,173,174,175,176,177,178,179,37,38,39,40,180,288,181,289,41,42,182,290,44,45,46,47,48,49,183,50,51,52,53,184,185,186,54,55,56,57,187,188,189,190,291,292,293,294,58,59,60,194,195,196,197,198,200,295,201,202,203,204,205,206,63,296,64,65,66,67,68,69,297,298,70,299,300,301,302,303,304,305,306,79,307,80,81,308,309,82,83,84,207,310,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,311,312,255,313,314,108,315,316,317,318,319,320,321,322,323,87,88,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,89,228,229,230,344,345,346,347,348,231,232,349,104,233,234,235,236,350,351,352,353,354,91,355,356,357,358,359,237,238,360,361,362,363,364,239,240,241,365,366,92,93,94,367,368,369,370,95,247,248,249,96,97,98,99,250,251,100,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[371,372,373],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[122,123,270,374],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":157,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":176,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests2.DelegateToTest.testReturnException":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.samples.SupportTest.voteForRemovals":109,"org.easymock.tests.MockClassControlTest.testToString":92,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":26,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":257,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":188,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":107,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":173,"org.easymock.tests2.DelegateToTest.testWrongClass":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":263,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests2.UsageConstraintsTest.testNull":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":369,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":193,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":357,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.CaptureTest.testCapture_2617107":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":290,"org.easymock.tests2.UsageConstraintsTest.any":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":316,"org.easymock.tests2.StubTest.stub":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests.ReplayStateInvalidUsageTest.times":317,"org.easymock.tests.LimitationsTest.mockNativeMethod":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":227,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":283,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.DelegateToTest.testDelegate":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":328,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":339,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":62,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":61,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":178,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":255,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":75,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":288,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.PartialClassMockTest.testGetArea":114,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":72,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests2.UsageConstraintsTest.testNotNull":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":252,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":182,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.tests2.UsageTest.defaultResetToNice":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":223,"org.easymock.tests.UsageVarargTest.differentLength":91,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageCallCountTest.tooFewCalls":81,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":168,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":372,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":167,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":203,"org.easymock.tests.MockClassControlTest.testEquals":368,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":282,"org.easymock.tests2.CaptureTest.testCaptureAll":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":230,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests.MockNameTest.defaultName":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.UsageConstraintsTest.testMatches":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":311,"org.easymock.tests.ObjectMethodsTest.testHashCode":299,"org.easymock.samples.ExampleTest.voteForRemovals":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests.UsageVarargTest.allKinds":359,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":205,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":242,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":226,"org.easymock.tests.UsageExpectAndReturnTest.floatType":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":264,"org.easymock.tests.UsageThrowableTest.noUpperLimit":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":370,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.tests2.UsageConstraintsTest.testSame":160,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":30,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":215,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.CaptureTest.testCapture2_2446744":136,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":83,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":220,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":212,"org.easymock.tests.UsageCallCountTest.tooManyCalls":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":80,"org.easymock.tests2.MockedExceptionTest.testRealException":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":307,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests2.UsageConstraintsTest.testContains":166,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":158,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":276,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests.UsageExpectAndReturnTest.object":218,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":33,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":300,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":4,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":106,"org.easymock.tests2.UsageConstraintsTest.testOr":161,"org.easymock.tests.UsageRangeTest.combination":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests.MockClassControlTest.testHashCode":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":221,"org.easymock.tests.UsageVarargTest.varargShortAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":165,"org.easymock.tests.UsageVarargTest.varargCharAccepted":353,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":246,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests.DefaultClassInstantiatorTest.object":298,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":273,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":312,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":70,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":222,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
