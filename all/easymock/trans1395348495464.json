[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,11,48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,33,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,35,35,36,36,93,38,39,41,43,44,47,94,18,95,96,97,98,99,100,101,102,103,104,105,106,107,108,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[109,110,111,112,113,114],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.Capture:82","failures":[55,56,57,58,59,60,61,62,63,64,65,33,66],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[116,117,22,24,118,119,120,30,56,57,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[121,122,123,124],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[53,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[70,71,72,73,74,75,129,76,77,130,78,131,132,133,115,79,80,0,134,1,81,82,83,84,135,136,85,86,87,88,89,90,91,92,93,137,138,139,140,141,38,39,40,41,43,44,45,46,47,94,18,95,11,142,12,96,97,98,99,100,143,101,102,144,145,146,103,104,105,106,107,147,148,149,150,48,108,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":41,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":102,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.samples.SupportTest.voteForRemovals":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":110,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":148,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":13,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.samples.ExampleTest.voteForRemoval":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":106,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":20,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.SerializationTest.test":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":40,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":85,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":10,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":9,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":101,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":2,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":5,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":130,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":126,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.PartialClassMockTest.testGetArea":93,"org.easymock.tests2.CompareToTest.testLessOrEqual":67,"org.easymock.tests2.CaptureTest.testCaptureMultiple":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":103,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":122,"org.easymock.tests2.CaptureTest.testCapture":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":4}}]
