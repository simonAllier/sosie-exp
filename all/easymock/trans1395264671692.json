[{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[176,289],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[503],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[504,505,154,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[64,225,231,232,321,324,328,374,375,508,475,496,497,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[22,24,62,63,79,82,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,114,120,122,123,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,288,319,321,322,328,391,392,393,394,395,402,403,404,405,406,411,412,462,463,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[114,394],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[18,19,20,21,62,64,65,224,225,231,232,321,322,324,325,328,373,374,375,474,495,497,500,501],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[31,32,33,509],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[504,505,321,510,506,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[42,54,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[30,60,63,64,65,72,83,85,111,124,128,129,132,138,154,170,179,180,181,222,225,226,227,231,232,233,234,283,319,321,323,324,325,328,358,374,375,419,420,421,494,496,497,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,511,505,512,224,225,231,232,321,510,506,513,495,496,497,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[31,32,33,509],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[13,14,514,515,31,34,35,516,517,518,178,519,520,184,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,13,14,14,15,16,18,19,20,21,25,26,27,29,30,31,32,33,34,41,53,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,79,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,173,174,175,176,179,180,181,182,183,184,185,187,188,189,194,197,207,213,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,319,320,321,322,323,324,325,326,327,328,330,331,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,366,367,368,369,373,374,375,376,377,378,379,380,381,382,383,384,391,392,393,394,395,402,403,404,405,406,409,411,412,413,414,415,416,417,418,419,420,421,423,424,425,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,452,453,455,462,463,469,471,472,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[521],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[329],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[139,144,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[88,90,98,138,139,142,144,145,147,157,162],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[30,60,63,64,65,72,83,85,124,128,129,132,138,154,170,179,180,181,222,225,226,227,231,232,233,234,522,523,283,319,321,323,324,325,328,358,374,375,524,508,419,420,421,494,496,497,500,501,502],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[385,389],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[88,90,98,138,139,142,144,145,147,157,162],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[2,13,13,14,14,15,16,31,33,34,71,72,74,75,76,77,79,82,83,84,85,167,169,525,170,171,173,174,175,176,179,180,526,181,182,183,184,185,188,189,194,197,207,213,527,528,529,289,294,330,331,332,337,377,409,451,452,453,455],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,530,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,516,170,171,517,172,173,174,175,518,176,177,178,179,180,520,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,531,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,523,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,532,384,385,386,387,388,389,533,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[4,30,102,107,469],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[114,262],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":494,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":250,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":477,"org.easymock.tests.MockingTest.testPartialClassMocking":452,"org.easymock.tests.MockClassControlTest.testToString":378,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":17,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":70,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":391,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":294,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":457,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":383,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":395,"org.easymock.tests.UsageTest.moreThanOneArgument":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":447,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":501,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":464,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":406,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":302,"org.easymock.tests.ReplayStateInvalidUsageTest.times":490,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests2.DependencyTest.testClassMocking":67,"org.easymock.tests2.AnswerTest.answer":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests2.CaptureTest.testAnd":88,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":291,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":360,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":29,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":443,"org.easymock.tests.LimitationsTest.mockFinalMethod":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":370,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":484,"org.easymock.tests.UsageThrowableTest.throwError":264,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":293,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":523,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":305,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":485,"org.easymock.tests.MockingTest.testInterfaceMocking":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":429,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":202,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests2.ThreadingTest.testChangeDefault":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":173,"org.easymock.tests2.MockBuilderTest.testCreateMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":437,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":280,"org.easymock.tests2.EasyMockSupportClassTest.testAll":194,"org.easymock.tests.MockClassControlTest.testEquals":382,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":331,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":445,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":527,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":367,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":482,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":373,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":481,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":55,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":533,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":306,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":86,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":298,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":337,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":476,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":345,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":287,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":420,"org.easymock.tests.UsageExpectAndReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":365,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":526,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":444,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":421,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":433,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests.MockingTest.testNiceClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests.MockingTest.testClassMocking":450,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":525,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":414,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":167,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":336,"org.easymock.tests.MockTypeTest.fromEasyMockClass":292,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":425,"org.easymock.tests.UsageTest.exactCallCountByLastCall":502,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":513,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":35,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":49,"org.easymock.tests.MockClassControlTest.testHashCode":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":204,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":524,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":22,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":532,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":459,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":423,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":304,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":434,"org.easymock.tests.ReplayStateInvalidCallsTest.times":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":379,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":479,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":347,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":440,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":262,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":103,"org.easymock.tests.UsageExpectAndThrowTest.object":438,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":462,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":463,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":439,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":500,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":401,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests.UsageUnorderedTest.message":328,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":522,"org.easymock.tests.UsageVerifyTest.twoReturns":375,"org.easymock.tests.UsageVarargTest.varargByteAccepted":286,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":208,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":418,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":426,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":512,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":260,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":489,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":478,"org.easymock.tests.UsageExpectAndThrowTest.longType":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":261,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":488,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":409,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":357,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":529,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":316,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.MockedExceptionTest.testMockedException":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":499,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":432,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":121,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":176,"org.easymock.tests.MockingTest.testNicePartialClassMocking":453,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.CompareToTest.testNotComparable":521,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":371,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":451,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":312,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":436,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":163,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":43,"org.easymock.tests.UsageStrictMockTest.differentMethods":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":50,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":181,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.floatType":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":530,"org.easymock.tests.UsageVerifyTest.twoThrows":374,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":408,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":515,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests2.UsageConstraintsTest.equals":140,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":80,"org.easymock.tests.UsageTest.openCallCountByLastCall":498,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":393,"org.easymock.tests.UsageCallCountTest.tooFewCalls":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":449,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":412,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":491,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":107,"org.easymock.tests.ObjectMethodsTest.testHashCode":424,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":314,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":69,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":209,"org.easymock.tests2.DelegateToTest.testStubDelegate":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":322,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":177,"org.easymock.tests.UsageVarargTest.varargLongAccepted":285,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":249,"org.easymock.tests.UsageExpectAndReturnTest.floatType":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":57,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":137,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":216,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":339,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":186,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":199,"org.easymock.tests.GenericTest.testPackageScope":330,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":56,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":297,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":350,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":442,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":361,"org.easymock.tests2.MockedExceptionTest.testRealException":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":253,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":392,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":303,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":248,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":203,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests.UsageRangeTest.combination":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":497,"org.easymock.tests2.MockBuilderTest.testWithConstructor":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":351,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":104,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":483,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":171,"org.easymock.tests.UsageTest.unexpectedCallWithArray":496,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":313,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":417,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":519,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":352,"org.easymock.tests2.UsageConstraintsTest.constraints":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests2.ConstraintsToStringTest.containsToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":366,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":528,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":404,"org.easymock.tests.LimitationsTest.abstractClass":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":344,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
