[{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:351","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:266","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,7,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,2,87,88,89,90,3,91,92,93,94,95,96,97,98,99,100,4,101,102,103,104,105,106,107,5,6,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[136,137,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[139,140,141,142,143,144],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[145,146,147,0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[154,8,155],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[139,140,141,142,143,144],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[156,154,157,158,8,159,155,160,161,162,163],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[164,165,166,167,168,9,169,148,170,171,10,172,173,174,58,175,176,59,177,178,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,179,180,181,182,183,184,185,186,187,188,189,60,190,191,192,193,194,195,196,197,198,199,200,61,62,64,65,201,66,202,203,67,204,139,140,141,205,206,207,34,208,209,210,211,35,212,213,214,215,216,217,36,218,219,37,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,38,241,39,40,41,42,43,44,242,243,244,245,246,69,70,247,248,249,250,45,251,74,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,151,274,275,276,277,278,279,280,281,76,77,78,79,80,81,82,83,282,283,284,285,286,287,288,289,290,291,292,293,294,47,295,296,297,298,299,300,48,301,302,303,143,304,2,87,88,89,90,3,93,94,95,305,96,97,306,98,99,100,4,101,102,103,104,105,106,107,307,308,156,154,309,157,310,158,8,311,312,313,314,315,316,317,318,319,320,155,321,322,323,324,160,325,326,146,327,328,329,330,331,332,333,6,108,109,334,335,336,337,0,1,338,339,340,341,342,343,344,138,345,110,346,347,348,349,350,351,352,353,112,354,355,356,357,358,359,360,361,144,49,362,132,133,363,135,364,161,365,162,366,367,368,369,370,371,372,163,373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[58,59,71,84,2,376,87,88,90,3,91,92,93,94,377,95,4,378,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[156,154,157,158,8,159,155,160,161,162,163],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[311,316,326,379],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[319,380],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[383,384,385,386,387,136,388,389,390,391,392,138,346,393,113,114,394,115,395,116,117,118,119,120,396,121,122,123,124,397,125,126,127,128,129,130,131,398,399,363,364,400],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[381,382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[401,402,403,404],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[405,406,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[407,408,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[410,411,412,413,414,415,416,417,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[385,386,387,388,389,390,391,393,363,364,400],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[419,161,365,162,366,367,368,369,370,372,163,373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.UsageTest.argumentsOrdered":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":299,"org.easymock.tests2.DelegateToTest.testReturnException":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":215,"org.easymock.tests2.UsageTest.wrongArguments":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":288,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.CaptureTest.testPrimitive":366,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":218,"org.easymock.tests.UsageTest.moreThanOneArgument":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":33,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests.UsageTest.argumentsOrdered":173,"org.easymock.tests.UsageVarargTest.varargIntAccepted":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":352,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.ReplayStateInvalidUsageTest.times":260,"org.easymock.tests2.DependencyTest.testClassMocking":381,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":333,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":140,"org.easymock.tests2.DelegateToTest.testDelegate":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":29,"org.easymock.tests.LimitationsTest.mockFinalMethod":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":246,"org.easymock.tests2.DependencyTest.testClassMockingSupport":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":331,"org.easymock.tests.UsageThrowableTest.throwError":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":176,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.MockingTest.testInterfaceMocking":201,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":15,"org.easymock.tests2.UsageTest.niceToStrict":298,"org.easymock.tests2.ThreadingTest.testChangeDefault":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":56,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":316,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":402,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":372,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":332,"org.easymock.tests2.CaptureTest.testCaptureAll":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":189,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":219,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":43,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.UsageConstraintsTest.greaterThan":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":107,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":60,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":247,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":375,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.UsageTest.moreThanOneArgument":296,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":338,"org.easymock.tests2.CaptureTest.testCapture2_2446744":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":188,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":197,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":32,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":377,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":198,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.MockingTest.testNiceClassMocking":67,"org.easymock.tests.MockingTest.testClassMocking":62,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":191,"org.easymock.tests2.UsageConstraintsTest.testContains":314,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":35,"org.easymock.tests.MockTypeTest.fromEasyMockClass":175,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":336,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":50,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":12,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":330,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":362,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":408,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":11,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":40,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":20,"org.easymock.tests.CapturesMatcherTest.test":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.tests2.SerializationTest.testAllMockedMethod":110,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":153,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.object":24,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":321,"org.easymock.tests2.DelegateToTest.testWrongClass":343,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests.UsageStrictMockTest.range":276,"org.easymock.samples.ConstructorCalledMockTest.testTax":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":371,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":187,"org.easymock.tests2.ThreadingTest.testThreadSafe":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":195,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests2.UsageConstraintsTest.any":312,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":258,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":358,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":55,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":116,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":18,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.CaptureTest.testCaptureLast":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":364,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.MockingTest.testTwoMocks":63,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":22,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":325,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":293,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":256,"org.easymock.tests.UsageStrictMockTest.differentMethods":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":118,"org.easymock.tests.UsageExpectAndThrowTest.floatType":16,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.LimitationsTest.privateConstructor":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":6,"org.easymock.tests2.UsageTest.defaultResetToNice":301,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":54,"org.easymock.tests2.CallbackTest.callback":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":217,"org.easymock.tests.UsageCallCountTest.tooFewCalls":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":41,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":150,"org.easymock.tests.MockingTest.testStrictClassMocking":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":261,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests.ObjectMethodsTest.testHashCode":270,"org.easymock.tests2.CompareToTest.testGreateOrEqual":379,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":339,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":305,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":342,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":274,"org.easymock.tests.UsageVarargTest.varargLongAccepted":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":346,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":111,"org.easymock.tests2.SerializationTest.test":345,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":368,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":119,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":52,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":202,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":389,"org.easymock.tests2.UsageStrictMockTest.differentMethods":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":141,"org.easymock.tests2.MockedExceptionTest.testRealException":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":354,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":216,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":263,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":359,"org.easymock.tests2.UsageConstraintsTest.lessThan":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":122,"org.easymock.tests2.UsageConstraintsTest.testOr":158,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":97,"org.easymock.tests.UsageTest.wrongArguments":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":120,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.UsageVarargTest.varargShortAccepted":185,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":196,"org.easymock.tests2.UsageConstraintsTest.cmpTo":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":46,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":373,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":253,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":148,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":194,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.constraints":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests.UsageStrictMockTest.testVerify":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":243,"org.easymock.tests2.CompareToTest.testGreateThan":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":378,"org.easymock.tests.LimitationsTest.abstractClass":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":180}}]
