[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,5,6,7,8,9,10,68,69,70,71,72,73,74,75,76,77,78,79,0,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,11,12,97,98,99,100,13,101,102,103,104,14,105,106,15,107,108,109,16,17,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,48,152,153,154,155,156,157,158,159,160,161,162,163,164,165,18,1,166,167,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,168,169,170,171,172,39,173,174,175,176,177,178,179,180,49,181,182,183,184,185,186,187,188,189,40,41,42,43,190,191,192,193,194,195,196,197,198,199,200,201,202,50,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,51,242,243,244,245,246,247,248,249,250,251,252,253,254,44,255,256,257,258,259,260,45,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,4,46,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[301,302,303,97,98,99,101,102,49,304,305,306,307,256,257,262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[39,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[195,309,208,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[78,310,311,312,313,314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[316,317,318,319,320,321,322,323,324,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,325,325,5,6,7,8,9,10,70,71,72,73,74,75,76,77,89,90,91,92,93,94,95,96,11,12,97,98,99,100,13,101,102,103,104,14,105,106,15,107,108,109,16,17,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,48,160,162,163,164,165,18,1,166,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,168,169,170,172,39,174,175,176,177,178,179,180,49,181,182,183,184,185,326,327,328,329,330,331,332,333,334,335,336,337,338,40,41,42,43,190,191,192,193,194,195,196,197,198,199,200,201,202,50,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,339,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,340,238,239,240,241,51,242,243,244,245,246,247,248,249,250,251,341,342,252,253,254,44,255,256,257,258,259,260,45,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,343,285,286,344,345,287,288,4,46,289,294,295,296,297,298,299,300,346,347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[77,350,98,99,101,102,140,141,174,49,183,257,262,263,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[316,317,318,319,322,323,324,52,53,54,55,56,57,59,65,66,67,9,68,70,71,72,73,75,76,77,89,96,11,12,97,99,101,102,103,104,106,15,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,48,160,161,162,163,164,165,18,1,166,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,168,169,173,179,180,49,181,182,183,184,185,326,327,328,329,330,331,332,334,335,336,337,338,42,190,191,192,193,194,195,196,197,198,199,200,201,202,50,203,204,205,206,207,208,209,210,212,213,214,215,217,218,219,222,339,223,224,225,226,228,229,230,231,232,233,236,237,340,238,239,240,241,51,243,249,250,341,342,253,44,255,256,257,258,259,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,282,283,284,343,285,286,344,345,287,288,4,46,289,290,291,292,293,294,295,296,297,298,299,300,346,347,348,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[192,208],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests2.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":259,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":319,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.SerializationTest.testAllMockedMethod":240,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.samples.SupportTest.voteForRemovals":324,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.tests.MockClassControlTest.testToString":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":209,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests2.UsageTest.wrongArguments":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":320,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":53,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":343,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":335,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":159,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":92,"org.easymock.tests2.CaptureTest.testCaptureNone":231,"org.easymock.tests.UsageUnorderedTest.message":77,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":150,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageVarargTest.varargIntAccepted":144,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":73,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":2,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":251,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":84,"org.easymock.tests2.StubTest.stub":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":138,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":238,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":339,"org.easymock.tests.ReplayStateInvalidUsageTest.times":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":67,"org.easymock.tests2.AnswerTest.answer":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests2.UsageTest.strictResetToDefault":255,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests2.NameTest.nameForMocksControl":293,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":342,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":278,"org.easymock.tests2.CaptureTest.testCaptureLast":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":288,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":64,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":0,"org.easymock.tests.UsageThrowableTest.throwError":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":58,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":254,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":205,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":268,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":348,"org.easymock.samples.PartialClassMockTest.testGetArea":316,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":17,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":250,"org.easymock.tests2.UsageTest.defaultResetToNice":261,"org.easymock.tests2.MockBuilderTest.testCreateMock":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.UsageVarargTest.differentLength":147,"org.easymock.tests2.CallbackTest.callback":289,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":203,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":344,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testAll":346,"org.easymock.tests.MockClassControlTest.testEquals":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":66,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":78,"org.easymock.tests.ObjectMethodsTest.testHashCode":188,"org.easymock.samples.ExampleTest.voteForRemovals":57,"org.easymock.tests2.NameTest.nameForNiceMock":292,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.samples.BasicClassMockTest.testPrintContent":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":63,"org.easymock.samples.ExampleTest.addDocument":56,"org.easymock.tests2.DelegateToTest.testStubDelegate":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":16,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.AnswerTest.stubAnswer":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.UsageVarargTest.varargLongAccepted":149,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.samples.ExampleTest.voteForRemoval":54,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":266,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":321,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":328,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":329,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":265,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests.GenericTest.testPackageScope":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.CaptureTest.testCapture2_2446744":235,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":151,"org.easymock.tests.GenericTest.testBridgedEquals":47,"org.easymock.tests2.NameTest.nameForMock":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":75,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageCallCountTest.tooManyCalls":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":70,"org.easymock.tests2.MockedExceptionTest.testRealException":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":285,"org.easymock.tests2.NameTest.nameForStrictMock":291,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":272,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":280,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":249,"org.easymock.tests2.UsageStrictMockTest.range":298,"org.easymock.tests2.UsageConstraintsTest.lessThan":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":334,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":146,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":189,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":327,"org.easymock.tests2.CaptureTest.testCaptureRightOne":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":303,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":142,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":172,"org.easymock.tests.MockClassControlTest.testHashCode":157,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":153,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.UsageVarargTest.varargShortAccepted":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":74,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":216,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests.UsageVarargTest.varargCharAccepted":145,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":337,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":79,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":187,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.CapturesMatcherTest.test":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":349,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":61,"org.easymock.tests2.UsageTest.resumeIfFailure":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":143}}]
