[{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[39,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,89,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[82,115,116,117,1,118,119,2,3,120,121,122,123,124,125,91,95,96,97,98,126,100,127,128,129,9,130,131,132,133,134,135,136,137,11,12,13,138,14,15,16,139,17,140,141,19,142,143,144],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[129,14,15,141,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[146,147,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[25,25,148,149,150,26,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,90,91,92,180,181,182,93,94,30,95,96,97,183,98,184,185,186,187,188,36,189,99,126,190,100,191,101,192,102,103,193,104,105,37,38,194,195,196,197,198,199,200,39,201,202,203,204,205,206,207,208,209,107,210,108,109,110,111,211,212,213,214,215,216,217,218,112,113,219,220,221,222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.Range:52","failures":[81,20,223,224,225,23,226,85,227,117,0,1,228,229,2,3,121,4,5,6,7,8,129,9,230,231,232,136,10,11,233,234,12,13,138,235,236,14,15,237,16,17,18,141,19,238,239,240,241,144],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[81,83,84,85,87,147],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[242,81,243,244,245,246,247,148,149,43,44,248,249,82,250,151,158,83,84,251,252,115,253,254,20,223,255,256,257,224,225,258,259,260,261,116,262,263,22,264,265,266,267,23,226,268,85,87,147,88,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,227,117,291,0,118,119,228,229,2,120,121,292,122,293,294,295,123,124,296,125,297,298,299,183,98,300,184,185,186,188,192,193,301,302,303,304,305,194,195,196,306,307,8,128,129,9,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,132,335,336,211,212,214,215,217,230,337,338,339,340,341,342,343,344,231,232,345,218,346,347,348,349,350,136,10,233,234,12,138,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,235,236,14,15,373,374,237,375,376,377,378,379,221,89,380,381,382,383,384,385,386,16,387,18,140,141,19,388,389,390,391,392,393,394,238,239,395,396,397,398,399,400,240,401,241,143,144],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[24,25,242,81,243,244,245,246,403,247,148,149,43,44,150,248,249,82,26,250,151,152,153,404,154,405,406,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,83,407,84,251,252,115,253,408,254,20,223,255,256,257,21,224,225,258,259,260,261,116,262,263,22,264,265,266,267,23,226,268,85,146,86,87,147,88,409,410,411,412,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,413,284,285,286,287,114,288,289,290,414,227,117,291,0,1,118,119,228,229,415,2,3,120,121,292,122,293,294,295,123,124,416,296,125,297,298,299,417,418,419,420,421,422,423,90,91,92,180,181,182,93,94,424,30,95,96,97,183,98,300,184,185,186,187,425,188,36,189,99,126,190,100,191,101,192,102,103,193,426,301,104,105,427,428,429,302,303,45,46,47,430,48,304,431,49,50,432,433,51,434,4,5,6,7,37,38,52,53,54,435,55,305,436,56,57,437,438,58,194,195,196,306,127,307,8,128,129,9,308,309,310,439,440,441,442,443,311,312,197,198,199,200,39,201,202,203,204,205,206,207,444,208,445,446,209,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,447,448,449,333,450,451,334,452,106,132,453,335,336,107,210,108,109,110,111,211,212,213,214,215,216,217,454,455,456,230,337,338,457,339,340,133,341,342,343,344,231,232,345,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,218,481,482,483,484,485,486,487,488,489,490,491,492,346,347,348,349,350,136,10,137,11,233,234,12,13,138,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,235,236,14,15,493,494,495,112,496,497,498,499,113,500,501,502,503,504,373,374,237,375,376,377,378,379,219,220,221,222,89,505,380,381,506,507,508,382,383,384,385,386,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,509,75,76,77,78,79,510,80,511,512,513,514,515,516,517,518,16,139,387,17,18,140,141,19,388,519,389,390,391,392,393,394,402,238,239,520,521,395,396,397,398,399,522,523,400,240,401,241,142,143,144],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[26,250,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[24,24,25,25,148,149,150,26,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,90,91,92,180,181,182,93,94,30,95,96,97,183,98,184,185,186,187,188,36,189,99,126,190,100,191,101,192,102,103,193,104,105,37,38,194,195,196,524,197,198,199,200,39,201,525,202,205,206,207,208,107,210,108,109,110,212,213,214,215,216,217,218,112,113,219,221,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[117,229,194,195,196,306,310,312,348,349,136,234,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,235,14,373,237,375,376,377,378,379,381,389,390,391,392,393,394],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[197,198,199,200,201,202],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[24,24,25,25,242,81,243,244,246,247,150,249,82,26,250,158,161,171,177,83,84,251,252,115,253,254,20,223,255,256,257,224,225,258,259,260,261,116,262,263,22,264,265,266,267,23,226,268,85,146,86,87,147,88,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,114,288,289,290,414,227,117,291,0,118,119,228,229,415,2,3,120,121,292,122,293,294,295,123,124,416,296,125,297,298,91,181,93,94,96,183,98,300,184,185,186,188,126,190,100,192,102,103,193,301,104,105,302,303,304,37,305,194,195,196,306,127,307,8,128,129,9,308,309,310,311,312,206,207,208,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,447,448,132,453,335,336,214,216,455,230,337,338,339,340,341,342,343,344,231,232,345,480,218,346,347,348,349,350,136,10,233,234,12,13,138,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,235,236,14,15,493,494,495,502,503,504,373,374,237,375,376,377,378,379,221,89,380,381,507,382,383,384,385,386,509,510,516,517,518,16,139,387,18,140,141,19,388,389,390,391,392,393,394,402,238,239,520,521,395,396,397,398,399,400,240,241,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[115,253,20,255,256,21,22,23,269,271,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[242,243,244,246,150,249,158,161,171,177,286,289,91,181,93,94,96,183,98,300,184,185,186,188,126,190,100,192,102,103,193,301,104,105,302,303,37,8,129,9,206,207,208,313,314,315,316,317,318,321,322,324,325,326,328,329,330,331,332,132,453,335,336,232,345,346,221,382,383,384,385,386,18,141,19,395,396,397,398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"position":"org.easymock.internal.RecordState:126","failures":[81,288,290,227,380],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[418,419,422],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[225,188,526],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":253,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":44,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":390,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":108,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":434,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":257,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":346,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":441,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":113,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":446,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":212,"org.easymock.tests2.CaptureTest.testPrimitive":272,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":350,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":397,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":386,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":463,"org.easymock.tests.ReplayStateInvalidUsageTest.times":489,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests2.DependencyTest.testClassMocking":428,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":412,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":269,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":335,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":521,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":366,"org.easymock.tests.LimitationsTest.mockFinalMethod":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":515,"org.easymock.tests2.DependencyTest.testClassMockingSupport":429,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":447,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":410,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":483,"org.easymock.tests.UsageThrowableTest.throwError":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":499,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":135,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":399,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":179,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":466,"org.easymock.samples.PartialClassMockTest.testGetArea":150,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":484,"org.easymock.tests.MockingTest.testInterfaceMocking":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":383,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":166,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":352,"org.easymock.tests2.ThreadingTest.testChangeDefault":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":518,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":522,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":439,"org.easymock.tests.UsageOverloadedMethodTest.overloading":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":324,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":371,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":40,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":259,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":278,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":211,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":513,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":411,"org.easymock.tests2.CaptureTest.testCaptureAll":270,"org.easymock.tests.MockNameTest.defaultName":443,"org.easymock.tests2.UsageConstraintsTest.testMatches":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":398,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":514,"org.easymock.samples.BasicClassMockTest.testPrintContent":149,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":378,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":56,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":525,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":467,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":202,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":191,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":187,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":459,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":293,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":389,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":294,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":281,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":76,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.GenericTest.testBridgedEquals":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":143,"org.easymock.tests.UsageExpectAndReturnTest.longType":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":511,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":369,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":503,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":395,"org.easymock.tests.UsageCallCountTest.tooManyCalls":144,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":377,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testNiceClassMocking":209,"org.easymock.tests.MockingTest.testClassMocking":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":523,"org.easymock.tests2.UsageConstraintsTest.testContains":258,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":254,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests.MockTypeTest.fromEasyMockClass":498,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":84,"org.easymock.tests.UsageExpectAndReturnTest.object":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":296,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":64,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests.MockClassControlTest.testHashCode":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":53,"org.easymock.tests2.EasyMockSupportTest.testVerify":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":168,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":517,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":409,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":130,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":417,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":524,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":80,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":516,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":450,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":52,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":357,"org.easymock.tests.ReplayStateInvalidCallsTest.times":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":109,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":392,"org.easymock.tests2.StubTest.stubWithReturnValue":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":509,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":35,"org.easymock.samples.SupportTest.voteForRemovals":249,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":510,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":146,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":456,"org.easymock.tests.UsageExpectAndThrowTest.object":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":264,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":469,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":362,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":440,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":277,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":419,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":134,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":172,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":349,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":488,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":504,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":79,"org.easymock.tests.UsageExpectAndThrowTest.longType":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":487,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":47,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":477,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":420,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":48,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":407,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests2.CompareToTest.testCompareEqual":526,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":45,"org.easymock.tests2.CaptureTest.testCaptureLast":276,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":448,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":476,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":265,"org.easymock.tests.MockingTest.testTwoMocks":205,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":473,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":359,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":423,"org.easymock.samples.ExampleTest.removeNonExistingDocument":403,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":485,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":49,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":54,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":199,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":162,"org.easymock.tests.UsageExpectAndThrowTest.floatType":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":220,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":379,"org.easymock.tests2.UsageTest.defaultResetToNice":415,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":328,"org.easymock.tests.UsageVarargTest.differentLength":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":46,"org.easymock.tests2.CallbackTest.callback":82,"org.easymock.tests2.UsageConstraintsTest.equals":408,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":348,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":442,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":421,"org.easymock.tests.UsageThrowableTest.throwCheckedException":376,"org.easymock.tests.MockingTest.testStrictClassMocking":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":490,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":301,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests.ObjectMethodsTest.testHashCode":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":475,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":470,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.DelegateToTest.testStubDelegate":289,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":68,"org.easymock.tests.UsageExpectAndReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":263,"org.easymock.tests.UsageThrowableTest.noUpperLimit":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":152,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":198,"org.easymock.tests2.UsageConstraintsTest.testSame":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":314,"org.easymock.samples.SupportTest.addDocument":248,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":426,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":460,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":163,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":57,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":445,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":458,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":325,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":32,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":365,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":336,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":34,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":492,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":347,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":154,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":129,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":464,"org.easymock.tests2.UsageConstraintsTest.lessThan":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":279,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":418,"org.easymock.tests2.UsageConstraintsTest.testOr":255,"org.easymock.tests.UsageRangeTest.combination":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":326,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":201,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":142,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":86,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":62,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":482,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":92,"org.easymock.tests.UsageTest.unexpectedCallWithArray":137,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":474,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":327,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.samples.ExampleTest.addAndChangeDocument":247,"org.easymock.tests2.ConstraintsToStringTest.notToString":42,"org.easymock.tests.UsageStrictMockTest.testVerify":519,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":43,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":512,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":384,"org.easymock.tests.LimitationsTest.abstractClass":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":385,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
