[{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,11,12,36,13,37,14,15,38,39,40,41,42,43,44,45,46,47,17,48,49,50,18,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,23,24,2,3,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,19,101,102,21,103,104,105,106,107,108,7,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[11,12,14,15,16,17,19,20,21],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,70,72,188,189,190,8,191,114,138,140,192,158,159,160,193,194,195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[28,34,35,11,12,36,13,37,14,15,38,39,40,41,42,43,44,45,46,47,17,48,49,50,18,51,52,53,54,55,56,57,58,59,196,197,60,61,62,63,64,65,66,67,68,69,70,71,72,198,73,74,75,76,23,2,3,199,79,80,81,200,82,83,201,84,85,86,87,202,88,89,203,90,204,205,206,207,91,92,208,93,94,95,96,209,210,97,211,98,99,100,19,212,101,213,214,215,102,21,216,217,103,218,104,105,106,107,108,7,109,110,111,112,113,114,115,116,117,138,139,140,141,142,143,219,220,144,221,145,146,222,147,148,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[223,224,225,226,227,2,228,229,230],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[231,27,28,29,232,30,31,32,233,33,34,35,11,12,234,36,13,37,14,15,38,16,39,40,41,42,43,44,45,46,47,17,48,49,235,50,18,51,52,236,237,238,239,240,53,241,242,243,244,245,246,54,55,56,247,57,248,58,59,196,249,250,197,60,65,251,68,69,252,253,70,254,71,72,188,255,256,257,258,259,260,76,261,262,263,264,265,266,77,22,267,78,23,24,268,189,190,8,191,3,269,270,271,272,83,201,84,85,86,88,273,274,91,275,92,208,93,94,95,96,209,210,97,211,98,99,276,277,278,279,100,19,212,20,101,213,280,281,214,215,102,21,282,216,217,283,284,285,286,287,288,218,104,105,289,290,291,7,109,110,111,112,292,293,294,295,296,297,298,299,300,301,302,113,114,303,304,115,116,305,306,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,307,308,309,310,311,312,313,314,315,316,317,138,318,139,140,192,319,320,321,322,323,324,325,326,327,141,142,143,328,329,330,331,332,333,334,25,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,144,221,145,146,355,356,357,358,359,222,360,361,362,363,364,365,366,367,368,369,370,371,372,147,148,373,149,150,1,374,375,376,377,151,378,152,153,154,155,156,157,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,158,159,160,394,395,396,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,397,193,398,194,195,399,400,401,402,403,404,405,406,407,408,181,182,183,184,409,185,410,411,412,413,414,187],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[415],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[32,33,235,18],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[54,59,113,116,152,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[34,46,50,416],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[61,62,63,64,66,67,417,418,419,420,421,198,422,423,73,424,425,426,427,428,429,430,431,432,74,433,434,435,436,437,75,438,439,2,4,440,199,441,442,79,443,80,81,229,444,200,445,82,230,87,202,89,203,90,446,204,447,448,9,205,206,207,449,10,273,274,91,450,451,452,453,454,455,103,456,457,458,459,106,107,108,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,219,477,220,478,479,480,481,482,482,483,483,186,484,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[486],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[2,487,488,228,229,489,490,491,492,493,82,230,447,482,483],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[470,471,472,474,475],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[470,474],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:624","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[236,237,238,239,240,53,241,242,243,244,245,246,256,257,258,259,260,76,261,262,263,264,265,266,412,413],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[273,274,91,275,296,297,298,299,300,301,328,373],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[247,249,250,71,494,303,304,305,306,317,139,360,1,159,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[237,238,240,242,243,246,257,258,260,262,263,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[46,495],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[469,470,471,472,474,475],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[71,139,0,496,1,159,160],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[313,314,395,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[71,72,139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageTest.argumentsOrdered":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":338,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":412,"org.easymock.tests2.DelegateToTest.testReturnException":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":463,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":268,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":223,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":294,"org.easymock.samples.ExampleTest.answerVsDelegate":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":481,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":137,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":322,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests.UsageVarargTest.varargIntAccepted":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":6,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":272,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":95,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests2.DependencyTest.testClassMockingSupport":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":270,"org.easymock.tests.UsageThrowableTest.throwError":151,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":375,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":324,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":439,"org.easymock.samples.PartialClassMockTest.testGetArea":186,"org.easymock.tests.MockingTest.testInterfaceMocking":289,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.UsageTest.niceToStrict":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":127,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":385,"org.easymock.tests.MockClassControlTest.testEquals":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":135,"org.easymock.tests2.CaptureTest.testCaptureAll":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests.MockNameTest.defaultName":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":393,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":156,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":207,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":475,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":449,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":446,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":479,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":93,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":217,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":94,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":85,"org.easymock.tests2.CaptureTest.testCapture2_2446744":216,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":392,"org.easymock.tests.GenericTest.testBridgedEquals":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":402,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":397,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":403,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":155,"org.easymock.tests.MockingTest.testNiceClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":36,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests.MockTypeTest.fromEasyMockClass":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":224,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":405,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":177,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":357,"org.easymock.tests.MockClassControlTest.testHashCode":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":237,"org.easymock.tests2.EasyMockSupportTest.testVerify":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":430,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":269,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":255,"org.easymock.tests.UsageVarargTest.varargCharAccepted":386,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":58,"org.easymock.tests.DefaultClassInstantiatorTest.object":469,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":394,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":431,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":236,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":493,"org.easymock.samples.SupportTest.voteForRemovals":187,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":130,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":350,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":22,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":482,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":277,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":293,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":327,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":160,"org.easymock.tests.UsageVarargTest.varargByteAccepted":391,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":433,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":484,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":287,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":180,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":258,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests2.NameTest.nameForMocksControl":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":260,"org.easymock.tests2.MockedExceptionTest.testMockedException":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.samples.ExampleTest.removeNonExistingDocument":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":262,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":238,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":471,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":84,"org.easymock.tests2.MockBuilderTest.testCreateMockString":445,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":424,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":78,"org.easymock.tests.UsageVerifyTest.twoThrows":159,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":273,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.differentLength":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":257,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests2.UsageConstraintsTest.equals":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":447,"org.easymock.tests.UsageTest.openCallCountByLastCall":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":373,"org.easymock.tests.UsageCallCountTest.tooFewCalls":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":295,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":261,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":24,"org.easymock.tests.ObjectMethodsTest.testHashCode":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":226,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":225,"org.easymock.samples.ExampleTest.addDocument":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.DelegateToTest.testStubDelegate":28,"org.easymock.tests2.AnswerTest.stubAnswer":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests.UsageVarargTest.varargLongAccepted":390,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":82,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":483,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageThrowableTest.noUpperLimit":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":414,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":425,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":290,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":490,"org.easymock.tests2.UsageStrictMockTest.differentMethods":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":448,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":132,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":146,"org.easymock.tests2.MockedExceptionTest.testRealException":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":492,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":453,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":472,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":0,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":71,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":429,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":202,"org.easymock.tests.UsageTest.wrongArguments":304,"org.easymock.tests2.MockBuilderTest.testWithConstructor":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":426,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":474,"org.easymock.tests.UsageVarargTest.varargShortAccepted":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":401,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.CaptureTest.testCaptureFromStub":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":441,"org.easymock.tests.UsageTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":399,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":489,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":411,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":413,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":383}}]
