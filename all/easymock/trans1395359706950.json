[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:64","sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,3,64,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,13,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[18,19,182,183,184,185,186,187,127,128,188,141,189,190,191,192,193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[47,216,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[15,217,218,219,16,220,221,222,17,223,18,19,224,5,20,225,226,227,228,229,230,21,231,232,233,234,235,236,22,23,24,25,26,237,238,239,27,240,241,28,242,243,244,245,246,247,248,249,250,29,251,252,253,254,255,30,256,257,258,259,260,261,262,263,264,265,266,31,32,33,34,267,35,36,37,38,39,40,268,41,42,43,44,45,46,47,48,49,50,51,52,269,53,54,55,56,270,271,272,273,57,274,58,59,275,12,276,182,183,277,60,61,278,62,63,279,280,3,64,4,65,281,66,67,282,283,284,285,286,68,287,288,289,290,291,292,69,70,71,72,73,74,75,293,76,77,78,79,294,295,296,297,298,299,300,80,301,302,303,304,305,306,307,308,309,310,311,81,82,83,184,84,216,85,86,312,185,186,87,88,13,14,89,90,91,92,313,93,94,95,314,315,96,97,98,99,100,101,102,316,317,103,318,319,320,321,104,322,323,324,325,326,105,106,107,327,328,329,330,108,331,109,332,110,111,333,112,334,335,336,337,113,114,115,116,117,338,339,340,341,342,343,118,119,120,344,345,346,347,348,349,350,351,352,121,353,122,354,355,356,357,358,359,360,361,123,124,362,125,363,364,187,126,365,127,128,366,367,368,369,370,371,372,373,374,129,375,130,131,376,377,378,379,380,381,382,0,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,132,402,403,404,405,406,407,408,409,410,133,411,412,413,414,415,416,417,418,419,134,135,136,137,138,420,421,139,140,188,141,422,423,424,425,426,427,428,429,430,431,432,142,433,143,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,189,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,164,165,190,191,166,167,192,193,168,473,474,475,476,477,478,479,480,169,170,171,481,172,173,174,175,176,177,178,482,483,484,485,179,180,486,181,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[15,219,16,220,221,222,17,223,18,19,224,5,20,225,21,22,23,25,26,27,28,29,30,258,260,261,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,269,53,54,55,56,270,271,57,274,58,59,276,182,183,60,61,278,62,63,279,280,3,64,4,65,281,66,67,68,69,70,71,72,73,74,75,293,76,77,78,79,294,295,296,297,298,300,80,301,303,308,309,310,311,81,82,83,184,84,216,85,86,312,185,186,87,88,13,89,90,91,92,93,94,95,315,96,97,98,99,100,101,102,316,103,320,321,104,322,105,106,107,327,328,329,330,108,331,109,332,110,111,333,112,335,336,337,113,114,115,116,117,338,339,340,341,342,343,118,119,120,363,364,187,126,365,127,128,366,368,369,370,371,373,129,130,131,132,403,405,406,409,137,138,420,421,139,140,188,141,422,423,424,425,426,427,428,429,430,431,142,433,435,436,437,439,440,441,442,443,444,445,446,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,189,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,164,165,190,191,166,167,192,193,168,169,170,171,481,172,173,174,175,176,177,178,482,179,180,181,492,493,494,495,496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[507,187],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[15,217,218,219,16,220,221,222,17,223,18,19,224,5,20,225,226,227,228,229,230,21,231,232,233,234,235,236,22,23,24,25,26,237,238,239,27,240,241,28,242,243,244,245,246,247,248,249,250,29,251,252,253,254,255,30,256,257,258,259,260,261,262,263,264,265,266,31,32,33,34,267,35,36,37,38,39,40,268,41,42,43,44,45,46,47,48,49,50,51,52,269,53,54,55,56,270,508,271,272,509,273,57,274,58,11,59,275,12,276,182,510,183,277,60,61,278,62,63,279,280,3,64,4,65,281,66,67,282,283,284,285,286,68,287,288,289,290,291,292,69,70,71,72,73,74,75,293,76,77,78,79,294,295,296,297,298,299,300,80,301,302,303,304,511,512,513,305,306,307,308,309,310,311,81,82,83,184,84,216,85,86,312,185,186,87,88,13,14,514,89,90,91,92,313,93,94,95,314,315,96,97,98,99,100,101,102,316,317,103,318,319,320,321,104,322,323,324,325,326,105,106,107,327,328,329,330,108,331,109,332,110,111,333,112,334,335,336,337,113,114,115,116,117,338,339,340,341,342,343,118,119,120,344,345,346,347,348,349,350,351,352,121,353,122,354,355,356,357,358,359,360,361,123,124,362,125,363,364,187,126,365,127,128,366,367,368,369,370,371,372,373,374,129,375,130,131,376,377,378,515,379,380,381,382,0,383,516,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,132,402,403,404,405,406,407,408,409,410,133,411,412,413,414,415,416,417,418,419,134,135,136,137,138,420,421,139,140,188,141,422,423,424,425,426,427,428,429,430,431,432,142,433,143,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,189,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,517,164,165,190,191,166,167,192,193,168,473,474,475,476,477,478,479,480,169,170,171,481,172,173,174,175,176,177,178,482,483,484,485,179,180,486,181,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[354,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[81,86,96,342,120,347,376,377,378,406,188,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,164,167,171,172,173,174,175,176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[295,296,297,298,81,86,96,338,339,340,341,342,343,120,406,420,421,188,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,164,167,171,172,173,174,175,176,177,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[15,219,16,220,222,17,19,224,5,20,225,22,23,26,258,260,261,263,264,265,266,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,270,57,274,60,61,278,62,279,280,3,64,4,65,67,295,296,297,298,300,80,303,308,309,310,311,82,83,84,216,312,87,13,90,91,94,95,315,96,97,99,100,101,102,103,320,104,105,109,332,110,111,333,112,335,113,114,115,116,117,338,339,340,341,342,343,119,120,364,126,128,366,367,368,369,370,371,373,129,375,130,131,132,408,137,138,139,140,188,141,422,423,424,425,426,427,428,429,430,431,142,433,435,436,437,439,440,442,443,444,445,446,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,165,169,170,481,172,178,179,180,181,490,491,492,493,494,495,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[267],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[17,258,260,31,32,33,34,35,36,37,38,39,40,268,41,42,43,44,45,46,47,48,49,50,51,52,269,53,54,55,56,277,60,61,278,62,63,279,280,3,64,4,65,281,66,67,103,113,114,115,116,117,342,187,126,137,138,420,421,139,446,189,169,170,178,482],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[360,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[295,296,297,298,81,86,96,338,339,340,341,342,343,120,406,420,421,188,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,164,167,171,172,173,174,175,176,177,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[36,268,50,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[5,225,518,27,28,29,30,270,519,271,272,57,274,58,59,276,182,520,183,297,13,89,90,91,92,94,95,97,98,100,101,102,316,103,320,321,104,322,107,328,328,329,329,336,337,373,132,412,417,142,433,143,485,179,180,181,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests2.UsageTest.argumentsOrdered":186,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":216,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":327,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests.MockClassControlTest.testToString":501,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":262,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":453,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":370,"org.easymock.samples.ExampleTest.answerVsDelegate":332,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":417,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":506,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":472,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":424,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":473,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":512,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":325,"org.easymock.tests2.AnswerTest.answer":15,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":311,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":414,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":509,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":477,"org.easymock.tests2.DelegateToTest.testDelegate":303,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":468,"org.easymock.tests.LimitationsTest.mockFinalMethod":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":431,"org.easymock.tests2.DependencyTest.testClassMockingSupport":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":478,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":309,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":416,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":517,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":202,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":454,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":452,"org.easymock.tests2.UsageTest.niceToStrict":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":462,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":490,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":368,"org.easymock.tests.UsageOverloadedMethodTest.overloading":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":255,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":406,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":155,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":44,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":4,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":505,"org.easymock.tests2.EasyMockSupportClassTest.testAll":27,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":433,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":310,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":425,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests.UsageVarargTest.allKinds":446,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":430,"org.easymock.samples.BasicClassMockTest.testPrintContent":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":288,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":203,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":384,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":316,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":195,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":373,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":338,"org.easymock.tests2.CaptureTest.testCaptureFirst":67,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":151,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":445,"org.easymock.tests.GenericTest.testBridgedEquals":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":497,"org.easymock.tests.UsageExpectAndReturnTest.longType":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":520,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":471,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":269,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":422,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":398,"org.easymock.tests.UsageCallCountTest.tooManyCalls":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests.MockingTest.testNiceClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":484,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":519,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":491,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":297,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":120,"org.easymock.tests.MockTypeTest.fromEasyMockClass":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":76,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":450,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":405,"org.easymock.tests.MockClassControlTest.testHashCode":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":283,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":248,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":475,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":277,"org.easymock.tests.UsageVarargTest.varargCharAccepted":439,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":125,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":448,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":282,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":503,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":161,"org.easymock.tests.ReplayStateInvalidCallsTest.times":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":208,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":30,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":511,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":225,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":358,"org.easymock.samples.SupportTest.voteForRemovals":108,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":465,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":217,"org.easymock.tests.UsageExpectAndThrowTest.object":463,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":411,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":51,"org.easymock.tests2.DelegateToTest.testWrongClass":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":328,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":306,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":464,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":369,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":136,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":189,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":444,"org.easymock.tests2.ThreadingTest.testThreadSafe":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":251,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":495,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":451,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":123,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":399,"org.easymock.tests.UsageExpectAndThrowTest.longType":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.NameTest.nameForMocksControl":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":241,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":457,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":479,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":52,"org.easymock.tests.MockingTest.testTwoMocks":485,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":209,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":461,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":185,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":284,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":24,"org.easymock.tests2.MockBuilderTest.testCreateMockString":183,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":499,"org.easymock.tests.UsageExpectAndThrowTest.floatType":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":242,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":239,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":514,"org.easymock.tests.UsageVerifyTest.twoThrows":188,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":401,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":295,"org.easymock.tests2.UsageTest.defaultResetToNice":312,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":354,"org.easymock.tests.UsageVarargTest.differentLength":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.UsageConstraintsTest.equals":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":420,"org.easymock.tests.UsageCallCountTest.tooFewCalls":493,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.tests.ObjectMethodsTest.testHashCode":449,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":211,"org.easymock.tests2.NameTest.nameForNiceMock":265,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":252,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.AnswerTest.stubAnswer":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":443,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":329,"org.easymock.tests.UsageThrowableTest.noUpperLimit":481,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":304,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":145,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":330,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":313,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":196,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":243,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":289,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":194,"org.easymock.tests2.NameTest.nameForMock":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":510,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":467,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests2.NameTest.nameForStrictMock":264,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":305,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":200,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":352,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":247,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests2.MockBuilderTest.testWithConstructor":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":244,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":500,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.varargShortAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":383,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":496,"org.easymock.tests2.UsageConstraintsTest.cmpTo":42,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":218,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":347,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":272,"org.easymock.tests.UsageTest.unexpectedCallWithArray":190,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":210,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.samples.ExampleTest.addAndChangeDocument":335,"org.easymock.tests.UsageStrictMockTest.testVerify":367,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":331,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.LimitationsTest.abstractClass":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":150,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75}}]
