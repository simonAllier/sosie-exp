[{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:105","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,8,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,18,19,114],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[115,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[24,24,25,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,117,118,119,120,121,122,123,124,79,80,81,82,83,84,85,86,87,88,89,90,91,92,125,126,115,127,93,128,129,130,131,132,133,0,1,134,135,136,137,138,2,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,95,167,168,169,170,171,172,173,174,175,96,97,176,4,5,6,7,177,178,179,180,181,182,183,184,8,185,9,10,186,187,188,189,190,191,192,98,99,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,100,101,102,232,233,234,235,236,116,237,103,104,105,106,107,238,11,239,12,240,241,13,14,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,15,16,17,265,266,267,268,269,270,271,272,273,274,108,109,110,111,112,275,276,277,278,279,113,280,281,18,19,282,20,21,283,284,285,286,287,288,114,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[26,27,28,29,30,31,32,33,41,42,43,44,301,302,303,304,305,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,117,118,119,120,121,122,123,124,79,80,81,82,83,84,85,86,87,88,89,90,91,92,125,126,115,127,93,128,129,130,131,132,133,0,1,134,135,136,137,138,2,3,139,140,94,154,306,307,308,155,156,309,159,160,161,162,163,164,165,166,310,95,311,167,312,168,313,314,170,171,174,175,96,4,5,6,7,177,179,180,181,182,183,184,8,185,9,10,186,187,188,189,190,191,192,98,99,315,316,317,193,194,318,195,319,320,321,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,322,323,324,325,326,216,217,218,219,327,220,328,329,330,331,332,333,221,222,223,224,225,226,227,334,228,229,230,231,100,101,102,232,335,233,336,234,235,337,236,338,339,116,340,237,103,104,105,106,107,238,11,239,12,240,241,13,14,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,341,263,264,15,16,17,342,343,344,345,346,347,265,266,267,268,269,270,271,272,273,348,349,350,351,274,352,108,109,110,111,112,275,276,277,278,279,113,280,281,18,19,282,20,21,283,284,285,286,287,288,114,289,290,291,292,293,294,295,296,297,298,299,300,353,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[356,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[46,154,156,310,358,179],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[42,43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[79,81,83,84,85,88,89,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[53,54,56,58,59,61,71,76,79,81,89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,9,359,239,12,13,14,16,17,352,113,18,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,360,304,361,305,362,363,364,45,365,366,46,367,368,369,370,371,372,373,374,375,47,376,377,378,379,380,48,381,382,49,383,50,51,52,53,54,384,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,117,385,386,118,119,120,121,122,123,124,79,80,81,82,83,84,85,86,87,88,89,90,91,92,125,126,115,127,93,387,128,129,130,388,131,132,133,0,1,134,135,136,137,138,2,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,306,307,308,155,156,157,158,389,309,159,160,161,162,163,164,165,166,310,390,95,391,311,167,312,168,313,314,358,169,170,171,172,392,173,174,175,393,394,395,96,97,396,397,398,399,400,176,401,402,403,404,405,406,407,4,5,6,7,177,408,409,410,411,412,413,178,414,415,416,417,418,419,179,180,181,182,183,184,8,185,9,10,186,187,188,189,190,191,192,420,98,99,315,356,421,422,423,357,424,316,317,425,193,194,318,195,319,320,321,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,426,322,323,427,324,325,326,428,429,216,217,218,219,327,220,328,329,330,331,332,333,430,221,222,431,432,433,434,435,223,224,225,436,226,227,334,228,229,230,231,100,101,102,437,232,335,233,336,234,235,337,236,338,339,116,340,237,103,104,105,106,107,238,11,239,12,240,241,13,14,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,341,263,264,15,16,17,438,439,440,342,441,442,343,344,345,346,347,443,444,445,265,266,267,268,269,270,271,272,446,447,273,448,348,349,350,351,449,274,352,108,109,110,111,112,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,275,276,277,278,279,474,475,476,113,280,281,18,19,282,20,21,283,284,285,286,287,288,114,289,477,478,479,480,481,290,291,292,293,294,295,296,297,298,299,300,353,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,471,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[385,119,120,456],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[482,483,484,485,486,487,488,171,175,393,408],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[489,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","failures":[24,25,482,483,42,362,363,364,45,365,366,46,367,368,369,370,371,372,373,374,375,47,376,377,378,379,380,48,381,382,484,485,486,389,487,488,171,175,393,177,408],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,443,444,445,457],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,117,118,119,120,121,122,123,124,79,80,81,82,84,85,86,87,88,89,92,125,126,93,128,129,131,133,0,134,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,163,164,165,166,95,167,168,169,170,171,172,173,174,175,96,97,176,4,5,6,7,177,178,179,180,181,182,184,8,10,186,187,188,189,190,191,192,98,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,323,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,100,101,102,232,103,104,107,11,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,15,16,17,266,267,273,274,108,109,110,111,112,275,276,277,278,279,281,19,21,283,284,285,286,287,288,114,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[53,60,66,78],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[68],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[492,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[492,493,494,495,239,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[9,10,200,204,205,207,210,247,251,252,254,257,458,20,21,477,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[182,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[315,356,421,422,357,424],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[443,444,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,496,497,490,498,493,499,500,8,9,10,426,322,11,12,13,14,15,16,17,349,449,274,113,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[24,24,25,25,42,45,46,47,49,306,155,309,160,162,167,171,175,177,178],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":37,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":286,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":328,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":191,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.UsageConstraintsTest.testNull":56,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":333,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":490,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.DependencyTest.testClassMocking":394,"org.easymock.tests2.AnswerTest.answer":117,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":442,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests2.DependencyTest.testClassMockingSupport":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":426,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":382,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":234,"org.easymock.tests.MockingTest.testInterfaceMocking":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":429,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":155,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":66,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.MockClassControlTest.testEquals":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests.MockNameTest.defaultName":420,"org.easymock.tests2.UsageConstraintsTest.testMatches":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageVarargTest.allKinds":100,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":313,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":424,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":310,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":232,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":285,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":159,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.GenericTest.testBridgedEquals":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":354,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":355,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests.MockingTest.testNiceClassMocking":321,"org.easymock.tests.MockingTest.testClassMocking":317,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":227,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":331,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":475,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":94,"org.easymock.tests.UsageVarargTest.varargCharAccepted":226,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":474,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":329,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":288,"org.easymock.tests2.StubTest.stubWithReturnValue":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":486,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":385,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":72,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":361,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":157,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":440,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":300,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":428,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":187,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":423,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":158,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":175,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":73,"org.easymock.tests.MockingTest.testTwoMocks":425,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":77,"org.easymock.samples.ExampleTest.removeNonExistingDocument":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":421,"org.easymock.tests2.ConstraintsToStringTest.andToString":498,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":160,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":327,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":168,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":483,"org.easymock.tests2.UsageConstraintsTest.testNotNull":76,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":391,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":192,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":316,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":173,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":93,"org.easymock.tests2.DependencyTest.testInterfaceMocking":96,"org.easymock.samples.ExampleTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":177,"org.easymock.tests2.ConstraintsToStringTest.orToString":496,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":39,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":319,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":9,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":58,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":162,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":353,"org.easymock.tests2.UsageConstraintsTest.cmpTo":63,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":233,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":307,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests2.ConstraintsToStringTest.notToString":497,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":36,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":224}}]
