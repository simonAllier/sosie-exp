[{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"name"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:170","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[12,13,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,1,2,150,3,151,4,5,152,153,154,155,156,157,158,159,160,161,7,162,163,164,8,165,166,167,168,169,170,171,9,172,10,173,174,175,176,177,178,11,179,180,181,12,13,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[148,160,162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[243],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[9,10,173,244,174,175,178,245,11],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":144,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":195,"org.easymock.tests2.StubTest.stubWithReturnValue":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.MockingTest.testPartialClassMocking":53,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":162,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":152,"org.easymock.tests2.UsageTest.wrongArguments":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":99,"org.easymock.tests.UsageStrictMockTest.range":132,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":217,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":103,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.UsageUnorderedTest.message":40,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":92,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":37,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":242,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":102,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":80,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":243,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":212,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":223,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":163,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":159,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":240,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":215,"org.easymock.tests2.UsageTest.niceToStrict":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":89,"org.easymock.tests2.CallbackTest.callback":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":101,"org.easymock.tests.UsageCallCountTest.tooFewCalls":35,"org.easymock.tests.UsageOverloadedMethodTest.overloading":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests2.EasyMockSupportClassTest.testAll":238,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":219,"org.easymock.tests2.UsageConstraintsTest.testMatches":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":221,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests.UsageVarargTest.allKinds":94,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":216,"org.easymock.tests.UsageVarargTest.varargLongAccepted":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":200,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.tests2.UsageConstraintsTest.testSame":151,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":189,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":93,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":38,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageCallCountTest.tooManyCalls":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":218,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":213,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":235,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":142,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests2.EasyMockSupportTest.testVerify":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests2.CaptureTest.testCapture":245,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141}}]
