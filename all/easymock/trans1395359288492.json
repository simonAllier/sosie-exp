[{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,7,27,28,29,30,10,11,31,32,15,33,34,35,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,4,81,82,83,84,85,86,87,88,89,90,91,92,8,27,28,93,94,29,30,95,96,97,98,0,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,9,10,11,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,12,13,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,31,199,2,3,200,201,202,203,204,205,32,14,206,15,16,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,23,33,315,316,317,318,319,34,35,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,24,360,25,26,361,362,363,364,365],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[242,247,257,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[366],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,7,27,28,29,30,10,11,31,32,15,33,34,35,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[368,369,370,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[4,374],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[78,79,80,4,375,7,376,377,27,28,29,30,10,11,155,31,32,15,16,229,304,310,311,312,33,34,35,320,25,26],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[327,328],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89,92,8,93,94,95,101,111,112,115,117,118,119,120,122,123,124,125,127,128,129,130,9,11,155,156,157,158,160,163,198,14,15,16,378,379,380,381,382,237,238,239,241,242,243,244,248,250,252,253,254,255,256,262,263,264,267,268,269,275,278,281,282,286,287,295,311,313,23,317,318,320,321,323,327,352,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[383,293,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":240,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageTest.argumentsOrdered":35,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":316,"org.easymock.tests2.StubTest.stubWithReturnValue":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":292,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":68,"org.easymock.tests.MockingTest.testPartialClassMocking":108,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests.MockClassControlTest.testToString":149,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":363,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.UsageExpectAndThrowTest.object":180,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":289,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":370,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":202,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":344,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":167,"org.easymock.tests2.UsageConstraintsTest.testNull":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":154,"org.easymock.tests2.CaptureTest.testPrimitive":277,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":84,"org.easymock.tests2.CaptureTest.testCaptureNone":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":211,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":376,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":144,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":52,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":138,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":307,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests2.StubTest.stub":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":69,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.tests2.SerializationTest.testClass":290,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests2.AnswerTest.answer":323,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":302,"org.easymock.tests2.CaptureTest.testAnd":274,"org.easymock.tests2.UsageTest.strictResetToDefault":314,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":339,"org.easymock.tests2.NameTest.nameForMocksControl":357,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.DelegateToTest.testDelegate":298,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":56,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":309,"org.easymock.tests.MockingTest.testNicePartialClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":336,"org.easymock.tests2.CaptureTest.testCaptureLast":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":350,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":245,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":61,"org.easymock.tests.MockingTest.testTwoMocks":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":178,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":263,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":166,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests2.ConstraintsToStringTest.andToString":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":377,"org.easymock.tests2.MockBuilderTest.testCreateMockString":312,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":86,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":254,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":326,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":364,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":341,"org.easymock.tests2.UsageTest.niceToStrict":315,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testNotNull":262,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":306,"org.easymock.tests2.UsageTest.defaultResetToNice":319,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.CallbackTest.callback":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":179,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":161,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":203,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests2.EasyMockSupportClassTest.testAll":362,"org.easymock.tests.MockClassControlTest.testEquals":153,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":301,"org.easymock.tests2.CaptureTest.testCaptureAll":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.MockNameTest.defaultName":91,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":348,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":85,"org.easymock.tests.ObjectMethodsTest.testHashCode":214,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests2.NameTest.nameForNiceMock":356,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests.UsageVarargTest.allKinds":146,"org.easymock.tests2.DependencyTest.testInterfaceMocking":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":60,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests2.AnswerTest.stubAnswer":327,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":72,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":342,"org.easymock.tests.UsageVarargTest.varargLongAccepted":143,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":322,"org.easymock.tests2.ConstraintsToStringTest.orToString":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":256,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":238,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.SerializationTest.test":291,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.UsageConstraintsTest.testSame":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":67,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests.GenericTest.testPackageScope":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":286,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":311,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":145,"org.easymock.tests.GenericTest.testBridgedEquals":65,"org.easymock.tests2.NameTest.nameForMock":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":79,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":82,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageCallCountTest.tooManyCalls":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":169,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":6,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":345,"org.easymock.tests2.NameTest.nameForStrictMock":355,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":241,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":335,"org.easymock.tests.MockTypeTest.fromEasyMockClass":165,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":304,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":371,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":140,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":215,"org.easymock.tests.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests2.CaptureTest.testCaptureRightOne":284,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":53,"org.easymock.tests2.UsageConstraintsTest.testOr":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":369,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":136,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests.MockClassControlTest.testHashCode":152,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":148,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.UsageVarargTest.varargShortAccepted":142,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":78,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests.UsageVarargTest.varargCharAccepted":139,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":213,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":177,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests2.ConstraintsToStringTest.anyToString":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.CaptureTest.testCapture":366,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":340,"org.easymock.tests2.UsageConstraintsTest.constraints":239,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":176,"org.easymock.tests2.ConstraintsToStringTest.notToString":19,"org.easymock.tests.UsageStrictMockTest.testVerify":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":365,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":58,"org.easymock.tests2.UsageTest.resumeIfFailure":320,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":137}}]
