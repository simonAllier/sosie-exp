[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,41,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[95,96,42,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[104,105,106,107,108],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[34,109,40,110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:145","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[111,1,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,105,106,43,137,138,139,140,44,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,170,107,171,172,5,45,6,7,46,47,8,173,174,175,176,177,178,48,179,180,49,50,51,52,53,54,9,10,11,12,13,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,197,14,15,198,199,200,76,201,202,203,77,78,21,22,23,24,25,204,205,206,207,208,209,79,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,80,226,227,228,229,230,231,81,232,233,234,235,236,237,238,26,239,108,240,241,242,86,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"status":-2,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[242,273,250,274,275,276,277,278,279],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[230,280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[283,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[111,1,2,112,113,114,115,116,117,118,119,120,121,285,122,123,124,100,101,102,125,126,127,286,128,129,130,131,132,133,134,135,287,3,136,105,106,43,137,138,139,140,44,141,142,143,288,289,290,291,292,293,294,295,296,297,298,299,300,301,144,145,302,146,303,304,305,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,170,107,171,172,306,95,96,42,307,97,308,5,45,6,7,46,47,8,309,310,311,312,313,314,315,316,317,318,319,320,173,174,175,176,177,321,178,48,322,323,179,180,49,50,51,52,53,54,9,10,11,12,13,181,182,183,184,185,324,325,326,327,328,186,187,188,189,190,191,192,329,193,194,330,331,195,196,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,332,333,197,334,14,15,198,335,336,337,338,339,340,341,342,16,343,344,103,17,18,345,346,347,348,98,349,350,351,19,352,353,354,355,20,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,199,200,76,201,202,203,77,78,373,374,375,376,377,21,22,23,24,25,204,378,205,206,207,379,208,209,79,210,211,212,213,214,215,216,217,218,219,220,221,222,380,381,223,224,225,80,226,227,228,229,230,231,81,232,233,234,235,236,237,238,26,239,108,240,241,242,273,382,383,384,385,386,86,387,388,243,244,245,246,247,248,249,250,251,252,389,390,391,253,392,393,254,394,395,396,397,398,399,400,401,402,255,403,404,405,406,407,256,408,409,257,258,410,411,259,260,261,262,275,263,264,265,266,267,268,269,412,270,271,272,413,414,283,284,415,416,27,28,417,418,419,29,30,31,32,420,421,422,423,424,33,425,34,35,280,36,37,426,427,109,428,429,38,39,40,430,431,432,433,281,434,435,436,437,438,439,282,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,87,461,88,462,89,90,91,463,464,92,93,41,94,465,466,467,468,469,470,471,472,473,474,475,476,477,99,478,479,480,481,482,82,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[364,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[485,136,105,106,137,139,141,142,169,4,107,171,227,228,233,234,26,108,240,383,384,385,386],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[114,291,296,330,250,257,486,258,410,259,260,261,262,263,264,487,265,435,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[111,1,1,2,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,105,106,43,137,138,139,140,44,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,4,170,107,171,172,306,5,45,6,7,46,47,8,310,312,313,315,318,320,173,174,175,176,323,180,49,50,51,52,53,54,9,10,11,12,13,181,182,183,184,185,327,328,186,187,188,189,193,194,196,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,197,14,15,198,336,199,200,76,201,202,203,77,78,21,22,23,24,25,204,378,205,206,207,208,209,79,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,80,226,227,228,229,230,231,81,232,233,234,235,236,237,238,26,239,108,240,241,242,383,384,385,386,86,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,264,265,266,267,268,269,270,271,272,414,283,284,415,416,27,28,417,418,29,30,31,32,420,421,423,424,33,425,34,35,280,36,37,426,427,109,429,38,39,40,430,431,432,433,281,434,437,282,441,450,87,461,88,462,89,90,91,463,464,92,93,41,94,465,471,478,479,480,482,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":418,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":234,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":230,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":115,"org.easymock.tests2.DelegateToTest.testReturnException":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":50,"org.easymock.tests.MockingTest.testPartialClassMocking":144,"org.easymock.tests.MockClassControlTest.testToString":337,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":382,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":56,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":254,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":485,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":6,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":342,"org.easymock.tests2.CaptureTest.testPrimitive":462,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":8,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.UsageTest.argumentsOrdered":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":13,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":471,"org.easymock.tests.ReplayStateInvalidUsageTest.times":317,"org.easymock.tests2.DependencyTest.testClassMocking":380,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":249,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":293,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests2.DelegateToTest.testDelegate":482,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":71,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests2.DependencyTest.testClassMockingSupport":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":288,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":247,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":295,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":114,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":57,"org.easymock.tests2.UsageTest.niceToStrict":229,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":259,"org.easymock.tests2.MockBuilderTest.testCreateMock":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":65,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":195,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":483,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":425,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":286,"org.easymock.tests2.EasyMockSupportClassTest.testAll":253,"org.easymock.tests.MockClassControlTest.testEquals":341,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":73,"org.easymock.tests2.CaptureTest.testCaptureAll":461,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":248,"org.easymock.tests.MockNameTest.defaultName":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":309,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.BasicClassMockTest.testPrintContent":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":77,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":54,"org.easymock.tests2.UsageConstraintsTest.greaterThan":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":378,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":442,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":435,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":49,"org.easymock.tests2.CaptureTest.testCaptureFirst":465,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":415,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":74,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":428,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests.MockingTest.testNiceClassMocking":305,"org.easymock.tests.MockingTest.testClassMocking":300,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":486,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":55,"org.easymock.tests.MockTypeTest.fromEasyMockClass":294,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":208,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":370,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":18,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":307,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":125,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageVarargTest.varargCharAccepted":128,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.DefaultClassInstantiatorTest.object":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":100,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":440,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":256,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":338,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":52,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.samples.SupportTest.voteForRemovals":113,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":68,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":387,"org.easymock.tests.UsageExpectAndThrowTest.object":66,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":427,"org.easymock.tests2.DelegateToTest.testWrongClass":480,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests.UsageStrictMockTest.range":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":459,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests2.CaptureTest.testCaptureNone":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":42,"org.easymock.tests.UsageUnorderedTest.message":198,"org.easymock.tests.UsageVerifyTest.twoReturns":106,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":403,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":123,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":371,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageConstraintsTest.any":423,"org.easymock.tests2.StubTest.stub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":51,"org.easymock.tests.UsageExpectAndThrowTest.longType":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests2.SerializationTest.testClass":250,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests2.NameTest.nameForMocksControl":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":430,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":262,"org.easymock.tests.MockingTest.testNicePartialClassMocking":145,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.CaptureTest.testCaptureLast":463,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":301,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":64,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":362,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":265,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":58,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":243,"org.easymock.tests.UsageVerifyTest.twoThrows":105,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":255,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":441,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.UsageVarargTest.differentLength":130,"org.easymock.tests2.CallbackTest.callback":225,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":438,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.MockingTest.testStrictClassMocking":299,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":270,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.ObjectMethodsTest.testHashCode":369,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":416,"org.easymock.tests2.NameTest.nameForNiceMock":385,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":278,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.DelegateToTest.testStubDelegate":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":251,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.samples.SupportTest.addDocument":112,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageStrictMockTest.differentMethods":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":439,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":70,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":206,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":0,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":320,"org.easymock.tests2.NameTest.nameForStrictMock":384,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":458,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":426,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":258,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":431,"org.easymock.tests.UsageTest.wrongArguments":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":396,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":424,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":388,"org.easymock.tests2.CompareToTest.testLessThan":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":103,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":310,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":410,"org.easymock.tests.UsageTest.unexpectedCallWithArray":138,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.constraints":417,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageStrictMockTest.testVerify":306,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":111,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":12,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
