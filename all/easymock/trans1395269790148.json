[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[4,23,24,5,6,7,8,9,10,25,26,27,28,29,30,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,12,56,57,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[58,59],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,35,65,66,67,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[75,76,77,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[103,104,105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:175","sourceCode":"java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass()","type":"CtAssignmentImpl"},"failures":[106,107,108,109,110,111,112,113,100,114,115,116,117,59,68,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,103,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,78,14,15],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[104],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[27,29],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[156,157,158,159,160,161,26,27,162,29,30,31,32,33,66,135,163,164,165,166,167,168,169,170,171,172,173,174,175,176,20,177,105,178,179,180,181,182,183,184,185,186],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[23,74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[187,188,4,23,189,190,191,60,61,192,193,194,195,196,9,197,161,198,11,138,199,200,201,202,203,204,205,206,207,208,209,210,167,211,212,213,214,215,216,169,217,218,219,220,170,171,221,172,222,223,173,224,225,104,226,227,174,175,176,228,20,229,230,231,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[187,188,4,23,189,234,235,236,190,191,237,238,24,239,240,241,242,243,244,245,246,247,248,249,250,251,252,156,253,60,61,254,157,158,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,192,193,194,195,196,159,282,283,284,110,285,286,287,288,289,290,291,292,293,5,6,7,8,9,10,294,160,25,295,296,297,298,299,300,301,302,303,304,197,305,306,307,308,309,310,311,312,313,314,315,316,161,116,117,317,26,318,27,162,28,29,30,31,32,33,198,11,34,319,62,63,64,35,65,66,67,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,68,118,119,120,121,122,123,124,127,129,71,320,130,131,321,79,79,80,80,322,323,324,325,326,327,328,329,330,331,332,333,74,12,134,135,334,136,103,137,335,138,140,336,163,141,337,338,339,340,341,342,164,343,199,344,165,166,345,346,21,22,200,347,201,202,203,204,205,206,207,208,209,210,167,211,212,213,168,348,349,350,351,214,215,216,169,217,218,219,220,170,171,172,222,223,173,224,225,104,226,227,174,175,176,228,20,229,230,231,144,352,89,145,353,354,90,147,355,356,357,92,358,359,360,361,56,362,363,364,177,105,365,57,366,367,178,368,369,370,371,372,373,374,375,376,179,377,378,180,379,181,380,182,183,381,382,184,185,186,383,76,77,78,13,14,15,16,384,385,386,387,232,233],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":169,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":105,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":71,"org.easymock.tests2.DelegateToTest.testReturnException":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":234,"org.easymock.tests.MockClassControlTest.testToString":119,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":388,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":36,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageTest.wrongArguments":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":325,"org.easymock.tests2.UsageConstraintsTest.testNull":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":124,"org.easymock.tests2.CaptureTest.testPrimitive":204,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":55,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests.ReplayStateInvalidUsageTest.times":313,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests2.AnswerTest.answer":358,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests2.CaptureTest.testAnd":201,"org.easymock.tests2.UsageTest.strictResetToDefault":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":380,"org.easymock.tests2.DelegateToTest.testDelegate":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":51,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":81,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":18,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":37,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":88,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":85,"org.easymock.tests.UsageOverloadedMethodTest.overloading":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":173,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":147,"org.easymock.tests.MockClassControlTest.testEquals":123,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":53,"org.easymock.tests2.CaptureTest.testCaptureAll":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":305,"org.easymock.samples.ExampleTest.voteForRemovals":329,"org.easymock.tests.UsageVarargTest.allKinds":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":317,"org.easymock.samples.BasicClassMockTest.testPrintContent":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.samples.ExampleTest.voteForRemoval":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":142,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":335,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":379,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":369,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":179,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":86,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests.MockingTest.testNiceClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":352,"org.easymock.tests.MockingTest.testClassMocking":107,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":286,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":217,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":233,"org.easymock.tests.UsageExpectAndReturnTest.object":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":382,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.MockClassControlTest.testHashCode":122,"org.easymock.tests2.EasyMockSupportTest.testVerify":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":121,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":357,"org.easymock.tests2.UsageTest.resumeIfFailure":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":73,"org.easymock.samples.SupportTest.voteForRemovals":323,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":48,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests.UsageExpectAndThrowTest.object":46,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.DelegateToTest.testWrongClass":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":191,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":79,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests2.CaptureTest.testCaptureNone":209,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":161,"org.easymock.tests.UsageVerifyTest.twoReturns":318,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":153,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":290,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests2.CaptureTest.testCapture_2617107":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":312,"org.easymock.tests.UsageExpectAndThrowTest.longType":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":311,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":337,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests2.NameTest.nameForMocksControl":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.CaptureTest.testCaptureLast":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":367,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":330,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":309,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":112,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":22,"org.easymock.tests2.MockBuilderTest.testCreateMockString":377,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":149,"org.easymock.tests.UsageExpectAndThrowTest.floatType":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":359,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests.LimitationsTest.privateConstructor":126,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":82,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests2.UsageTest.defaultResetToNice":366,"org.easymock.samples.ExampleTest.voteAgainstRemovals":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":272,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests.MockingTest.testStrictClassMocking":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":353,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":361,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.NameTest.nameForNiceMock":386,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":347,"org.easymock.tests2.DependencyTest.testInterfaceMocking":332,"org.easymock.samples.ExampleTest.addDocument":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":154,"org.easymock.tests2.DelegateToTest.testStubDelegate":349,"org.easymock.tests2.AnswerTest.stubAnswer":360,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":61,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests.UsageExpectAndReturnTest.floatType":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":80,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":206,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":111,"org.easymock.tests2.UsageConstraintsTest.testSame":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":258,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":150,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests2.NameTest.nameForMock":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":269,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":316,"org.easymock.tests2.NameTest.nameForStrictMock":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":133,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":371,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":220,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor":95,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":289,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests2.UsageConstraintsTest.constraints":216,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.samples.ExampleTest.addAndChangeDocument":331,"org.easymock.tests.UsageStrictMockTest.testVerify":256,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":320,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests.LimitationsTest.abstractClass":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296}}]
