[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,0,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[22,25,26,50,59,60,61,64,67,68,103,77,97],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[104],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[105,106,107,108,63,98],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[110,111,112,113,114,115,116,117,37,39,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[150,151,152,110,110,111,111,153,11,154,155,156,157,158,159,160,12,161,162,13,163,14,112,113,164,165,166,167,114,168,169,170,171,36,37,172,38,39,41,173,42,43,174,175,176,44,45,122,46,47,177,48,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,178,179,180,181,182,183,184,185,104,186,187,188,189,190,191,70,71,72,192,193,194,81,195,196,197,198,199,200,201,90,93,202,203,204,205],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[17,18,19,20,22,24,25,50,51,54,55,59,60,61,63,64,66,67,77,82,97,99,100,101],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[207,208,209,210],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[211,212],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[114,213,168,214],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[180,184],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,3,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[114,213,168,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[0,4,217,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:99","failures":[218,219,220,221,150,222,223,35,224,175,69,225],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226,227,228],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[150,151,152,110,110,111,111,153,11,154,155,156,157,158,159,160,12,161,162,13,163,14,112,113,164,165,166,229,167,114,168,169,170,171,36,37,172,38,39,41,173,42,43,174,175,176,44,45,122,46,47,177,48,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,178,179,180,181,182,183,184,185,104,186,187,188,189,190,191,70,71,72,192,193,194,81,195,196,197,198,199,200,201,90,93,202,203,204,205],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[11,1,4,114,213,175,44,45,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[241,242,218,219,243,220,244,221,150,245,151,152,246,222,247,248,153,11,249,154,155,156,157,250,158,160,12,161,162,13,163,14,251,252,253,254,255,256,257,258,15,16,259,260,261,262,263,164,165,166,264,265,266,267,268,269,17,18,19,20,21,270,22,23,24,25,26,271,272,0,1,273,274,2,275,3,4,207,5,223,276,217,277,208,278,27,279,280,6,216,281,282,283,7,284,209,285,286,287,288,289,28,29,290,291,292,293,294,295,296,297,298,299,300,213,168,169,170,301,302,303,30,304,31,305,32,33,306,34,35,307,224,308,171,36,172,309,118,40,310,311,215,312,313,314,315,316,317,318,319,41,42,43,174,175,176,44,45,46,47,48,320,226,321,322,227,228,49,323,50,51,52,53,324,325,326,54,55,56,57,8,327,9,328,329,330,331,332,333,334,10,335,336,337,125,126,128,130,131,132,133,136,139,141,142,143,144,145,146,147,338,339,340,178,341,342,343,344,345,346,230,347,231,348,349,179,180,181,182,183,184,350,185,104,186,187,188,189,351,232,233,352,234,235,58,236,237,238,239,353,59,60,61,354,355,356,357,358,359,360,361,62,362,63,64,65,66,67,68,363,69,364,365,366,190,191,70,71,72,192,193,194,367,368,369,370,73,74,103,371,75,372,373,76,77,78,374,375,376,377,378,379,79,380,381,80,81,82,382,383,384,385,386,387,388,389,390,83,391,84,85,392,393,86,87,88,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,195,196,197,414,415,416,201,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,89,481,482,483,484,485,486,90,91,92,93,94,95,202,203,204,205,96,97,98,99,487,488,100,101,102,489,490,491,492,493,109,494,495,496,497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[112,113,498,499,500,501,502,114,121,122],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[180,184],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"failures":[241,242,218,219,220,221,150,110,110,111,111,222,153,11,249,154,155,156,158,161,162,13,112,251,253,15,164,165,166,264,267,268,22,24,25,271,272,0,1,274,2,275,3,4,207,223,276,217,277,208,278,27,279,280,6,216,281,283,7,284,209,28,295,296,297,298,299,300,114,213,303,30,304,31,305,32,33,306,34,35,307,224,171,36,37,172,309,38,39,40,310,311,215,312,313,318,319,42,175,44,45,47,320,226,321,322,227,228,49,323,50,52,324,325,326,56,57,8,327,328,329,332,333,334,10,335,336,337,128,131,141,147,339,178,346,230,347,231,348,186,188,59,60,61,354,355,356,357,358,359,360,361,64,66,67,69,364,365,366,74,371,372,373,77,374,375,376,377,378,82,382,383,384,385,386,387,388,389,390,84,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,198,199,200,417,418,419,420,421,422,423,424,453,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,204,96,97,487,488,102,489,490,491,492,493,109,494,495,496,497],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":247,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":383,"org.easymock.tests.MockingTest.testPartialClassMocking":198,"org.easymock.tests.MockClassControlTest.testToString":70,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":269,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":394,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":207,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":374,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":369,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":93,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":416,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":194,"org.easymock.tests2.CaptureTest.testPrimitive":328,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":413,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":491,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests.InvocationTest.testEquals":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":486,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.DependencyTest.testClassMocking":265,"org.easymock.tests2.AnswerTest.answer":320,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":454,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":317,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":323,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":494,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":409,"org.easymock.tests.LimitationsTest.mockFinalMethod":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.DependencyTest.testClassMockingSupport":266,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":329,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":315,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":427,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":92,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":149,"org.easymock.samples.PartialClassMockTest.testGetArea":150,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":428,"org.easymock.tests.MockingTest.testInterfaceMocking":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":496,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":136,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":240,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":105,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":367,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":472,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":277,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":334,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":352,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.MockClassControlTest.testEquals":193,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":316,"org.easymock.tests2.CaptureTest.testCaptureAll":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":353,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":279,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":364,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":13,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":185,"org.easymock.samples.ExampleTest.voteForRemoval":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":178,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":304,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":382,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":295,"org.easymock.tests2.CaptureTest.testCaptureFirst":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":31,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":468,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":464,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":412,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":410,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":399,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testNiceClassMocking":201,"org.easymock.tests.MockingTest.testClassMocking":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":173,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":166,"org.easymock.tests2.UsageConstraintsTest.testFind":274,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":347,"org.easymock.tests.MockTypeTest.fromEasyMockClass":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageExpectAndReturnTest.object":471,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":492,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":477,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":372,"org.easymock.tests.MockClassControlTest.testHashCode":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":255,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":138,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":314,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":248,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":349,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.object":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":400,"org.easymock.tests.CapturesMatcherTest.test":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":478,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":147,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":71,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":385,"org.easymock.tests2.StubTest.stubWithReturnValue":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":470,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":283,"org.easymock.tests2.SerializationTest.testAllMockedMethod":168,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":453,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":106,"org.easymock.samples.SupportTest.voteForRemovals":222,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":406,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":459,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":226,"org.easymock.tests.UsageExpectAndThrowTest.object":404,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":489,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":490,"org.easymock.samples.ConstructorCalledMockTest.testTax":110,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":301,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":405,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":497,"org.easymock.tests2.CaptureTest.testCaptureNone":333,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":142,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":151,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":377,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndThrowTest.longType":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":384,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":480,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":20,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":130,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":398,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests2.CaptureTest.testCaptureLast":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":281,"org.easymock.tests.MockingTest.testTwoMocks":197,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":402,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":284,"org.easymock.samples.ExampleTest.removeNonExistingDocument":244,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":429,"org.easymock.tests.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndThrowTest.floatType":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":322,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageVarargTest.differentLength":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests2.UsageConstraintsTest.equals":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":159,"org.easymock.tests.UsageTest.openCallCountByLastCall":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":376,"org.easymock.tests.UsageCallCountTest.tooFewCalls":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":108,"org.easymock.tests.MockingTest.testStrictClassMocking":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":348,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":309,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests2.CompareToTest.testGreateOrEqual":210,"org.easymock.tests.ObjectMethodsTest.testHashCode":380,"org.easymock.tests2.NameTest.nameForNiceMock":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.DelegateToTest.testStubDelegate":297,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":479,"org.easymock.tests.UsageExpectAndReturnTest.floatType":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":169,"org.easymock.tests2.SerializationTest.test":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":330,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":462,"org.easymock.tests2.UsageConstraintsTest.testSame":275,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":133,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":415,"org.easymock.tests2.NameTest.nameForMock":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":473,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":408,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":366,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":375,"org.easymock.tests2.NameTest.nameForStrictMock":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":258,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":137,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":134,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":184,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":276,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":426,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":392,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":475,"org.easymock.tests2.CaptureTest.testCapture":211,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.samples.ExampleTest.addAndChangeDocument":221,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":484,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":467,"org.easymock.tests.LimitationsTest.abstractClass":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":485,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232}}]
