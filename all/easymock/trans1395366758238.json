[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[46,48,49,256,50,51,52,54,257,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[53,257,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[258,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[35,36,37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[260,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[96,105,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[46,47,48,49,55,261,96,97,98,99,100,101,5,102,262,103,112,113,116,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[263,33,101,111,264,265,146,155,266,159,170,267,268,228,269,251,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[272,46,47,48,49,256,50,51,52,53,54,257,55,261,273,56,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[32,46,47,48,49,256,50,51,52,53,54,55,261,273,56,62,65,66,275,94,95,96,97,98,99,100,101,5,102,262,103,104,105,106,107,108,109,110,111,112,113,114,276,115,116,117,118,149,150,151,152,153,277,158,166,278,218,279,224,225,280,281,226,238,239,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[10,11,12,13,14,15,16,24,25,26,28,30,31,32,33,34,35,36,37,38,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,282,283,26,27,28,29,30,284,31,32,285,263,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,256,50,51,52,53,54,55,261,273,56,57,260,58,59,60,61,286,62,63,287,64,288,65,289,66,67,68,69,70,71,72,73,74,75,76,77,290,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,276,115,116,117,118,123,124,125,126,127,291,128,129,130,131,292,293,294,295,132,133,296,134,135,264,265,136,297,298,137,299,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,300,155,156,301,302,303,304,305,306,157,277,158,307,266,159,160,162,163,164,165,166,167,170,171,172,173,308,309,310,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,311,312,313,314,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,278,217,218,279,219,220,221,222,223,224,225,280,281,226,315,227,228,229,230,231,232,233,316,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,253,254,317,255,318,319,270,271,320,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[323,77,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[263,33,266,159,180,184,185,187,190,201,205,206,208,211,325,326,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[263,33,95,96,98,100,101,105,108,111,117,264,265,146,266,159,267,268,228,269,251,270,271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[35,36,37,329],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.UsageTest.argumentsOrdered":298,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":324,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":163,"org.easymock.tests.MockingTest.testPartialClassMocking":246,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":240,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageStrictMockTest.range":266,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":39,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":130,"org.easymock.tests2.CaptureTest.testPrimitive":49,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.UsageUnorderedTest.message":278,"org.easymock.tests.UsageVerifyTest.twoReturns":148,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":325,"org.easymock.tests.UsageTest.argumentsOrdered":321,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":173,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":281,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":129,"org.easymock.tests2.StubTest.stub":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":164,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":195,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":75,"org.easymock.tests2.CaptureTest.testAnd":46,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.NameTest.nameForMocksControl":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests2.DelegateToTest.testDelegate":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":289,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":131,"org.easymock.tests.MockingTest.testNicePartialClassMocking":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":61,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":223,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests2.CaptureTest.testCapture1_2446744":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":73,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests.UsageVerifyTest.twoThrows":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":292,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":191,"org.easymock.tests.UsageVarargTest.differentLength":316,"org.easymock.tests2.CallbackTest.callback":38,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":171,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":187,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":74,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":43,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":26,"org.easymock.tests2.NameTest.nameForNiceMock":121,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":222,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.samples.ExampleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":167,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":288,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":194,"org.easymock.tests.UsageExpectAndReturnTest.floatType":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":50,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":162,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":323,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":82,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":299,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":183,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.CaptureTest.testCapture2_2446744":273,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":293,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests2.NameTest.nameForMock":119,"org.easymock.tests.UsageExpectAndReturnTest.longType":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":170,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.NameTest.nameForStrictMock":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":66,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":291,"org.easymock.tests2.UsageStrictMockTest.range":263,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":260,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":192,"org.easymock.tests.UsageTest.wrongArguments":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":189,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":72,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":275,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests2.CaptureTest.testCaptureMultiple":272,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests2.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":261,"org.easymock.tests.UsageTest.unexpectedCallWithArray":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests2.CaptureTest.testCapture":257,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":287,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.CapturesMatcherTest.test":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":193,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":51,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":182,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85}}]
