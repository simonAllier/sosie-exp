[{"position":"org.easymock.internal.RecordState:117","failures":[0,1,2,3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[76,77,78,79,80,81,82,83,84,85,14,20,26,34,37,86,87,88,89,90,91,92,3,93,39,40,42,43,44,45,46,51,6,94,95,96,97,98,99,100,101,102,55,58,59,103,64,65,104,105,106,107,108,109,66,72],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[14,19,29,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[19],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[112,0,113,114,115,116,117,118,119,120,121,122,123,76,124,77,125,126,79,80,127,83,128,84,129,130,131,132,133,134,135,136,137,138,139,140,141,142,85,143,144,12,14,16,17,34,145,37,86,87,88,146,3,4,93,38,39,45,46,48,51,6,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,94,95,96,98,99,102,54,55,56,57,58,59,60,61,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,103,186,187,188,189,190,191,192,193,194,195,62,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,65,104,105,106,217,7,218,219,107,108,109,220,221,222,223,66,224,67,68,69,70,71,225,226,227,228,229,230,231,232,233,72],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,142,143,144,218],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[234,235,235,236,236,237,238,239,240,241,242,243,244,245,246,129,247,248,249,250,148,149,150,251,252,253,153,254,255,155,256,257,258,259,260,261,262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.Range:83","failures":[76,77,78,79,80,81,82,83,84,85,14,20,26,34,37,86,87,88,89,90,91,92,3,93,39,40,42,43,44,45,46,51,6,94,95,96,97,98,99,100,101,102,55,58,59,103,64,65,104,105,106,107,108,109,66,72],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[112,0,113,114,115,116,117,118,119,120,121,122,234,235,236,123,237,124,77,125,126,264,127,128,84,243,244,245,246,265,266,267,268,1,2,129,130,269,131,132,133,134,135,136,137,270,138,139,140,141,271,142,85,144,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,145,37,88,146,89,90,91,92,3,4,93,5,38,39,40,41,43,44,45,46,47,48,51,272,273,274,275,6,147,276,277,278,279,280,281,282,248,148,283,149,150,151,152,284,285,286,154,287,52,288,155,156,157,158,160,257,258,289,290,291,292,293,294,295,296,297,162,94,96,54,55,58,259,260,261,60,61,262,163,298,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,103,191,192,193,194,195,62,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,299,300,301,302,303,304,216,65,106,217,305,306,107,108,109,220,221,222,223,66,224,67,68,69,70,71,307,308,309,310,225,226,227,228,229,230,231,232,233,72,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[78,125,126,81,82,84,132,133,134,135,136,137,138,139,140,141,9,10,11,12,13,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,33,35,36,312,37,87,88,93,38,39,40,41,42,43,44,45,47,48,49,50,51,6,251,162,97,100,101,54,57,184,185,186,187,188,189,190,62,313,64,65,105,106,108,307],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[314,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[77,78,81,82,37,87,88,89,90,91,92,96,97,100,101,59,64,65,105,106,107,108,109,317,318,319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[18,24,36,320],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[112,0,113,114,115,116,117,118,119,120,121,122,123,76,124,77,125,126,79,80,127,83,128,84,129,130,131,132,133,134,135,136,137,138,139,140,141,142,85,143,144,12,14,16,17,34,145,37,86,87,88,146,3,4,93,38,39,45,46,48,51,6,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,94,95,96,98,99,102,54,55,56,57,58,59,60,61,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,103,186,187,188,189,190,191,192,193,194,195,62,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,65,104,105,106,217,7,218,219,107,108,109,220,221,222,223,66,224,67,68,69,70,71,225,226,227,228,229,230,231,232,233,72],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[121,122,234,235,235,236,236,237,243,244,245,246,267,129,269,276,277,278,279,281,282,248,249,250,148,283,149,150,321,251,253,284,153,286,154,287,254,52,288,255,155,256,322,257,258,323,259,260,261,262,163,263,324,325,326,327,328,311,329,330,331,332,333,334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[335,336,337,338,339,340],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[27,341],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[129,130,269,342],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[84,265,266,267,268,343,63,220,221,222,223,66,224,344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[112,0,113,114,115,116,347,117,118,119,120,121,122,234,235,236,123,237,348,349,76,124,77,78,125,126,79,80,264,81,82,127,83,8,128,84,350,351,352,243,353,354,244,355,356,357,358,359,360,361,362,363,245,364,365,366,367,368,246,369,370,265,266,267,268,1,371,2,129,130,269,131,132,133,134,135,136,137,270,138,139,140,141,271,372,142,85,143,373,144,9,10,11,12,374,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,312,145,37,86,87,88,146,375,89,90,91,92,3,376,377,4,93,5,38,39,40,41,42,43,44,45,46,47,48,49,50,51,272,273,274,275,6,378,379,380,381,382,147,383,384,385,386,387,388,276,277,278,279,389,280,281,282,390,248,391,249,250,392,393,148,283,149,394,150,395,396,321,251,397,253,398,399,151,152,400,401,402,403,404,405,406,284,153,285,286,154,287,254,407,52,408,409,288,255,155,256,410,322,411,412,413,414,415,156,416,417,418,419,420,421,157,158,159,53,160,257,422,423,258,424,289,290,291,292,425,426,427,293,294,295,296,297,161,162,94,95,96,428,97,98,99,100,101,102,54,55,56,57,58,59,429,430,323,259,260,431,261,432,433,434,60,61,435,262,163,263,324,436,437,298,438,439,440,441,442,443,110,343,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,460,461,462,463,464,465,466,467,468,469,470,471,184,185,103,186,187,188,189,190,191,192,193,194,195,62,63,472,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,325,473,474,475,476,326,477,478,479,480,481,299,300,301,302,303,304,482,483,484,313,216,64,65,104,105,106,217,305,7,485,218,219,486,306,487,107,108,109,488,489,490,491,492,314,493,494,495,220,221,222,223,66,224,67,68,69,70,71,307,308,309,310,344,345,346,496,497,498,499,500,501,502,503,504,225,226,227,505,228,229,506,230,231,232,233,72,507,508,509,510,511,327,328,311,329,330,331,332,333,334,512],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[84,9,24,27,28,36,37,54,55,58,60,61,438,442,443,450,455,460,191,192,193,194,195,65,67,68,69,70,71,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[76,77,78,79,80,81,82,83,84,85,14,20,26,34,37,86,87,88,89,90,91,92,3,93,39,40,42,43,44,45,46,51,6,94,95,96,97,98,99,100,101,102,55,58,59,103,64,65,104,105,106,107,108,109,66,72],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[513],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[315],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[348,514,515,516,517,518,394],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[26],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[11,12,14,16,17,19,29,34,38,40,48],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":446,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":259,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":375,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":514,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":238,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":58,"org.easymock.tests.UsageTest.moreThanOneArgument":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":500,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":518,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":248,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":275,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":474,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":504,"org.easymock.tests2.DelegateToTest.testDelegate":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.LimitationsTest.mockFinalMethod":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":436,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":273,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":476,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":512,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":370,"org.easymock.samples.PartialClassMockTest.testGetArea":234,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":497,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":481,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":337,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":505,"org.easymock.tests2.EasyMockSupportClassTest.testAll":243,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":239,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests.MockNameTest.defaultName":472,"org.easymock.tests2.UsageConstraintsTest.testMatches":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":72,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":373,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":256,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":495,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":158,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":254,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":251,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests.GenericTest.testBridgedEquals":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":483,"org.easymock.tests.UsageExpectAndReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":499,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":484,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests.MockingTest.testNiceClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":277,"org.easymock.tests.MockingTest.testClassMocking":430,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":300,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":267,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":94,"org.easymock.tests.MockTypeTest.fromEasyMockClass":475,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":515,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":229,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":510,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":501,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":425,"org.easymock.tests2.ConstraintsToStringTest.findToString":513,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":218,"org.easymock.tests.ResultTest.createThrowResultToString":75,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":361,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":480,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":8,"org.easymock.tests.UsageVarargTest.varargCharAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":489,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":479,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":508,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":33,"org.easymock.tests2.SerializationTest.testAllMockedMethod":269,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":452,"org.easymock.samples.SupportTest.voteForRemovals":119,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":458,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":60,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":61,"org.easymock.tests.UsageStrictMockTest.range":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":498,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":109,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":364,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":511,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":282,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.MockingTest.testTwoMocks":323,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":35,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":491,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":253,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":355,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":4,"org.easymock.tests.ResultTest.createReturnResultToString":74,"org.easymock.tests.UsageVerifyTest.twoThrows":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":349,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":245,"org.easymock.tests.ResultTest.createDelegateResultToString":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.LimitationsTest.privateConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":265,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":179,"org.easymock.tests.UsageVarargTest.differentLength":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":408,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests.MockingTest.testStrictClassMocking":429,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":278,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":280,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":509,"org.easymock.tests2.CompareToTest.testGreateOrEqual":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":517,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":160,"org.easymock.tests2.NameTest.nameForNiceMock":91,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":516,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":365,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":395,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":237,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":386,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":400,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":43,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.samples.SupportTest.addDocument":118,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":356,"org.easymock.tests.GenericTest.testPackageScope":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":397,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":507,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":310,"org.easymock.tests2.MockedExceptionTest.testRealException":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":449,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests2.NameTest.nameForStrictMock":90,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":249,"org.easymock.tests2.UsageStrictMockTest.range":87,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":360,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":153,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":357,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":493,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":482,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":250,"org.easymock.tests.UsageTest.unexpectedCallWithArray":428,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":178,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":117,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CompareToTest.testGreateThan":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":240,"org.easymock.tests.LimitationsTest.abstractClass":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":226,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":319}}]
