[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[64,29,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[3,11,100,19,101,102,23,25,103,35,37,104,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[106,107,108,109,110,17,23,24,25,111,112,113,114,115,116,117,118,119,93,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[3,132,4,133,134,135,136,137,138,139,140,141,70,71,142,143,72,106,68,64,144,145,146,107,108,109,147,73,6,7,9,10,11,148,149,150,151,152,153,16,17,19,20,23,24,25,154,74,155,67,156,157,158,75,76,159,160,161,162,77,26,27,163,28,29,30,31,32,33,34,35,36,78,164,165,166,167,168,169,170,171,172,173,174,175,176,79,177,65,80,178,179,180,181,182,183,184,185,81,186,187,38,188,189,190,191,82,83,84,1,192,193,194,195,196,197,111,112,198,199,200,201,202,203,204,205,85,206,207,208,209,86,210,211,212,213,214,215,216,217,218,87,219,220,221,222,223,88,224,225,226,227,228,89,229,230,231,90,232,91,233,46,234,92,113,114,235,236,115,116,237,238,239,240,241,242,243,117,118,119,244,245,246,247,248,93,249,250,251,252,2,253,254,66,255,256,257,258,259,47,94,260,261,262,263,264,95,265,266,267,268,269,96,270,271,272,97,273,98,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,49,50,53,54,55,56,57,58,306,59,307,120,121,308,309,310,311,312,313,314,315,316,317,122,318,319,320,321,322,127,323,324,325,326,327,128,328,329,129,130,330,331,61,62,63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[332,3,132,4,133,134,135,136,137,138,139,140,141,333,70,71,142,143,72,106,68,64,144,145,146,107,108,109,147,334,335,336,337,338,339,340,341,342,110,343,344,345,73,5,6,7,8,346,9,10,11,12,13,14,15,152,153,16,19,20,21,22,24,25,154,74,155,67,156,157,158,75,76,159,160,161,162,77,26,163,28,29,30,32,33,35,78,164,165,166,167,168,169,170,171,172,173,174,175,176,79,177,65,80,178,179,180,181,183,184,185,81,186,187,38,188,347,189,190,191,82,83,84,1,192,193,194,195,196,197,111,112,198,348,349,350,199,200,201,202,203,204,85,351,39,39,40,40,41,42,43,206,207,209,86,210,211,212,213,214,215,216,217,218,87,219,220,221,222,223,88,224,225,226,227,228,89,229,230,231,90,232,91,233,46,234,92,113,114,235,236,115,116,237,240,241,242,243,244,245,246,247,248,93,47,94,260,261,262,263,264,95,265,266,267,268,269,96,270,271,272,97,273,98,274,352,276,277,278,279,280,281,282,283,284,285,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,49,50,307,120,121,308,309,310,311,312,318,319,320,321,322,127,324,325,326,327,128,328,329,129,130,330,61,62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[17,19,21,22,24,25,41],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[3,132,4,133,134,135,136,137,138,139,140,141,70,71,143,72,68,64,146,109,73,6,7,9,10,11,148,149,150,151,152,153,16,19,20,154,74,155,67,157,158,75,76,159,160,77,26,163,28,29,30,32,33,35,78,164,165,166,167,168,169,170,171,172,173,174,175,176,79,177,65,80,178,179,180,181,183,184,185,81,186,187,38,188,189,190,82,83,84,193,195,196,112,198,199,200,201,202,203,204,85,206,209,86,210,211,212,213,214,215,218,87,219,220,221,222,223,88,224,225,226,227,228,89,229,230,231,90,232,91,233,46,92,238,239,240,241,242,243,244,245,246,247,248,47,94,260,261,262,263,264,95,265,266,267,268,269,96,270,271,272,97,273,98,274,277,278,284,285,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,49,50,54,307,120,121,308,309,310,311,312,317,318,319,320,321,322,127,323,324,325,327,328,130,330,331,61,62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[137,138,140,70,71,73,200,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[3,132,4,353],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[3,11,100,354,102,355,356,357,358],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[111,112,222,225,226,228,230,263,266,267,269,271,359,129,130,360,361,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[363,364,113,365,366,128],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[368,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[3,371,372,373,374,375,12,376,377,13,378,379,380,381,382,383,384,385,386,14,387,388,389,390,391,15,392,393,102,394,395,396,397,398,105],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,11,100,354,102,355,356,357,399,358],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[100,354,355,356,357,400,401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[402,403,404],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":343,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":350,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":94,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":333,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":212,"org.easymock.samples.ExampleTest.answerVsDelegate":200,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":45,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":59,"org.easymock.tests2.CaptureTest.testPrimitive":67,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":218,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":274,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":248,"org.easymock.tests.ReplayStateInvalidUsageTest.times":256,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests2.AnswerTest.answer":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests2.CaptureTest.testAnd":154,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":245,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":48,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":19,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":267,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":210,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":396,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":316,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":403,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":159,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.MockClassControlTest.testEquals":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.samples.ExampleTest.voteForRemovals":204,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":282,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":294,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.samples.ExampleTest.voteForRemoval":201,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":0,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":31,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":52,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":394,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":118,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":98,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":119,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.testContains":175,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":356,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":315,"org.easymock.tests.MockClassControlTest.testHashCode":58,"org.easymock.tests2.EasyMockSupportTest.testVerify":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":125,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":249,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":371,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":286,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.CapturesMatcherTest.test":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":56,"org.easymock.tests2.UsageTest.resumeIfFailure":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":99,"org.easymock.samples.SupportTest.voteForRemovals":349,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":364,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":96,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":353,"org.easymock.tests.UsageExpectAndThrowTest.object":268,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":285,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":365,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":368,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":123,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":243,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":217,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":255,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":66,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":347,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":30,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":266,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":370,"org.easymock.samples.ExampleTest.removeNonExistingDocument":205,"org.easymock.tests.UsageStrictMockTest.differentMethods":130,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":253,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":53,"org.easymock.tests.UsageExpectAndThrowTest.floatType":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.ExampleTest.voteAgainstRemoval":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":283,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":103,"org.easymock.tests.UsageTest.openCallCountByLastCall":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":216,"org.easymock.tests.UsageCallCountTest.tooFewCalls":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":213,"org.easymock.tests.UsageThrowableTest.throwCheckedException":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests.ObjectMethodsTest.testHashCode":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":400,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":357,"org.easymock.samples.ExampleTest.addDocument":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":328,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":101,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":404,"org.easymock.tests2.UsageConstraintsTest.testSame":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":361,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":89,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":188,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":259,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":17,"org.easymock.tests2.UsageStrictMockTest.range":111,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.CaptureTest.testCaptureRightOne":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests.UsageRangeTest.combination":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":117,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CaptureTest.testCaptureFromStub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":18,"org.easymock.tests.UsageTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":242,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.constraints":165,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":351,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":247,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
