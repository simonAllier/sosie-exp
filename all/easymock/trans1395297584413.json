[{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[17,19],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1149","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,16,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,22,17,81,45,18,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,23,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,1,2,3,4,5,6,7,8,142,9,11,12,13,14,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,29,164,30,31,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,32,205,206,24,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,33,436,437,438,439,440,441,442,443,34,444,35,36,445,446,447,448,41,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,25,26,496,42,43,44,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,27,514,515,28,516,517],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[518,107,519,520,521,522,523,524,525,161],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[160,161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:131","failures":[116],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[52,56,57,60,65,22,95,104,105,106,111,121,123,162,164,30,31,203,205,206,24,210,211,212,213,235,288,526,527,299,528,529,372,373,374,33,441,443,444,35,36,448,449,450,453,454,455,43,44],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[107,108,109,530],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[65,66,71,72,74,45,1,3,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:93","sourceCode":"return java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[71,75,2,8,142,14,29,270,271,272,273,274,303,304,327,328,329,330,331,383,384,33,34,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[51,52,53,54,55,56,57,59,60,61,62,63,16,64,65,66,68,69,70,71,72,73,75,76,77,78,79,80,22,17,81,45,18,82,83,84,85,86,87,108,109,110,111,112,113,23,114,117,130,132,133,134,135,137,138,139,141,1,2,3,4,5,6,7,8,142,9,11,12,13,14,152,153,154,155,156,157,158,159,163,29,164,30,31,165,169,196,203,204,32,206,24,207,208,210,212,213,214,217,218,219,225,232,234,235,236,239,241,245,246,249,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,280,281,282,283,284,286,287,289,290,291,292,293,295,296,298,299,301,302,303,304,327,328,329,330,331,332,335,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,364,365,368,369,370,371,373,374,383,384,386,387,404,33,442,34,444,35,36,445,447,448,41,451,452,453,455,459,460,461,462,463,464,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,42,43,44,497,498,499,500,501,513,514,515],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[30,205,210,211,529,33,443,35,449,450,453,454,43,44,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[434,435,457,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[69,83,134,293],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[469,470,471,472,474,475],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[214,215,216,217,218,219,232,234,235,255,513],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":448,"org.easymock.tests2.UsageTest.argumentsOrdered":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":419,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":249,"org.easymock.tests2.DelegateToTest.testReturnException":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":460,"org.easymock.tests.MockingTest.testPartialClassMocking":506,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":46,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":338,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":73,"org.easymock.tests2.UsageTest.wrongArguments":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":327,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":467,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":380,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":511,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":331,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":357,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":499,"org.easymock.tests.UsageTest.argumentsOrdered":454,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":385,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":524,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":310,"org.easymock.tests.ReplayStateInvalidUsageTest.times":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.DependencyTest.testClassMocking":150,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":129,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":377,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":389,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":353,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":440,"org.easymock.tests2.DependencyTest.testClassMockingSupport":151,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":25,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":127,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":392,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":527,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":190,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":313,"org.easymock.samples.PartialClassMockTest.testGetArea":250,"org.easymock.tests.MockingTest.testInterfaceMocking":508,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":177,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":339,"org.easymock.tests2.ThreadingTest.testChangeDefault":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":98,"org.easymock.tests2.MockBuilderTest.testCreateMock":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":347,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":465,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":181,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":487,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":285,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":128,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.MockNameTest.defaultName":502,"org.easymock.tests2.UsageConstraintsTest.testMatches":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":500,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":390,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":439,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":525,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":314,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":475,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":115,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":306,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":447,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":459,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":136,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":483,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":373,"org.easymock.tests.UsageExpectAndReturnTest.longType":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":436,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":356,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":83,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":497,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":457,"org.easymock.tests.UsageCallCountTest.tooManyCalls":374,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests.MockingTest.testNiceClassMocking":512,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":237,"org.easymock.tests.MockingTest.testClassMocking":504,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":20,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":68,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":281,"org.easymock.tests.MockTypeTest.fromEasyMockClass":378,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":234,"org.easymock.tests.UsageExpectAndReturnTest.object":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":521,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":455,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":492,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":514,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":179,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":387,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":513,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":434,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":528,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":469,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":433,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":312,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":344,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":493,"org.easymock.tests.ReplayStateInvalidCallsTest.times":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":462,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":109,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":425,"org.easymock.samples.SupportTest.voteForRemovals":253,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":350,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":530,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":431,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":215,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":277,"org.easymock.tests.UsageExpectAndThrowTest.object":348,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":18,"org.easymock.tests2.DelegateToTest.testWrongClass":139,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":383,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":384,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":147,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":349,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":453,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":466,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":408,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":89,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":526,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":183,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":371,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":330,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":397,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndThrowTest.longType":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":396,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":495,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":324,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.NameTest.nameForMocksControl":50,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":90,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":509,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":507,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":519,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":191,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":243,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":82,"org.easymock.tests.MockingTest.testTwoMocks":505,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":320,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":346,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":86,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":394,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":471,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":92,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":106,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":173,"org.easymock.tests.UsageExpectAndThrowTest.floatType":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":182,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testNotNull":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":192,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":235,"org.easymock.tests2.UsageConstraintsTest.equals":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":118,"org.easymock.tests.UsageTest.openCallCountByLastCall":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":329,"org.easymock.tests.UsageCallCountTest.tooFewCalls":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":468,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":91,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.MockingTest.testStrictClassMocking":503,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":399,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":241,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":523,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":322,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":522,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":189,"org.easymock.tests2.DelegateToTest.testStubDelegate":138,"org.easymock.tests2.AnswerTest.stubAnswer":218,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":102,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":494,"org.easymock.tests.UsageExpectAndReturnTest.floatType":478,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":248,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":143,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":477,"org.easymock.tests2.UsageConstraintsTest.testSame":70,"org.easymock.samples.SupportTest.addDocument":252,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":240,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":174,"org.easymock.tests.GenericTest.testPackageScope":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":510,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":305,"org.easymock.tests2.NameTest.nameForMock":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":352,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":328,"org.easymock.tests2.NameTest.nameForStrictMock":48,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":38,"org.easymock.tests.ErrorMessageTest.testGetters":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":311,"org.easymock.tests2.UsageConstraintsTest.lessThan":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":88,"org.easymock.tests2.UsageConstraintsTest.testOr":71,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":175,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":474,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":325,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":216,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":391,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":96,"org.easymock.tests.UsageTest.unexpectedCallWithArray":449,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":321,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":490,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":444,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":446,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":437,"org.easymock.tests2.CompareToTest.testGreateThan":19,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":482,"org.easymock.tests.LimitationsTest.abstractClass":402,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
