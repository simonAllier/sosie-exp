[{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[52,53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[67,68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[70,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[72,73],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[82,83,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[85,86,86,87,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[88,62,65,66,86,87],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[52,89,4,5,90,91,92,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[107],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[56,108,109,110,111,112,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[113,1,114,2,52,54,115,116,59,117,118,60,119,120,121,122,123,89,124,125,4,5,126,91,127,92,93,6,94,95,96,97,98,128,99,129,130,100,101,102,131,132,86,86,87,87,103,133,134,104,135,136,137,138,139,140,105,106,141],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[18,142,143,144,145,146,147,26,28,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[164,165],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[166,167,168,169,170,24,76,73,120,171,5,91,172,38,40,41,43,45,173,141],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[174,46,47],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":174,"org.easymock.tests.MockingTest.testPartialClassMocking":138,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":132,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":70,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":55,"org.easymock.tests2.AnswerTest.stubAnswer":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests2.ConstraintsToStringTest.orToString":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":106,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":141,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":166,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":31,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":67,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests.GenericTest.testPackageScope":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests.UsageTest.argumentsOrdered":45,"org.easymock.tests.GenericTest.testBridgedEquals":71,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":91,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":32,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":2,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":63,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":140,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":139,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.CaptureTest.testCaptureLast":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":47,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":92,"org.easymock.tests.MockingTest.testTwoMocks":137,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":46,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests.UsageThrowableTest.throwError":164,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests2.UsageConstraintsTest.testOr":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":43,"org.easymock.tests2.ConstraintsToStringTest.andToString":14,"org.easymock.tests2.MockBuilderTest.testCreateMockString":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":62,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":10,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.PartialClassMockTest.testGetArea":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":5,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":58,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":84,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":97,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":93,"org.easymock.tests.UsageTest.unexpectedCallWithArray":42,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":88,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":3,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":176,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests2.ConstraintsToStringTest.notToString":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":102,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":12,"org.easymock.tests2.CompareToTest.testGreateThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":114,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":33,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":167,"org.easymock.tests2.CaptureTest.testCaptureAll":142}}]
