[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[8,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[209,210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,11,12,13,14,15,16,17,18,20,21,24,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,122,124,125,127,129,213,214,215,131,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,171,172,174,176,178,179,180,181,182,183,184,185,216,217,218,219,220,221,186,222,189,191,195,197,198,199,201,202,204,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[223,224,15,225,59,60,226,61,62,227,228,63,64,65,66,229,67,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,230,103,104,105,106,113,231,115,116,131,132,133,137,138,232,233,139,168,169,170,171,172,173,234,184,185,235,236,237,238,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[241,242,243,244,245,246,210,247,248,216,240,217,249,212,250,251,252,253,254,218,219,220],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[255,256],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[215],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[90],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[8,10,39,40,41,42,44,45,46,47,48,49,50,257,258,52,259,53,260,54,55,56,57,261,58,262,263,264,69,70,72,73,74,265,75,76,77,78,79,107,266,266,267,267,129,130,268,269,270,160,174,186,187,222,271,272,204,205,206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[273,76,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[275,276,277,278,279,280,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,9,10,286],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[287,288,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[239,109],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[289,290,163,291,292,238],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[142,144,158,159,184,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,10,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[8,10,293,294,39,40,41,42,44,45,46,0,295,296,297,47,298,48,299,300,301,302,303,304,305,49,306,307,308,309,310,50,257,311,52,259,312,313,53,260,54,1,55,208,56,57,314,58,69,70,72,73,74,265,75,315,316,76,77,78,79,317,274,318,319,107,266,267,129,130,268,269,270,160,234,255,320,321,322,256,323,324,325,174,326,327,186,187,222,328,188,271,329,330,331,332,333,334,335,336,272,204,205,206,337],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[111,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[41,45,338,0,311,312,1,339,314,340,341],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":240,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":19,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":290,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":286,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":14,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests.UsageStrictMockTest.range":201,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":39,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":278,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":35,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":296,"org.easymock.tests.UsageTest.moreThanOneArgument":162,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":215,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":173,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":306,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":260,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":222,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":252,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":264,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":76,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":119,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":272,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.samples.ExampleTest.removeNonExistingDocument":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":202,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":320,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":58,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":295,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":302,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":56,"org.easymock.tests2.UsageTest.defaultResetToNice":22,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":308,"org.easymock.tests2.CallbackTest.callback":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":136,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":310,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":262,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":43,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.NameTest.nameForNiceMock":273,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests.UsageVarargTest.allKinds":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":268,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":307,"org.easymock.tests2.DelegateToTest.testStubDelegate":109,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":79,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":216,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.UsageThrowableTest.noUpperLimit":177,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":160,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":293,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":227,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":247,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":28,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":297,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":26,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":314,"org.easymock.tests2.UsageStrictMockTest.differentMethods":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests.MockingTest.testNiceClassMocking":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":40,"org.easymock.tests.MockingTest.testClassMocking":336,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":258,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":224,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":294,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":321,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":117,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":281,"org.easymock.tests.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":303,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests2.MockBuilderTest.testWithConstructor":311,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":284,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":225,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":20,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":275,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":283,"org.easymock.tests2.CaptureTest.testCaptureFromStub":229,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":259,"org.easymock.tests.UsageTest.unexpectedCallWithArray":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":305,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":228,"org.easymock.tests2.UsageTest.resumeIfFailure":24,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":170,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
