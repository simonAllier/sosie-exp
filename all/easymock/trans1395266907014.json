[{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,41,42,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[43,100,101,44,45,46,102,47,48,49,103,2,50,51,52,104,105,106,107,108,109,110,111,112,53,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,54,145,55,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3,160,161,162,163,164,165,166,167,4,5,56,168,6,7,8,9,0,169,170,171,10,172,11,12,173,13,14,174,175,176,177,178,15,16,17,57,179,180,58,59,60,181,182,61,62,63,183,64,184,185,65,186,66,67,187,68,69,188,189,190,191,192,193,194,195,70,71,72,73,74,196,197,198,75,199,76,18,77,78,79,200,201,202,203,204,205,206,207,208,209,19,20,80,81,82,83,21,22,23,24,25,210,211,212,213,214,215,216,217,218,219,84,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,32,33,34,35,36,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,37,38,273,274,39,40,275,85,86,87,88,89,276,90,91,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,92,307,93,94,308,309,95,96,97,310,311,312,313,314,315,316,317,318,319,320,321,322,41,41,42,42,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,58,62,63,76,78,84,226,90,91,338,93,94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[43,339,100,340,341,342,101,44,45,343,46,344,345,102,47,346,48,49,103,2,50,51,52,104,105,106,107,108,347,348,349,109,350,351,110,352,353,354,355,356,357,358,359,360,111,361,362,363,364,365,112,366,367,368,369,370,371,372,53,373,374,375,376,377,378,113,114,115,116,117,379,118,119,120,121,122,123,380,381,124,125,126,127,128,129,382,130,131,132,1,133,383,134,384,135,136,137,98,138,139,140,141,142,143,144,54,385,145,386,387,55,146,147,148,388,389,149,150,151,152,153,154,155,156,157,158,159,3,160,161,162,163,390,391,164,165,166,167,4,5,56,168,392,6,7,8,9,0,169,393,170,171,10,172,11,12,173,13,14,174,175,176,177,178,15,16,17,57,179,180,58,59,60,181,182,61,62,63,183,64,184,185,65,186,66,67,187,68,69,188,189,190,191,394,395,396,397,398,399,400,192,401,402,193,194,195,70,71,72,73,403,404,405,406,407,74,408,409,410,411,412,413,414,415,416,196,197,417,198,418,419,420,75,199,76,18,77,78,79,200,201,202,203,204,205,206,207,208,209,19,20,80,81,82,83,21,22,23,24,25,421,210,211,212,422,423,424,213,214,215,216,217,218,219,425,426,427,84,428,429,220,430,431,221,432,433,434,435,436,437,438,26,222,439,223,224,440,225,226,441,442,443,444,445,227,228,229,230,231,232,446,447,448,449,450,451,452,453,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,27,454,455,456,28,29,457,458,459,460,461,462,463,464,30,465,466,467,468,31,469,470,471,472,473,474,475,476,32,33,34,35,36,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,37,38,273,274,39,40,275,85,86,87,88,89,276,90,91,277,278,279,280,281,282,283,284,285,477,478,479,286,287,288,289,290,291,292,293,294,480,481,482,295,296,297,298,299,300,301,302,303,304,305,306,92,307,93,94,308,309,95,96,97,483,310,311,484,485,486,487,488,312,313,314,489,315,316,317,318,319,320,321,322,41,42,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[100,102,47,48,49,50,51,52,115,140,146,148,167,56,173,57,58,59,60,62,63,183,64,185,67,187,188,75,76,77,78,79,216,84,90,91,283,284,285,92,93,94,95,96,97,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[135,137,138,223,327],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[143,173,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[432,436],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[490,491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[22,36,256,262,269,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[51,52,78,79,441,444,445,237,241,242,244,247,459,257,261,262,264,267],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[135,137,138,223,327],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[149,151,159,56,168,7,9,0,393,174,15],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[167,192,402,195,222,464,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2,150,156,157,161,9,170,18,19,20,84,231,32,33,34,35,36,37,38,273,274,39,40,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[164,165,166,492],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[2,150,156,157,161,9,170,18,19,20,84,231,32,33,34,35,36,37,38,273,274,39,40,275],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[51,52,122,5,56,6,8,9,10,12,14,16,181,182,183,78,79,203,215,216,217,218,219,237,241,242,244,247,257,261,262,264,267,276,279,308,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[221,432,433,434,436,438],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[164,165,166,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[43,490,100,340,101,44,45,46,102,47,491,48,493,54,164,446,451,484,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[494,495,76,496,497,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[43,100,340,45,46,102,47,48,49,2,50,51,52,104,53,373,118,119,120,121,127,128,131,132,140,55,148,389,167,56,173,57,180,58,59,60,62,63,183,64,185,186,67,187,69,188,74,408,75,76,18,77,78,79,200,210,422,423,216,425,426,84,439,440,225,226,446,449,450,451,452,453,476,276,90,91,277,279,280,283,284,285,288,289,290,92,307,93,94,95,96,97,317],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[494,495,76,496,497,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[425,426,439,440],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[494,495,164,76,18,496,497,477,93,94,308,309,95,96,97,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[100,102,47,48,49,50,51,52,140,146,148,167,56,173,57,58,59,60,62,63,183,64,185,67,187,188,75,76,77,78,79,499,424,216,84,90,91,283,284,285,500,338,92,93,94,95,96,97,317],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":336,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":228,"org.easymock.tests.MockingTest.testPartialClassMocking":196,"org.easymock.tests.MockClassControlTest.testToString":288,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":82,"org.easymock.samples.ExampleTest.answerVsDelegate":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":451,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":419,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":293,"org.easymock.tests2.CaptureTest.testPrimitive":152,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests.UsageTest.moreThanOneArgument":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageVarargTest.varargIntAccepted":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests.ReplayStateInvalidUsageTest.times":303,"org.easymock.tests2.DependencyTest.testClassMocking":380,"org.easymock.tests2.AnswerTest.answer":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":73,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":448,"org.easymock.tests2.CaptureTest.testAnd":149,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":89,"org.easymock.tests2.DependencyTest.testClassMockingSupport":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":425,"org.easymock.tests2.CaptureTest.testCapture1_2446744":153,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":424,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.MockingTest.testInterfaceMocking":417,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":478,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":80,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":11,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":489,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.MockClassControlTest.testEquals":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":87,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":295,"org.easymock.samples.ExampleTest.voteForRemovals":331,"org.easymock.tests.UsageVarargTest.allKinds":322,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":388,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":227,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":260,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":321,"org.easymock.tests.GenericTest.testBridgedEquals":485,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":284,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":85,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":487,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":285,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.MockingTest.testNiceClassMocking":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.MockingTest.testClassMocking":415,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":490,"org.easymock.tests2.UsageConstraintsTest.testContains":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests.MockTypeTest.fromEasyMockClass":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests.UsageExpectAndReturnTest.object":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":69,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":316,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":212,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":269,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":358,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":481,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":222,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":315,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":480,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":210,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":146,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":289,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":230,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":325,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":19,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":399,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":479,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":84,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":499,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":320,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":282,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":151,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":274,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests2.StubTest.stub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":229,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":301,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.SerializationTest.testClass":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.CompareToTest.testNotComparable":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.MockingTest.testTwoMocks":416,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":16,"org.easymock.samples.ExampleTest.removeNonExistingDocument":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":286,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":391,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":61,"org.easymock.samples.ExampleTest.voteAgainstRemovals":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":317,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.UsageConstraintsTest.equals":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":386,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.UsageCallCountTest.tooFewCalls":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":83,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":414,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.ObjectMethodsTest.testHashCode":211,"org.easymock.tests2.NameTest.nameForNiceMock":120,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":117,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":344,"org.easymock.tests.UsageVarargTest.varargLongAccepted":319,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":163,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":14,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.SerializationTest.test":165,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.samples.SupportTest.addDocument":324,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":382,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":353,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":418,"org.easymock.tests2.NameTest.nameForMock":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":265,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":306,"org.easymock.tests2.NameTest.nameForStrictMock":119,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":398,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":357,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":140,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":283,"org.easymock.tests2.UsageConstraintsTest.cmpTo":171,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":296,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":340,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":333,"org.easymock.tests.UsageStrictMockTest.testVerify":201,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":337,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":86,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":34,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":313}}]
