[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[1,2,3],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[23,24],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,0,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[5,135,136,137,138,139,140,141,142,143,10,144,11,145,146,147,148,149,1,2,13,150,14,15,16,151,152,17,153,18],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[155,156],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[157,158],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[159,160,161,162,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:198","sourceCode":"return java.lang.Long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[166,167,168,169,5,170,171,172,173,174,175,176,177,178,179,63,68,71,75,86,91,93,180,181,182,10,183,144,11,12,184,1,2,185,186,187,188,118,119,120,189,190,13,150,191,192,193,194,14,15,16,195,130,196,197,198,199,200,151,201,152,17,202,153,18,19,20,21,22,203,204,205],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[30,63,66,68,69,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[206,207,208],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[30,31,43,53,59,62,63,64,66,67,68,69,71,72,73,79,84,85,88,126,129,130],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[31,209,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[26,26,27,27,210,211,212,213,214,215,216,217,28,29,218,219,30,220,221,166,31,209,32,33,36,222,223,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,224,225,226,227,228,167,229,230,231,206,232,233,234,235,236,237,238,239,240,241,164,168,157,242,207,243,244,245,246,208,247,248,249,250,251,252,155,156,253,254,255,256,257,160,258,259,260,261,262,263,264,265,266,267,161,162,268,269,270,271,272,273,274,275,276,277,278,169,279,5,170,171,172,280,281,282,173,174,175,176,283,177,284,285,286,178,287,288,289,179,290,291,292,293,62,63,64,65,66,67,68,69,70,71,72,73,74,75,294,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,295,93,94,296,297,298,299,300,301,302,180,303,304,305,306,307,308,6,7,8,9,97,98,309,310,311,312,313,181,314,315,316,317,318,319,99,100,101,320,182,321,10,183,144,11,12,322,323,324,325,326,327,184,328,329,102,103,104,105,106,107,108,109,110,111,112,113,330,114,331,332,115,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,1,2,353,354,185,355,356,186,187,188,357,358,359,116,117,118,119,120,121,122,123,0,124,125,126,127,360,361,362,363,364,365,366,367,368,189,369,370,371,372,373,374,375,376,128,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,190,13,150,191,394,395,192,193,194,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,14,15,16,419,420,421,129,195,422,130,423,196,424,425,426,427,428,429,430,431,432,433,434,131,132,133,134,435,197,436,437,198,199,200,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,3,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,151,201,474,152,17,202,153,18,19,475,476,477,478,479,480,481,482,483,484,485,154,486,487,488,489,490,20,491,21,22,492,493,203,204,205],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[169,281,190,395,15,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[250,251],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,287,179,63,71,72,73,75,84,86,182,183,144,11,494,149,188,189,495,496,190,150,191,192,193,194,15,16,151,201,152,202,153,18,203,204,205],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[26,27,497,498,31,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,499,500,501,70,502,503,91,94,504,97,98],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[102,103,104,105,107,108],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[26,27,210,211,212,213,214,215,217,28,29,218,219,30,220,221,166,31,209,32,40,43,53,59,224,226,227,228,167,229,231,206,232,233,234,235,237,238,239,240,241,164,168,157,242,207,243,244,245,246,208,247,248,249,252,155,156,253,254,255,256,257,160,258,259,260,261,262,263,264,265,266,267,161,162,268,269,270,271,272,274,275,276,278,169,279,5,170,171,172,280,281,282,173,174,175,176,283,177,284,285,286,178,287,288,289,179,290,291,292,62,63,66,67,68,69,71,72,73,74,75,294,76,77,78,79,80,83,84,85,86,89,90,91,92,295,93,94,296,297,180,97,181,99,100,101,320,182,321,10,183,144,11,12,322,323,324,325,326,327,328,329,112,113,114,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,188,358,359,124,125,363,364,365,367,368,189,369,370,371,372,373,374,375,128,389,390,391,392,393,190,13,150,191,394,395,192,193,194,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,14,15,16,24,24,427,428,429,430,431,432,433,434,133,435,436,437,200,438,439,440,441,442,466,467,468,469,470,151,201,474,152,17,202,153,18,19,476,477,478,479,480,481,486,487,488,489,490,21,22,492,493,203,204,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[322,392,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[207,243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[5,170,173,174,135,136,137,138,139,140,505,141,142,143,506,10,144,11,145,146,147,148,507,149,1,2,13,150,191,192,193,14,15,16,197,198,199,200,151,152,17,153,18],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[26,26,27,27,28,29,30,31,32,40,43,53,59,62,508,63,64,66,67,68,69,71,72,509,73,74,75,76,77,78,79,80,83,84,85,86,89,90,91,92,93,94,510,511,512,97,101,111,112,113,114,117,124,125,126,128,129,130,133],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":453,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":219,"org.easymock.tests2.DelegateToTest.testReturnException":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":477,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":389,"org.easymock.tests2.UsageTest.wrongArguments":170,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":326,"org.easymock.samples.ExampleTest.answerVsDelegate":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":130,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":393,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":415,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":488,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":482,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.DependencyTest.testClassMocking":95,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests2.CaptureTest.testAnd":257,"org.easymock.tests2.UsageTest.strictResetToDefault":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":358,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":154,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":411,"org.easymock.tests.LimitationsTest.mockFinalMethod":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":470,"org.easymock.tests2.DependencyTest.testClassMockingSupport":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":1,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.UsageThrowableTest.throwError":427,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":490,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":61,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.MockingTest.testInterfaceMocking":330,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":187,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":25,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":405,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":136,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":324,"org.easymock.tests.UsageOverloadedMethodTest.overloading":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":240,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":265,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":413,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":510,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":468,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests.MockNameTest.defaultName":184,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":215,"org.easymock.tests.UsageVarargTest.allKinds":373,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":469,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":433,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":481,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":108,"org.easymock.samples.ExampleTest.voteForRemoval":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":476,"org.easymock.tests2.CaptureTest.testCaptureFirst":162,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":372,"org.easymock.tests.GenericTest.testBridgedEquals":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":466,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":509,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":245,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":486,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":401,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":432,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":491,"org.easymock.tests2.UsageConstraintsTest.testContains":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":231,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":418,"org.easymock.tests.MockTypeTest.fromEasyMockClass":195,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":226,"org.easymock.tests.UsageExpectAndReturnTest.object":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":289,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":356,"org.easymock.tests.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":483,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests2.ConstraintsToStringTest.findToString":4,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":507,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":349,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":436,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":50,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":138,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":293,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests2.CaptureTest.testCaptureMultiple":159,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":185,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":402,"org.easymock.tests.CapturesMatcherTest.test":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":140,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":479,"org.easymock.tests2.StubTest.stubWithReturnValue":323,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":342,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":142,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":464,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":406,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":243,"org.easymock.tests2.DelegateToTest.testWrongClass":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":374,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":375,"org.easymock.tests.UsageStrictMockTest.range":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":222,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":495,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":371,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":506,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":392,"org.easymock.tests2.UsageConstraintsTest.any":237,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndThrowTest.longType":399,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":300,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.NameTest.nameForMocksControl":9,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":400,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":225,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CompareToTest.testNotComparable":163,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":244,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":404,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.samples.ExampleTest.removeNonExistingDocument":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":304,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":104,"org.easymock.tests2.ConstraintsToStringTest.andToString":141,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":44,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":434,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests2.UsageTest.defaultResetToNice":282,"org.easymock.samples.ExampleTest.voteAgainstRemovals":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":348,"org.easymock.tests.UsageVarargTest.differentLength":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":299,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":394,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":391,"org.easymock.tests.UsageCallCountTest.tooFewCalls":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":327,"org.easymock.tests.UsageThrowableTest.throwCheckedException":431,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":147,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":303,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":295,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":156,"org.easymock.tests.ObjectMethodsTest.testHashCode":355,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":296,"org.easymock.samples.ExampleTest.addDocument":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests.UsageVarargTest.varargLongAccepted":370,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.tests2.ConstraintsToStringTest.orToString":135,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":428,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":228,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":33,"org.easymock.tests2.SerializationTest.test":209,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":334,"org.easymock.samples.SupportTest.addDocument":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":45,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":331,"org.easymock.tests2.NameTest.nameForMock":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":503,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":410,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":359,"org.easymock.tests2.MockedExceptionTest.testRealException":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":223,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":390,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests2.NameTest.nameForStrictMock":7,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":49,"org.easymock.tests2.CaptureTest.testCaptureRightOne":266,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":346,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":238,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":150,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":492,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":347,"org.easymock.tests2.CaptureTest.testCapture":23,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests2.ConstraintsToStringTest.notToString":137,"org.easymock.tests.UsageStrictMockTest.testVerify":475,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":218,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":467,"org.easymock.tests2.CompareToTest.testGreateThan":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests.LimitationsTest.abstractClass":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":287,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
