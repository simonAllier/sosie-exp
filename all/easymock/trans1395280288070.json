[{"position":"org.easymock.internal.MockBuilder:229","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[5,6,251,252,253,254,255,7,8,9,10,256,11,12,257,13,14,258,15,16,17,18,19,20,21,259,260,261,262,263,264,265,266,267,268,269,270,271,272,22,273,274,23,275,24,25,26,27,28,276,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,277,278,279,280,281,282,57,58,283,284,59,60,61,285,62,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,63,64,65,66,67,68,313,314,315,316,317,69,318,70,71,319,320,321,72,73,74,322,75,76,323,77,78,79,80,81,324,325,326,82,327,328,83,329,330,331,332,333,334,335,336,337,338,339,340,341,84,85,86,87,88,89,342,90,91,343,344,345,346,347,348,349,350,92,93,351,352,353,354,355,356,357,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,358,120,121,122,123,124,359,360,361,362,363,364,365,366,367,368,369,125,126,127,128,129,130,131,132,133,134,135,370,136,371,372,373,137,138,139,140,141,142,374,375,376,377,378,143,379,380,381,382,383,384,385,386,144,145,387,146,147,148,149,150,151,152,153,388,389,390,391,154,392,393,155,156,394,395,157,158,159,396,160,161,162,163,397,164,398,165,166,167,168,169,170,171,172,173,174,175,399,400,401,402,403,404,405,406,0,407,408,409,410,411,412,413,414,1,415,416,417,418,176,419,420,2,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,177,178,179,180,181,182,439,440,183,441,442,443,3,444,445,446,4,184,447,448,185,186,187,188,449,189,450,190,191,192,451,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,452,215,216,217,218,219,453,454,455,456,457,220,458,459,460,461,462,463,464,465,466,467,221,222,223,224,468,225,226,227,228,229,230,469,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,470,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[5,6,251,252,253,254,255,7,8,9,10,256,11,12,13,14,258,16,17,18,19,20,21,259,260,261,262,263,264,265,266,267,268,269,270,22,274,23,275,24,25,26,27,28,276,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,277,278,281,57,58,283,284,59,60,61,285,62,302,308,310,311,312,63,64,65,66,67,68,313,314,315,316,317,69,318,70,71,319,320,321,72,73,74,75,76,323,77,78,79,80,81,324,325,326,327,328,83,331,334,335,336,338,84,85,86,87,88,89,342,90,91,343,344,92,93,352,353,354,355,356,357,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,358,120,121,122,123,124,359,360,361,362,363,125,126,127,128,129,130,131,132,133,134,135,370,136,371,371,372,372,373,137,138,139,140,141,142,143,144,145,387,146,147,148,149,150,151,152,153,154,392,393,155,156,394,395,157,158,159,396,160,161,162,163,397,164,398,165,166,167,168,169,170,171,172,173,174,175,399,402,403,404,405,406,0,409,410,411,412,414,1,415,176,2,430,436,177,178,179,180,181,182,439,183,443,3,444,445,184,447,448,185,186,187,188,189,450,190,191,192,451,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,452,215,216,217,218,219,471,220,464,465,466,467,221,222,223,224,225,226,227,228,229,230,469,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,470,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[472,470,248,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[237],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[473,235,242,247],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[13,14,258,15,22,63,330,334,335,336,338,345,348,352,353,354,355,356,357,94,95,371,371,372,372,373,139,140,154,392,393,155,394,395,169,399,406,0,407,409,410,411,412,414,1,415,176,2,430,436,177,178,180,181,182,439,183,443,3,444,445,4,470,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[371,372,399,400,474,475,476,413,477,478,479,480,481,441,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:315","failures":[6,18,19,31,35,36,57,60,71,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,153,157,163,167,168,169,170],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[367,482,483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[472,470,248,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,38,44,50,54,56,57,304,100,106,112,116,118,198,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[5,6,251,252,253,254,255,7,8,9,10,256,11,12,257,13,14,258,15,484,16,17,18,19,20,21,259,260,261,262,263,264,265,266,267,268,269,270,271,272,22,273,274,23,275,24,25,26,27,28,276,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,277,278,279,280,281,282,57,58,283,284,59,60,61,285,62,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,63,64,65,66,67,68,313,314,315,316,317,69,318,70,71,319,320,321,72,73,74,322,75,76,323,77,78,79,80,81,324,325,326,82,327,328,83,329,330,331,332,333,334,335,336,337,338,339,340,341,84,85,86,87,88,89,342,90,91,343,344,345,485,486,346,347,348,349,350,92,93,351,352,353,354,355,356,357,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,358,120,121,122,123,124,359,360,361,362,487,363,364,365,366,367,368,488,369,125,126,127,128,129,130,131,132,133,134,135,370,136,371,372,373,137,138,139,140,141,142,374,375,376,377,378,143,379,380,381,382,383,384,385,386,144,145,387,146,147,148,149,150,151,152,153,388,489,490,491,389,390,391,154,392,393,155,492,156,394,395,493,157,158,159,396,160,161,162,163,397,164,398,165,166,167,168,169,170,171,172,173,174,175,399,400,494,401,402,403,404,405,406,474,0,407,475,408,409,410,411,476,412,495,413,414,1,478,415,416,417,418,176,419,420,2,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,177,178,179,180,181,182,439,440,183,441,442,443,3,444,445,446,4,184,447,448,185,186,187,188,449,189,450,190,191,192,451,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,452,215,216,217,218,219,471,453,454,455,456,457,220,458,459,460,461,462,463,464,465,466,467,221,222,223,224,468,225,226,227,228,229,230,469,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,470,248,249,250],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[256,11,12,496,484,21,274,275,25,26,27,497,498,57,283,284,61,285,62,323,119,123,124,387,148,149,150,157,396,160,161,164,398,165,166,0,414,1,415,178,3,445,209,213,214,216,223,237,250],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,275,26,498,283,284,61,285,321,123,124,149,396,164,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[254,7,8,256,11,12,21,274,275,24,25,26,27,28,277,278,57,58,283,284,61,285,62,318,319,320,321,323,327,329,330,345,346,347,348,349,350,351,354,355,356,119,122,123,124,143,379,387,147,148,149,150,151,392,393,394,395,157,159,396,160,161,164,398,165,166,402,403,404,405,406,0,407,411,412,414,1,415,178,443,445,4,209,211,213,214,215,216,220,458,223,237,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[188],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[194,196,197,198,199,200,201,203,499,204,205,207],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[277,278,318,319],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,275,26,498,283,284,61,285,321,123,124,149,396,164,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[29,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":224,"org.easymock.tests2.UsageTest.argumentsOrdered":398,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":296,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":137,"org.easymock.tests2.DelegateToTest.testReturnException":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":85,"org.easymock.tests.MockingTest.testPartialClassMocking":335,"org.easymock.tests.MockClassControlTest.testToString":354,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":99,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":2,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":230,"org.easymock.tests2.UsageTest.wrongArguments":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":226,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":340,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":197,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":118,"org.easymock.tests.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":127,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":267,"org.easymock.tests2.DependencyTest.testClassMocking":385,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":467,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":486,"org.easymock.tests2.CaptureTest.testAnd":194,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":212,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":114,"org.easymock.tests.LimitationsTest.mockFinalMethod":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests2.DependencyTest.testClassMockingSupport":386,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":277,"org.easymock.tests2.CaptureTest.testCapture1_2446744":198,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":465,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":129,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":438,"org.easymock.samples.PartialClassMockTest.testGetArea":373,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":262,"org.easymock.tests.MockingTest.testInterfaceMocking":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":425,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":100,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":409,"org.easymock.tests2.MockBuilderTest.testCreateMock":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":108,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":359,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":235,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":48,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":482,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":234,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":322,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":466,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":259,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests.UsageVarargTest.allKinds":81,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":445,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":446,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":439,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":210,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":450,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":44,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":206,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":304,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":80,"org.easymock.tests.GenericTest.testBridgedEquals":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":40,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":243,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":392,"org.easymock.tests.MockingTest.testNiceClassMocking":341,"org.easymock.tests.MockingTest.testClassMocking":333,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":169,"org.easymock.tests2.UsageConstraintsTest.testFind":225,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":76,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":83,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests.MockClassControlTest.testHashCode":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":427,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":464,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":471,"org.easymock.tests.UsageVarargTest.varargCharAccepted":75,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":251,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":3,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":436,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":355,"org.easymock.tests2.UsageTest.resumeIfFailure":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":87,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":244,"org.easymock.tests2.SerializationTest.testAllMockedMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":481,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":111,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":472,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":308,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":447,"org.easymock.tests.UsageExpectAndThrowTest.object":109,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":241,"org.easymock.tests2.DelegateToTest.testWrongClass":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":371,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":360,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":496,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":79,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":431,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":10,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageConstraintsTest.any":231,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageExpectAndThrowTest.longType":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":265,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests2.SerializationTest.testClass":470,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":420,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":103,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":412,"org.easymock.tests.MockingTest.testNicePartialClassMocking":336,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":278,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":395,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":242,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":107,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":246,"org.easymock.samples.ExampleTest.removeNonExistingDocument":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":365,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":415,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.floatType":101,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":430,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":444,"org.easymock.tests.LimitationsTest.privateConstructor":272,"org.easymock.tests2.UsageConstraintsTest.testNotNull":245,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.UsageTest.defaultResetToNice":397,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests2.UsageConstraintsTest.equals":468,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":441,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.MockingTest.testStrictClassMocking":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":394,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.ObjectMethodsTest.testHashCode":328,"org.easymock.tests2.NameTest.nameForNiceMock":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.samples.ExampleTest.addDocument":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.DelegateToTest.testStubDelegate":191,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":495,"org.easymock.tests.UsageVarargTest.varargLongAccepted":78,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":295,"org.easymock.tests.UsageExpectAndReturnTest.floatType":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":399,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":372,"org.easymock.tests.UsageThrowableTest.noUpperLimit":30,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":222,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":199,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":38,"org.easymock.tests2.UsageConstraintsTest.testSame":227,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":422,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":339,"org.easymock.tests2.NameTest.nameForMock":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":478,"org.easymock.tests2.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":113,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests2.MockedExceptionTest.testRealException":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":270,"org.easymock.tests2.NameTest.nameForStrictMock":403,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":149,"org.easymock.tests2.UsageConstraintsTest.lessThan":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":426,"org.easymock.tests2.CaptureTest.testCaptureRightOne":204,"org.easymock.tests2.UsageConstraintsTest.testOr":228,"org.easymock.tests.UsageRangeTest.combination":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.UsageTest.wrongArguments":284,"org.easymock.tests2.MockBuilderTest.testWithConstructor":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":287,"org.easymock.tests.UsageVarargTest.varargShortAccepted":77,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":232,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":448,"org.easymock.tests2.CompareToTest.testLessThan":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":289,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":205,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":260,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":407,"org.easymock.tests.UsageTest.unexpectedCallWithArray":283,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":9,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":51,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests.UsageStrictMockTest.testVerify":276,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":138,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":43,"org.easymock.tests.LimitationsTest.abstractClass":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":214}}]
