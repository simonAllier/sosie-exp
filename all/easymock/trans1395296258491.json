[{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,2,3,103,104,105,4,106,107,108,109,110,111,112,113,114,115,5,116,117,118,119,120,121,6,7,122,123,124,125,126,8,9,10,11,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,18,19,182,183,184,185,186,20,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,21,228,229,230,231,232,233,234,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46,47,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,50,51,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,52,53,54,55,56,57,58,59,60,61,62,63,64,65,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,66,304,305,306,307,308,309,310,311,312,313,314,314,315,315,316,317,318,319,320,321,322,323,324],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[27,32,41,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[67,68,69,325,326,327,70,71,328,72,329,330,331,332,73,74,333,334,75,76,77,78,335,336,337,338,339,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,340,341,342,343,344,345,346,347,348,2,3,103,104,105,4,106,107,108,349,109,110,111,112,113,114,115,5,350,116,117,118,119,351,352,353,354,355,356,120,121,6,7,122,123,124,125,126,8,9,10,11,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,357,141,142,143,358,359,360,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,361,166,167,168,169,170,171,172,362,173,174,175,176,363,177,178,364,179,180,181,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,18,19,390,391,182,392,183,184,185,186,20,187,188,189,190,393,394,395,396,397,398,399,400,401,191,402,192,403,193,194,404,195,405,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,406,407,408,409,410,216,411,412,413,414,415,416,217,218,219,220,221,222,223,417,418,224,419,420,421,422,423,225,424,425,426,427,428,429,226,227,21,228,229,230,231,232,233,234,22,23,24,25,430,26,27,28,29,30,31,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46,47,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,431,252,253,254,432,433,434,435,436,437,438,255,439,440,441,256,442,257,443,258,444,445,446,259,447,448,260,261,262,263,49,50,449,51,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,450,283,284,285,286,52,53,54,55,56,57,58,59,60,61,62,63,64,65,287,288,289,290,291,292,293,451,452,453,294,454,455,295,456,457,458,459,460,461,462,463,464,296,465,466,467,468,469,297,470,471,298,299,300,301,302,303,472,473,66,474,475,476,304,305,306,477,478,479,480,307,308,481,482,483,484,485,486,487,309,310,311,312,313,314,315,316,317,318,319,320,321,322,488,323,324],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[67,68,69,325,326,327,70,71,328,72,329,330,331,332,73,74,333,334,75,76,77,78,335,336,337,338,339,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,341,342,343,344,345,346,348,2,3,103,104,105,4,106,107,108,349,109,110,111,112,113,114,115,5,116,117,118,119,351,352,353,354,355,356,120,121,6,7,122,123,124,125,126,8,9,10,11,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,357,141,142,143,358,359,360,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,164,165,361,166,167,168,169,170,171,172,362,173,174,175,176,363,177,178,364,179,180,181,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,18,19,390,391,182,392,183,184,185,186,20,187,188,189,190,393,394,395,396,397,398,399,400,401,191,402,192,403,193,194,404,195,405,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,406,407,408,409,410,216,411,412,413,414,415,416,217,218,219,220,221,222,511,223,417,224,419,420,421,422,423,225,424,425,426,427,428,429,226,227,21,228,229,230,231,232,233,234,22,23,24,25,430,26,27,28,29,30,31,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46,47,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,431,252,253,254,432,433,434,435,436,437,255,439,441,256,442,257,258,444,445,446,259,448,260,261,262,263,49,50,449,51,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,450,283,284,285,286,52,53,54,55,56,57,58,59,60,61,62,63,64,65,287,288,289,512,290,291,292,293,451,452,453,294,454,455,295,456,457,458,459,460,461,462,463,464,296,465,466,467,468,469,297,470,471,298,299,300,301,302,303,472,473,66,474,475,476,304,305,306,477,478,479,480,307,308,481,482,483,485,486,487,309,310,311,312,313,314,315,316,317,318,319,320,321,322,488,323,324],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[342,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[407,408,410,412,413,416,420,421,423,425,426,429],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[86,3,15,141,142,143,183,184,185,186,20,187,260,261,262,263,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[67,69,7,164,167,168,171,21,264,270,271,276,277],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[68,69,4,513,6,123,361,166,169,170,405,229,267,273,274],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[67,68,69,7,124,125,165,172,173,174,21,230,231,266,283,284,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,22,1,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[514,24,31,37,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[68,69,4,513,6,123,361,166,169,170,405,229,267,273,274],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,378,379,380,381,382,384,385,386,387,388,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[67,68,69,70,71,72,75,76,77,78,335,336,337,338,339,2,106,107,108,109,110,112,113,114,115,5,117,118,121,7,124,125,126,8,9,10,11,12,127,128,129,130,131,132,134,135,13,14,17,360,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,172,362,173,174,175,176,179,180,374,375,376,377,18,19,182,183,184,185,186,20,187,394,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,222,223,224,225,227,21,230,231,232,233,234,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,1,40,41,42,43,45,46,47,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,433,434,435,436,437,256,442,257,258,260,261,262,263,50,51,265,266,268,269,272,275,277,280,281,282,283,284,285,286,52,53,54,55,57,58,59,60,61,62,65,287,288,289,290,293,294,295,296,297,298,300,301,302,303,66,476,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[515,34,66],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[194,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[68,69,4,513,6,123,361,166,169,170,405,229,267,273,274],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1495","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[86,141,142,143,388,183,184,185,186,20,187,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[517,48],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[16,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[518,232,233,234],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[518,232,233,234],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[68,69,4,513,6,123,361,166,169,170,405,229,267,273,274],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":269,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testReturnException":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":184,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.MockClassControlTest.testToString":395,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.tests2.UsageTest.wrongArguments":267,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":301,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":17,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":163,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":129,"org.easymock.tests.UsageTest.argumentsOrdered":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":12,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":494,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":277,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":436,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":368,"org.easymock.tests2.UsageTest.strictResetToDefault":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":476,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":493,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":159,"org.easymock.tests.LimitationsTest.mockFinalMethod":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":434,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":497,"org.easymock.samples.PartialClassMockTest.testGetArea":316,"org.easymock.tests.MockingTest.testInterfaceMocking":328,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":145,"org.easymock.tests2.UsageTest.niceToStrict":268,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":356,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":79,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":256,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":153,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":194,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":349,"org.easymock.tests.MockClassControlTest.testEquals":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":294,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":435,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.samples.BasicClassMockTest.testPrintContent":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":187,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":221,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":498,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":348,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":477,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":290,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":472,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":490,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":183,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":238,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":276,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":259,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":115,"org.easymock.tests.GenericTest.testBridgedEquals":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":162,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":249,"org.easymock.tests.MockingTest.testNiceClassMocking":331,"org.easymock.tests.MockingTest.testClassMocking":326,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":262,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":118,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":51,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":110,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":354,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":84,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":417,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":398,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":462,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":433,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":109,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":340,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":102,"org.easymock.tests2.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":188,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":463,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":496,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":397,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":150,"org.easymock.tests.ReplayStateInvalidCallsTest.times":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":141,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":503,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":297,"org.easymock.tests2.UsageTest.resumeIfFailure":275,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":186,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":443,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":234,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":95,"org.easymock.samples.SupportTest.voteForRemovals":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":156,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":518,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":101,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":278,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":42,"org.easymock.tests2.DelegateToTest.testWrongClass":220,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":500,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":19,"org.easymock.tests.UsageStrictMockTest.range":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":314,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":516,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":451,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":105,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":114,"org.easymock.tests2.ThreadingTest.testThreadSafe":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":311,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":185,"org.easymock.tests.UsageExpectAndThrowTest.longType":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":508,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":258,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":303,"org.easymock.tests2.CompareToTest.testCompareEqual":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":507,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":504,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":124,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":291,"org.easymock.tests2.MockBuilderTest.testCreateMockString":448,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":456,"org.easymock.tests.UsageExpectAndThrowTest.floatType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":418,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":296,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests2.UsageTest.defaultResetToNice":272,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":111,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":474,"org.easymock.tests.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests.MockingTest.testStrictClassMocking":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":282,"org.easymock.tests2.CompareToTest.testGreateOrEqual":514,"org.easymock.tests.ObjectMethodsTest.testHashCode":353,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":506,"org.easymock.tests2.NameTest.nameForNiceMock":285,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":293,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":501,"org.easymock.tests2.DependencyTest.testInterfaceMocking":307,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.DelegateToTest.testStubDelegate":219,"org.easymock.tests2.AnswerTest.stubAnswer":281,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":444,"org.easymock.tests.UsageVarargTest.varargLongAccepted":113,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":223,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests.UsageThrowableTest.noUpperLimit":134,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":40,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":481,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":431,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":491,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":457,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":489,"org.easymock.tests2.NameTest.nameForMock":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":447,"org.easymock.tests2.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":158,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests2.NameTest.nameForStrictMock":284,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":255,"org.easymock.tests2.UsageStrictMockTest.range":229,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":495,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":461,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":299,"org.easymock.tests.UsageTest.wrongArguments":166,"org.easymock.tests2.MockBuilderTest.testWithConstructor":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":458,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":363,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":509,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":279,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":499,"org.easymock.tests2.CompareToTest.testLessThan":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":82,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":439,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":505,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":323,"org.easymock.tests.UsageStrictMockTest.testVerify":126,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":10,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":11,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":241}}]
