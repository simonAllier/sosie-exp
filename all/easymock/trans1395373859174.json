[{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[20,5,21,22,8,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[47,48],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[50,0,1,2,3,4,5,6,51,52,53,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[54,25,55,56,57,58,59,60,61,62,63,0,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,1,2,3,4,5,6,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,21,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,51,52,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,22,183,184,185,186,7,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,13,13,14,14,208,15,209,210,211,212,16,17,213,214,215,216,217,218,219,220,18,19,221,222,223,224,8,225,226,227,228,229,230,23,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,48,303,304,305,306,307,308,309,310,9,10,11,12,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[342,60,61,89,98,21,343,104,107,108,109,134,136,138,139,140,344,345,346,347,173,22,183,211,348,213,349,23,233,234,235,239,240,241,242,244,252,254,255,257,261,262,265,269,272,273,274,278,293],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[350,351,352,353,354,355,356,357,358,317,321,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[355,360,361,362,363,364,365,303,358,312],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,98,343,104,107,108,136,139,347,22,183,233,239,240,273],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[98,343,104,107,108,136,139,367,347,22,183,233,239,240,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":279,"org.easymock.tests2.UsageTest.argumentsOrdered":240,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":4,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.tests2.StubTest.stubWithReturnValue":8,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":355,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":300,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.SerializationTest.testAllMockedMethod":314,"org.easymock.tests2.DelegateToTest.testReturnException":323,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":2,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":306,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":361,"org.easymock.tests2.DelegateToTest.testWrongClass":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":285,"org.easymock.tests2.UsageTest.wrongArguments":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":38,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ExampleTest.answerVsDelegate":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":315,"org.easymock.tests2.UsageConstraintsTest.testNull":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests2.CaptureTest.testPrimitive":331,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":53,"org.easymock.tests.UsageTest.moreThanOneArgument":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":192,"org.easymock.tests2.CaptureTest.testCaptureNone":336,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":102,"org.easymock.tests.UsageUnorderedTest.message":98,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":344,"org.easymock.tests.UsageVerifyTest.twoReturns":183,"org.easymock.tests.UsageVarargTest.varargByteAccepted":92,"org.easymock.tests2.ThreadingTest.testThreadSafe":214,"org.easymock.tests.UsageTest.argumentsOrdered":108,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":148,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":59,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests2.UsageConstraintsTest.any":287,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":3,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.tests2.SerializationTest.testClass":312,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests2.AnswerTest.answer":305,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":286,"org.easymock.tests2.CaptureTest.testAnd":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":354,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.DelegateToTest.testDelegate":327,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":152,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":248,"org.easymock.tests2.CaptureTest.testCaptureLast":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":321,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":284,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":298,"org.easymock.tests.MockingTest.testTwoMocks":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":145,"org.easymock.tests2.CaptureTest.testCapture1_2446744":332,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":302,"org.easymock.tests.UsageThrowableTest.throwError":64,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":34,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":216,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":194,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":293,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":308,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.samples.ExampleTest.voteAgainstRemoval":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":253,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":351,"org.easymock.tests2.UsageConstraintsTest.testNotNull":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":212,"org.easymock.tests2.MockBuilderTest.testCreateMock":348,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests.UsageVarargTest.differentLength":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":35,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":57,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":291,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":290,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":337,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":366,"org.easymock.tests2.CaptureTest.testCaptureAll":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.testMatches":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":193,"org.easymock.samples.ExampleTest.voteForRemovals":203,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests.UsageVarargTest.allKinds":94,"org.easymock.tests2.DependencyTest.testInterfaceMocking":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":363,"org.easymock.samples.BasicClassMockTest.testPrintContent":210,"org.easymock.samples.ExampleTest.addDocument":202,"org.easymock.tests2.DelegateToTest.testStubDelegate":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests2.AnswerTest.stubAnswer":309,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":365,"org.easymock.tests2.UsageConstraintsTest.greaterThan":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":254,"org.easymock.tests.UsageVarargTest.varargLongAccepted":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.samples.ExampleTest.voteForRemoval":200,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":215,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":249,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":44,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":277,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":62,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":333,"org.easymock.tests2.SerializationTest.test":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests2.UsageConstraintsTest.testSame":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":341,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":340,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":217,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":93,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":352,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":299,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":56,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":37,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":367,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":49,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.testContains":289,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":280,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":223,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":211,"org.easymock.tests2.UsageStrictMockTest.range":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":362,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":41,"org.easymock.tests.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":364,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":257,"org.easymock.tests2.CaptureTest.testCaptureRightOne":338,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":149,"org.easymock.tests2.UsageConstraintsTest.testOr":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":358,"org.easymock.tests.UsageRangeTest.combination":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":244,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":74,"org.easymock.tests.UsageTest.wrongArguments":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":39,"org.easymock.tests2.EasyMockSupportTest.testVerify":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":150,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":111,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":288,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":307,"org.easymock.tests2.CompareToTest.testLessThan":47,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":20,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":343,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":58,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.constraints":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":252,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.samples.ExampleTest.addAndChangeDocument":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.UsageStrictMockTest.testVerify":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":147,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":334,"org.easymock.tests2.UsageTest.resumeIfFailure":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85}}]
