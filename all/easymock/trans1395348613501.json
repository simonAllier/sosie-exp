[{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[3,4,5],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,2,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,0,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[13,14,24,258,33,37,259,260,261,262,263,264,265,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[267,268],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[25,38,39,269,40,41,270,271,42,43,44,45,46,47,48,55,59,60,272,85,86,87,88,89,90,91,92,93,94,273,95,96,97,98,99,100,101,102,103,104,105,106,274,107,108,109,110,142,143,144,145,146,275,159,169,219,222,223,224,225,226,227,228,276,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,39,269,40,41,270,271,42,43,44,45,46,47,48,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[42,44,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[8,30,59,60,111,113,114,116,195,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[280,6,7,8,9,10,281,11,282,12,13,14,283,15,284,285,286,16,17,18,19,20,287,288,289,290,291,21,292,293,294,295,296,297,298,299,22,23,24,258,300,301,302,25,303,26,27,304,28,29,305,30,31,32,33,34,306,35,36,37,259,38,39,269,40,41,270,271,42,43,44,45,46,47,48,49,50,51,52,53,54,307,5,55,308,309,310,56,57,58,311,312,59,313,60,61,62,63,64,314,315,316,317,318,65,319,320,321,322,323,324,272,325,326,327,328,66,67,68,69,70,2,71,72,73,74,75,76,77,78,79,80,81,82,329,83,84,85,86,87,88,330,89,90,91,92,93,94,273,95,96,97,98,99,100,101,102,103,104,105,106,274,107,108,109,110,331,332,333,334,335,111,112,113,114,115,116,336,262,117,337,263,338,118,339,119,264,120,340,341,342,121,266,343,344,345,346,347,348,349,350,122,123,124,351,125,352,126,127,128,353,354,129,130,355,356,357,131,358,359,132,360,361,362,363,364,365,366,367,368,133,369,370,371,372,373,134,374,375,135,136,137,138,376,377,378,379,139,140,141,142,143,144,145,146,147,148,149,380,150,381,151,152,153,154,155,156,157,158,382,383,275,159,384,160,161,385,386,162,163,164,387,388,389,390,391,267,392,393,394,395,396,397,398,399,400,165,166,167,168,169,170,401,402,403,404,405,406,407,408,409,410,411,171,412,413,414,415,416,417,418,172,419,173,420,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,421,422,423,424,425,194,426,427,428,429,430,431,195,432,196,197,433,198,434,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,435,436,220,437,257,221,0,438,439,222,223,440,441,442,443,444,445,224,225,226,227,228,229,230,231,446,447,448,449,450,451,452,453,454,455,456,276,232,233,234,235,236,237,238,457,458,459,239,240,460,241,461,462,463,464,465,466,467,468,469,470,471,242,243,244,245,472,473,474,475,476,477,478,479,480,481,482,483,484,279,485,486,246,487,1,488,489,490,247,491,248,249,250,251,252,253,492,493,254,255,494,495,256],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[280,6,7,8,9,10,281,11,282,283,15,284,285,286,19,20,21,22,23,24,302,303,304,28,29,305,31,32,33,34,35,36,37,38,39,269,40,270,271,42,43,44,45,48,49,50,51,52,53,54,307,55,310,57,61,62,63,65,325,326,327,328,67,69,71,72,73,74,75,76,77,78,79,80,81,82,329,88,93,94,95,96,98,101,104,105,106,274,107,111,114,336,118,339,119,120,342,343,122,123,351,125,352,128,353,354,130,131,132,133,134,376,377,378,379,140,141,150,151,152,153,154,155,156,157,158,383,275,384,385,386,388,396,397,398,411,413,414,415,416,417,172,419,176,177,179,184,189,421,422,423,424,425,194,426,427,428,429,430,431,195,196,197,198,434,201,202,204,209,214,220,441,442,443,444,445,227,229,230,446,447,448,450,451,453,454,455,456,276,239,240,241,464,465,466,467,468,469,470,471,242,492,493,494,495,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[112,115,116,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[67,69,111,195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[28,29,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.UsageTest.argumentsOrdered":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.MockClassControlTest.testToString":466,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageTest.wrongArguments":351,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":462,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":80,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":218,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.UsageTest.argumentsOrdered":495,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":257,"org.easymock.tests.UsageVarargTest.varargIntAccepted":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":298,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":404,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":214,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":445,"org.easymock.tests2.DependencyTest.testClassMockingSupport":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":380,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":151,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":401,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":375,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":460,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":137,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":400,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":364,"org.easymock.tests2.ThreadingTest.testChangeDefault":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":449,"org.easymock.tests.MockClassControlTest.testEquals":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":131,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":443,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":276,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":444,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":393,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":1,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":456,"org.easymock.tests.GenericTest.testBridgedEquals":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":416,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":441,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":417,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.MockingTest.testNiceClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":382,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":79,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":451,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":256,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":147,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":258,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests.MockClassControlTest.testHashCode":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":366,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":0,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":272,"org.easymock.tests.UsageVarargTest.varargCharAccepted":450,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":387,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":388,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":243,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.tests.CapturesMatcherTest.test":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests2.UsageTest.resumeIfFailure":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests2.SerializationTest.testAllMockedMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":246,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":247,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":149,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.tests.UsageStrictMockTest.range":160,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":494,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":138,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":455,"org.easymock.tests2.ThreadingTest.testThreadSafe":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":369,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":414,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":227,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":267,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":289,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":203,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":353,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":4,"org.easymock.samples.ExampleTest.removeNonExistingDocument":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":300,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":133,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":261,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.UsageVarargTest.differentLength":452,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":288,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests2.UsageConstraintsTest.equals":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":226,"org.easymock.tests.UsageCallCountTest.tooFewCalls":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":223,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":116,"org.easymock.tests.ObjectMethodsTest.testHashCode":397,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":20,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":340,"org.easymock.tests.UsageVarargTest.varargLongAccepted":454,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageThrowableTest.noUpperLimit":152,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":306,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":361,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":461,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":266,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":225,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":72,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":365,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":493,"org.easymock.tests2.MockBuilderTest.testWithConstructor":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.UsageVarargTest.varargShortAccepted":453,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":415,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":492,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":413,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.CaptureTest.testCapture":278,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":384,"org.easymock.tests2.UsageConstraintsTest.constraints":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":442,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77}}]
