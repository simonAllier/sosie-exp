[{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,85,110,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[300,301,302,303,304,1,305,306,307,308,309,310,2,3,311,4,5,6,7,8,9,10,11,12,13,312,313,14,15,16,314,17,18,19,20,21,22,23,24,25,26,27,28,29,30,315,316,317,318,319,320,321,31,32,33,34,35,36,37,38,39,40,41,42,322,43,44,45,46,47,323,48,49,50,324,51,325,326,327,328,329,52,330,331,53,332,333,334,335,336,337,338,339,340,54,341,342,343,344,345,55,346,347,348,349,350,351,352,56,57,58,353,59,354,355,356,60,61,62,357,63,358,359,64,65,360,66,361,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,362,88,363,364,89,90,91,92,365,366,93,94,95,96,367,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,368,369,370,371,372,125,373,374,375,376,377,378,126,127,128,129,130,131,132,133,134,135,136,137,379,138,139,140,141,142,380,143,381,144,145,146,147,382,148,383,149,384,150,151,152,385,386,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,387,388,389,390,391,392,393,394,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,395,396,204,397,398,399,400,401,402,205,206,207,208,209,210,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,299,419,420,421,422,423,424,425,211,426,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,427,234,235,236,237,238,239,240,241,242,243,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,244,444,445,446,447,448,245,449,450,246,451,452,453,454,455,456,457,247,248,249,250,251,252,458,459,460,461,462,463,464,465,466,467,468,253,469,254,470,255,471,472,473,474,475,476,477,478,479,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,480,274,275,276,277,278,279,280,281,282,283,481,284,285,286,287,288,289,482,483,484,290,291,292,485,293,486,487,488,294,295,296,297,298],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[405,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[1,2,3,311,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,322,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,132,133,134,135,136,137,379,138,139,140,141,142,380,143,381,144,145,146,147,382,148,149,384,150,151,152,385,386,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,397,398,399,400,401,402,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,235,236,237,238,239,240,241,242,243,247,248,249,250,251,252,458,459,460,462,463,464,465,466,467,468,253,254,470,256,257,258,259,260,261,262,263,264,266,267,270,274,275,276,277,278,279,281,282,0,0,283,481,284,285,286,287,288,289,291,292,293],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[96,101,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[67,69,77,95,96,98,100,101,103,113,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[2,53,54,55,58,59,354,60,61,62,63,64,65,66,87,90,91,366,152,387,392,255],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[1,2,3,311,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,322,43,44,45,46,47,48,49,50,51,52,53,54,55,349,350,351,352,56,57,58,59,60,61,62,63,64,65,66,361,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,132,133,134,135,136,137,379,138,139,140,141,142,380,143,381,144,145,146,147,382,148,383,149,384,150,150,151,151,152,385,386,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,395,396,204,397,398,399,400,401,402,205,206,207,208,209,210,404,413,414,415,416,417,418,299,419,420,421,422,423,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,235,236,237,238,239,240,241,242,243,453,454,455,247,248,249,250,251,252,458,459,460,462,463,464,465,466,467,468,253,254,470,472,473,474,475,476,477,478,479,256,257,258,259,260,261,262,263,264,266,267,269,270,274,275,276,277,278,279,280,281,282,283,481,284,285,286,287,288,289,482,291,292,293],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,46,50,324,51,325,327,328,329,52,330,331,53,332,333,334,335,336,337,338,339,340,54,341,342,343,344,345,55,346,347,353,355,357,359,490,360,491,492,150,151],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,311,493],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[1,2,3,8,12,14,15,18,19,20,22,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,59,60,62,63,65,67,68,70,71,74,75,76,77,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,123,125,128,132,133,134,135,136,138,140,141,143,144,146,147,148,152,156,158,159,160,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,197,200,205,206,207,208,209,211,234,236,237,238,239,240,241,242,243,254,255,256,258,269,279,280,281,282,285,287,288,291,292,293],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[21,27,28,140,194,195,198,199,210,257,258,270,494,284,287],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[408,495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[57,121,122,123,124,157,168,247,248,249,250,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[95,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[501,502,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[67,69,77,95,96,100,101,103,113],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[245],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,311,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[469,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[469,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[23,85,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[67,69,77,95,96,100,101,103,113],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[469],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":505,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":381,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":291,"org.easymock.tests.MockClassControlTest.testToString":474,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":348,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":163,"org.easymock.samples.ExampleTest.answerVsDelegate":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests2.CaptureTest.testPrimitive":70,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests.UsageTest.argumentsOrdered":199,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":499,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":497,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":8,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":389,"org.easymock.tests2.CaptureTest.testAnd":67,"org.easymock.tests2.UsageTest.strictResetToDefault":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":232,"org.easymock.tests2.CaptureTest.testCapture1_2446744":71,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":5,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":480,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":347,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":154,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":161,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests.MockClassControlTest.testEquals":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":6,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.samples.BasicClassMockTest.testPrintContent":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":410,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":411,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":33,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":247,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":126,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":34,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":468,"org.easymock.tests.GenericTest.testBridgedEquals":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":401,"org.easymock.tests.UsageExpectAndReturnTest.longType":174,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":500,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.MockingTest.testNiceClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":45,"org.easymock.tests.MockingTest.testClassMocking":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":123,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":39,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":463,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":455,"org.easymock.tests.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":325,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":458,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":338,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":498,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":361,"org.easymock.tests.UsageVarargTest.varargCharAccepted":462,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":403,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests.DefaultClassInstantiatorTest.object":404,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":42,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":453,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":201,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.StubTest.stubWithReturnValue":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests2.SerializationTest.testAllMockedMethod":311,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.samples.SupportTest.voteForRemovals":143,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":9,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":451,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":243,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests.UsageStrictMockTest.range":287,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":320,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":155,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":467,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":399,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":385,"org.easymock.tests2.CaptureTest.testCapture_2617107":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":408,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":299,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":504,"org.easymock.tests2.NameTest.nameForMocksControl":352,"org.easymock.tests2.MockedExceptionTest.testMockedException":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":293,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":290,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":472,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":332,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":326,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.UsageTest.defaultResetToNice":26,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.UsageVarargTest.differentLength":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.UsageConstraintsTest.equals":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":164,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":489,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.MockingTest.testStrictClassMocking":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":48,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.ObjectMethodsTest.testHashCode":454,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":351,"org.easymock.tests2.DependencyTest.testInterfaceMocking":14,"org.easymock.samples.ExampleTest.addDocument":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":285,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":358,"org.easymock.tests.UsageVarargTest.varargLongAccepted":466,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.floatType":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":315,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":172,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.samples.SupportTest.addDocument":380,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":333,"org.easymock.tests.GenericTest.testPackageScope":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests2.NameTest.nameForMock":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":441,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests2.NameTest.nameForStrictMock":350,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":407,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":32,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":337,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":195,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":334,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.UsageVarargTest.varargShortAccepted":465,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":409,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":400,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":354,"org.easymock.tests.UsageTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":398,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":482,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":384,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":207,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37}}]
