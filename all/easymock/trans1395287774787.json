[{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[44,45,46,11,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[49,50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[53,54,55,56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[29,30,60,61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,65,5,6,46,8,9,10,66,11,67,19,20,21,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[24,25,26,27],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[69,70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[4,73,74,75,76,77,78,79,80,11,12,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,71,99,100,72,52,22,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,73,147,148,149,150,151,152,153,154,75,76,79,155,6,156,7,157,158,159,160,12,67,13,161,162,163,164,84,165,166,89,36,37,167,90,91,93,94,97,69,98,71,99,100,72,168,169,170,171,172,173,25,26,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,18,190,191,192,193,194,195,22,68,23,196,197,198,199,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[25,200,53,54,55,56,57,201,58,202,203,204,205,59],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.RecordState:305","failures":[28,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,135,136,137,238,239,138,139,140,141,142,240,241,242,243,244,143,144,145,146,73,74,148,149,150,151,152,153,154,75,76,79,155,5,6,156,7,157,158,159,80,245,246,247,160,12,67,13,32,33,34,248,249,161,162,81,82,83,84,85,87,88,250,251,252,253,165,254,255,166,256,89,36,37,167,90,91,92,93,94,97,69,98,71,100,72,168,169,170,52,171,257,258,259,260,261,172,173,262,263,25,26,174,175,176,177,178,179,180,181,182,183,184,185,186,264,39,40,265,266,41,42,267,268,269,270,271,187,272,273,274,188,189,18,190,191,192,193,194,195,22,68,23,196,197,198,199,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,205],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[28,206,207,208,209,275,210,276,211,277,278,279,280,214,215,217,222,227,232,281,235,236,135,138,240,282,148,283,149,150,151,152,153,154,78,5,6,8,9,10,159,245,246,247,160,284,11,285,286,32,33,34,287,288,289,290,249,161,291,292,293,294,295,296,297,298,299,300,86,250,252,253,165,254,255,166,256,89,37,90,91,92,93,95,96,97,69,98,71,72,52,171,257,258,259,260,172,173,301,25,26,27,174,175,176,177,178,179,180,182,183,184,185,302,186,264,39,40,265,266,41,42,267,269,187,272,273,188,189,19,190,303,20,21,195,304,305,306,196,197,199,104,109,110,112,113,115,118,121,122,123,124,125,129,130,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[90,92,93,94,95,96,97,98,70,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[36,37,307,187],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[308,5,6,67,68],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[309,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[308,5,6,67,68],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[143,311,67,13,261,175,179,180,183,274,190,312,68,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[4,73,74,75,76,77,78,79,80,11,12,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,71,99,100,72,52,22,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[28,313,314,315,35,36,37,316,258,259,260,25,317,271,318,187,272,273,274,319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[320,321],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,206,207,208,209,275,210,322,276,211,277,278,279,280,214,215,217,222,227,232,281,4,235,236,135,138,240,143,282,148,283,149,150,151,152,153,154,75,76,77,78,5,6,8,9,10,159,245,246,247,160,284,11,12,285,67,13,286,32,33,34,323,287,288,289,290,249,161,292,293,294,295,296,297,298,299,300,86,250,253,165,254,255,166,256,89,37,90,91,92,93,95,96,97,69,98,71,72,52,171,257,258,259,260,261,172,173,301,25,26,27,174,175,176,177,178,179,180,182,183,184,185,302,186,264,39,40,265,266,41,42,267,269,270,187,272,273,188,189,19,190,303,20,21,195,304,22,305,68,23,306,196,197,199,104,106,109,110,112,113,115,118,121,122,123,124,125,126,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,324,325,326,77,327,328,329,330,80,331,332,333,38,334,172,335,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[24,25,26,27],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":330,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":303,"org.easymock.tests2.StubTest.stubWithReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":58,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":328,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":204,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":48,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":31,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":50,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":75,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.samples.ExampleTest.answerVsDelegate":207,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":264,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":183,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":133,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":288,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":78,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":329,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":111,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.UsageTest.strictResetToDefault":189,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":310,"org.easymock.tests2.NameTest.nameForMocksControl":17,"org.easymock.tests2.MockedExceptionTest.testMockedException":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":273,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":200,"org.easymock.tests2.CaptureTest.testCaptureLast":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":291,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":301,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":259,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":77,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":265,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":320,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":115,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":45,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.testMatches":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":266,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.samples.ExampleTest.voteForRemovals":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":56,"org.easymock.tests2.NameTest.nameForNiceMock":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests.UsageVarargTest.allKinds":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":196,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":55,"org.easymock.samples.BasicClassMockTest.testPrintContent":279,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":144,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.samples.ExampleTest.voteForRemoval":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":309,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":95,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":327,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":137,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests2.NameTest.nameForMock":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":64,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":146,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":307,"org.easymock.tests2.NameTest.nameForStrictMock":15,"org.easymock.tests2.UsageConstraintsTest.testContains":114,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":172,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":54,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":49,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":59,"org.easymock.tests.UsageRangeTest.combination":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.MockBuilderTest.testWithConstructor":61,"org.easymock.tests2.EasyMockSupportTest.testVerify":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests2.UsageConstraintsTest.cmpTo":113,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":129,"org.easymock.tests.UsageVarargTest.varargCharAccepted":295,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":318,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":287,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests2.CaptureTest.testCapture":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":260,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":84,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":308,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":180}}]
