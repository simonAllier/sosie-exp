[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[9,10],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,53,54,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:562","sourceCode":"return ((org.easymock.IExpectationSetters<T>)(org.easymock.internal.MocksControl))","type":"CtReturnImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,11,97,98,99,15,100,101,102,17,18,19,20,103,21,22,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,0,149,150,151,152,153,154,23,24,155,25,26,27,29,31,32,33,36,38,40,41,43,156,157,158,46,159,47,48,49,50,160,161,162,163,164,165,53,53,54,54,166,55,9,167,168,169,170,171,172,173,174,175,176,177,56,58,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,60,62,63,64,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,1,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,100,16,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[132,138,142,0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[104,281,106,107,282,283,110,284,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,100,16,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[77,285,286,287,9,288,179,289,257,258,290,291,292,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[11,2,3,4,5,295,296,15,8,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[298],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[77,285,286,287,9,288,179,289,257,258,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[299,300,301,302,303,304,68,69,70,71,72,73,74,75,305,306,76,307,77,78,308,309,310,311,312,313,79,314,315,316,317,318,319,80,81,82,83,84,85,86,87,88,89,90,91,320,92,93,94,95,96,11,2,97,98,321,99,15,100,16,101,102,17,18,19,20,103,21,22,322,323,324,325,104,105,281,106,107,282,283,108,109,110,111,112,113,114,115,116,117,285,118,326,119,120,121,286,287,122,123,124,125,126,127,128,129,130,131,132,133,327,134,135,136,137,138,139,328,140,141,142,143,144,145,146,147,148,0,149,150,329,151,152,153,154,330,331,332,333,334,23,24,155,25,26,27,28,335,29,336,337,30,31,32,33,338,339,34,36,37,340,38,39,40,41,297,42,43,45,341,342,343,344,345,156,346,347,348,349,350,351,157,158,46,159,352,353,354,47,355,356,48,357,358,359,360,361,362,363,364,365,49,366,367,368,369,370,50,371,372,373,51,52,160,161,162,163,374,164,375,165,53,54,376,166,377,55,378,379,380,381,382,383,384,385,386,387,388,389,390,9,391,392,393,394,395,396,397,398,399,400,401,402,167,168,169,170,171,172,173,174,175,176,177,403,56,57,58,404,405,59,406,407,408,409,410,411,412,413,288,178,414,179,180,415,416,181,182,183,417,418,184,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,185,441,442,443,444,445,186,446,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,447,448,60,449,450,451,452,61,62,63,453,64,454,455,456,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,457,247,458,459,460,461,462,463,1,248,249,250,251,464,465,466,467,468,469,470,471,472,473,474,475,252,253,254,255,256,257,258,259,260,261,262,263,264,290,291,265,266,292,293,267,476,477,478,479,480,481,482,65,483,484,66,485,486,268,269,270,487,271,272,488,273,294,67,274,275,276,277,278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[68,69,76,77,78,95,11,17,18,19,20,103,21,22,126,23,24,155,25,26,27,29,31,32,33,36,38,40,41,43,47,48,49,50,160,162,163,164,166,55,170,171,172,173,178,179,180,187,60,62,63,64,225,226,227,228,229,230,233,234,236,237,238,240,241,242,243,244,1,248,249,250,251,252,253,254,255,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[299,300,301,302,68,69,70,71,72,73,74,75,305,306,76,307,77,78,308,79,80,81,82,83,84,85,86,87,88,89,90,91,320,92,93,94,95,96,11,97,98,99,15,100,16,101,102,17,18,19,20,103,21,22,104,105,281,106,107,282,283,108,109,110,111,112,113,114,115,116,117,285,118,326,119,120,121,286,287,122,123,124,125,126,127,128,129,489,130,131,132,133,134,135,136,137,138,139,328,140,141,142,143,144,145,146,147,148,0,149,150,329,151,152,153,154,331,332,333,334,23,24,155,25,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,43,45,156,157,158,46,159,47,48,49,50,373,51,52,160,161,162,163,374,164,375,165,53,53,54,54,376,166,377,55,379,380,381,384,9,391,392,393,394,395,396,397,398,399,400,401,402,167,168,169,170,171,172,173,174,175,176,177,56,57,58,405,59,406,407,408,409,410,411,412,413,288,178,414,179,180,415,416,181,182,183,417,418,184,419,420,421,422,423,424,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,60,61,62,63,64,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,459,460,461,462,463,1,248,249,250,251,464,465,466,468,469,470,471,472,473,474,475,252,253,254,255,256,257,258,259,260,261,262,263,264,290,291,265,266,292,293,267,476,477,478,479,480,481,268,269,270,487,271,272,488,273,294,67,274,275,276,277,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,100,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[104,105,281,106,107,282,283,108,109,110,111,112,113,114,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[442,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[299,300,301,302,68,69,70,71,72,73,74,75,305,306,76,307,77,78,308,309,310,311,312,313,79,314,315,316,317,318,319,80,81,82,84,85,87,89,90,91,320,92,93,94,95,96,11,2,97,98,321,99,15,100,16,101,102,19,20,103,21,322,323,324,325,104,105,281,106,107,282,283,108,109,110,111,112,113,114,115,116,117,285,118,326,119,120,121,286,287,122,123,124,125,126,127,128,129,489,130,131,132,133,327,134,135,136,137,138,139,328,140,141,142,143,144,145,146,147,148,0,149,150,329,151,152,153,154,23,24,155,25,26,27,28,29,336,337,30,31,32,33,338,36,340,38,39,40,297,42,341,342,343,344,345,156,346,347,348,349,350,351,157,158,46,159,352,47,356,48,358,359,362,363,364,365,49,367,370,50,371,372,373,51,52,160,161,162,163,374,164,375,165,53,53,54,54,376,166,377,55,378,379,380,381,382,383,384,385,386,387,388,389,390,9,391,392,393,394,395,396,397,398,399,400,401,402,167,168,169,170,171,172,173,174,175,176,177,403,56,57,58,404,405,59,406,407,408,409,410,411,412,413,288,178,414,179,180,415,416,181,182,183,417,418,184,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,185,441,442,443,444,445,186,446,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,447,448,60,449,450,451,452,61,62,63,453,64,454,455,456,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,457,247,458,459,460,461,462,463,1,248,249,250,251,464,465,466,467,468,469,470,471,472,473,474,475,252,253,254,255,256,257,258,259,260,261,262,263,264,290,291,265,266,292,293,267,476,477,478,479,480,481,482,483,66,486,268,269,270,487,271,272,488,273,294,67,274,275,276,277,278,279],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[388,491,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[299,300,301,302,68,70,73,74,75,305,306,76,307,77,78,308,92,93,94,95,96,11,97,98,99,15,100,16,101,102,18,19,21,22,104,105,281,106,107,282,283,108,109,110,111,112,113,114,115,116,117,285,118,326,119,120,121,286,287,122,123,125,126,127,129,489,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,0,149,150,151,152,153,154,331,332,333,334,23,24,155,25,26,27,29,30,32,34,38,39,43,45,157,158,46,159,160,161,162,163,374,164,165,9,395,170,171,172,173,174,56,57,59,412,413,288,178,414,179,180,415,416,417,418,184,419,420,421,187,188,189,190,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,60,62,63,64,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,459,460,461,462,463,1,248,249,250,251,464,465,466,468,469,471,472,473,474,475,252,253,254,255,256,257,258,261,262,263,264,290,291,265,266,292,293,267,476,477,478,479,481,268,269,273,67,274,275,276,277,278,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[299,300,301,302,303,304,68,69,70,71,72,73,74,75,305,306,76,307,77,78,308,309,310,311,312,313,79,314,315,316,317,318,319,80,81,82,83,84,85,86,87,88,89,90,91,320,92,93,94,95,96,11,2,493,97,98,321,99,15,100,16,101,102,17,18,19,20,494,103,21,22,495,322,496,497,498,323,324,325,104,105,281,106,107,282,283,108,109,110,111,112,113,114,115,116,117,285,118,326,119,120,121,286,287,122,123,124,125,126,127,128,129,489,130,131,132,133,327,134,135,136,137,138,139,328,140,141,142,143,144,145,146,147,148,0,149,150,329,151,152,153,154,330,331,332,333,334,23,24,155,25,26,27,28,335,29,336,337,30,31,32,33,338,339,34,499,36,37,500,340,38,39,40,8,41,501,297,42,43,502,45,341,342,343,344,345,156,346,347,348,349,350,351,157,158,46,159,352,353,354,47,355,356,48,357,358,359,360,361,362,363,364,365,49,366,367,368,369,370,50,371,372,373,51,52,160,161,162,163,374,164,375,165,53,54,376,166,377,55,378,379,380,381,382,383,503,384,385,386,387,388,389,504,390,9,391,392,393,394,395,396,397,398,399,400,401,402,167,168,169,170,171,172,173,174,175,176,177,403,56,57,58,404,405,59,406,407,408,409,410,411,412,413,288,178,414,179,180,415,416,181,182,183,417,418,184,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,185,441,442,443,444,445,186,446,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,447,448,60,449,505,450,451,452,61,62,63,453,64,454,455,456,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,457,247,458,459,460,461,462,463,1,248,249,250,251,464,465,466,467,468,469,470,471,472,473,474,475,252,253,254,255,256,257,258,259,260,261,262,263,264,290,291,265,266,292,293,267,476,477,478,479,480,481,482,65,506,507,483,484,66,485,486,268,269,270,487,271,272,488,273,294,67,274,275,276,277,278,279],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:173","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder.toString()))","type":"CtThrowImpl"},"failures":[76,78,308,117,331,332,333,334,178,180,415,256,257,258,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[77,179,508,257,258],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[102,115,120,157,158,46,159,189,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,246,257,262,263,266,272,274,275,276,277,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[404],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[509,154],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.UsageTest.argumentsOrdered":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":435,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":326,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":377,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":406,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":330,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageTest.wrongArguments":285,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":478,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":192,"org.easymock.tests.UsageTest.argumentsOrdered":293,"org.easymock.tests.UsageVarargTest.varargIntAccepted":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.ReplayStateInvalidUsageTest.times":399,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests2.DependencyTest.testClassMocking":303,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":302,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":507,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":463,"org.easymock.tests2.DependencyTest.testClassMockingSupport":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":480,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":300,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":393,"org.easymock.tests.UsageThrowableTest.throwError":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":484,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":372,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":506,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":476,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests.MockClassControlTest.testEquals":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":301,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":173,"org.easymock.samples.ExampleTest.voteForRemovals":164,"org.easymock.tests.UsageVarargTest.allKinds":475,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":462,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":223,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":504,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":338,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":474,"org.easymock.tests.GenericTest.testBridgedEquals":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":423,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":459,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":170,"org.easymock.tests.UsageCallCountTest.tooManyCalls":424,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":222,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":18,"org.easymock.tests.MockingTest.testClassMocking":452,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":418,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests.MockTypeTest.fromEasyMockClass":483,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":381,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.MockClassControlTest.testHashCode":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":299,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":468,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":503,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":167,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":175,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":185,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":280,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":186,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":149,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":269,"org.easymock.tests.UsageStrictMockTest.range":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":324,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":473,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":398,"org.easymock.tests2.StubTest.stub":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.MockedExceptionTest.testMockedException":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":356,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":27,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":150,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":286,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.samples.ExampleTest.removeNonExistingDocument":375,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":395,"org.easymock.tests.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":45,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":448,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":224,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.CallbackTest.callback":97,"org.easymock.tests2.UsageConstraintsTest.equals":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":336,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":189,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":479,"org.easymock.tests.UsageThrowableTest.throwCheckedException":221,"org.easymock.tests.MockingTest.testStrictClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests2.DependencyTest.testInterfaceMocking":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":501,"org.easymock.tests.UsageVarargTest.varargLongAccepted":472,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":322,"org.easymock.tests2.SerializationTest.test":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":376,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":188,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":10,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":77,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":295,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":362,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":291,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":471,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":72,"org.easymock.tests2.CompareToTest.testLessThan":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":392,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.CaptureTest.testCapture":284,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":373,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.LimitationsTest.abstractClass":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":508,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86}}]
