[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,23,24,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[20,33,34,35,36,37,38,39],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[4,40,41,14,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,25,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,3,115,116,117,4,5,118,26,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,7,8,140,141,9,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,17,18,161,10,162,163,164,165,166,167,11,168,169,170,171,172,173,174,175,176,177,178,179,180,181,19,182,183,20,21,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,12,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,22,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,27,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,13,298,299,300,301,14,15,302,303,304,42,43,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,28,327,16,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,29,346,347,348,349,350,351,30,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,44,412,413,414,415,416,0,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,31,481,482,483,32,484,485,486,487,488,489,490,491,492,493,494,495,496,497,23,24,498],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[150,152,153,158,160,161,10,163,213,214,218,219,226,229,238,241,243,254,257,258,259,387,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[285,288,442,443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[48,51,54,56,70,185,195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[87,90,100,106,134,150,499,152,153,156,157,158,160,161,10,500,163,19,183,20,212,213,214,215,218,219,501,228,229,231,232,233,234,236,238,239,240,241,256,265,297,313,314,315,317,387,392,481,482,483,495,496,23,23,24,24,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[19,182,183,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[47,48,50,51,52,53,54,55,56,57,25,66,70,71,185,186,187,188,195,196],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[90,100,106,132,150,152,153,155,156,158,160,17,18,10,163,19,20,21,234,22,239,240,243,387,392,31,483,23,23,24,24,498],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests2.UsageTest.argumentsOrdered":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":497,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.tests.MockClassControlTest.testToString":257,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":244,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":453,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":90,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":370,"org.easymock.samples.ExampleTest.answerVsDelegate":486,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":472,"org.easymock.tests.UsageTest.moreThanOneArgument":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":407,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":411,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests.ReplayStateInvalidUsageTest.times":274,"org.easymock.tests2.DependencyTest.testClassMocking":80,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":389,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":468,"org.easymock.tests.LimitationsTest.mockFinalMethod":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.DependencyTest.testClassMockingSupport":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":442,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.UsageThrowableTest.throwError":473,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":27,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":131,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":108,"org.easymock.samples.PartialClassMockTest.testGetArea":498,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":269,"org.easymock.tests.MockingTest.testInterfaceMocking":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":454,"org.easymock.tests2.UsageTest.niceToStrict":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":95,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":156,"org.easymock.tests2.MockBuilderTest.testCreateMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":462,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":7,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":368,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":61,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":431,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":60,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":470,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests.MockNameTest.defaultName":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.samples.ExampleTest.voteForRemovals":490,"org.easymock.tests.UsageVarargTest.allKinds":406,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":304,"org.easymock.samples.BasicClassMockTest.testPrintContent":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":479,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":3,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":39,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":241,"org.easymock.samples.ExampleTest.voteForRemoval":487,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":419,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":234,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":297,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":176,"org.easymock.tests2.CaptureTest.testCaptureFirst":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":427,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":405,"org.easymock.tests.GenericTest.testBridgedEquals":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":384,"org.easymock.tests.UsageExpectAndReturnTest.longType":423,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":471,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":469,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":385,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":478,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":320,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":283,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":227,"org.easymock.tests.UsageExpectAndReturnTest.object":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":436,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":395,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":121,"org.easymock.tests.MockClassControlTest.testHashCode":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":97,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":211,"org.easymock.tests.UsageVarargTest.varargCharAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":412,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":413,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":239,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":437,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":258,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":429,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":346,"org.easymock.samples.SupportTest.voteForRemovals":494,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":465,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":30,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":110,"org.easymock.tests.UsageExpectAndThrowTest.object":463,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":440,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":441,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":78,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":464,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":369,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.UsageVerifyTest.twoReturns":43,"org.easymock.tests.UsageVarargTest.varargByteAccepted":404,"org.easymock.tests2.ThreadingTest.testThreadSafe":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":101,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":495,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageConstraintsTest.any":57,"org.easymock.tests2.StubTest.stub":26,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":272,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":265,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":483,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":364,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":457,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":33,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":461,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":122,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":147,"org.easymock.tests2.MockBuilderTest.testCreateMockString":163,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.floatType":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":91,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":184,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":240,"org.easymock.tests.LimitationsTest.privateConstructor":264,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":480,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.differentLength":401,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests2.CallbackTest.callback":12,"org.easymock.tests2.UsageConstraintsTest.equals":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":22,"org.easymock.tests.UsageTest.openCallCountByLastCall":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":326,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":477,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":217,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.ObjectMethodsTest.testHashCode":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":37,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":149,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":102,"org.easymock.tests2.DelegateToTest.testStubDelegate":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":17,"org.easymock.tests.UsageVarargTest.varargLongAccepted":403,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":438,"org.easymock.tests.UsageExpectAndReturnTest.floatType":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.UsageThrowableTest.noUpperLimit":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":129,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":65,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":421,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.samples.SupportTest.addDocument":493,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":216,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":92,"org.easymock.tests.GenericTest.testPackageScope":481,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":128,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":318,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":162,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":424,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":467,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":232,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":40,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":152,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":124,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":229,"org.easymock.tests.UsageTest.wrongArguments":362,"org.easymock.tests2.MockBuilderTest.testWithConstructor":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":93,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":58,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":334,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.CaptureTest.testCaptureFromStub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":268,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":153,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":434,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":492,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":484,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":426,"org.easymock.tests.LimitationsTest.abstractClass":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":410,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":396,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":8}}]
