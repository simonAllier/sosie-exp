[{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,17,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[75,76,77,78,17,18,79,22,80,81,82,29,83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[84,85,86,87,88,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,3,4,5,7,8,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:122","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(java.lang.Object.getClass()) ? new org.easymock.internal.JavaProxyFactory() : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[99,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[104,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[105,106,30,76,11,12,13,14,107,108,109,110,77,111,112,113,114,115,116,117,16,78,17,18,19,118,20,79,119,21,22,80,68,81,25,120,121,26,27,122,123,124,125,126,127,128,129,103,130,131,132,133,134,135,136,137,138,139,140,141,82,142,28,29,83,143,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[144,145,146,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[148,149,150,151,96,152,153,154,105,106,75,30,76,11,12,155,31,13,14,107,156,157,158,159,160,161,108,162,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,34,35,36,37,176,177,178,179,180,181,182,183,184,109,185,38,110,77,111,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,84,209,210,211,212,213,85,214,215,216,217,218,219,86,87,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,78,17,18,19,260,261,262,88,263,264,265,266,267,39,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,99,287,288,289,40,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,118,322,20,79,119,21,22,80,323,324,325,326,327,328,329,330,61,331,62,63,64,65,66,67,332,333,90,334,89,335,336,337,338,339,340,341,342,343,344,91,345,346,92,347,93,94,348,95,349,350,351,352,353,354,355,68,356,81,25,120,121,357,69,358,26,27,359,122,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,133,395,396,101,397,398,399,400,401,402,403,134,404,135,405,406,407,408,409,410,411,412,97,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,98,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,10,466,467,104,100,468,469,70,71,72,73,470,136,471,472,473,137,138,474,475,139,476,477,478,140,479,480,481,482,483,484,485,486,487,488,489,490,74,141,491,82,142,28,29,83,492,493,143,494,495,496,497,498,499,500,501,502,503,504,505,0,506,507,102,508,509,510,511,512,513,514,515,516,517,518,519,520,521,145,146,147,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[539],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[143,494,497,499,500,502,510,515,522,524,532],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[105,106,76,114,116,16,78,17,18,19,79,21,22,81,123,124,125,128,103,131,82,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[540],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[328,541,542],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[17,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[543],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[169,32,33,34,35,36,37,40,70,71,72,73,74],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[169,32,33,34,35,36,37,186,187,188,238,287,40,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[266,336,338,342],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":494,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":241,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":355,"org.easymock.tests2.DelegateToTest.testReturnException":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":33,"org.easymock.tests.MockingTest.testPartialClassMocking":271,"org.easymock.tests.MockClassControlTest.testToString":178,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":41,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":521,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":501,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":292,"org.easymock.samples.ExampleTest.answerVsDelegate":347,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":152,"org.easymock.tests2.UsageConstraintsTest.testNull":497,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":396,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":525,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":60,"org.easymock.tests.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":317,"org.easymock.tests.UsageVarargTest.varargIntAccepted":158,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":89,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":412,"org.easymock.tests.ReplayStateInvalidUsageTest.times":286,"org.easymock.tests2.DependencyTest.testClassMocking":518,"org.easymock.tests2.AnswerTest.answer":458,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":457,"org.easymock.tests2.CaptureTest.testAnd":522,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":150,"org.easymock.tests2.UsageTest.strictResetToDefault":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.DelegateToTest.testDelegate":489,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":321,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":56,"org.easymock.tests.LimitationsTest.mockFinalMethod":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.DependencyTest.testClassMockingSupport":519,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":526,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":455,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":280,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":96,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":302,"org.easymock.samples.PartialClassMockTest.testGetArea":353,"org.easymock.tests.MockingTest.testInterfaceMocking":273,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":281,"org.easymock.tests2.CompareToTest.testLessOrEqual":543,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":42,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":205,"org.easymock.tests2.ThreadingTest.testChangeDefault":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":376,"org.easymock.tests2.MockBuilderTest.testCreateMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":290,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":506,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":541,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":531,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":159,"org.easymock.tests2.EasyMockSupportClassTest.testAll":421,"org.easymock.tests.MockClassControlTest.testEquals":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":337,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":58,"org.easymock.tests2.CaptureTest.testCaptureAll":523,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests.MockNameTest.defaultName":316,"org.easymock.tests2.UsageConstraintsTest.testMatches":507,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":278,"org.easymock.samples.ExampleTest.voteForRemovals":95,"org.easymock.tests.UsageVarargTest.allKinds":166,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.samples.BasicClassMockTest.testPrintContent":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":508,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":135,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":303,"org.easymock.samples.ExampleTest.voteForRemoval":93,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":398,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":343,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":471,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":32,"org.easymock.tests2.CaptureTest.testCaptureFirst":535,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":472,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":534,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":468,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":249,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":165,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":59,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":513,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":113,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":386,"org.easymock.tests.MockingTest.testNiceClassMocking":277,"org.easymock.tests.MockingTest.testClassMocking":269,"org.easymock.tests2.UsageConstraintsTest.testContains":505,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":496,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":39,"org.easymock.tests.MockTypeTest.fromEasyMockClass":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":538,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":475,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":203,"org.easymock.tests.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.MockClassControlTest.testHashCode":181,"org.easymock.tests2.EasyMockSupportTest.testVerify":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":126,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":454,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":15,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":464,"org.easymock.tests.UsageVarargTest.varargCharAccepted":160,"org.easymock.tests2.CaptureTest.testCaptureMultiple":539,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":477,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":197,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":201,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.ReplayStateInvalidCallsTest.times":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":186,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":179,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":128,"org.easymock.tests2.UsageTest.resumeIfFailure":359,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":35,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":85,"org.easymock.tests2.SerializationTest.testAllMockedMethod":147,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":130,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":53,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":144,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":253,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":459,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":191,"org.easymock.tests.UsageExpectAndThrowTest.object":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":511,"org.easymock.tests2.DelegateToTest.testWrongClass":487,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.samples.ConstructorCalledMockTest.testTax":345,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":112,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":297,"org.easymock.tests2.CaptureTest.testCaptureNone":530,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":361,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":23,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":164,"org.easymock.tests2.ThreadingTest.testThreadSafe":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":204,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":524,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":251,"org.easymock.tests2.UsageConstraintsTest.any":503,"org.easymock.tests2.StubTest.stub":490,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":188,"org.easymock.tests.UsageExpectAndThrowTest.longType":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":284,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":448,"org.easymock.tests2.SerializationTest.testClass":145,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests2.NameTest.nameForMocksControl":483,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":411,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":537,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":45,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":394,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":379,"org.easymock.tests.MockingTest.testNicePartialClassMocking":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":397,"org.easymock.tests2.CaptureTest.testCaptureLast":529,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":500,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":512,"org.easymock.tests.MockingTest.testTwoMocks":270,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":49,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":516,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":365,"org.easymock.samples.ExampleTest.removeNonExistingDocument":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":326,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":364,"org.easymock.tests2.ConstraintsToStringTest.andToString":103,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":100,"org.easymock.tests2.MockBuilderTest.testCreateMockString":384,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":43,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":461,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":434,"org.easymock.samples.ExampleTest.voteAgainstRemoval":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":404,"org.easymock.tests.LimitationsTest.privateConstructor":257,"org.easymock.tests2.UsageConstraintsTest.testNotNull":515,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.UsageTest.defaultResetToNice":358,"org.easymock.samples.ExampleTest.voteAgainstRemovals":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests.UsageVarargTest.differentLength":108,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":401,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":115,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":492,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":169,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":293,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":363,"org.easymock.tests.UsageThrowableTest.throwCheckedException":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":114,"org.easymock.tests.MockingTest.testStrictClassMocking":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":391,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":97,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":390,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":463,"org.easymock.tests.ObjectMethodsTest.testHashCode":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.NameTest.nameForNiceMock":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":311,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.DelegateToTest.testStubDelegate":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.AnswerTest.stubAnswer":462,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":163,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":465,"org.easymock.tests2.ConstraintsToStringTest.orToString":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":346,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":493,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":366,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":527,"org.easymock.tests2.SerializationTest.test":146,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":542,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":325,"org.easymock.tests2.UsageConstraintsTest.testSame":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.samples.SupportTest.addDocument":344,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":389,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":296,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":336,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":275,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":294,"org.easymock.tests2.NameTest.nameForMock":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":55,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":2,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":288,"org.easymock.tests2.NameTest.nameForStrictMock":481,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":536,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":373,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":300,"org.easymock.tests2.UsageConstraintsTest.lessThan":517,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":239,"org.easymock.tests2.CaptureTest.testCaptureRightOne":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":360,"org.easymock.tests2.UsageConstraintsTest.testOr":499,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":232,"org.easymock.tests.UsageVarargTest.varargShortAccepted":162,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":504,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":460,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":533,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":279,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":374,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":143,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.samples.ExampleTest.addAndChangeDocument":350,"org.easymock.tests2.ConstraintsToStringTest.notToString":125,"org.easymock.tests2.ConstraintsToStringTest.containsToString":540,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":528,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.LimitationsTest.abstractClass":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":334,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138}}]
