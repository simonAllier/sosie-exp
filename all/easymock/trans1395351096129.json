[{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[6,7,8,9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,8,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,9,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[114,115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[116,117,118,119,120,6,121,122,66,7,123,124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[13,14,130,131,132,77],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,134,135,136,137,138,139,140,141,123],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[10,11,142,143,133,144,145,146,147,148,16,17,22,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,25,35,36,37,167,168,1,169,2,170,171,172,173,174,175,176,177,178,179,180,181,182,3,4,183,184,185,115,186,187,188,189,116,190,191,192,193,194,195,196,5,197,198,199,200,201,118,119,202,203,120,204,205,206,6,121,207,208,122,209,210,211,53,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,54,258,55,259,57,60,62,63,65,66,67,260,261,262,7,263,264,265,266,267,268,269,68,136,270,70,71,271,72,73,74,76,8,79,80,81,84,85,86,87,272,88,89,273,274,275,125,126,276,93,9,105,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[277,278,279,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[281,277,278,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[54,282,64,68,69,283,284,285,286,287],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[225],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,288,289,290,291,292,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[293,294,154,295,296,297,298,188,199,299,118,300,267,301,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[217,302,231,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[304,54,258,55],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:866","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":215,"org.easymock.tests2.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":263,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":174,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":15,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":279,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":197,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests2.UsageTest.wrongArguments":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":122,"org.easymock.tests2.CaptureTest.testPrimitive":248,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":90,"org.easymock.tests.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":106,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":289,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":29,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests2.DependencyTest.testClassMocking":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":4,"org.easymock.tests2.AnswerTest.answer":136,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":302,"org.easymock.tests2.CaptureTest.testAnd":245,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":8,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests.LimitationsTest.mockFinalMethod":23,"org.easymock.tests2.CaptureTest.testCaptureLast":250,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.DependencyTest.testClassMockingSupport":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":196,"org.easymock.tests2.CaptureTest.testCapture1_2446744":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":281,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":27,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":67,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":96,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.samples.ExampleTest.voteAgainstRemoval":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests2.UsageTest.niceToStrict":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":100,"org.easymock.tests.LimitationsTest.privateConstructor":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":235,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.UsageTest.defaultResetToNice":266,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":108,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":225,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests2.EasyMockSupportClassTest.testAll":93,"org.easymock.tests.MockClassControlTest.testEquals":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.MockingTest.testStrictClassMocking":32,"org.easymock.tests2.CaptureTest.testCaptureAll":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.testMatches":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":272,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.samples.ExampleTest.voteForRemovals":147,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.samples.ExampleTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":107,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests2.AnswerTest.stubAnswer":270,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":287,"org.easymock.tests2.UsageConstraintsTest.greaterThan":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":31,"org.easymock.samples.ExampleTest.voteForRemoval":144,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":230,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":213,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":49,"org.easymock.tests2.SerializationTest.test":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":26,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.testSame":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":91,"org.easymock.tests2.CaptureTest.testCaptureFirst":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":269,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":97,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":262,"org.easymock.tests2.CaptureTest.testCapture2_2446744":254,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":177,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":78,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":173,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":85,"org.easymock.tests.MockingTest.testNiceClassMocking":38,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests2.UsageConstraintsTest.testContains":224,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":216,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":117,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":141,"org.easymock.tests.UsageExpectAndReturnTest.object":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":101,"org.easymock.tests2.UsageConstraintsTest.testOr":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":181,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":189,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":288,"org.easymock.tests2.MockBuilderTest.testWithConstructor":130,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests2.EasyMockSupportTest.testVerify":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":102,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":30,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":134,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":303,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.DefaultClassInstantiatorTest.object":25,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":58,"org.easymock.tests.UsageTest.unexpectedCallWithArray":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.constraints":214,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":182,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":114,"org.easymock.tests2.UsageTest.resumeIfFailure":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests.LimitationsTest.abstractClass":20,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":171,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121}}]
