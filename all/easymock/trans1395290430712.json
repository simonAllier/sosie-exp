[{"position":"org.easymock.internal.matchers.Equals:54","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[32,23,33,34,28,35,36,37,38,39],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[40,41,26,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,1,2,3,4,5,6,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,18,167,19,168,169,170,171,172,29,173,174,175,176,30,177,178,179,180,181,182,183,184,185,186,31,187,188,189,190,191,192,32,193,194,195,196,197,198,199,200,42,201,202,15,203,204,205,206,207,208,209,210,211,212,213,34,9,10,11,12,214,215,216,217,218,219,220,16,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[238,239,240,241,242,81,243,244,83,84,245,246,247,248,249,125,126,127,250,251,252,253,254,255,256,257,258,141,259,260,261,262,263,264,142,265,40,40,41,41,266,267,158,268,160,161,162,269,163,270,271,164,272,165,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,166,18,302,167,19,32,194,195,303,304,305,306,196,197,307,308,33,309,310,311,312,313,314,34,28,315,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[316,32,193,194],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[320],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[321,322,323,43,44,45,46,47,48,324,325,326,317,318,319,238,327,328,329,330,239,331,332,333,334,335,336,49,50,337,338,339,340,341,240,342,343,51,52,344,345,346,347,348,53,54,55,56,1,2,3,4,5,6,13,349,14,350,351,57,352,58,59,353,60,61,62,63,64,65,66,67,68,69,354,70,355,356,357,358,359,360,361,71,72,73,362,74,75,363,76,77,78,79,80,364,365,366,241,242,81,243,82,7,244,83,84,245,246,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,247,248,249,125,126,391,127,392,393,250,394,128,129,8,395,130,396,251,252,253,254,255,256,397,257,398,399,400,401,402,403,404,405,406,407,408,409,131,132,133,134,135,136,137,138,139,410,411,412,140,258,141,259,260,261,262,263,264,142,143,144,145,413,414,415,416,417,418,146,419,147,420,421,148,149,150,265,151,152,153,154,155,156,422,157,40,41,423,424,425,426,266,267,158,268,159,160,161,162,269,427,163,270,271,164,272,165,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,166,18,302,428,429,167,19,20,168,430,169,170,171,172,29,0,173,174,175,176,30,177,320,178,179,180,181,182,183,184,185,186,31,187,188,431,189,190,191,192,32,193,194,195,21,304,305,22,306,196,197,307,23,308,432,33,309,310,25,312,433,198,199,434,200,42,435,436,201,437,438,202,439,313,440,441,442,314,443,444,15,445,446,203,204,205,206,207,208,209,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,210,211,212,213,473,474,475,476,477,478,479,480,481,482,483,484,34,28,485,9,10,11,12,214,215,216,486,487,217,218,219,488,489,220,490,491,16,221,17,492,222,223,224,225,226,493,227,228,229,230,231,232,494,495,233,496,497,234,235,498,499,236,237],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[226],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[321,322,323,43,44,45,46,47,48,324,325,326,317,318,319,238,327,328,329,330,239,331,332,333,334,335,336,49,50,337,338,339,340,341,240,342,343,51,52,344,345,346,347,348,53,54,55,56,1,2,3,4,5,6,13,349,14,350,351,57,352,58,59,353,60,61,62,63,64,65,66,67,68,69,354,70,355,356,357,358,359,360,361,71,72,73,362,74,75,363,76,77,78,79,80,364,365,366,241,242,81,243,82,7,244,83,84,245,246,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,247,248,249,125,126,391,127,392,393,250,394,128,129,8,395,130,396,251,252,253,254,255,256,397,257,398,399,400,401,402,403,404,405,406,407,408,409,131,132,133,134,135,136,137,138,139,410,411,412,140,258,141,259,260,261,262,263,264,142,143,144,145,413,414,415,416,417,418,146,419,147,420,421,148,149,150,265,151,152,153,154,155,156,422,157,40,41,423,424,425,426,266,267,158,268,159,160,161,162,269,427,163,270,271,164,272,165,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,166,18,302,428,429,167,19,20,168,430,169,170,171,172,29,0,173,174,175,176,30,177,320,178,179,180,181,182,183,184,185,186,31,187,188,431,189,190,191,192,32,193,194,195,21,304,305,22,306,196,197,307,23,308,432,33,309,310,25,312,433,198,199,434,200,42,435,436,201,437,438,202,439,313,440,441,442,314,443,444,15,445,446,203,204,205,206,207,208,209,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,210,211,212,213,473,474,475,476,477,478,479,480,481,482,483,484,34,28,485,9,10,11,12,214,215,216,486,487,217,218,219,488,489,220,490,491,16,221,17,492,222,223,224,225,226,493,227,228,229,230,231,232,494,495,233,496,497,234,235,498,499,236,237],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[373,445,204],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[316,32,193,194],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[414,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[419,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[502,503,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[244,245,265,40,40,41,41,270,165,275,282,292,32,21,22,196,23,432,33,309,25,312,34,28,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[13,152,168,169,15,445,446,203,204,205,214],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[447,454,473,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[506,355,356,359,360,394,144,145,419,421,434,437,438,499],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[440,441,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":438,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":42,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":423,"org.easymock.tests2.DelegateToTest.testReturnException":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":2,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":259,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":282,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":484,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":55,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":239,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":468,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":264,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":104,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":413,"org.easymock.tests.UsageTest.argumentsOrdered":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":478,"org.easymock.tests.ReplayStateInvalidUsageTest.times":406,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":15,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":328,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":417,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests.LimitationsTest.mockFinalMethod":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":69,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":411,"org.easymock.tests2.CaptureTest.testCapture1_2446744":493,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":400,"org.easymock.tests.UsageThrowableTest.throwError":343,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":330,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":139,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":300,"org.easymock.samples.PartialClassMockTest.testGetArea":265,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":401,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":86,"org.easymock.tests2.UsageTest.niceToStrict":200,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":481,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":464,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":53,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":502,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":116,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":231,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":362,"org.easymock.tests.MockClassControlTest.testEquals":263,"org.easymock.tests2.EasyMockSupportClassTest.testAll":279,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests.MockNameTest.defaultName":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":138,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":80,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":68,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":347,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":6,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":397,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":433,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":461,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":1,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":491,"org.easymock.tests2.CaptureTest.testCaptureFirst":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":462,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":439,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":487,"org.easymock.tests2.UsageTest.moreThanOneArgument":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":79,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":503,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":325,"org.easymock.tests.UsageExpectAndReturnTest.longType":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":459,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":103,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":311,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":431,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":318,"org.easymock.tests.UsageCallCountTest.tooManyCalls":326,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":346,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests.MockingTest.testNiceClassMocking":250,"org.easymock.tests.MockingTest.testClassMocking":248,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":173,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":418,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageExpectAndReturnTest.object":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":36,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":75,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":504,"org.easymock.tests.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":71,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.MockClassControlTest.testHashCode":262,"org.easymock.tests2.EasyMockSupportTest.testVerify":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":289,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":74,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":396,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":470,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":321,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":317,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":298,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":4,"org.easymock.tests2.StubTest.stubWithReturnValue":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":114,"org.easymock.tests2.SerializationTest.testAllMockedMethod":194,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.samples.SupportTest.voteForRemovals":426,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":445,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":366,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":59,"org.easymock.tests.UsageStrictMockTest.range":421,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":443,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":54,"org.easymock.tests2.CaptureTest.testCaptureNone":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":335,"org.easymock.tests.UsageUnorderedTest.message":394,"org.easymock.tests.UsageVerifyTest.twoReturns":145,"org.easymock.tests.UsageVarargTest.varargByteAccepted":78,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":293,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":405,"org.easymock.tests2.StubTest.stub":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":3,"org.easymock.tests.UsageExpectAndThrowTest.longType":88,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":498,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":124,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":475,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":477,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":281,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":430,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":473,"org.easymock.tests2.CaptureTest.testCaptureLast":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":412,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":249,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":93,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":437,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":480,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":486,"org.easymock.tests2.MockBuilderTest.testCreateMockString":312,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":258,"org.easymock.tests.UsageExpectAndThrowTest.floatType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":283,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":485,"org.easymock.tests.UsageVerifyTest.twoThrows":144,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":292,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":27,"org.easymock.tests2.UsageConstraintsTest.testNotNull":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":348,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":474,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":270,"org.easymock.tests.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":56,"org.easymock.tests.UsageThrowableTest.throwCheckedException":345,"org.easymock.tests.MockingTest.testStrictClassMocking":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":429,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":339,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":37,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":294,"org.easymock.tests2.DelegateToTest.testStubDelegate":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":147,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":432,"org.easymock.tests.UsageVarargTest.varargLongAccepted":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":123,"org.easymock.tests.UsageExpectAndReturnTest.floatType":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.SerializationTest.test":193,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":227,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests2.UsageConstraintsTest.testSame":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":106,"org.easymock.samples.SupportTest.addDocument":425,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":284,"org.easymock.tests.GenericTest.testPackageScope":83,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":134,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":161,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":314,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":304,"org.easymock.tests2.UsageStrictMockTest.range":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.CaptureTest.testCaptureRightOne":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":288,"org.easymock.tests2.UsageConstraintsTest.testOr":176,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":268,"org.easymock.tests.UsageTest.wrongArguments":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":285,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":76,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":324,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":436,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":399,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":420,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":150,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":424,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":111,"org.easymock.tests.LimitationsTest.abstractClass":241,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":465,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":72}}]
