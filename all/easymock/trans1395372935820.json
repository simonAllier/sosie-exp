[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[2],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,6,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,9,83,84,85,86,87,11,88,89,12,90,14,15,16,17,18,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,20,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,24,142,143,144,145,146,147,148,25,26,149,27,28,29,30,31,150,151,152,33,35,153,154,155,156,157,158,159,160,161,36,1,162,163,164,165,166,167,168,169,170,171,37,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,38,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"position":"org.easymock.internal.LastControl:95","failures":[157,158,160,36,1,191,37,175,182,192,38],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[193,194,195,196,120,124,197,198,199,200,201,202,203,204,205],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[39,40,223,3,41,42,4,5,43,224,225,226,227,228,229,230,231,232,233,234,6,44,235,7,45,46,48,49,236,237,238,239,240,241,242,242,243,244,245,246,247,248,249,250,251,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,252,253,254,255,256,257,258,77,78,8,79,259,80,81,260,261,262,263,264,82,9,83,84,85,86,87,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,10,290,291,11,292,88,89,293,12,13,90,14,15,16,17,18,91,92,93,94,95,96,294,295,296,101,297,298,102,299,103,104,300,105,301,302,303,106,304,305,107,108,109,19,20,21,110,111,306,22,23,112,113,307,308,114,309,115,116,310,117,311,118,119,120,121,122,123,124,125,126,127,128,129,130,312,131,313,132,133,134,135,136,137,138,139,140,314,315,316,317,141,318,24,319,142,143,144,145,146,147,320,321,322,323,148,25,26,149,27,28,29,324,30,31,150,151,325,32,326,152,327,328,329,33,34,330,35,331,153,154,332,155,156,157,158,159,160,161,36,1,162,163,164,165,166,167,168,169,170,171,37,172,173,333,174,175,176,177,178,179,180,181,334,182,183,192,184,185,335,336,186,187,188,38,337,189,190,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[40,78,8,79,259,11,88,89,341,342,343,344,109,35,153,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[39,42,235,7,236,237,238,239,240,241,245,8,83,265,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,12,90,14,15,16,17,18,107,111,320,321,322,323,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[345,346,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[348,349,350,351,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":21,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":195,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests2.SerializationTest.testAllMockedMethod":334,"org.easymock.tests2.DelegateToTest.testReturnException":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":172,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.DelegateToTest.testWrongClass":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":214,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":200,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":289,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":100,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.UsageVarargTest.varargIntAccepted":226,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":309,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":95,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":75,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":180,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":108,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":194,"org.easymock.tests2.MockedExceptionTest.testMockedException":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":285,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":130,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":278,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":176,"org.easymock.tests.UsageThrowableTest.throwError":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":311,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":222,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":92,"org.easymock.samples.ExampleTest.voteAgainstRemoval":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":99,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests2.UsageTest.niceToStrict":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":18,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.tests2.UsageTest.defaultResetToNice":306,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests.UsageVarargTest.differentLength":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":9,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":245,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":346,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests.UsageVarargTest.allKinds":234,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.samples.BasicClassMockTest.testPrintContent":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.samples.ExampleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testStubDelegate":152,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.AnswerTest.stubAnswer":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":220,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":72,"org.easymock.samples.ExampleTest.voteForRemoval":103,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":142,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":298,"org.easymock.tests.UsageThrowableTest.noUpperLimit":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":335,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":26,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.tests2.UsageConstraintsTest.testSame":161,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":59,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":221,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":202,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":196,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":275,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":322,"org.easymock.tests2.UsageConstraintsTest.testFind":159,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":339,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":10,"org.easymock.tests.UsageExpectAndReturnTest.object":62,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":342,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests.ErrorMessageTest.testGetters":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":203,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests2.CaptureTest.testCaptureRightOne":38,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":204,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":244,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":216,"org.easymock.tests2.EasyMockSupportTest.testVerify":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":243,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests.UsageVarargTest.varargCharAccepted":227,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":76,"org.easymock.tests2.UsageTest.openCallCountByLastCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests2.UsageConstraintsTest.constraints":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.CapturesMatcherTest.test":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":336,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":94,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":344,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29}}]
