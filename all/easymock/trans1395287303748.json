[{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[2,3,4,5],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,3,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,4,5,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,6,7,7,37,38,41,42,43,44,49,51,52,54,55,61,62,63,83,157,163,168,209,210,302,212,213,216,265,266,267,268,269,303,304,305,306,307,279,290,291,292,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:153","failures":[151,152,153,154,169,214,284,285,286,287,288,289],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[12,13,14,15,16,17,308,18,26,27,28,29,309,310,311,312,313,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,314,121,122,315,316,3,123,126,127,128,129,130,131,132,133,134,135,136,317,137,4,5,138,318,140,141,144,145,146,319,320,321,322,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,323,324,325,170,171,326,172,327,328,329,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,330,331,332,333,334,193,335,194,195,336,337,338,339,340,341,342,343,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,344,345,346,347,348,349,350,351,352,353,354,355,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,356,357,358,359,360,361,252,253,254,255,256,257,258,259,260,261,362,262,263,363,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,364,284,285,286,287,288,289,290,291,292,293,294,365,366,295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[0,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[250,256,257],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[72,74,75,76,77,78,79,81,368,82,83,85],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[27,28,29,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[370],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[371,372,373,374,375,376,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[175,177,191,192,209,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[127,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[371,379,372,373,374,380,375,376,381,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[382],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[383,384,385,386,387,371,8,9,141,145,388,377],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[44,47,73,79,80,85,157,168,169,209,210,212,213,214,215,216,265,266,267,268,269,275,279,288],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[23,27,31,32,33,121,122,315,3,124,125,127,128,135,4,5,378,389,356,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,390,47,56,57,61,62,72,73,74,75,82,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[6,7,12,13,14,15,16,17,308,18,19,20,21,22,23,24,25,26,27,28,29,391,312,392,313,393,394,395,30,396,397,31,398,399,400,401,402,403,404,405,406,32,407,408,409,410,411,33,412,413,34,35,36,37,38,39,40,414,41,42,43,44,45,46,390,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,415,416,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,367,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,315,316,3,123,124,125,417,126,127,128,129,130,131,132,133,134,135,418,136,11,317,137,4,5,138,318,378,139,140,141,142,419,143,144,145,388,420,421,146,147,422,423,424,425,426,148,427,428,429,430,431,432,433,319,320,321,322,149,377,434,435,436,437,438,150,439,440,441,442,443,444,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,445,168,169,323,446,447,448,449,450,451,324,325,452,170,171,326,172,327,328,329,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,453,330,331,454,332,333,334,455,456,193,335,194,195,336,337,338,339,340,341,342,343,382,196,197,389,457,458,459,460,198,199,200,461,201,202,203,204,205,206,207,208,209,210,302,211,344,345,346,347,348,349,350,351,352,353,354,355,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,462,463,464,356,465,466,357,358,359,360,361,467,468,469,252,253,254,255,256,257,258,259,470,471,260,472,261,362,262,263,473,363,264,265,266,267,268,269,303,474,475,476,304,305,477,478,479,480,1,481,482,483,306,484,485,486,487,307,488,489,490,491,270,271,272,273,274,492,493,494,275,276,277,278,279,280,281,282,283,364,284,285,286,287,288,289,495,496,497,498,499,290,291,292,293,294,365,366,295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[39,40,42,44,45,390,56,61,72,74,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[6,7,12,13,14,15,16,17,308,18,19,20,21,22,23,24,25,26,27,28,29,391,312,392,313,393,394,395,30,396,397,31,398,399,400,401,402,403,404,405,406,32,407,408,409,410,411,33,412,413,34,35,36,37,38,39,40,414,41,42,43,44,45,46,390,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,415,416,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,367,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,315,316,3,123,124,125,417,126,127,128,129,130,131,132,133,134,135,418,136,11,317,137,4,5,138,318,378,139,140,141,142,419,143,144,145,388,420,421,146,147,422,423,424,425,426,148,427,428,429,430,431,432,433,319,320,321,322,149,377,434,435,436,437,438,150,439,440,441,442,443,444,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,445,168,169,323,446,447,448,449,450,451,324,325,452,170,171,326,172,327,328,329,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,453,330,331,454,332,333,334,455,456,193,335,194,195,336,337,338,339,340,341,342,343,382,196,197,389,457,458,459,460,198,199,200,461,201,202,203,204,205,206,207,208,209,210,302,211,344,345,346,347,348,349,350,351,352,353,354,355,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,462,463,464,356,465,466,357,358,359,360,361,467,468,469,252,253,254,255,256,257,258,259,470,471,260,472,261,362,262,263,473,363,264,265,266,267,268,269,303,474,475,476,304,305,477,478,479,480,1,481,482,483,306,484,485,486,487,307,488,489,490,491,270,271,272,273,274,492,493,494,275,276,277,278,279,280,281,282,283,364,284,285,286,287,288,289,495,496,497,498,499,290,291,292,293,294,365,366,295,296,297,298,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[446,450],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[382],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[79,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[13,91,93,94,262],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":1,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":100,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":338,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":433,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":226,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests2.UsageTest.wrongArguments":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":212,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":359,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":117,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":343,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageTest.moreThanOneArgument":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":495,"org.easymock.tests.UsageTest.argumentsOrdered":224,"org.easymock.tests.UsageVarargTest.varargIntAccepted":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.DependencyTest.testClassMocking":420,"org.easymock.tests2.AnswerTest.answer":64,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":71,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":499,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":241,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.DependencyTest.testClassMockingSupport":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":453,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":69,"org.easymock.tests.UsageThrowableTest.throwError":252,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":358,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":10,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":463,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":402,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":494,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":70,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":208,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":258,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":138,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":451,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":211,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":110,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":111,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":207,"org.easymock.tests.GenericTest.testBridgedEquals":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":325,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests.MockTypeTest.fromEasyMockClass":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":116,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":373,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":496,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":404,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":493,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":68,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":314,"org.easymock.tests.UsageVarargTest.varargCharAccepted":201,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":119,"org.easymock.tests.DefaultClassInstantiatorTest.object":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":492,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":232,"org.easymock.tests.CapturesMatcherTest.test":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":339,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":485,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":238,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":369,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":490,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":415,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":223,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":464,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":251,"org.easymock.tests.UsageVarargTest.varargByteAccepted":206,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":407,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":215,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests2.StubTest.stub":162,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndThrowTest.longType":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":452,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":447,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":228,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests.UsageVerifyTest.twoThrows":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":462,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":5,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":259,"org.easymock.tests2.UsageTest.defaultResetToNice":103,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.UsageVarargTest.differentLength":203,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.UsageConstraintsTest.equals":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":214,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":256,"org.easymock.tests.MockingTest.testStrictClassMocking":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":169,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests.ObjectMethodsTest.testHashCode":333,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":375,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":374,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":92,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests.UsageVarargTest.varargLongAccepted":205,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":391,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":419,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":399,"org.easymock.tests.GenericTest.testPackageScope":196,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":327,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":240,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":213,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":312,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":448,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":159,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":403,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":220,"org.easymock.tests2.MockBuilderTest.testWithConstructor":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":400,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":450,"org.easymock.tests.UsageVarargTest.varargShortAccepted":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.CaptureTest.testCapture":368,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests.UsageStrictMockTest.testVerify":364,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":114,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":199}}]
