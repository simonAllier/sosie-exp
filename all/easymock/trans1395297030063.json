[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[64,65,66,67],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[68,52,69,53,54,55,56,57,58,70,59,61,62,71,63],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,5,106,107,108,109,110,111,112,113,114,6,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7,8,9,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,0,179,180,181,182,183,184,185,186,1,2,10,187,188,189,190,191,192,193,193,194,194,195,11,196,12,13,197,14,198,199,200,201,15,16,17,18,19,20,21,22,23,24,25,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,65,66,26,27,28,29,30,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,38,245,246,247,248,249,250,251,252,253,254,255,256,45,31,257,258,259,260,261,262,263,264,32,265,266,267,268,269,270,271,33,272,273,274,52,69,54,55,58,70,59,61,62,71,63,275,3,4],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[276,277,278,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[10,26,27,28,29,30,279],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[115,214],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[34,35,280,281,282,36,37,38,39,40,283,41,42,284,285,286,287,43,44,45,46,47,288,48,49,289],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[221,290],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[291,292],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[293,294,295,296,297,110,298,161,278,177,0,179,180,299,186,1,2,232,300,301,302,303,304,305,306,307,308,275,3,4],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[229,50],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[201,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[68,68,75,311,312,313,314,315,316,82,83,84,85,86,87,88,89,90,91,92,317,318,319,320,93,94,95,96,97,98,99,100,101,321,103,104,105,5,106,107,108,322,323,324,325,326,109,110,298,327,111,112,328,329,113,330,331,332,333,334,335,336,337,338,339,340,6,115,116,117,341,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7,8,9,161,162,163,164,165,166,167,169,170,171,172,173,174,175,178,0,179,180,342,343,299,186,344,1,2,345,10,187,188,189,190,346,191,192,193,194,34,35,347,195,348,349,11,196,12,13,197,14,350,198,351,199,200,201,15,16,17,18,19,20,21,22,23,24,25,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,352,226,227,228,229,65,66,67,353,26,27,354,28,29,355,30,279,230,231,232,356,233,357,234,235,236,358,359,237,238,239,242,243,244,360,361,362,363,38,245,246,247,248,249,250,251,252,253,254,255,256,364,45,31,257,258,259,260,261,262,263,264,32,265,266,267,268,269,271,33,272,274,52,69,53,54,55,56,57,58,70,59,61,62,71,63,365,366,275,367,3,4,368],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,110,369,0,179,180,186,2,345,232,275,4,368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[206,207,211,212,370,223,52,53,61],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":96,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":357,"org.easymock.tests2.StubTest.stubWithReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":226,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":119,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":307,"org.easymock.samples.SupportTest.voteForRemovals":195,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":64,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":240,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests2.UsageTest.wrongArguments":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":162,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":188,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests2.UsageConstraintsTest.testNull":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":12,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":81,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.UsageUnorderedTest.message":161,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":262,"org.easymock.tests.UsageTest.argumentsOrdered":329,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":181,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":95,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":304,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":367,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests2.AnswerTest.answer":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":351,"org.easymock.tests2.MockedExceptionTest.testMockedException":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":278,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":228,"org.easymock.tests.UsageThrowableTest.throwError":85,"org.easymock.tests.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":282,"org.easymock.tests2.ConstraintsToStringTest.andToString":306,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":264,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":242,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":17,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testNotNull":227,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests.UsageVarargTest.differentLength":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":46,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":23,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.samples.ExampleTest.voteForRemovals":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":265,"org.easymock.tests.UsageVarargTest.allKinds":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":268,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.samples.BasicClassMockTest.testPrintContent":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.samples.ExampleTest.addDocument":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":33,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":365,"org.easymock.tests2.AnswerTest.stubAnswer":243,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.UsageConstraintsTest.greaterThan":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.samples.ExampleTest.voteForRemoval":189,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":263,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.tests2.ConstraintsToStringTest.orToString":300,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":178,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":247,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":87,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.samples.SupportTest.addDocument":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":270,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":248,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":184,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":75,"org.easymock.tests2.MockedExceptionTest.testRealException":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":49,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":296,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":259,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":48,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":253,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":246,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":182,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageTest.wrongArguments":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":303,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":183,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests2.CaptureTest.testCaptureMultiple":51,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":241,"org.easymock.tests2.CompareToTest.testLessThan":50,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":72,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.CaptureTest.testCapture":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.samples.ExampleTest.addAndChangeDocument":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests2.ConstraintsToStringTest.notToString":302,"org.easymock.tests.CapturesMatcherTest.test":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":76,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CompareToTest.testGreateThan":290,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":251}}]
