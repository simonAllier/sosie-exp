[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[16,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[18,19,20,21,22,23,1,2,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[28,31,36,40,41,39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[69,70,71,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[27,28,31,32,75,76,77,78,79,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[80,25,25,26,26,81,82,83,84,85,86,87,27,88,89,90,91,18,19,92,93,94,20,21,95,96,97,98,99,100,101,102,17,103,23,104,105,106,107,108,109,110,111,112,113,114,115,1,116,2,3,4,5,6,7,117,8,10,11,118,12,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,50,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,62,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,39,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[341,95,100,110],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (this.int)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"maximum","callCount":"maximum"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[93,106,132,303],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[342,343,344],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[345,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[80,83,84,85,86,87,96,112,177,179,348,256],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[111,115,126,349,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[81,82,83,84,350,85,351,86,43,44,352,87,345,353,354,355,356,88,357,89,90,91,18,19,358,92,93,94,20,21,95,22,96,97,98,99,100,101,102,17,103,23,104,105,106,107,108,109,110,359,360,361,362,1,116,2,3,4,5,6,7,117,8,10,11,118,12,121,129,130,131,132,133,134,135,136,137,45,46,47,48,49,50,51,52,53,54,55,56,138,139,140,363,141,142,143,144,145,146,147,148,149,150,151,152,364,57,58,59,60,61,62,63,64,65,66,67,68,153,154,155,156,157,158,365,366,159,160,165,168,169,170,171,172,173,174,175,176,177,178,179,367,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,244,245,246,247,248,383,384,385,386,249,387,250,251,388,252,389,253,254,390,255,256,257,258,259,260,261,73,391,262,263,264,265,266,268,269,270,271,272,392,393,394,395,396,273,274,275,276,277,278,397,279,280,281,282,283,284,285,286,289,290,291,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,292,414,415,416,417,418,293,419,294,295,296,420,297,298,421,299,300,301,302,303,305,306,307,308,309,422,423,424,425,310,311,312,313,314,426,315,427,428,429,430,431,432,433,316,317,318,319,320,321,322,323,324,434,435,325,326,436,327,437,438,328,329,330,331,332,74,333,334,335,336,337,439,338,339,340],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[102,123,142,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[88,89,152,187,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[16,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[39,197,440],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[102],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[441,442,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[80,81,82,83,84,350,85,351,86,43,443,444,44,352,87,345,353,354,355,356,88,357,89,90,91,18,19,358,92,93,94,20,21,95,22,96,97,98,99,100,101,102,17,103,23,104,105,106,107,108,109,110,359,360,361,362,445,111,446,447,112,448,113,114,449,115,450,1,116,2,3,4,5,6,7,117,8,10,11,118,12,119,120,121,122,123,124,451,343,125,452,347,126,127,128,453,349,129,130,131,132,133,134,135,136,137,45,46,47,48,49,50,51,52,53,54,55,56,138,139,140,363,141,142,143,144,145,146,147,148,149,454,455,150,151,152,364,57,58,59,60,61,62,63,64,65,66,67,68,153,154,155,156,157,158,456,457,365,366,159,160,161,162,164,165,458,168,169,170,171,172,173,174,175,176,177,178,179,367,459,460,180,461,181,462,463,464,465,182,466,467,468,469,470,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,440,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,471,472,473,368,369,370,474,371,372,373,374,375,376,377,378,379,380,381,382,244,245,246,247,248,475,383,384,476,385,386,249,387,250,251,388,252,389,253,254,390,255,256,257,258,259,260,261,73,391,262,263,264,265,266,267,268,269,270,271,272,392,393,394,395,396,13,477,478,479,480,481,482,14,483,273,274,275,276,277,278,397,279,280,281,282,283,284,285,286,24,287,484,288,485,289,290,291,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,292,414,415,416,417,418,293,419,294,295,296,420,297,298,421,299,300,301,302,303,486,487,488,489,490,491,492,493,494,495,304,496,305,306,307,308,309,422,423,424,425,310,311,312,313,314,426,315,427,428,429,430,431,432,433,316,317,318,319,320,321,322,323,324,434,435,325,326,436,327,437,438,328,329,330,331,332,74,333,334,335,336,337,439,338,339,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:168","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,19,93,20,21,22,23,108,1,2,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":408,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests.MockClassControlTest.testToString":488,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":75,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.tests2.UsageTest.wrongArguments":363,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":424,"org.easymock.samples.ExampleTest.answerVsDelegate":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":476,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.UsageTest.argumentsOrdered":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":268,"org.easymock.tests.UsageVarargTest.varargIntAccepted":296,"org.easymock.tests.InvocationTest.testEquals":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":314,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.ReplayStateInvalidUsageTest.times":379,"org.easymock.tests2.DependencyTest.testClassMocking":454,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":396,"org.easymock.tests2.DependencyTest.testClassMockingSupport":455,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":279,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":56,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":35,"org.easymock.samples.PartialClassMockTest.testGetArea":80,"org.easymock.tests.MockingTest.testInterfaceMocking":368,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":311,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.ThreadingTest.testChangeDefault":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":65,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":422,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":180,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":371,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":395,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":285,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":453,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":451,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":153,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":485,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":438,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":392,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":106,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":284,"org.easymock.tests.MockingTest.testNiceClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":291,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":89,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":76,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":13,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":477,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":274,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":218,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":183,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":440,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":70,"org.easymock.samples.SupportTest.voteForRemovals":87,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":293,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":335,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":71,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":340,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":441,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests.UsageVerifyTest.twoReturns":324,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":443,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":308,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":377,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.NameTest.nameForMocksControl":356,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":461,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":243,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":40,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":105,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":342,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":64,"org.easymock.tests.UsageStrictMockTest.differentMethods":336,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":47,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":442,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":131,"org.easymock.tests2.MockBuilderTest.testCreateMockString":450,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":182,"org.easymock.samples.ExampleTest.voteAgainstRemoval":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests.LimitationsTest.privateConstructor":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":286,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":58,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests2.UsageConstraintsTest.equals":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":38,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":307,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":425,"org.easymock.tests.UsageThrowableTest.throwCheckedException":283,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.CompareToTest.testGreateOrEqual":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":41,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":133,"org.easymock.tests2.NameTest.nameForNiceMock":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":77,"org.easymock.samples.ExampleTest.addDocument":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":155,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":333,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":456,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.samples.SupportTest.addDocument":352,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":15,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":463,"org.easymock.tests.GenericTest.testPackageScope":287,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":53,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":369,"org.easymock.tests2.NameTest.nameForMock":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":34,"org.easymock.tests2.UsageStrictMockTest.differentMethods":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":452,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":382,"org.easymock.tests2.NameTest.nameForStrictMock":354,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":457,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":194,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":391,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":437,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":446,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":436,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.samples.ExampleTest.addAndChangeDocument":86,"org.easymock.tests.UsageStrictMockTest.testVerify":439,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":44,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":393,"org.easymock.tests2.CompareToTest.testGreateThan":16,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":312,"org.easymock.tests.LimitationsTest.abstractClass":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":295}}]
