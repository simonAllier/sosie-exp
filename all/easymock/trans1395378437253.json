[{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[23,24,25,26,27,28,16,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[23,52,53,54,55,56,57,9,58,59,60,61,62,63,10,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,35,36,102,103,104,105,106,107,47,108,109,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,112,113,114,28,115,33,116,35,39,41,117,48,49,118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,122,123,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[129,130,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[134,23,135,24,25,136,5,137,9,71,138,139,140,141,26,112,142,113,114,143,27,28,16,29,30,31,115,32,33,34,116,144,145,146,147,148,149,35,36,37,38,150,151,152,127,153,154,155,156,39,40,41,157,42,117,43,44,45,46,158,47,159,48,49,118,160,119,120,161,50,51,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,90,91,92,93,94,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[164,165,13,14,134,23,25,136,5,6,7,166,167,168,169,170,171,172,173,53,54,174,137,175,176,177,55,56,57,9,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,178,179,180,181,182,81,82,83,84,86,87,88,89,90,91,94,183,184,185,138,186,187,188,139,189,190,140,191,192,193,194,195,196,197,121,198,124,199,200,201,202,141,26,203,142,204,205,143,206,207,208,209,210,211,212,144,213,214,146,215,216,217,95,218,147,219,220,221,222,223,224,225,226,227,228,125,229,230,231,232,233,234,235,96,97,98,99,100,236,237,238,239,101,240,241,242,149,36,38,150,151,243,244,245,246,247,248,249,250,251,252,155,102,103,106,44,45,46,253,254,255,256,257,258,259,260,261,262,19,20,263,264,265,266,267,158,268,269,270,107,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,159,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,48,128,108,109,310,311,110,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[218],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":114,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":17,"org.easymock.samples.SupportTest.voteForRemovals":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":302,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":159,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":171,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.UsageExpectAndThrowTest.object":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.tests2.UsageTest.wrongArguments":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":223,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":245,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":206,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":309,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":39,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":130,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":269,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":161,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":234,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests2.UsageConstraintsTest.any":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":126,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":30,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests.LimitationsTest.mockNativeMethod":252,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests2.AnswerTest.answer":164,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":202,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":218,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":305,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":212,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":262,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":200,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":132,"org.easymock.tests.UsageThrowableTest.throwError":0,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.ConstraintsToStringTest.andToString":32,"org.easymock.tests.UsageExpectAndThrowTest.floatType":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":70,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.PartialClassMockTest.testGetArea":221,"org.easymock.tests2.CompareToTest.testLessOrEqual":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":291,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":157,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":299,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":246,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":41,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":201,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":232,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":169,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests.UsageVarargTest.allKinds":107,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":261,"org.easymock.samples.BasicClassMockTest.testPrintContent":235,"org.easymock.samples.ExampleTest.addDocument":231,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":240,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests.UsageVarargTest.varargLongAccepted":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":148,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.samples.ExampleTest.voteForRemoval":229,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":289,"org.easymock.tests.UsageExpectAndReturnTest.floatType":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":143,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":224,"org.easymock.tests2.ConstraintsToStringTest.orToString":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":310,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":272,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.samples.SupportTest.addDocument":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests.GenericTest.testPackageScope":19,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":270,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests2.NameTest.nameForMock":137,"org.easymock.tests.UsageExpectAndReturnTest.longType":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":258,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":207,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":316,"org.easymock.tests2.UsageConstraintsTest.testContains":66,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":58,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":129,"org.easymock.tests2.UsageConstraintsTest.testOr":61,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":117,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":287,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":29,"org.easymock.tests.UsageVarargTest.varargShortAccepted":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageConstraintsTest.cmpTo":65,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":92,"org.easymock.tests.UsageTest.unexpectedCallWithArray":49,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":1,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.CaptureTest.testCapture":162,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests2.ConstraintsToStringTest.notToString":16,"org.easymock.tests.CapturesMatcherTest.test":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":288,"org.easymock.tests.UsageStrictMockTest.testVerify":151,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":259,"org.easymock.tests2.UsageTest.resumeIfFailure":205,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139}}]
