[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[8],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,7,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[245,246,247,248,250,252],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,2,3,4,5,338,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[27],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[9,10,11,12,13,16,24,26,29,30,31,32,33,34,49,54,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,98,99,102,119,125,127,128,129,130,131,132,133,134,135,141,143,144,146,160,161,162,169,173,174,176,180,181,182,183,184,185,186,187,188,189,190,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,253,254,255,256,257,258,259,260,261,263,265,266,266,267,267,268,274,280,289,290,293,295,296,298,299,307,308,309,310,312,313,314,316,317,318,320,322,323,324,327,328,329,330,331,332,333,334,335,336,337,7,347,351,353,355,359,365,368,378,384,387,388,389,390,391,392,395,399,400,401,404,405,406,407,408,409,410,412,413,414,415,416,417,418,419,420,422,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,452,463,464,465,466,468,469,470,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,488,489,490,491,492,493,495],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[496,497,498,499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[419,421,429,465,466,469,471,472,474,484,489],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[34,53,56,500,96,97,100,101,238,239,295,319,325,326],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[501,492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[34,53,56,500,96,97,100,101,238,239,295,319,325,326],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[466,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[9,24,26,29,30,33,49,54,56,57,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,98,99,102,119,125,131,132,133,134,135,146,161,162,169,173,174,176,199,200,210,211,212,233,234,235,236,237,239,253,254,255,256,257,258,260,261,263,266,266,267,267,268,274,280,289,290,293,295,296,299,307,308,309,310,312,313,314,316,317,318,320,322,323,324,327,328,331,333,334,335,336,337,7,347,351,353,355,359,365,368,378,384,387,388,389,390,391,392,395,399,400,401,404,408,415,419,420,422,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,452,463,464,465,466,468,469,470,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,488,489,490,491,492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[419,421,429,465,466,469,471,472,474,484,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[144,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[133,258,260,261,263,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1433","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[321,391,481],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,7,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[504,505,506,507,508],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[361,400,403],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,3,509,4,5,6,338,354,510],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[508,463,482,488],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,304,305,306,307,308,309,310,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,7,338,340,341,342,343,344,345,347,348,350,351,352,353,355,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[504,479,486,491],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9,29,30,33,54,103,107,108,117,122,131,132,133,134,135,169,199,200,253,254,255,256,257,266,266,267,267,293,299,430,463,464,468,469,470,471,477,479,480,482,483,489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[474],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[419,421,429,465,466,469,471,472,474,484,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[32,118,125,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":466,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageTest.argumentsOrdered":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":321,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testReturnException":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":181,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":204,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":340,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":29,"org.easymock.tests2.UsageTest.wrongArguments":319,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":196,"org.easymock.tests2.UsageConstraintsTest.testNull":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":209,"org.easymock.tests2.CaptureTest.testPrimitive":422,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.moreThanOneArgument":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":186,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":43,"org.easymock.tests2.DependencyTest.testClassMocking":287,"org.easymock.tests2.AnswerTest.answer":404,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":462,"org.easymock.tests2.CaptureTest.testAnd":419,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":193,"org.easymock.tests2.UsageTest.strictResetToDefault":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":418,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":140,"org.easymock.tests2.DependencyTest.testClassMockingSupport":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":88,"org.easymock.tests2.CaptureTest.testCapture1_2446744":423,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":460,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":37,"org.easymock.tests.UsageThrowableTest.throwError":60,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":195,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":28,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":386,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests.MockingTest.testInterfaceMocking":175,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":38,"org.easymock.tests2.CompareToTest.testLessOrEqual":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.UsageTest.niceToStrict":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":351,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":438,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":478,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":428,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":151,"org.easymock.tests.MockClassControlTest.testEquals":208,"org.easymock.tests2.EasyMockSupportClassTest.testAll":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":461,"org.easymock.tests2.CaptureTest.testCaptureAll":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":138,"org.easymock.tests.MockNameTest.defaultName":201,"org.easymock.tests2.UsageConstraintsTest.testMatches":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":159,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":139,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":482,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":401,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":252,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":435,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":432,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":436,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":158,"org.easymock.tests.GenericTest.testBridgedEquals":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":21,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":487,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":22,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":65,"org.easymock.tests.MockingTest.testNiceClassMocking":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests.MockingTest.testClassMocking":171,"org.easymock.tests2.UsageConstraintsTest.testContains":477,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":468,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":412,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":441,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":166,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":187,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":143,"org.easymock.tests.MockClassControlTest.testHashCode":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":375,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":188,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":459,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":446,"org.easymock.tests.UsageVarargTest.varargCharAccepted":152,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":244,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":444,"org.easymock.tests.DefaultClassInstantiatorTest.object":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":11,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":164,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":384,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":205,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":183,"org.easymock.tests2.StubTest.stubWithReturnValue":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.tests2.SerializationTest.testAllMockedMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":119,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":125,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":405,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":93,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":485,"org.easymock.tests2.DelegateToTest.testWrongClass":416,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":353,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests2.CaptureTest.testCaptureNone":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":239,"org.easymock.tests.UsageVarargTest.varargByteAccepted":157,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":167,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":32,"org.easymock.tests2.UsageConstraintsTest.any":475,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":42,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":124,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":249,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":41,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":492,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":411,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":387,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":355,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":392,"org.easymock.tests2.CompareToTest.testCompareEqual":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests2.CaptureTest.testCaptureLast":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":89,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":486,"org.easymock.tests.MockingTest.testTwoMocks":172,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":490,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":39,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":247,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":335,"org.easymock.tests2.MockBuilderTest.testCreateMockString":361,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":202,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":407,"org.easymock.tests.UsageVerifyTest.twoThrows":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":339,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":378,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":400,"org.easymock.tests.LimitationsTest.privateConstructor":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":324,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":154,"org.easymock.tests2.CallbackTest.callback":495,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":396,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":31,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests.UsageThrowableTest.throwCheckedException":64,"org.easymock.tests.MockingTest.testStrictClassMocking":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":312,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":409,"org.easymock.tests2.CompareToTest.testGreateOrEqual":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests2.NameTest.nameForNiceMock":343,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.DelegateToTest.testStubDelegate":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.stubAnswer":408,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":356,"org.easymock.tests.UsageVarargTest.varargLongAccepted":156,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":483,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageThrowableTest.noUpperLimit":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":464,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.SerializationTest.test":493,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":246,"org.easymock.tests2.UsageConstraintsTest.testSame":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":177,"org.easymock.tests2.NameTest.nameForMock":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.UsageStrictMockTest.differentMethods":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":116,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":30,"org.easymock.tests2.NameTest.nameForStrictMock":342,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":248,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":347,"org.easymock.tests2.UsageStrictMockTest.range":295,"org.easymock.tests2.UsageConstraintsTest.lessThan":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":374,"org.easymock.tests2.UsageConstraintsTest.testOr":471,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":388,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.UsageVarargTest.varargShortAccepted":155,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":20,"org.easymock.tests2.UsageConstraintsTest.cmpTo":476,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":406,"org.easymock.tests2.CompareToTest.testLessThan":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.CaptureTest.testCaptureFromStub":430,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":36,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.constraints":465,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":59,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":270,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests2.CompareToTest.testGreateThan":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":137,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.LimitationsTest.abstractClass":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":439,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":149}}]
