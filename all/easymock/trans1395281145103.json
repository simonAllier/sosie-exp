[{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[19,20,21,22],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[37,38,39,40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[48,49,50,51,51,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,36,43,117,118,0,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[48,49,50,51,51,52,52,53,54,55,56,57,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,155,97,156,98,99,100,101,102,103,104,105,106,107,157,108,109,110,111,112,113,114,115,116,36,43,117,118,0,119,120,121,122,123,124,125,126,127,128,129,130,131,132,158,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[159,160,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[162,6,7,163,164],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[48,49,50,51,51,52,52,55,56,60,61,62,63,64,65,73,76,86,92,95,96,165,155,166,97,156,98,99,101,102,103,104,106,107,157,108,109,110,111,112,113,114,115,43,117,118,0,122,123,124,126,127,130,132,135,136,137,138,141],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[48,49,50,51,51,52,52,55,56,60,61,62,63,64,65,73,76,86,92,95,96,97,98,99,101,102,103,104,106,107,108,109,110,111,112,113,114,115,43,117,118,0,120,122,123,124,126,127,130,132,158,135,136,137,138,141,142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[167,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[170],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[171],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[172,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[122,124,125],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[175,173],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[176,177,178,179,180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[182,183,184,185,186,187,188,189,190,48,49,191,192,50,51,52,53,54,55,193,56,194,195,196,60,61,62,63,197,64,65,198,199,200,1,201,162,2,3,202,203,204,205,206,207,35,4,208,209,210,211,212,213,214,215,216,217,172,218,73,76,86,92,219,220,221,222,223,224,225,226,159,227,228,229,160,230,20,231,232,233,234,21,235,236,237,238,239,240,241,242,243,244,245,22,246,247,46,248,249,250,23,251,24,25,26,27,28,29,252,30,32,33,253,34,254,255,256,257,258,259,260,261,262,263,264,265,266,95,267,96,268,269,270,271,97,98,101,102,103,104,106,107,108,109,110,272,111,112,113,114,115,43,117,118,0,273,274,275,276,277,278,279,280,281,282,122,123,283,284,285,286,287,37,288,289,5,6,7,290,291,178,8,292,163,9,10,293,293,294,11,179,295,296,297,298,299,300,130,301,302,303,304,305,306,132,307,47,308,309,310,311,312,173,313,314,315,316,317,318,319,320,38,321,39,322,323,324,325,326,327,328,329,330,331,332,333,334,40,41,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,13,360,361,362,14,15,363,16,364,365,17,366,367,368,369,370,136,137,138,371,372,373,374,375,376,377,42,378,379,380,381],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[382,383,384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[189,206,4,219,220,221,224,21,237,22,246,247,250,251,29,252,34,275,289,385,11,319,323,329,333,40,356,361,364,367,369],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[1,162,2,4,208,214,215,386,387,388,389,289,5,6,7,178,8,163,9,11,295,298,299,390,391,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[48,49,50,51,51,52,52,55,56,60,61,62,63,64,65,73,76,86,92,95,96,165,97,98,99,101,102,103,104,106,107,108,109,110,111,112,113,114,115,43,117,118,0,122,123,124,130,132,135,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1608","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[95,267,96,392],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[207,212,218,275,6,175,294,297,305,173,356,357,13,361,362,14,15,16,364,365,17,367,368,369,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests2.UsageTest.argumentsOrdered":215,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testReturnException":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":136,"org.easymock.tests.MockClassControlTest.testToString":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":356,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":390,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":278,"org.easymock.samples.ExampleTest.answerVsDelegate":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":127,"org.easymock.tests2.UsageConstraintsTest.testNull":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests2.CaptureTest.testPrimitive":25,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":379,"org.easymock.tests.UsageTest.argumentsOrdered":299,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":318,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.DependencyTest.testClassMocking":58,"org.easymock.tests2.AnswerTest.answer":268,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":366,"org.easymock.tests.LimitationsTest.mockFinalMethod":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests2.DependencyTest.testClassMockingSupport":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":381,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":94,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":315,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":81,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":169,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":89,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":15,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":234,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":30,"org.easymock.tests.MockClassControlTest.testEquals":146,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests2.CaptureTest.testCaptureAll":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":380,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests.UsageVarargTest.allKinds":347,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.samples.ExampleTest.voteForRemoval":185,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":324,"org.easymock.tests2.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests.GenericTest.testBridgedEquals":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":376,"org.easymock.tests.UsageExpectAndReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":369,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":42,"org.easymock.tests.UsageCallCountTest.tooManyCalls":377,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests.MockingTest.testNiceClassMocking":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":156,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":227,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":247,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndReturnTest.object":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":333,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":47,"org.easymock.tests.MockClassControlTest.testHashCode":145,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests2.CaptureTest.testCaptureMultiple":44,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":148,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":144,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":361,"org.easymock.tests.CapturesMatcherTest.test":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":334,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":96,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":385,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":177,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":364,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":392,"org.easymock.tests.UsageExpectAndThrowTest.object":363,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":277,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":180,"org.easymock.tests2.CaptureTest.testCaptureNone":252,"org.easymock.tests.UsageUnorderedTest.message":289,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":374,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":231,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.UsageExpectAndThrowTest.longType":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":166,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":3,"org.easymock.tests2.NameTest.nameForMocksControl":389,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":137,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.MockingTest.testTwoMocks":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":14,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":214,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":150,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":77,"org.easymock.tests.UsageExpectAndThrowTest.floatType":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":269,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.LimitationsTest.privateConstructor":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":244,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":332,"org.easymock.tests.UsageVarargTest.differentLength":342,"org.easymock.tests2.CallbackTest.callback":206,"org.easymock.tests2.UsageConstraintsTest.equals":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":116,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":312,"org.easymock.tests.UsageCallCountTest.tooFewCalls":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":279,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":181,"org.easymock.tests.MockingTest.testStrictClassMocking":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests2.CompareToTest.testGreateOrEqual":19,"org.easymock.tests2.NameTest.nameForNiceMock":388,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.DelegateToTest.testStubDelegate":248,"org.easymock.tests2.AnswerTest.stubAnswer":270,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":40,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":225,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":27,"org.easymock.tests2.SerializationTest.test":267,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":171,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":149,"org.easymock.tests2.UsageConstraintsTest.testSame":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":320,"org.easymock.samples.SupportTest.addDocument":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":78,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests2.NameTest.nameForMock":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":329,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":311,"org.easymock.tests2.NameTest.nameForStrictMock":387,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":151,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":82,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests.UsageRangeTest.combination":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":79,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":153,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":375,"org.easymock.tests2.UsageConstraintsTest.cmpTo":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":175,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":331,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests2.UsageConstraintsTest.constraints":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":316,"org.easymock.tests.LimitationsTest.abstractClass":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":323,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":317,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
