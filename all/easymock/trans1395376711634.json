[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,1,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[32,48,49,50,51,52,53,54,55,56,57,58,59,60,61,68,71,72,299,101,102,103,104,105,106,107,108,109,110,300,111,112,113,114,115,116,117,118,119,120,121,122,301,123,124,125,126,166,167,168,169,170,181,182,192,248,250,251,257,258,259,260,261,273,274,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[37,38,39,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,303,16,17,18,19,20,24,25,26,27,28,29,31,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,62,63,64,65,66,67,304,68,69,70,73,74,75,77,78,79,80,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,104,109,110,111,112,114,117,120,121,122,301,123,131,132,135,136,137,138,139,305,141,142,143,145,146,147,150,151,152,154,155,156,157,158,159,160,161,162,164,165,306,171,172,173,174,175,176,177,178,180,181,183,186,187,307,308,309,310,195,198,199,311,312,313,200,201,204,205,207,212,217,314,222,315,223,224,316,1,317,318,225,319,226,320,321,322,227,323,230,231,233,238,243,249,252,253,254,255,256,260,324,262,264,265,266,267,268,269,270,271,272,273,281,282,283,325,284,326,327,328,329,330,331,285,292,293,296,297,298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[49,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,41,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,332,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,301,123,124,125,126,131,132,133,134,142,143,144,145,146,147,148,149,151,152,153,154,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,333,310,188,189,190,191,192,193,196,197,198,199,312,313,200,201,334,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,320,321,322,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,335,336,250,251,257,258,259,260,261,324,262,263,264,265,266,267,268,337,269,270,271,272,273,274,275,276,277,278,279,280,330,331,285,286,288,289,290,291,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[339,133,134,340],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":123,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":240,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":228,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":339,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":28,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":121,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.UsageTest.moreThanOneArgument":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":278,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":248,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":21,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":260,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":137,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":317,"org.easymock.tests2.StubTest.stub":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":170,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":1,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests.ReplayStateInvalidUsageTest.times":318,"org.easymock.tests.LimitationsTest.mockNativeMethod":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":36,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":232,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":122,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":141,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":117,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":167,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":229,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":305,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests.UsageVarargTest.differentLength":337,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":3,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":0,"org.easymock.tests.UsageThrowableTest.throwCheckedException":175,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":245,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":225,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":309,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":25,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":177,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.UsageConstraintsTest.greaterThan":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":119,"org.easymock.tests.UsageThrowableTest.noUpperLimit":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":88,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":89,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":312,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":244,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":242,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests2.MockedExceptionTest.testRealException":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":233,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":75,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":94,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":87,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":335,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":321,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests.MockClassControlTest.testHashCode":329,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":222,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.UsageStrictMockTest.testVerify":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests2.UsageTest.resumeIfFailure":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":169,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":92}}]
