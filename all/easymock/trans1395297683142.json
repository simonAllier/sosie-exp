[{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,6,172,7,173,174,175,176,177,178,179,8,180,181,182,183,17,18,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,9,10,244,11,245,12,13,246,247,248,249,250,251,252,253,254,255,15,256,257,258,16,259,260,261,262,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[265,195,196,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[267,242,9,254,258],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[268,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:584","sourceCode":"org.easymock.IMocksControl.resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[271,19,20,21,22,24,25,272,0,0,1,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,273,268,274,269,46,275,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,270,276,277,278,279,280,75,281,282,283,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,110,111,112,113,114,115,116,284,285,286,117,121,123,124,127,128,129,287,288,132,289,136,137,138,139,140,141,142,144,145,146,147,148,290,291,292,159,160,161,162,163,164,165,166,167,168,169,293,171,294,6,172,173,174,177,178,179,8,180,181,182,183,17,18,184,185,295,296,297,298,186,187,188,189,190,191,299,300,192,193,194,195,196,301,302,303,304,305,306,307,308,309,310,311,312,313,314,198,199,315,316,200,201,317,206,207,208,318,209,319,211,320,321,213,215,216,217,219,221,222,223,226,227,230,232,233,239,322,240,241,323,242,243,9,10,244,11,245,12,13,246,247,248,249,250,251,252,253,254,255,15,256,257,258,16,259,260,262,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[324,246,251,260],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,74,86,88,89,90,91,92,93,96,97,100,102,107,111,112,113,114,115,116,286,137,187,188,189,190,215,222,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[325,326,327,328,329,330],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[20,331,285,206,207,208,209],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[69,118,123,124,332,127,128,333,334,335,170,186,302,306,307,310,336,213,219,228,232,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[14,247],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[271,19,20,21,22,23,24,337,25,338,272,339,0,1,340,341,342,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,273,268,274,343,269,344,345,46,47,275,346,347,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,270,276,277,278,279,280,75,325,326,327,328,348,329,330,76,77,78,79,80,81,82,83,84,281,282,283,349,85,350,351,352,353,354,355,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,356,357,358,359,360,361,362,363,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,284,364,285,286,365,117,366,118,119,120,121,122,123,124,125,126,367,332,368,127,128,333,129,369,334,335,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,287,386,387,388,389,390,288,391,130,131,132,133,134,135,392,393,394,289,136,137,138,139,140,141,142,395,396,397,398,399,400,401,402,403,404,143,405,406,407,408,409,410,411,144,145,146,147,148,290,291,292,149,150,151,412,152,153,413,154,155,156,157,158,159,160,414,415,161,416,417,162,418,163,164,165,166,167,168,419,420,169,2,421,170,293,171,294,422,423,6,172,7,173,174,175,176,177,178,179,8,180,181,182,183,17,18,184,185,424,425,426,295,427,428,296,429,430,431,432,433,434,435,436,437,297,438,439,440,441,442,298,443,444,186,187,188,189,190,191,299,300,192,193,194,195,196,197,301,302,303,304,305,306,307,308,309,310,311,312,445,446,447,448,449,450,313,451,452,453,454,455,456,314,198,199,315,336,316,200,201,457,458,202,203,204,205,317,206,207,208,318,209,210,319,459,460,211,212,320,321,461,462,213,214,463,464,465,466,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,467,468,239,322,240,241,469,470,471,472,473,323,474,475,476,477,478,479,242,243,9,10,480,244,11,245,12,13,246,14,247,248,249,250,251,252,253,254,255,15,256,257,481,258,16,259,260,262,482,263,264,483],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[326,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[120,484],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[14],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[271,19,21,22,24,272,46,275,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,86,88,89,90,91,92,93,94,95,98,99,101,102,103,106,107,110,117,121,123,124,127,128,129,289,136,137,144,145,146,147,148,159,160,161,163,164,165,166,167,168,169,293,171,294,6,172,173,174,177,178,179,8,181,182,183,17,18,184,185,295,296,297,298,189,191,193,195,196,301,302,303,304,305,306,307,308,309,310,311,312,313,314,198,199,315,316,200,201,207,319,211,320,321,213,215,216,217,219,221,222,223,226,227,230,232,233,239,322,241,323,242,243,9,10,244,11,245,12,13,246,247,248,249,250,251,252,253,254,255,15,256,257,258,16,259,260,264],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[324,246,251,260],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[271,19,20,21,22,23,24,337,25,338,272,339,0,1,340,341,342,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,273,268,274,343,269,344,345,46,47,275,346,347,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,270,276,277,278,279,280,75,485,325,326,327,328,348,329,486,330,487,76,77,78,79,80,81,82,83,84,281,282,283,349,85,350,351,352,353,354,355,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,356,357,358,359,360,361,362,363,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,284,364,285,286,365,117,366,118,119,120,121,122,123,124,125,126,367,332,368,127,128,333,129,369,334,335,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,287,386,387,388,389,390,288,391,130,131,132,133,134,135,392,393,394,289,136,137,138,139,140,141,142,395,396,397,398,399,400,401,402,403,404,143,405,406,407,408,409,410,411,144,145,146,147,148,290,291,292,149,150,151,412,152,153,413,154,155,156,157,158,159,160,414,415,161,416,417,162,418,163,164,165,166,167,168,419,420,169,2,421,170,293,171,294,422,423,6,172,7,173,174,175,176,177,178,179,8,180,181,182,183,17,18,184,185,424,425,426,295,427,428,296,429,430,431,432,433,434,435,436,437,297,438,439,440,441,442,298,443,444,186,187,188,189,190,191,299,300,192,193,194,195,196,197,301,302,303,304,305,306,307,308,309,310,311,312,445,446,447,448,449,450,313,451,452,453,454,455,456,314,198,199,315,336,316,200,201,457,458,202,203,204,205,317,206,207,208,318,209,210,3,319,459,488,460,211,212,320,489,321,490,461,462,213,5,214,463,491,492,493,464,465,466,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,467,468,239,322,240,241,469,470,471,472,473,323,474,475,476,477,478,479,242,243,9,10,480,244,11,245,12,13,246,14,247,248,249,250,251,252,253,254,255,15,256,257,481,258,16,259,260,261,262,482,263,264,483,494],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[48,69,495,487,496,497,100,101,102,104,105,108,109,110,118,120,122,123,124,392,393,394,413,164,293,294,186,302,306,307,310,319,462,213,214,215,218,219,220,224,225,226,227,228,231,232,233,9,253],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":220,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":342,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":112,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":458,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageTest.wrongArguments":218,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":78,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":310,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageTest.moreThanOneArgument":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests.UsageTest.argumentsOrdered":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":408,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests2.DependencyTest.testClassMocking":467,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":358,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests.LimitationsTest.mockFinalMethod":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":84,"org.easymock.tests2.DependencyTest.testClassMockingSupport":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":417,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":86,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.samples.PartialClassMockTest.testGetArea":271,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.MockingTest.testInterfaceMocking":333,"org.easymock.tests2.CompareToTest.testLessOrEqual":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":76,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":251,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":250,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":412,"org.easymock.tests2.EasyMockSupportClassTest.testAll":295,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":141,"org.easymock.samples.ExampleTest.voteForRemovals":24,"org.easymock.tests.UsageVarargTest.allKinds":158,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":83,"org.easymock.samples.BasicClassMockTest.testPrintContent":341,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":92,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":422,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":419,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":303,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":213,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":157,"org.easymock.tests.GenericTest.testBridgedEquals":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":393,"org.easymock.tests.UsageExpectAndReturnTest.longType":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":80,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":481,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":394,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testNiceClassMocking":335,"org.easymock.tests.MockingTest.testClassMocking":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":131,"org.easymock.tests2.UsageConstraintsTest.testContains":249,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":189,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageExpectAndReturnTest.object":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":153,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":483,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":435,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":496,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":261,"org.easymock.tests.UsageVarargTest.varargCharAccepted":152,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":485,"org.easymock.tests2.CaptureTest.testCaptureMultiple":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":312,"org.easymock.tests.DefaultClassInstantiatorTest.object":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":290,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":293,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":298,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":114,"org.easymock.tests2.StubTest.stubWithReturnValue":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":58,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":287,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":265,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":299,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":256,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests.UsageStrictMockTest.range":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":465,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":410,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":77,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":495,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":156,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":438,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":135,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":97,"org.easymock.tests2.UsageConstraintsTest.any":247,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":407,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":113,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":406,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.NameTest.nameForMocksControl":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":428,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":107,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":482,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":321,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":201,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":143,"org.easymock.tests.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":214,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":297,"org.easymock.tests.ResultTest.createDelegateResultToString":331,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.LimitationsTest.privateConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":93,"org.easymock.tests2.UsageTest.defaultResetToNice":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":79,"org.easymock.tests.UsageThrowableTest.throwCheckedException":90,"org.easymock.tests.MockingTest.testStrictClassMocking":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":316,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":397,"org.easymock.tests2.CompareToTest.testGreateOrEqual":324,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":185,"org.easymock.tests2.NameTest.nameForNiceMock":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.samples.ExampleTest.addDocument":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":121,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":155,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatType":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":264,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":87,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":463,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":50,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.samples.SupportTest.addDocument":338,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":430,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":476,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":369,"org.easymock.tests2.NameTest.nameForMock":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.UsageStrictMockTest.differentMethods":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":72,"org.easymock.tests2.MockedExceptionTest.testRealException":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":383,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests2.NameTest.nameForStrictMock":203,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":464,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":319,"org.easymock.tests2.UsageStrictMockTest.range":232,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":434,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":105,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":431,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":154,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":392,"org.easymock.tests2.UsageConstraintsTest.cmpTo":248,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":459,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":134,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.UsageStrictMockTest.testVerify":126,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":81,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.LimitationsTest.abstractClass":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":307}}]
