[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6,7,8,22,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[70,71,72,73,25,74,75,76,53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,24,118],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[119,120,121,122],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[138,77,139,140,141,142,0,2,143,144,78,79,145,123,3,146,125,147,148,149,80,150,151,152,81,82,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,83,175,176,84,177,178,179,180,181,182,4,183,184,185,186,187,188,189,85,190,191,192,193,194,6,7,8,86,87,88,89,90,91,195,196,197,198,199,200,201,202,203,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,204,205,206,207,208,132,133,209,210,211,212,213,214,215,216,217,218,219,12,12,13,13,14,220,221,222,223,224,134,225,226,113,18,19,20,21,227,22,23,114,228,229,230,231,115,232,233,234,116,117,24,118,235,236,237,238,239,25,28,30,32,33,35,38,39,40,41,42,43,240,44,45,46,48,50,51,52,241,242,243,244,245,246,247,248,249,250,251,252,253,254,55,255,256,257,258,259,260,57,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,58,59,279,60,61,62,280,120,281,282,283,284,121,285,286,287,288,64,289,290,291,65,66,122,53,292,293],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[294,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[297,189,215,250,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[298,55,255,56,256,257,299,300,258,259,260,57,261,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[302,53,292,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[123,124,125,127,128,129,130,131,303,132,133,134,135,136,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[304,305],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[53,292,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[20,23,69,74,307,308,75,309,310,311,312],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[302,53,292,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[123,125,313,314,132,133,134],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[298,55,255,56,256,257,299,300,258,260,57,261,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.StubTest.stubWithReturnValue":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests2.DelegateToTest.testReturnException":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":178,"org.easymock.tests.MockingTest.testPartialClassMocking":6,"org.easymock.samples.SupportTest.voteForRemovals":220,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":105,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":103,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":289,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":223,"org.easymock.tests2.DelegateToTest.testWrongClass":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":125,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests2.CaptureTest.testPrimitive":256,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":211,"org.easymock.tests2.CaptureTest.testCaptureNone":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":193,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":195,"org.easymock.tests.UsageTest.argumentsOrdered":131,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":297,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.UsageExpectAndThrowTest.longType":96,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":63,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":206,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.DelegateToTest.testDelegate":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":199,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":108,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.CaptureTest.testCaptureLast":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":280,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":290,"org.easymock.tests.MockingTest.testTwoMocks":5,"org.easymock.tests2.CaptureTest.testCapture1_2446744":257,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":101,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":66,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":95,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.samples.ExampleTest.voteAgainstRemoval":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":312,"org.easymock.tests2.UsageConstraintsTest.testNotNull":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests2.CallbackTest.callback":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":102,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageOverloadedMethodTest.overloading":203,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":284,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":260,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":110,"org.easymock.tests2.CaptureTest.testCaptureAll":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.testMatches":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":227,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.tests2.CompareToTest.testGreateOrEqual":119,"org.easymock.samples.ExampleTest.voteForRemovals":218,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests2.DependencyTest.testInterfaceMocking":222,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests2.DelegateToTest.testStubDelegate":251,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":81,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":146,"org.easymock.tests2.UsageConstraintsTest.greaterThan":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.samples.ExampleTest.voteForRemoval":216,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":149,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":278,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":4,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":299,"org.easymock.tests2.SerializationTest.test":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":76,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":67,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":263,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":267,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":262,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":229,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":198,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":264,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":310,"org.easymock.tests2.UsageStrictMockTest.differentMethods":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":207,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":142,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":126,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":19,"org.easymock.tests2.UsageConstraintsTest.testContains":283,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":24,"org.easymock.tests2.UsageConstraintsTest.testFind":279,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":248,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":313,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":71,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":138,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":265,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":196,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.UsageTest.wrongArguments":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":189,"org.easymock.tests2.MockBuilderTest.testWithConstructor":307,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":197,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":140,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":188,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":29,"org.easymock.tests.UsageTest.unexpectedCallWithArray":128,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":100,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.CaptureTest.testCapture":301,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":99,"org.easymock.tests2.ConstraintsToStringTest.notToString":306,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":300,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":186,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":270}}]
