[{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:167","sourceCode":"final org.easymock.internal.ClassProxyFactory.MockMethodInterceptor org.easymock.internal.ClassProxyFactory.MockMethodInterceptor = new org.easymock.internal.ClassProxyFactory.MockMethodInterceptor(java.lang.reflect.InvocationHandler)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[6],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:126","failures":[10,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[15,16],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,9,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,10,127,11,12,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,13,209,210,211,212,213,214,215,216,217,218,219,14,220,221,222],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[223,224,225,226,227,228,229,230,231,232,233,234,22,23,235,236,24,25,26,27,28,237,238,29,30,31,32,239,33,34,35,240,241,242,9,36,243,244,245,246,247,37,248,249,250,251,252,253,254,255,38,256,39,257,258,259,260,261,40,262,263,264,265,266,267,268,269,41,270,42,43,271,272,273,274,44,275,276,45,277,278,279,280,281,282,283,284,285,46,286,287,288,289,290,47,291,292,48,0,293,294,295,296,49,50,51,52,297,53,54,55,56,57,58,298,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,17,299,82,300,301,302,83,84,85,303,304,86,87,88,89,90,91,92,93,94,305,95,96,97,306,307,98,308,309,99,100,310,101,311,312,102,18,103,104,313,314,315,105,316,106,107,108,317,109,318,110,111,112,319,320,113,114,115,116,117,118,119,120,121,122,123,124,125,126,321,7,10,127,11,322,12,323,324,325,326,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,327,328,329,330,331,332,333,334,335,148,149,150,151,152,153,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,19,355,356,154,155,357,358,156,359,360,361,362,363,364,365,157,366,158,159,367,368,160,369,161,162,163,164,165,166,370,371,372,373,374,375,376,377,378,167,379,380,381,382,383,384,385,386,168,169,387,388,389,390,170,171,391,172,392,393,394,395,396,397,398,173,399,400,401,402,403,404,405,406,407,408,409,410,411,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,8,443,444,445,446,447,196,448,449,450,451,452,453,454,16,197,198,199,200,201,455,456,202,457,203,204,458,459,205,206,460,461,207,208,462,13,209,463,210,464,211,212,213,465,466,467,468,469,470,471,472,473,474,475,214,215,216,476,217,477,478,479,218,480,481,482,219,14,220,221,483,222,484,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[160,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,237,238,29,30,31,32,239,33,34,487,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[66,488],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[346,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[228,230,22,23,24,25,27,28,29,30,31,32,239,33,34,35,240,241,242,9,36,37,254,255,38,256,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,307,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,7,10,127,11,322,12,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,327,328,329,330,331,332,333,334,335,148,149,150,151,152,153,336,337,338,154,155,357,358,156,359,360,361,362,157,158,159,160,369,161,162,163,164,165,166,167,380,382,383,384,385,386,169,170,171,172,395,396,397,398,173,399,409,410,411,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,426,196,453,16,197,198,199,200,201,202,203,204,205,206,207,208,13,209,210,211,212,213,214,215,216,217,218,481,481,482,482,219,14,220,221,222,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[22,48,0,1,314,2,3,4,489,5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[223,224,225,226,227,228,229,230,231,232,233,234,22,23,235,236,24,25,26,27,28,237,238,29,30,31,32,239,33,34,35,240,241,242,9,36,243,244,245,246,247,37,248,249,250,251,252,253,254,255,38,256,39,257,258,259,260,261,40,262,263,264,265,266,267,268,269,41,270,42,43,271,272,273,274,44,275,276,45,277,278,279,280,281,282,283,284,285,46,286,287,288,289,290,47,291,292,48,0,490,293,491,492,493,294,295,296,49,50,51,52,297,53,54,55,56,57,58,298,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,17,299,82,300,301,302,83,84,85,303,304,86,87,88,89,90,91,92,93,94,305,95,96,97,306,307,98,308,309,99,100,310,494,101,311,495,312,102,18,103,1,104,313,314,315,105,496,316,106,107,108,317,109,318,110,111,112,319,320,113,114,115,116,117,118,119,120,121,122,123,124,125,126,321,7,10,127,11,322,12,323,324,325,326,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,327,328,329,330,331,332,333,334,335,148,149,150,151,152,153,497,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,498,351,352,353,354,19,355,499,356,154,155,357,358,156,359,360,361,362,363,364,365,157,366,158,159,367,368,160,369,161,162,163,164,165,166,370,371,372,373,374,375,376,377,378,167,379,380,381,382,383,384,385,386,168,169,387,388,389,390,170,171,391,172,392,393,394,395,396,397,398,173,399,400,401,402,403,404,405,406,407,408,409,410,411,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,8,443,444,445,446,447,196,448,449,450,451,452,453,454,16,197,198,199,200,201,455,456,202,457,203,204,458,459,205,206,460,461,207,208,462,13,209,463,210,464,211,212,213,465,466,467,468,469,470,471,472,473,474,475,214,215,216,476,217,477,478,479,218,480,481,482,219,14,220,221,483,222,484,485],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[42,317,319,320,365,158,500,16,458,459,460,461,464,215,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[0,1,2,3,4,501,502],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[433,434,435,436,437,438,439,440,441,442,8,443,444,445,446,447,448,449,450,451,452,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[247,249,251,252,261,263,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[380],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[503,488,504,505,506],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[303,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[22,23,235,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[65],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[22,23,235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[330],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.UsageTest.argumentsOrdered":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":8,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":479,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":396,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":372,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":223,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":325,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":384,"org.easymock.tests.UsageTest.argumentsOrdered":461,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":331,"org.easymock.tests.UsageVarargTest.varargIntAccepted":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":308,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":234,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests2.DelegateToTest.testDelegate":12,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":168,"org.easymock.tests2.CaptureTest.testCapture1_2446744":28,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":232,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":386,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":292,"org.easymock.samples.PartialClassMockTest.testGetArea":218,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests2.CompareToTest.testLessOrEqual":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests2.UsageTest.niceToStrict":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":323,"org.easymock.tests.UsageOverloadedMethodTest.overloading":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":187,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":20,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":31,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":233,"org.easymock.tests.MockNameTest.defaultName":408,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":385,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests.UsageVarargTest.allKinds":423,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.samples.BasicClassMockTest.testPrintContent":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":263,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":322,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":499,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.samples.ExampleTest.voteForRemoval":220,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":183,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":33,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":422,"org.easymock.tests.GenericTest.testBridgedEquals":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":431,"org.easymock.tests.UsageExpectAndReturnTest.longType":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":432,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":425,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":213,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":473,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":332,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":336,"org.easymock.tests2.ConstraintsToStringTest.findToString":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":192,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":258,"org.easymock.tests.MockClassControlTest.testHashCode":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":283,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":236,"org.easymock.tests.UsageVarargTest.varargCharAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":409,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":471,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests.CapturesMatcherTest.test":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":373,"org.easymock.tests2.UsageTest.resumeIfFailure":113,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":398,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":235,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":196,"org.easymock.samples.SupportTest.voteForRemovals":217,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":453,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":240,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":481,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":295,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":272,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":324,"org.easymock.tests2.CaptureTest.testCaptureNone":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":216,"org.easymock.tests.UsageVarargTest.varargByteAccepted":421,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":286,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":477,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":358,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":397,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":19,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":195,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":245,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests2.NameTest.nameForMocksControl":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":247,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":276,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.CompareToTest.testCompareEqual":504,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":390,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.samples.ExampleTest.removeNonExistingDocument":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":249,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":259,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":353,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":490,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests2.UsageTest.defaultResetToNice":112,"org.easymock.samples.ExampleTest.voteAgainstRemovals":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":191,"org.easymock.tests.UsageVarargTest.differentLength":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":244,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":300,"org.easymock.tests.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":357,"org.easymock.tests.UsageCallCountTest.tooFewCalls":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":326,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.MockingTest.testStrictClassMocking":388,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":95,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":36,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.NameTest.nameForNiceMock":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.stubAnswer":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":157,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":313,"org.easymock.tests.UsageVarargTest.varargLongAccepted":420,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":265,"org.easymock.tests.UsageThrowableTest.noUpperLimit":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":293,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.samples.SupportTest.addDocument":476,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":305,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":278,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":264,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":496,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":225,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":294,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":15,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":282,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":459,"org.easymock.tests2.MockBuilderTest.testWithConstructor":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":279,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":189,"org.easymock.tests.UsageVarargTest.varargShortAccepted":419,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":430,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":241,"org.easymock.tests2.CompareToTest.testLessThan":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":458,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":366,"org.easymock.samples.ExampleTest.addAndChangeDocument":485,"org.easymock.tests.UsageStrictMockTest.testVerify":368,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":480,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.LimitationsTest.abstractClass":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121}}]
