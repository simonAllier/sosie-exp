[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[187,188,189,190,191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[192,193,194,195,196],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[197,130,198,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[7,8,9,200,6,201,202,203,204,205,206,207,208,209,210,211,212,213,187,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,10,231,11,12,13,14,15,16,232,17,18,19,20,21,22,23,24,233,234,25,2,26,27,28,29,30,235,31,32,33,34,35,36,37,38,39,40,236,41,42,43,44,45,46,47,48,49,50,51,52,53,237,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,238,76,77,239,240,78,241,242,243,244,245,246,247,248,79,249,80,81,250,82,83,84,85,86,87,251,88,89,90,252,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,253,116,117,254,118,119,120,121,122,123,124,125,255,256,257,258,126,259,127,260,128,129,261,262,263,264,265,266,267,268,269,270,271,272,273,274,197,275,130,276,277,131,132,133,134,135,136,137,278,138,139,140,141,279,280,281,282,283,284,285,286,287,142,143,144,288,289,290,291,292,198,199,145,146,147,293,148,149,150,151,294,295,296,152,153,154,297,155,156,298,299,300,301,302,157,158,303,304,305,306,307,159,160,308,161,309,310,162,163,164,165,166,167,311,168,312,313,314,315,316,169,317,318,170,319,320,321,171,322,172,173,174,175,176,177,178,195,195,196,196,323,179,180,181,182,183,184,185,186],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[8,9,11,324,325,326,327,2,28,29,3,238,239,240,121,122,293,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[8,9,11,2,26,29,75,238,239,240,119,122,147,293,295,296,299,300,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,329,330,331,332,333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,329,330,331,332,333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[200,6,201,236,248,335,250,336,337,338,339,340,253,124,341,342,287,343,142,143,144,288,344,345,312,313,314,315,169,346,321,171,322,195,195,196,196,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[258,126,127,128,129,262,272,130,157,303,161],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[347,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[7,8,9,349,350,351,200,6,352,201,353,354,355,356,357,202,358,359,203,204,205,206,360,361,362,363,364,207,208,209,210,211,212,213,187,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,365,366,367,368,369,370,10,231,371,372,373,11,12,13,14,374,15,16,232,17,18,19,20,21,22,23,24,375,376,233,377,378,379,380,234,25,2,26,27,28,29,30,235,31,32,33,34,35,36,37,38,39,40,236,41,42,43,44,45,46,47,48,49,50,51,52,53,381,188,189,190,237,382,383,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,74,75,3,238,76,77,239,240,78,241,406,242,243,244,245,407,246,247,408,248,79,335,409,410,411,412,413,414,415,416,417,249,418,419,420,421,422,423,424,425,426,427,428,429,430,191,431,80,81,432,433,250,434,82,83,84,85,86,87,435,436,437,251,438,439,440,441,442,443,444,445,446,447,88,448,89,90,449,252,450,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,451,452,453,347,454,111,455,456,457,458,459,460,461,112,113,114,462,115,463,253,333,116,464,465,466,348,467,117,468,469,470,471,472,473,254,118,119,120,121,122,123,124,125,255,256,257,258,126,474,259,127,260,128,129,261,262,263,264,265,266,267,268,269,270,271,272,273,274,197,275,130,276,277,131,132,133,134,135,136,137,278,138,139,140,141,279,280,281,282,283,475,284,285,286,476,477,478,479,480,342,287,343,481,142,482,143,144,483,484,485,288,345,289,290,291,292,486,198,487,199,145,146,147,293,148,149,150,151,294,295,296,152,153,154,488,297,155,156,298,489,299,300,301,302,157,158,303,304,305,306,307,159,160,308,161,309,310,162,163,164,165,490,166,167,311,168,491,492,493,312,494,495,313,496,497,498,499,500,501,502,503,504,314,505,506,507,508,509,315,510,511,316,169,317,318,170,319,346,512,320,194,513,514,321,171,322,515,516,517,518,172,173,519,520,521,522,523,524,174,175,176,177,178,195,196,323,179,180,181,182,183,184,525,185,186],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[218,222,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[408,335,253,333,124,142,483,484,485,345,194,171,516],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[349,350,351,200,6,201,355,230,365,366,367,368,369,370,236,408,248,79,335,409,410,415,432,433,250,434,251,438,439,440,441,442,443,444,253,333,526,124,255,280,281,282,283,285,286,342,192,287,343,527,481,142,482,143,334,144,484,485,288,193,345,289,290,291,491,492,312,495,313,496,497,498,500,501,502,503,314,505,506,507,508,509,315,316,169,318,170,319,346,320,194,513,514,321,171,322,515,516,519,522,176,177,195,196,323],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[10,26,31,32,33,34,35,36,37,38,39,40,49,50,53,80,81,119,256,257,259,127,260,128,265,267,268,270,271,130,276,277,309,164,195,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[158,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[486,198],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[528],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[529,530,463],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[368,531,532],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,200,6,201,203,204,205,206,360,361,362,363,364,10,231,11,12,13,14,15,16,17,18,19,20,21,23,24,234,25,2,26,27,28,29,30,235,31,32,33,34,35,36,37,38,39,40,236,41,42,43,44,45,46,47,48,49,50,51,52,53,382,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,3,238,76,77,239,240,78,241,406,242,243,244,245,248,79,249,418,419,420,422,424,425,427,430,431,80,81,250,82,83,84,85,86,87,438,252,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,253,116,117,254,118,119,120,121,122,123,124,125,255,256,257,258,126,259,127,260,128,129,261,263,264,265,266,267,268,269,270,271,272,273,274,275,130,276,277,131,132,133,134,135,136,137,278,138,139,140,141,279,280,281,282,283,284,285,286,477,478,479,480,342,142,482,143,144,288,345,289,290,291,292,486,198,199,145,146,147,293,148,149,150,151,294,295,296,152,153,154,155,156,298,299,300,301,302,157,158,303,304,305,306,307,159,160,308,161,309,310,162,163,164,165,166,167,311,168,312,313,314,315,316,169,317,318,170,319,320,514,171,172,173,174,175,176,177,178,195,195,196,196,323,179,180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,329,330,331,332,333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.ConstructorArgs:50","failures":[253,333,124,282,286,476,192,527,334,484,533,193,534,535,491,492,493,312,494,495,313,496,497,498,499,500,501,502,503,504,314,505,506,507,508,509,315,510,511,195,196],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[143,144,313,314,195,196,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[237,382,448,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":216,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":83,"org.easymock.tests.MockingTest.testPartialClassMocking":200,"org.easymock.tests.MockClassControlTest.testToString":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":489,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":54,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":328,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":419,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":415,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":336,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":73,"org.easymock.tests.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":38,"org.easymock.tests.UsageTest.argumentsOrdered":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":521,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":389,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.DependencyTest.testClassMocking":517,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":480,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":527,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":514,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":205,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":69,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":364,"org.easymock.tests2.DependencyTest.testClassMockingSupport":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":478,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":40,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":534,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":511,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":392,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.MockingTest.testInterfaceMocking":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":500,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":63,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":102,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":22,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":531,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":308,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":374,"org.easymock.tests.MockClassControlTest.testEquals":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":312,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":479,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":362,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":268,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":39,"org.easymock.samples.ExampleTest.voteForRemovals":184,"org.easymock.tests.UsageVarargTest.allKinds":21,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.samples.BasicClassMockTest.testPrintContent":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":528,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":204,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":393,"org.easymock.samples.ExampleTest.voteForRemoval":181,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":515,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":166,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":385,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":82,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":461,"org.easymock.tests2.CaptureTest.testCaptureFirst":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":288,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":20,"org.easymock.tests.GenericTest.testBridgedEquals":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":94,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":360,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":72,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":36,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":281,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":406,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":291,"org.easymock.tests2.UsageConstraintsTest.testFind":259,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":24,"org.easymock.tests.MockTypeTest.fromEasyMockClass":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":329,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":378,"org.easymock.tests.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":107,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":12,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.MockClassControlTest.testHashCode":442,"org.easymock.tests2.EasyMockSupportTest.testVerify":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":502,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":477,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":324,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":15,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":229,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.DefaultClassInstantiatorTest.object":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":441,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":60,"org.easymock.tests.ReplayStateInvalidCallsTest.times":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":398,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":315,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":520,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":85,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":222,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":66,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":228,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":64,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.samples.ConstructorCalledMockTest.testTax":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":523,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":491,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":387,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":373,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":530,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":326,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":19,"org.easymock.tests2.ThreadingTest.testThreadSafe":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":505,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":245,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":176,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":226,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.SerializationTest.testClass":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":403,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":495,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":58,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":201,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":144,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":382,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.MockingTest.testTwoMocks":351,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":399,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":62,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":276,"org.easymock.samples.ExampleTest.removeNonExistingDocument":525,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":463,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":167,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":496,"org.easymock.tests.UsageExpectAndThrowTest.floatType":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":526,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":314,"org.easymock.samples.ExampleTest.voteAgainstRemoval":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":535,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":289,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.UsageVarargTest.differentLength":232,"org.easymock.tests2.CallbackTest.callback":116,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":194,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":420,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":284,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":298,"org.easymock.tests.ObjectMethodsTest.testHashCode":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":331,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":401,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.NameTest.nameForNiceMock":301,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":330,"org.easymock.samples.ExampleTest.addDocument":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":510,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":483,"org.easymock.tests.UsageVarargTest.varargLongAccepted":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":253,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageThrowableTest.noUpperLimit":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":519,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":532,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":92,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":386,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":497,"org.easymock.tests.GenericTest.testPackageScope":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":384,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":103,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":513,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":68,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":206,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":219,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":50,"org.easymock.tests2.NameTest.nameForStrictMock":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":522,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":121,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":390,"org.easymock.tests2.UsageConstraintsTest.lessThan":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":501,"org.easymock.tests2.CaptureTest.testCaptureRightOne":161,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":529,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests2.MockBuilderTest.testWithConstructor":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":498,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":17,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":407,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":404,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":297,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":343,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":400,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":244,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":533,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.UsageConstraintsTest.constraints":258,"org.easymock.samples.ExampleTest.addAndChangeDocument":185,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":186,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":338,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":13}}]
