[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"position":"org.easymock.internal.LastControl:85","failures":[21,22,23,24],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[25,3,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,6,8,10,11,13,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,21,99,100,101,102,103,104,105,106,107,108,109,110,111,23,112,113,114,24,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,143,144,144,17,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,1,221,222,223,224,225,226,227,228,229,230,231,232,233,234,20,235,2,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[264,265,266],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[94,130],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[259],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[37,42,72,117,118,119,120,149,152,156,157,180,183,186,187,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,219,220,0,1,221,222,228,229,230,231,232,233,2,244,247,248],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[25,3,26,267,27,28,29,30,31,32,33,34,35,36,37,38,39,268,40,269,41,42,43,270,271,44,45,46,47,48,49,50,51,52,53,54,55,56,57,272,58,59,60,61,62,63,64,65,66,67,68,69,70,273,274,275,276,71,72,6,8,10,11,13,73,74,277,75,76,278,279,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,21,99,100,101,102,103,104,105,106,107,108,109,110,111,23,112,113,114,24,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,280,281,133,282,134,135,283,284,136,285,137,138,139,140,286,141,142,287,143,143,144,144,17,288,289,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,290,182,183,291,292,184,185,186,187,293,188,294,295,296,297,298,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,299,216,217,218,219,220,0,1,221,222,223,224,225,226,227,228,229,230,231,232,233,300,301,302,303,304,305,306,307,308,309,310,234,311,20,235,2,236,237,238,239,240,241,242,312,243,244,313,245,246,247,248,249,250,251,252,314,315,316,253,317,254,255,318,319,320,256,257,258,259,260,261,262,263],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[4,9,16,321,117],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[25,3,26,267,27,28,29,30,31,32,33,34,35,36,37,38,39,268,40,269,41,42,43,270,271,44,45,46,47,48,49,50,51,52,53,54,55,56,57,272,58,59,60,61,62,63,64,65,66,67,68,69,70,273,274,275,276,71,72,4,6,8,10,11,13,73,74,277,75,76,278,279,77,78,79,80,81,82,83,84,85,86,87,88,89,16,90,322,91,92,93,94,95,96,97,98,21,99,100,101,102,22,103,104,105,106,107,108,109,110,111,23,112,113,323,114,24,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,280,281,133,282,134,135,283,284,136,285,137,138,139,140,286,141,324,142,287,143,143,144,144,17,288,289,145,146,147,148,149,150,151,152,325,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,326,290,182,183,291,292,184,185,186,187,293,188,294,295,296,297,298,189,190,191,192,193,194,327,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,299,216,217,218,219,220,0,1,221,222,223,224,225,226,227,228,229,230,231,232,233,300,301,302,303,304,305,306,307,308,309,310,234,311,20,328,235,2,236,237,238,239,240,241,242,312,243,244,313,245,246,247,248,249,250,251,252,314,315,316,253,317,254,255,318,319,320,256,257,258,259,260,261,262,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[37,268,40,269,270,271,44,45,47,51,52,55,58,6,12,13,15,85,91,93,96,109,280,282,134,135,180,326,290,291,292,184,329,297,298,194,305,2,236,330,331,332,333,249,314,316,317,254,255],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[334,335,336,337,338,339,340,341,342,343,285,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[27,29,30,32,35,36,58,138,345,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,26,267,346],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[299,216,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[268,270,271,15,134,135,326,290,291,292,194,2,236,349,330,331,316,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[73,277,80,96,101],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[3,66,350,351,68,69,352,353,8,354,355,356,12,357,15,358,92,321,143,143,144,144,17,359,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[359],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[360,361],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[35,36,362,73,74,277,75,76,278,279,77,78,79,80,81,82,83,90,94,95,96,97,98,21,99,100,101,102,22,103,104,105,106,107,108,109,110,111,23,112,113,323,114,24,115,116,133,148,149,154,155,156,157,158,189,190,191,192,193,194,223,224,232,310,316,253],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[74,77,78,83,100,103,133,148,149,154,155,156,157,158,189,190,191,192,193,194,223,224,232,253],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[74,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[3,26,27,30,31,32,33,35,36,37,38,39,268,40,269,41,42,270,271,45,58,60,61,64,65,66,72,8,13,15,73,74,277,75,76,278,279,77,79,80,81,82,83,84,86,87,89,94,95,96,97,98,21,99,100,101,102,103,104,105,106,107,108,109,110,111,23,112,113,114,24,115,116,123,124,125,127,128,130,131,132,280,133,282,134,135,283,138,139,141,148,149,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,326,290,182,183,291,292,184,189,190,191,192,193,194,363,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,0,1,221,222,223,224,228,229,230,231,233,235,2,236,237,238,239,240,241,245,249,314,316,253,317,254,255,318,256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[267,364,59,60,62,64,67,68,69,70,4,6,7,365,8,9,10,11,12,13,15,84,85,87,88,89,16,90,366,322,91,92,93,367,321,94,117,118,119,17,288,289,18,19,179,195,234,311,20,328,368,369,370,371,372,373,374,375,376,320,256,257,258,377],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[134,135,326,316,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[73,277,80,96,97,100,101,22,23],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[94,110,112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[378,379,380,381,382],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests2.UsageTest.argumentsOrdered":271,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":269,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":354,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.SerializationTest.testAllMockedMethod":267,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.tests.MockingTest.testPartialClassMocking":256,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":361,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":346,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":68,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":28,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":34,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.UsageStrictMockTest.range":254,"org.easymock.samples.ConstructorCalledMockTest.testTax":143,"org.easymock.samples.ExampleTest.answerVsDelegate":138,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":239,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":147,"org.easymock.tests.UsageUnorderedTest.message":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":330,"org.easymock.tests.UsageVerifyTest.twoReturns":236,"org.easymock.tests.UsageVarargTest.varargByteAccepted":308,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests.UsageTest.argumentsOrdered":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":302,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":344,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":195,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":20,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":347,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CompareToTest.testCompareEqual":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":216,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":270,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":265,"org.easymock.tests.UsageThrowableTest.throwError":217,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":379,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":351,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":69,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.ThreadingTest.testChangeDefault":266,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":117,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.UsageTest.defaultResetToNice":43,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":337,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":62,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageThrowableTest.throwCheckedException":0,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":63,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":240,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests.UsageVarargTest.allKinds":310,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":33,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":221,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.AnswerTest.stubAnswer":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":253,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":93,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.samples.ExampleTest.voteForRemoval":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":367,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":144,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageThrowableTest.noUpperLimit":218,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.samples.SupportTest.addDocument":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests.GenericTest.testPackageScope":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":297,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageCallCountTest.tooManyCalls":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":60,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":119,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":364,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":380,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":304,"org.easymock.tests.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor":352,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageVarargTest.varargShortAccepted":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests.UsageVarargTest.varargCharAccepted":303,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":29,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests.DefaultClassInstantiatorTest.object":327,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":7,"org.easymock.tests.UsageTest.unexpectedCallWithArray":326,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":185,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52}}]
