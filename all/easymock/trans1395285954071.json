[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.ConstructorArgs:54","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[56,4,57,58,59,60,61,62,63,64,65,66,67,68,14,15,69,16,17,70,71,72,73,74,75,55,76,77,78,79,80,81,82,83,84,85,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,86,87,88,89,5,54,6,0,1,2,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,7,150,8,9,151,10,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,11,170,171,172,173,174,175,176,177,178,179,180,181,182,183,45,184,185,186,187,46,47,188,48,189,190,49,191,192,193,194,50,195,196,51,197,198,53,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,12,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,13,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[112,118,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,17,494,495,496,497,498,0,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[103,105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[56,4,57,58,60,62,64,68,14,14,15,15,16,71,72,73,75,76,77,78,81,82,84,85,21,24,34,40,86,87,88,89,5,6,0,1,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,140,142,143,7,150,8,9,151,10,152,153,155,156,159,160,161,162,163,164,165,11,175,182,183,45,184,186,187,46,189,192,194,195,198,202,203,211,212,213,214,215,216,219,223,224,225,233,240,241,242,243,244,245,248,255,262,263,264,265,266,269,270,273,274,275,276,277,278,279,283,284,286,290,291,293,295,298,315,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,399,400,401,404,414,416,417,13,421,422,424,426,427,428,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[17,43,44,45,46,47,48,49,50,52,53],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[66,67,68,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,86,87,88,0,2,182,183,45,184,187,46,188,189,190,191,192,193,194,195,51,197,198,199,204,208,211,212,214,215,216,217,219,220,221,222,223,224,225,226,227,245,246,247,248,249,280,281,282,283,284,286,289,292,293,294,295,296,391,396,430,431,432,433,434,435,437,483,484,485,486,487,488,489,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[14,15,16,17,499,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,500,501,502,503,504,505,0,45,46,47,48,49,50,51,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[434,506,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[508,509,267,510,511,413],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,104,106,107,108,302,421],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[508,509,267,510,511,413],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[512,513,514,515,516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":55,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testReturnException":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":439,"org.easymock.tests.MockingTest.testPartialClassMocking":283,"org.easymock.tests.MockClassControlTest.testToString":485,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":145,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":371,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":396,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":390,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":365,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":460,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":200,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":364,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":464,"org.easymock.tests2.DelegateToTest.testDelegate":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":386,"org.easymock.tests.LimitationsTest.mockFinalMethod":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.DependencyTest.testClassMockingSupport":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":297,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":167,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.UsageThrowableTest.throwError":355,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.MockingTest.testInterfaceMocking":285,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests2.CompareToTest.testLessOrEqual":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":192,"org.easymock.tests2.MockBuilderTest.testCreateMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":236,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":380,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":502,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":506,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests.MockClassControlTest.testEquals":489,"org.easymock.tests2.EasyMockSupportClassTest.testAll":21,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":168,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests.MockNameTest.defaultName":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":366,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests.UsageVarargTest.allKinds":476,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":426,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":361,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":177,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":498,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":436,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":225,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":437,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":226,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":438,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":330,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":243,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":475,"org.easymock.tests.GenericTest.testBridgedEquals":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":409,"org.easymock.tests.UsageExpectAndReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":459,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":410,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests.MockingTest.testNiceClassMocking":289,"org.easymock.tests.MockingTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":403,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":88,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":6,"org.easymock.tests.UsageExpectAndReturnTest.object":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":470,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":480,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":504,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":461,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":421,"org.easymock.tests.MockClassControlTest.testHashCode":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":171,"org.easymock.tests2.EasyMockSupportTest.testVerify":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":462,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":469,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":429,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastCall":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":430,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":399,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":170,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":487,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":441,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":315,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":383,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":321,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":150,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests.UsageExpectAndThrowTest.object":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.DelegateToTest.testWrongClass":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":291,"org.easymock.tests.UsageStrictMockTest.range":416,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":209,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":501,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":18,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":458,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":279,"org.easymock.tests.UsageVerifyTest.twoReturns":428,"org.easymock.tests.UsageVarargTest.varargByteAccepted":474,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":407,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndThrowTest.longType":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":434,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":149,"org.easymock.tests2.MockedExceptionTest.testMockedException":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":23,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.MockingTest.testNicePartialClassMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.CompareToTest.testCompareEqual":514,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":379,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.samples.ExampleTest.removeNonExistingDocument":61,"org.easymock.tests.UsageStrictMockTest.differentMethods":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":235,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":172,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":432,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":199,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests.UsageExpectAndThrowTest.floatType":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":70,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":224,"org.easymock.tests.LimitationsTest.privateConstructor":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":44,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":362,"org.easymock.tests2.UsageTest.defaultResetToNice":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":338,"org.easymock.tests.UsageVarargTest.differentLength":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests2.UsageConstraintsTest.equals":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":280,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":369,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":234,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":10,"org.easymock.tests2.CompareToTest.testGreateOrEqual":515,"org.easymock.tests.ObjectMethodsTest.testHashCode":479,"org.easymock.tests2.NameTest.nameForNiceMock":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.AnswerTest.stubAnswer":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":414,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":196,"org.easymock.tests.UsageVarargTest.varargLongAccepted":473,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":204,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":324,"org.easymock.samples.SupportTest.addDocument":63,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":185,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":178,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":287,"org.easymock.tests2.NameTest.nameForMock":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":335,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":385,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":452,"org.easymock.tests2.MockedExceptionTest.testRealException":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":147,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":189,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":308,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":212,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":484,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":472,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":408,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests2.CompareToTest.testLessThan":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":190,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":406,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":415,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.samples.ExampleTest.addAndChangeDocument":62,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests2.CompareToTest.testGreateThan":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":446,"org.easymock.tests.LimitationsTest.abstractClass":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":447,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96}}]
