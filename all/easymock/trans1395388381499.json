[{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,0,1,332,2,3,4,5,6,7,8,9,333,334,335,336,337,338,339,340,10,11,341,342,343,12,13,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,14,15,16,17,376,377,378,20,379,21,18,19,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[505,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[95,507,123,124,127,128,186,187,257,267,270,415,421,422,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[62,95,130,131,180,181,182,183,184,199,212,213,214,215,216,249,250,267,268,330,331,0,1,2,3,4,5,6,7,8,9,333,334,335,336,337,338,339,340,10,11,341,342,343,12,13,344,345,362,14,15,16,17,376,377,378,20,379,21,18,19,380,381,433,435,444,472],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,5,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[508,509],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[22,23,24,26,26,27,27,50,51,52,56,108,143,150,151,152,153,154,156,159,200,201,202,203,204,205,206,207,220,225,323,326,327,328,386,388,399,400,401,402,403,404,405,406,409,410,411,425,436,437,439,440,441,442,444,446,447,448,449,450,451,452,453,454,455,456,459,460,483,486,496,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[62,63,95,96,130,131,132,180,181,182,183,184,185,199,200,212,213,214,215,216,249,250,267,268,330,331,0,1,2,3,4,5,6,7,8,9,333,334,335,336,337,338,339,340,10,11,341,342,343,12,13,344,345,351,362,369,14,15,16,17,376,377,378,20,379,21,18,19,380,381,386,433,435,444,447,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[147,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[510,511,95,186,187,270,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[512,202,203,204,225,282,320,405,455,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[338],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[508,14,15,16,17,376,377,378,20,21,18,19,380,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,26,27,27,28,29,30,31,32,33,34,35,36,38,44,45,46,47,48,50,51,56,58,59,60,61,62,63,64,65,66,67,68,69,95,97,99,100,102,105,107,108,109,110,111,112,113,115,116,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,153,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,196,197,198,199,201,208,209,210,211,212,213,214,215,216,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,256,261,262,263,264,265,266,267,268,269,270,271,272,273,307,308,309,310,311,312,313,314,315,316,317,318,319,326,327,328,329,330,331,0,1,2,3,4,5,6,7,9,333,334,335,336,337,338,339,340,10,11,341,343,12,13,344,351,358,360,361,362,363,369,14,15,16,17,376,377,378,20,379,21,18,19,380,381,384,385,386,387,388,390,391,392,394,395,396,397,398,399,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,430,431,432,433,435,436,437,438,439,440,441,444,447,449,453,454,455,456,458,459,460,462,463,464,466,467,468,469,470,471,472,473,474,475,476,483,486,496,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[64,66,67,70,71,72,95,120,121,122,123,124,127,128,129,185,186,187,194,202,203,204,208,217,218,220,223,224,225,226,227,252,255,256,257,265,267,268,269,270,271,272,278,281,282,308,310,312,313,315,316,0,338,351,352,369,370,399,400,401,405,406,409,410,411,412,414,415,416,417,421,422,423,424,437,447,450,452,454,455,459,460,464,466,467,468,469,470,472,473,474,475,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[513,514,123,267,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[226,351,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[147,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":422,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":293,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":417,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":59,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":202,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":385,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests2.UsageTest.wrongArguments":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":212,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":225,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":158,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":439,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":316,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.UsageTest.argumentsOrdered":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":39,"org.easymock.tests.UsageVarargTest.varargIntAccepted":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":78,"org.easymock.tests.ReplayStateInvalidUsageTest.times":104,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":369,"org.easymock.tests2.DependencyTest.testClassMocking":382,"org.easymock.tests2.AnswerTest.answer":427,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":398,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":222,"org.easymock.tests2.UsageTest.strictResetToDefault":413,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":311,"org.easymock.tests2.DelegateToTest.testDelegate":394,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":43,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests.LimitationsTest.mockFinalMethod":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":48,"org.easymock.tests2.DependencyTest.testClassMockingSupport":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":217,"org.easymock.tests2.CaptureTest.testCapture1_2446744":376,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":396,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":98,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":224,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":512,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":81,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":155,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":491,"org.easymock.tests2.UsageTest.niceToStrict":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":229,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests2.ThreadingTest.testChangeDefault":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":403,"org.easymock.tests2.MockBuilderTest.testCreateMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":515,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":114,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":505,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":335,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":21,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":483,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":46,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.MockNameTest.defaultName":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":96,"org.easymock.samples.ExampleTest.voteForRemovals":36,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.UsageConstraintsTest.greaterThan":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":450,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":82,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":149,"org.easymock.samples.ExampleTest.voteForRemoval":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":442,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":74,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":412,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":309,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":310,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":414,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":362,"org.easymock.tests2.CaptureTest.testCapture2_2446744":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":71,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":72,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":454,"org.easymock.tests.MockingTest.testNiceClassMocking":159,"org.easymock.tests.MockingTest.testClassMocking":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":65,"org.easymock.tests2.UsageConstraintsTest.testContains":334,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":328,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":116,"org.easymock.tests.MockTypeTest.fromEasyMockClass":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":435,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":315,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":117,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":426,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":253,"org.easymock.tests.MockClassControlTest.testHashCode":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":493,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":133,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":132,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":448,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":80,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.tests.CapturesMatcherTest.test":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":177,"org.easymock.tests.ReplayStateInvalidCallsTest.times":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":258,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":502,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":203,"org.easymock.tests2.UsageTest.resumeIfFailure":423,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":61,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":516,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":428,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":119,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":11,"org.easymock.tests2.DelegateToTest.testWrongClass":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":250,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":270,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":324,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":480,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":513,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests2.CaptureTest.testCaptureNone":379,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":477,"org.easymock.tests.UsageUnorderedTest.message":95,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":497,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":69,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":102,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.SerializationTest.testClass":386,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":351,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":92,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":476,"org.easymock.tests2.NameTest.nameForMocksControl":469,"org.easymock.tests2.MockedExceptionTest.testMockedException":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":485,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":434,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":232,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":441,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":341,"org.easymock.tests.MockingTest.testTwoMocks":152,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":88,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":479,"org.easymock.samples.ExampleTest.removeNonExistingDocument":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":478,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":361,"org.easymock.tests2.MockBuilderTest.testCreateMockString":411,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":487,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":430,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":496,"org.easymock.samples.ExampleTest.voteAgainstRemoval":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":449,"org.easymock.tests.LimitationsTest.privateConstructor":55,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":326,"org.easymock.tests2.UsageTest.defaultResetToNice":420,"org.easymock.samples.ExampleTest.voteAgainstRemovals":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":445,"org.easymock.tests.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":214,"org.easymock.tests.UsageCallCountTest.tooFewCalls":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":459,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":458,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":432,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.NameTest.nameForNiceMock":468,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":90,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":363,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":85,"org.easymock.tests2.DependencyTest.testInterfaceMocking":384,"org.easymock.samples.ExampleTest.addDocument":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":503,"org.easymock.tests2.DelegateToTest.testStubDelegate":391,"org.easymock.tests2.AnswerTest.stubAnswer":431,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":407,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":425,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":136,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.SerializationTest.test":387,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":377,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.samples.SupportTest.addDocument":29,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":75,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":488,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":73,"org.easymock.tests2.NameTest.nameForMock":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":475,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":242,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":325,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":213,"org.easymock.tests2.NameTest.nameForStrictMock":467,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":400,"org.easymock.tests2.UsageStrictMockTest.range":474,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":492,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":437,"org.easymock.tests.UsageTest.wrongArguments":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":489,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":284,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":148,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":70,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":93,"org.easymock.tests2.UsageConstraintsTest.cmpTo":333,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":429,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":419,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":97,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":123,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":89,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":174,"org.easymock.tests2.CaptureTest.testCapture":509,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":28,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":45,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":166,"org.easymock.tests.LimitationsTest.abstractClass":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":313}}]
