[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,0,1,2,3,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[218],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[8,9,11,13,14,16,62,63,65,69,70,71,72,73,74,77,78,80,81,82,84,85,86,87,88,92,94,95,106,141,142,143,144,145,189,191,192,252,253,254,255,257,258,259,260,281,282,299,301,302,304,327,330,340,346,350,353,355,356,359,361,362,363,364,365,366,367,371,402,403,404,405,406,407,410,414,415,416,463],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[375,376,378,379,380,381,382,383,384,385,394,395,399,400,435,436,437,438,445,446],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98,99,100,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"invocation"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[289,391,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[473,474,43,91,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[477,56,196,197,198,238,355,363,366,431],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[208,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[35,107,108,109,375,376,379,381,382,399,435,436,437,442,443,445,448],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[478,321,322,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[479,353,414,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[4,7,8,9,10,11,12,13,14,15,16,19,20,24,25,26,28,29,30,31,32,33,34,35,39,40,44,47,48,49,51,61,62,63,65,71,72,74,79,84,89,90,91,92,93,94,95,96,97,104,106,107,108,109,110,127,129,130,132,134,139,141,142,143,144,145,154,157,158,159,161,162,0,1,164,165,169,170,172,177,182,189,191,192,193,239,240,241,242,243,244,245,246,257,266,267,268,269,270,271,272,273,274,275,276,277,278,281,282,283,284,285,287,288,289,292,293,294,296,297,298,299,300,301,302,303,304,307,308,309,310,311,314,316,321,322,323,327,330,340,346,350,353,355,356,359,361,362,363,364,365,366,367,371,372,376,379,382,383,384,385,386,388,391,394,395,396,397,398,399,402,403,404,405,406,407,410,414,415,416,424,435,436,437,438,440,441,442,443,444,445,448,454,462,464,469],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[5,5,6,6,9,19,20,53,56,61,62,63,65,134,163,0,1,2,3,187,189,190,194,195,196,197,198,201,480,226,227,228,229,230,231,481,232,304,305,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,402,403,405,406,407,408,410,411,412,413,414,415,416,417,418,431,432,467,468,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[30,36,38,39,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,89,91,92,93,94,95,96,128,131,132,133,154,156,157,160,161,162,193,196,197,198,234,237,238,257,267,269,271,272,274,275,283,284,286,287,288,289,293,294,295,296,297,299,300,301,302,303,307,308,309,310,349,350,351,355,356,358,359,360,362,363,366,367,375,391,403,413,416,418,424,425,454,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[482],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[215,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":376,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":289,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":136,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":196,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":56,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":67,"org.easymock.tests2.UsageConstraintsTest.testNull":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":405,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":275,"org.easymock.tests2.CaptureTest.testPrimitive":438,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":119,"org.easymock.tests2.DependencyTest.testClassMocking":279,"org.easymock.tests2.AnswerTest.answer":311,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":320,"org.easymock.tests2.CaptureTest.testAnd":435,"org.easymock.tests2.UsageTest.strictResetToDefault":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":270,"org.easymock.tests2.DelegateToTest.testDelegate":466,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":150,"org.easymock.tests2.DependencyTest.testClassMockingSupport":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":439,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":318,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":113,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":55,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":477,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":114,"org.easymock.tests.MockingTest.testInterfaceMocking":64,"org.easymock.tests2.CompareToTest.testLessOrEqual":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests2.UsageTest.niceToStrict":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":353,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":389,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":388,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":444,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":27,"org.easymock.tests.MockClassControlTest.testEquals":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":319,"org.easymock.tests.MockNameTest.defaultName":36,"org.easymock.tests2.UsageConstraintsTest.testMatches":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":140,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":416,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":417,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":408,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":284,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":268,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":135,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":461,"org.easymock.tests2.CaptureTest.testCaptureFirst":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":269,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":447,"org.easymock.tests2.UsageTest.moreThanOneArgument":286,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":161,"org.easymock.tests.UsageExpectAndReturnTest.longType":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":146,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":397,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests.MockingTest.testNiceClassMocking":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":362,"org.easymock.tests.MockingTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":479,"org.easymock.tests2.UsageConstraintsTest.testContains":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":155,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":469,"org.easymock.tests2.UsageConstraintsTest.testFind":378,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests.MockTypeTest.fromEasyMockClass":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageExpectAndReturnTest.object":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":274,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":101,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.MockClassControlTest.testHashCode":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":225,"org.easymock.tests2.UsageTest.openCallCountByLastCall":290,"org.easymock.tests.DefaultClassInstantiatorTest.object":226,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":21,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":414,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":346,"org.easymock.tests2.UsageTest.resumeIfFailure":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":138,"org.easymock.tests2.StubTest.stubWithReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":476,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":224,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":312,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":103,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":395,"org.easymock.tests2.DelegateToTest.testWrongClass":464,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":433,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":355,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":473,"org.easymock.tests2.CaptureTest.testCaptureNone":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":100,"org.easymock.tests.UsageUnorderedTest.message":193,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":237,"org.easymock.tests2.CaptureTest.testCapture_2617107":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":222,"org.easymock.tests2.UsageConstraintsTest.any":385,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":118,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":230,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":117,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":424,"org.easymock.tests2.SerializationTest.testClass":321,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.MockedExceptionTest.testMockedException":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":65,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":262,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":402,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":356,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests2.CaptureTest.testCaptureLast":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":367,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":382,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":396,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":400,"org.easymock.samples.ExampleTest.removeNonExistingDocument":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":115,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":228,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":370,"org.easymock.tests2.MockBuilderTest.testCreateMockString":360,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":194,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":314,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":340,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":415,"org.easymock.tests.LimitationsTest.privateConstructor":188,"org.easymock.tests2.UsageConstraintsTest.testNotNull":399,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":467,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.UsageTest.defaultResetToNice":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":30,"org.easymock.tests2.CallbackTest.callback":283,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":411,"org.easymock.tests.UsageTest.openCallCountByLastCall":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageCallCountTest.tooFewCalls":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":474,"org.easymock.tests.MockingTest.testStrictClassMocking":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":365,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":316,"org.easymock.tests.ObjectMethodsTest.testHashCode":235,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":372,"org.easymock.tests2.DependencyTest.testInterfaceMocking":281,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.DelegateToTest.testStubDelegate":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":315,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":304,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":393,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":374,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":431,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":440,"org.easymock.tests2.SerializationTest.test":322,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":482,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.tests2.UsageConstraintsTest.testSame":380,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":332,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":66,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests2.MockedExceptionTest.testRealException":470,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":394,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":350,"org.easymock.tests2.UsageStrictMockTest.range":301,"org.easymock.tests2.UsageConstraintsTest.lessThan":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":336,"org.easymock.tests2.UsageConstraintsTest.testOr":381,"org.easymock.tests.UsageRangeTest.combination":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":403,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":333,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":231,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":160,"org.easymock.tests2.UsageConstraintsTest.cmpTo":386,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.CaptureTest.testCaptureFromStub":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":112,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.UsageConstraintsTest.constraints":375,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests2.ConstraintsToStringTest.containsToString":472,"org.easymock.tests.UsageStrictMockTest.testVerify":97,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":4,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests.LimitationsTest.abstractClass":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":272}}]
