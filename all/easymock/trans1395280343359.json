[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,0,74,1,75,76,2,3,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,4,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,5,6,7,173,174,8,9,175,10,11,176,177,178,179,180,181,182,183,184,185,186,187,187,188,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,12,13,261,262,263,264,265,14,15,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,16,17,18,19,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,20,326,21,22,327],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[328,328,25,26,27,28,29,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,0,74,1,75,76,2,3,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,4,137,138,139,140,141,155,157,158,159,160,161,162,163,172,5,6,7,173,174,8,9,175,10,11,176,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,12,13,261,262,263,264,265,14,15,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,20,326,21,22,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[187,188,329,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[270,271],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[56,180,218,219,268,269,271,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[330,331,332,333,334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[187,188,337,338,339,207,340,341,208,342,343,344,345,346,347,348,349,350,209,351,352,353,354,355,210,356,357,213,217,358,247,359,360,361,362,363,364,329,365,291,366],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[367,92,93,368,369],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[370,371],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[361,366,330,331,332,334,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"parameterType","throwableClass":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,33,34,39,40,46,47,48,49,50,51,52,53,54,55,59,61,62,63,64,65,66,67,68,69,70,71,72,0,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,155,156,157,158,159,160,161,162,163,372,165,172,5,6,7,174,9,11,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,200,202,203,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,252,253,254,255,260,12,261,262,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,16,17,18,19,290,291,292,293,294,295,296,297,298,301,302,303,304,305,306,307,309,310,311,312,313,315,316,317,318,319,320,323,325,20,22,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[373,374,375,23,24,25,26,27,28,29,30,31,376,377,378,379,380,381,382,383,384,385,386,387,388,389,32,33,34,390,35,36,37,391,392,393,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,394,57,58,395,59,60,61,62,396,63,64,65,66,67,68,69,70,71,72,73,0,74,1,75,76,2,3,77,78,79,80,397,81,82,83,84,85,86,87,88,398,399,400,401,402,89,403,90,91,367,92,93,368,369,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,428,429,430,134,135,431,136,432,433,434,4,137,138,139,140,141,435,142,370,436,437,438,371,439,440,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,441,442,443,372,164,165,166,167,168,169,170,171,172,5,6,7,444,445,446,447,448,173,174,8,9,175,10,11,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,449,202,450,451,203,204,205,206,452,453,337,338,339,207,340,341,208,342,343,344,345,346,347,348,349,350,209,351,352,353,354,355,210,356,357,211,212,213,214,454,215,216,217,358,218,455,219,220,221,222,223,456,224,225,226,227,228,229,457,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,359,251,458,360,459,252,253,254,361,255,460,362,256,257,364,258,259,260,12,13,261,262,263,264,265,14,15,266,267,461,462,463,464,465,466,467,268,468,469,269,270,271,272,273,274,275,470,471,472,473,474,276,475,476,477,478,479,480,277,278,279,280,281,282,283,284,285,286,287,288,289,481,16,17,18,19,482,483,484,485,486,290,487,488,489,490,491,492,291,366,493,292,293,294,295,296,297,298,299,300,301,302,303,494,495,304,305,496,306,307,308,497,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,498,324,325,20,326,21,22,327],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[213,217,358,359,360,361,363,364,329,365,499,366],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.ConstructorArgs:60","failures":[213,217,358,359,360,361,363,364,329,365,366],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[222,223,225,227,228,457,239,244,310,312,320],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[60,501,502,74,1,2,3,4,6,7,8,10,13,14,15,21],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[189,190,470,471,472,477,480,482,483,484,489,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[412,98,102,103,105,108,118,122,123,125,128,444,447,448,10,11,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[196,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[379,384,367,368,178,187,187,188,188,201,450,204,205,453,208,209,210,247,250,251,458,459,252,254,255,460,362,257,258,291,366,292],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:163","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[202,231,503],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[56,57,268,306,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[367,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[401,402,89,403,92,93,369,428,429,430,434,142,370,436,437,438,371,440,164,165,166,167,168,169,170,171,172,193,194,195,196,198,199,200,202,451,203,206,452,453,337,207,341,342,343,346,349,351,352,355,211,214,249,461,465,293,294],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[438,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"state","this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[5,10,11,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[234,241,246,506],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[202,220,222,229,231,234,237,240,241,243,246,506,507,503,508,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[187,188,450,247,359,360,361,362,364,291,366,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[149,199,236,262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":223,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":262,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":189,"org.easymock.tests2.DelegateToTest.testReturnException":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":166,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":481,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":48,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":384,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":286,"org.easymock.tests2.CaptureTest.testPrimitive":313,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":113,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":67,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":268,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":275,"org.easymock.tests2.CaptureTest.testAnd":310,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":381,"org.easymock.tests2.UsageTest.strictResetToDefault":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":448,"org.easymock.tests2.DelegateToTest.testDelegate":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":109,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":72,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":442,"org.easymock.tests2.CaptureTest.testCapture1_2446744":314,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":273,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.tests.UsageThrowableTest.throwError":38,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":383,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":163,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":357,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests2.CompareToTest.testLessOrEqual":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":95,"org.easymock.tests2.UsageTest.niceToStrict":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":252,"org.easymock.tests2.MockBuilderTest.testCreateMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":103,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":46,"org.easymock.tests.UsageOverloadedMethodTest.overloading":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":355,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":233,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":319,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests.MockClassControlTest.testEquals":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":274,"org.easymock.tests2.CaptureTest.testCaptureAll":311,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.samples.ExampleTest.voteForRemovals":184,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":194,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":44,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":439,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":206,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.samples.ExampleTest.voteForRemoval":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":201,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":279,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":496,"org.easymock.tests2.CaptureTest.testCaptureFirst":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":280,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":300,"org.easymock.tests2.CaptureTest.testCapture2_2446744":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":30,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":112,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":441,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":31,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":43,"org.easymock.tests.MockingTest.testNiceClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.MockingTest.testClassMocking":429,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":24,"org.easymock.tests2.UsageConstraintsTest.testContains":232,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":294,"org.easymock.tests2.UsageConstraintsTest.testFind":224,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests.MockTypeTest.fromEasyMockClass":382,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":219,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":285,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":37,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":445,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.MockClassControlTest.testHashCode":169,"org.easymock.tests2.EasyMockSupportTest.testVerify":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":348,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":446,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":498,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":263,"org.easymock.tests.DefaultClassInstantiatorTest.object":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":35,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":100,"org.easymock.tests.CapturesMatcherTest.test":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":376,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":420,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":106,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":426,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":468,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":400,"org.easymock.tests.UsageExpectAndThrowTest.object":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DelegateToTest.testWrongClass":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":187,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":466,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":318,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":351,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":28,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":193,"org.easymock.tests2.CaptureTest.testCapture_2617107":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":140,"org.easymock.tests2.UsageConstraintsTest.any":230,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests2.StubTest.stub":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndThrowTest.longType":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":484,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":486,"org.easymock.tests2.MockedExceptionTest.testMockedException":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":341,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":455,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":255,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":200,"org.easymock.tests2.CompareToTest.testCompareEqual":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":482,"org.easymock.tests2.CaptureTest.testCaptureLast":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":443,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":228,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.MockingTest.testTwoMocks":430,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":102,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.samples.ExampleTest.removeNonExistingDocument":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":488,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ConstraintsToStringTest.andToString":500,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":299,"org.easymock.tests2.MockBuilderTest.testCreateMockString":258,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":164,"org.easymock.tests.UsageExpectAndThrowTest.floatType":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":342,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.samples.ExampleTest.voteAgainstRemoval":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":205,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests2.UsageTest.defaultResetToNice":265,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":483,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":296,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":450,"org.easymock.tests.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":139,"org.easymock.tests.UsageCallCountTest.tooFewCalls":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":49,"org.easymock.tests.UsageThrowableTest.throwCheckedException":42,"org.easymock.tests.MockingTest.testStrictClassMocking":428,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":487,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests2.CompareToTest.testGreateOrEqual":508,"org.easymock.tests.ObjectMethodsTest.testHashCode":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":334,"org.easymock.tests2.NameTest.nameForNiceMock":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":332,"org.easymock.samples.ExampleTest.addDocument":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":352,"org.easymock.tests2.DelegateToTest.testStubDelegate":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.stubAnswer":270,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":460,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":291,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":461,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":315,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":226,"org.easymock.samples.SupportTest.addDocument":191,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":343,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":108,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":417,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":465,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":251,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":333,"org.easymock.tests2.CaptureTest.testCaptureRightOne":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":347,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":227,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":344,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":29,"org.easymock.tests2.UsageConstraintsTest.cmpTo":231,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.CaptureTest.testCaptureFromStub":321,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":458,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":27,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":186,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests2.CompareToTest.testGreateThan":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":65,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":66,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283}}]
