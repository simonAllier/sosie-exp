[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[47,5,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[6,19,20,21,25,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[36,53,42,43,54,55,44,45,56,57,58,59,60,61,62],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[64,65,66,67,68,43,54,55,44,56,57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,66,98,99,67,36,100,101,102,103,104,105,106,107,53,108,109,110,111,112,113,114,115,116,117,118,119,42,43,120,121,122,123,124,125,126,127,45,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,0,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,61,61,62,62,163,164,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[166,167,168,169,170,171],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,66,98,99,67,36,100,101,102,103,104,105,106,107,53,108,109,110,111,112,113,114,172,117,118,119,42,43,120,173,121,122,123,124,125,126,127,45,128,129,174,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,0,145,146,147,1,148,149,150,151,152,153,154,175,155,156,157,158,159,160,161,162,61,61,62,62,163,164,165],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[166,168,176,169,177,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[48],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[178,179,8,180,181,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[182,183,184,185,27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[186,187,188],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[189,190,191,192,193,194,195,196,197,198,199,200,201,23,202],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[7,203,8,9,180,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[204,166,167,168,169,186,205,206,47,207,208,209,5,210,211,6,212,213,214,215,216,217,187,218,46,188,219,220,51,221,222,223,224,225,189,226,227,228,229,230,190,191,231,232,233,7,234,203,235,178,179,8,9,180,236,237,238,10,239,240,241,242,243,244,245,246,247,248,249,182,250,97,66,99,67,36,251,100,101,102,252,103,104,105,107,109,111,253,254,255,256,117,118,119,257,258,42,120,124,125,129,130,259,260,11,261,192,262,263,264,265,266,267,268,12,13,269,270,271,272,273,14,15,16,17,18,135,136,137,274,275,193,194,276,277,195,196,278,279,280,141,19,20,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,143,311,197,198,312,313,314,315,316,317,318,319,21,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,4,337,338,199,22,339,200,340,341,342,343,344,345,346,347,348,349,350,150,151,23,175,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,24,25,26,27,28,372,171,373,374,375,376,377],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[223,229,274,277,197,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[204,167,169,186,205,206,47,207,208,209,5,210,211,6,213,214,215,216,217,187,218,46,188,219,378,220,51,221,222,223,224,225,226,227,228,229,190,191,232,7,234,203,235,178,179,8,9,180,236,238,10,239,240,241,248,249,250,102,104,110,111,112,253,255,256,379,380,381,382,383,384,385,386,387,121,124,129,259,260,11,261,192,262,263,12,13,14,15,16,17,18,274,275,276,277,195,196,278,279,280,19,285,286,289,291,292,293,294,296,297,298,299,301,302,303,304,307,308,310,388,311,197,198,312,21,322,323,324,325,326,327,328,329,330,331,337,338,199,22,339,200,340,341,342,343,344,345,346,347,348,349,350,23,352,353,356,358,359,360,361,363,364,365,366,368,369,370,371,24,25,26,28,389,372,171,373,374,376,377,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[147,390,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":135,"org.easymock.tests.MockClassControlTest.testToString":155,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":211,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":283,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":162,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":385,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":160,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":115,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageTest.moreThanOneArgument":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":196,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests2.AnswerTest.answer":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":267,"org.easymock.tests2.CaptureTest.testAnd":233,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":314,"org.easymock.tests2.DelegateToTest.testDelegate":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests.LimitationsTest.mockFinalMethod":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":3,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":265,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":183,"org.easymock.tests.UsageThrowableTest.throwError":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":58,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":95,"org.easymock.samples.PartialClassMockTest.testGetArea":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":82,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":390,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.MockClassControlTest.testEquals":159,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":376,"org.easymock.tests.UsageVarargTest.allKinds":331,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":311,"org.easymock.samples.BasicClassMockTest.testPrintContent":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":349,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":148,"org.easymock.samples.ExampleTest.voteForRemoval":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":113,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":381,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":382,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":359,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests.GenericTest.testBridgedEquals":153,"org.easymock.tests.UsageExpectAndReturnTest.longType":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":379,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":388,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":348,"org.easymock.tests.MockingTest.testNiceClassMocking":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testClassMocking":133,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":173,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":119,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests.UsageExpectAndReturnTest.object":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":38,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests.MockClassControlTest.testHashCode":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":264,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":387,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":346,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":93,"org.easymock.tests2.UsageTest.resumeIfFailure":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":60,"org.easymock.samples.SupportTest.voteForRemovals":389,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":149,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":185,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":49,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.UsageStrictMockTest.range":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":71,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":282,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":52,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":198,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":88,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":163,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests2.UsageConstraintsTest.any":6,"org.easymock.tests2.StubTest.stub":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":33,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":147,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests2.NameTest.nameForMocksControl":247,"org.easymock.tests2.MockedExceptionTest.testMockedException":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":76,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":277,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":136,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":219,"org.easymock.tests.MockingTest.testTwoMocks":134,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":87,"org.easymock.samples.ExampleTest.voteAgainstRemoval":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":350,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":367,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":53,"org.easymock.tests.UsageTest.openCallCountByLastCall":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":26,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":284,"org.easymock.tests.UsageThrowableTest.throwCheckedException":347,"org.easymock.tests.MockingTest.testStrictClassMocking":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.NameTest.nameForNiceMock":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":39,"org.easymock.samples.ExampleTest.addDocument":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":89,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.AnswerTest.stubAnswer":255,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.floatType":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":218,"org.easymock.tests.UsageThrowableTest.noUpperLimit":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":178,"org.easymock.tests2.SerializationTest.test":251,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":79,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests2.NameTest.nameForMock":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":364,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":57,"org.easymock.tests2.UsageStrictMockTest.differentMethods":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":315,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":59,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.NameTest.nameForStrictMock":245,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":121,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":40,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":83,"org.easymock.tests2.CaptureTest.testCaptureRightOne":236,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests2.MockBuilderTest.testWithConstructor":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":80,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":365,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":122,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":366,"org.easymock.tests2.CaptureTest.testCapture":181,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":377,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":179,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":384,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323}}]
