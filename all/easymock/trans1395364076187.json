[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:53","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[245],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[33,35,36,157,158,164,165,228,229,230,231,264,265,267,268,304,305,306,403,405,408,409,509],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[1,2,3,4,6,9,10,12,15,20,21,28,30,33,35,36,38,39,40,41,47,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,86,87,90,91,92,93,94,95,96,97,100,101,102,104,105,106,107,108,109,110,112,115,117,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,147,148,149,155,156,157,159,161,162,163,166,167,168,169,170,171,177,184,185,186,187,189,190,191,193,194,199,202,212,218,233,234,235,237,238,240,241,242,243,244,246,250,251,252,253,254,265,267,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,304,305,306,307,308,339,340,342,349,350,351,368,402,403,406,407,410,423,424,425,426,427,431,432,433,434,435,436,437,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,488,489,490,491,492,493,502,504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[65,66],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,6,8,9,9,10,10,12,15,20,21,28,30,33,35,36,47,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,112,116,117,118,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,146,148,149,153,155,156,157,159,161,162,163,166,167,168,169,170,171,177,184,185,186,187,189,190,191,193,194,199,202,212,218,232,233,234,235,236,237,238,239,240,246,248,250,251,252,253,254,265,267,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,328,334,339,340,342,346,347,348,349,350,351,368,372,384,399,400,401,402,403,406,407,410,423,424,425,426,427,428,430,431,432,433,434,435,436,437,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[156],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[56,57,60,62,63,65,75,80,83,85,93],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[1,2,3,4,6,8,9,9,10,10,12,15,20,21,28,30,31,33,34,35,36,37,38,39,40,41,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,112,115,116,117,118,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,177,184,185,186,187,189,190,191,193,194,199,202,212,218,232,233,234,235,236,237,238,239,240,241,242,243,244,246,248,250,251,252,253,254,262,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,304,305,306,307,308,309,310,328,334,338,339,340,342,346,347,348,349,350,351,368,372,399,400,401,402,403,404,405,406,407,408,409,410,422,423,424,425,426,427,428,430,431,432,433,434,435,436,437,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[9,10,121,122,510,511,512,513,151,514,515,516,517,518,519,520,521,522,0,186,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":339,"org.easymock.tests.MockClassControlTest.testToString":393,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":227,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":465,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":509,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":21,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":459,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":435,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":484,"org.easymock.tests.UsageTest.moreThanOneArgument":403,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":494,"org.easymock.tests.UsageTest.argumentsOrdered":409,"org.easymock.tests.UsageVarargTest.varargIntAccepted":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":423,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":427,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":443,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests2.DependencyTest.testClassMocking":18,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":41,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":360,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":512,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":498,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":480,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":464,"org.easymock.tests2.DependencyTest.testClassMockingSupport":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":309,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":39,"org.easymock.tests.UsageThrowableTest.throwError":486,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":362,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":254,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":446,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":341,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":466,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests2.ThreadingTest.testChangeDefault":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":474,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":501,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":520,"org.easymock.tests.UsageOverloadedMethodTest.overloading":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":414,"org.easymock.tests.MockClassControlTest.testEquals":397,"org.easymock.tests2.EasyMockSupportClassTest.testAll":199,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":482,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":40,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests.MockNameTest.defaultName":429,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":422,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":463,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":492,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":447,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":261,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":439,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":430,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":421,"org.easymock.tests.GenericTest.testBridgedEquals":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":521,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":518,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":377,"org.easymock.tests.UsageExpectAndReturnTest.longType":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":460,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":483,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":428,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":481,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests.UsageCallCountTest.tooManyCalls":378,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":470,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":491,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":345,"org.easymock.tests.MockingTest.testClassMocking":337,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":351,"org.easymock.tests.MockTypeTest.fromEasyMockClass":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":416,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":522,"org.easymock.tests.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":495,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":122,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":504,"org.easymock.tests.MockClassControlTest.testHashCode":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":173,"org.easymock.tests2.EasyMockSupportTest.testVerify":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":209,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":38,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":103,"org.easymock.tests.UsageVarargTest.varargCharAccepted":415,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.DefaultClassInstantiatorTest.object":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":499,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":172,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":445,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":395,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":471,"org.easymock.tests.ReplayStateInvalidCallsTest.times":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":218,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":240,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":513,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":195,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":477,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":98,"org.easymock.tests.UsageExpectAndThrowTest.object":475,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":449,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":436,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":437,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":26,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":519,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":476,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":408,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":441,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":222,"org.easymock.tests.UsageUnorderedTest.message":485,"org.easymock.tests.UsageVerifyTest.twoReturns":306,"org.easymock.tests.UsageVarargTest.varargByteAccepted":420,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":213,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":375,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.UsageExpectAndThrowTest.longType":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":259,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":385,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":193,"org.easymock.tests.LimitationsTest.mockNativeMethod":368,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":44,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":457,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":223,"org.easymock.tests2.NameTest.nameForMocksControl":231,"org.easymock.tests2.MockedExceptionTest.testMockedException":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":201,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":469,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":29,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":340,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":42,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":338,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":453,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":473,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":226,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":49,"org.easymock.tests.UsageStrictMockTest.differentMethods":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":174,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":225,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":257,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":391,"org.easymock.tests.UsageExpectAndThrowTest.floatType":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":203,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":100,"org.easymock.tests.UsageVerifyTest.twoThrows":305,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":517,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":493,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":168,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.differentLength":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":43,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":113,"org.easymock.tests.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":433,"org.easymock.tests.UsageCallCountTest.tooFewCalls":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":490,"org.easymock.tests.MockingTest.testStrictClassMocking":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":455,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":230,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":450,"org.easymock.tests2.DependencyTest.testInterfaceMocking":20,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":265,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":419,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests.UsageThrowableTest.noUpperLimit":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":22,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests2.SerializationTest.test":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":256,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":272,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":440,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":204,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":180,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":343,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":438,"org.easymock.tests2.NameTest.nameForMock":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":515,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":479,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":171,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":432,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests2.NameTest.nameForStrictMock":229,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":25,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":258,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":444,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":176,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":208,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":221,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":405,"org.easymock.tests2.MockBuilderTest.testWithConstructor":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":205,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":418,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":376,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":458,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":99,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":404,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":454,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":374,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":277,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":426,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
