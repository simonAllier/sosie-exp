[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[18,16,19,20,21,22,23,24,1,2,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[18,16,19,20,21,22,23,24,1,2,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[25,26,27,19,28,20,29,30,31,32,33,24,34,35,11,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[25,26,18,16,70,27,19,28,20,21,71,22,72,73,29,74,30,31,75,32,33,23,76,77,78,79,24,34,35,80,81,82,83,84,85,86,1,87,2,3,4,5,6,7,88,8,10,11,89,12,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,36,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,37,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,57,223,224,58,59,60,61,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,38,39,40,41,42,43,44,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,45,46,62,310,47,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,48,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,49,50,51,52,53,63,64,65,66,67,68,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,54,69,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,55,56,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[19],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[72,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[126,133,283,286],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[290,291,295],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[25,32,79,495],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[25,26,18,16,27,19,28,20,21,71,72,73,29,74,30,31,75,32,33,23,76,77,78,79,24,34,35,81,82,83,85,86,1,87,2,3,4,5,6,7,88,8,10,11,89,12,90,91,92,93,95,96,97,99,102,103,104,105,106,107,108,109,110,111,117,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,36,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,172,173,174,182,189,37,190,191,192,196,199,209,215,218,221,222,57,223,224,58,59,60,61,233,235,239,240,241,243,246,247,249,259,260,263,264,265,266,267,268,269,270,271,272,273,274,38,39,40,41,42,43,44,45,46,62,310,47,311,312,313,314,315,316,317,318,322,323,325,332,333,334,335,336,337,338,339,340,341,48,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,369,371,372,373,374,375,376,377,378,379,49,50,51,52,53,63,64,65,66,67,68,380,382,383,384,386,387,390,395,396,397,398,402,403,404,405,407,408,409,410,411,412,413,414,54,69,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,479,55,56,480,481,482,483,484,485,487,488,489,490,491,492,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[30,77,35,17],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[109,110,111,497],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[16,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[498],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[30,77,35,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[109,218,219,242,245,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[36,144,145,149,263,316,317,318,48,343,344,372,508,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":371,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":489,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":64,"org.easymock.tests.MockingTest.testPartialClassMocking":322,"org.easymock.tests.MockClassControlTest.testToString":420,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":250,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":347,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":508,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":45,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":280,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":366,"org.easymock.tests.UsageTest.moreThanOneArgument":372,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":449,"org.easymock.tests.UsageTest.argumentsOrdered":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests.ReplayStateInvalidUsageTest.times":306,"org.easymock.tests2.DependencyTest.testClassMocking":137,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":108,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":277,"org.easymock.tests2.UsageTest.strictResetToDefault":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":382,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":453,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":362,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.DependencyTest.testClassMockingSupport":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":106,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":279,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":217,"org.easymock.samples.PartialClassMockTest.testGetArea":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":301,"org.easymock.tests.MockingTest.testInterfaceMocking":324,"org.easymock.tests2.CompareToTest.testLessOrEqual":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":392,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":13,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":356,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":387,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":437,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":74,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests.MockClassControlTest.testEquals":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":107,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests.MockNameTest.defaultName":478,"org.easymock.tests2.UsageConstraintsTest.testMatches":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":298,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":414,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":316,"org.easymock.samples.BasicClassMockTest.testPrintContent":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":381,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":166,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":402,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":63,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":433,"org.easymock.tests2.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":413,"org.easymock.tests.GenericTest.testBridgedEquals":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":337,"org.easymock.tests.UsageExpectAndReturnTest.longType":429,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":365,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":38,"org.easymock.tests.UsageCallCountTest.tooManyCalls":338,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.MockingTest.testNiceClassMocking":328,"org.easymock.tests.MockingTest.testClassMocking":320,"org.easymock.tests2.UsageConstraintsTest.testContains":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.object":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":408,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":379,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":450,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":442,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":386,"org.easymock.tests.MockClassControlTest.testHashCode":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":113,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":206,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":451,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":232,"org.easymock.tests.UsageVarargTest.varargCharAccepted":407,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":289,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":14,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":255,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":112,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":443,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":415,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":215,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":66,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.samples.SupportTest.voteForRemovals":491,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":359,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":476,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":100,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":448,"org.easymock.tests.UsageExpectAndThrowTest.object":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":55,"org.easymock.tests.UsageStrictMockTest.range":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":230,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":193,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":308,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":393,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":263,"org.easymock.tests.UsageVerifyTest.twoReturns":318,"org.easymock.tests.UsageVarargTest.varargByteAccepted":412,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":210,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":492,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":287,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":72,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":65,"org.easymock.tests.UsageExpectAndThrowTest.longType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":304,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":445,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":198,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":376,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.CompareToTest.testNotComparable":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.CompareToTest.testCompareEqual":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":355,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":302,"org.easymock.tests.UsageStrictMockTest.differentMethods":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":114,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":200,"org.easymock.tests.UsageExpectAndThrowTest.floatType":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":220,"org.easymock.tests.UsageVerifyTest.twoThrows":317,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":173,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":441,"org.easymock.tests.UsageVarargTest.differentLength":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.UsageConstraintsTest.equals":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":169,"org.easymock.tests.UsageTest.openCallCountByLastCall":375,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.MockingTest.testStrictClassMocking":319,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":95,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":104,"org.easymock.tests.ObjectMethodsTest.testHashCode":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.NameTest.nameForNiceMock":253,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":411,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":218,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":225,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":427,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.samples.SupportTest.addDocument":490,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":94,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":201,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":326,"org.easymock.tests2.NameTest.nameForMock":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":438,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":361,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":383,"org.easymock.tests2.MockedExceptionTest.testRealException":61,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":309,"org.easymock.tests2.NameTest.nameForStrictMock":252,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":509,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":293,"org.easymock.tests.ErrorMessageTest.testGetters":510,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":205,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":161,"org.easymock.tests.UsageTest.wrongArguments":374,"org.easymock.tests2.MockBuilderTest.testWithConstructor":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":202,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":336,"org.easymock.tests2.UsageConstraintsTest.cmpTo":73,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":101,"org.easymock.tests2.CompareToTest.testLessThan":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":373,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":440,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests2.ConstraintsToStringTest.notToString":496,"org.easymock.tests.UsageStrictMockTest.testVerify":346,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":432,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":52,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130}}]
