[{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,20,60,61,62,63,64,65,66,67,68,0,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,3,145,146,147,148,149,150,151,152,4,5,153,154,6,7,155,156,157,158,159,160,161,162,163,164,165,166,167,8,168,169,9,170,171,10,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,16,17,18,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,11,430,431,432,433,434,12,13,435,436,437,438,439,440,14,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,473,479,491],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[276,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:153","failures":[94,141,156,157,158,159,160,161,333,334,335,336],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[295,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[142,200,207,234,449],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,94,120,121,122,131,133,134,135,136,137,138,141,142,2,151,154,156,157,158,159,160,161,165,220,248,249,250,333,334,335,336,427,433,450],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[21,22,23,24,25,26,27,29,30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,20,61,64,65,66,0,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,3,151,152,5,153,154,6,7,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,9,170,171,10,172,173,174,178,179,181,201,207,209,211,212,213,214,216,217,218,219,220,221,222,223,224,225,19,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,267,269,270,272,273,274,275,276,277,279,283,284,285,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,310,313,323,329,332,333,334,335,336,337,338,339,340,341,342,16,17,18,359,360,361,362,363,364,365,366,367,368,369,370,371,377,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,405,409,411,413,416,427,428,429,11,430,431,432,433,434,12,13,435,436,437,438,439,440,14,441,442,447,448,449,450,456,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[97,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[500,501],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","sourceCode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[313],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,34,93,139,140,143,170,185,189,190,199,204,221,222,223,224,225,232,19,244,245,246,247,263,264,299,439,450,463,464,468,469,470,471,477,479,480,482,483,489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[502,288,290,291,292,293,294,295,297,503,298,299,301],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[504,505,4,9,506,507],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[236,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[502,288,290,291,292,293,294,295,297,503,298,299,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[481],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[21,33,33,34,34,35,36,64,65,66,101,124,145,148,177,178,179,181,267,272,273,275,276,277,278,279,282,283,284,285,310,313,323,329,335,16,18,347,352,353,384,385,386,387,389,390,402,404,405,406,409,410,411,413,415,416,419,421,496],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[0,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,3,151,152,4,5,153,154,6,7,155,156,157,158,159,160,161,162,163,164,165,166,167,8,168,169,9,170,171,10,172,173,174,177,178,179,181,201,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,232,233,234,235,236,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,267,269,270,272,273,274,275,276,277,278,279,282,283,284,285,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,310,313,323,329,332,333,334,335,336,337,338,339,340,341,342,16,17,18,359,360,361,362,363,364,365,366,367,368,369,370,371,377,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,405,409,410,411,413,415,416,421,427,428,429,11,430,431,432,433,434,12,13,435,436,437,438,439,440,14,441,442,443,444,445,446,449,450,456,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[23,164,396,398,400],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[512,502,289,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":466,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":195,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":431,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":37,"org.easymock.tests2.DelegateToTest.testReturnException":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":157,"org.easymock.tests.MockingTest.testPartialClassMocking":178,"org.easymock.tests.MockClassControlTest.testToString":125,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":511,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":38,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":113,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":148,"org.easymock.tests2.UsageConstraintsTest.testNull":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":275,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":346,"org.easymock.tests2.CaptureTest.testPrimitive":291,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":223,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":96,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.ReplayStateInvalidUsageTest.times":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":377,"org.easymock.tests2.AnswerTest.answer":337,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":446,"org.easymock.tests2.CaptureTest.testAnd":288,"org.easymock.tests2.UsageTest.strictResetToDefault":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":363,"org.easymock.tests2.DelegateToTest.testDelegate":400,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":269,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":444,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":234,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":147,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":331,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.MockingTest.testInterfaceMocking":180,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":59,"org.easymock.tests2.UsageTest.niceToStrict":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":39,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":185,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":409,"org.easymock.tests2.MockBuilderTest.testCreateMock":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":47,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":111,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":328,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":500,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":478,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":254,"org.easymock.tests.MockClassControlTest.testEquals":129,"org.easymock.tests2.EasyMockSupportClassTest.testAll":310,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":117,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests.MockNameTest.defaultName":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":232,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests.UsageVarargTest.allKinds":262,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":118,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.UsageConstraintsTest.greaterThan":482,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":90,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":110,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":286,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":303,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":417,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":278,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":427,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":361,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":156,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":362,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":429,"org.easymock.tests2.CaptureTest.testCapture2_2446744":300,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":203,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":261,"org.easymock.tests.GenericTest.testBridgedEquals":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":216,"org.easymock.tests.UsageExpectAndReturnTest.longType":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":359,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":419,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":487,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":385,"org.easymock.tests.MockingTest.testNiceClassMocking":184,"org.easymock.tests.MockingTest.testClassMocking":176,"org.easymock.tests2.UsageConstraintsTest.testContains":477,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":210,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":335,"org.easymock.tests2.UsageConstraintsTest.testFind":468,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":220,"org.easymock.tests.MockTypeTest.fromEasyMockClass":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":495,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":367,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":229,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":97,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.MockClassControlTest.testHashCode":128,"org.easymock.tests2.EasyMockSupportTest.testVerify":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":320,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":443,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":492,"org.easymock.tests.UsageVarargTest.varargCharAccepted":255,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":102,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":345,"org.easymock.tests2.CaptureTest.testCaptureMultiple":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastCall":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":248,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":227,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.CapturesMatcherTest.test":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":329,"org.easymock.tests2.UsageTest.resumeIfFailure":435,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":159,"org.easymock.tests2.StubTest.stubWithReturnValue":450,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":422,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":207,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":338,"org.easymock.tests.UsageExpectAndThrowTest.object":48,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":62,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":485,"org.easymock.tests2.DelegateToTest.testWrongClass":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":425,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":20,"org.easymock.tests2.CaptureTest.testCaptureNone":296,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":260,"org.easymock.tests2.ThreadingTest.testThreadSafe":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":230,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":205,"org.easymock.tests2.UsageConstraintsTest.any":475,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":238,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":440,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":267,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":442,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":494,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":42,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":413,"org.easymock.tests.MockingTest.testNicePartialClassMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":277,"org.easymock.tests2.CaptureTest.testCaptureLast":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":390,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":486,"org.easymock.tests.MockingTest.testTwoMocks":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":490,"org.easymock.samples.ExampleTest.removeNonExistingDocument":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":304,"org.easymock.tests2.MockBuilderTest.testCreateMockString":421,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":123,"org.easymock.tests.UsageExpectAndThrowTest.floatType":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":498,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":323,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":196,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":284,"org.easymock.tests.LimitationsTest.privateConstructor":266,"org.easymock.tests2.UsageConstraintsTest.testNotNull":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":333,"org.easymock.tests2.UsageTest.defaultResetToNice":434,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":197,"org.easymock.tests.UsageVarargTest.differentLength":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.CallbackTest.callback":332,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":280,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":141,"org.easymock.tests.UsageCallCountTest.tooFewCalls":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":388,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":342,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":354,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":349,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":325,"org.easymock.tests2.DelegateToTest.testStubDelegate":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.stubAnswer":341,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests.UsageVarargTest.varargLongAccepted":259,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":194,"org.easymock.tests.UsageExpectAndReturnTest.floatType":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":496,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":464,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":501,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests2.UsageConstraintsTest.testSame":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.samples.SupportTest.addDocument":30,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":315,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":182,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":441,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":92,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":243,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":405,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":491,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":350,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":360,"org.easymock.tests2.CaptureTest.testCaptureRightOne":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":319,"org.easymock.tests2.UsageConstraintsTest.testOr":471,"org.easymock.tests.UsageRangeTest.combination":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":273,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":215,"org.easymock.tests2.UsageConstraintsTest.cmpTo":476,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":188,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":433,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":233,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":406,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":83,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests2.UsageConstraintsTest.constraints":465,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":174,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":32,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":75,"org.easymock.tests.LimitationsTest.abstractClass":265,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":365}}]
