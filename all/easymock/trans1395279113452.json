[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:360","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,6,29,30,31],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,13,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,41,41,42,42,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[102,103,104,105,106,107],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[14,109,110,111,102,103,112,113,104,114,115,17,116,117,118,105,119,106,120,121,122,107,123,124,125,21,126],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[127,128,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[79,80,41,42,96],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[102,103,104,105,106,107],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[130,131,132,133,134,135,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[137,60,138,61],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[139,140,141],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[109,110,44,45,46,0,111,154,155,156,157,158,159,160,161,162,163,164,165,166,104,114,167,115,17,168,48,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,49,50,54,97,195,196,197,198,199,200,201,202,203,204,205,206,59,98,207,208,124,209,125,21,210,60,138,61,211,212,108,2,3,213,4,5,7,8,9,214,10,215,216,217,11,218,219,220,221,222,12,223,224,225,62,63,64,65,226,66,67,71,73,74,77,227,228,229,230,231,232,233,234,99,235,236,237,238,239,240,241,242,243,244,245,246,247,248,78,79,80,81,82,83,249,84,85,86,88,91,250,251,252,253,94,95,254,96,255,101,256,257,258,259,260,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[262,133,134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[14,109,110,44,45,46,0,263,264,265,266,267,268,269,270,271,1,272,111,154,155,156,157,158,273,159,160,161,162,163,164,165,16,274,275,276,277,166,104,114,167,115,17,168,278,279,280,281,282,283,284,285,286,287,288,48,169,170,171,172,173,174,175,176,177,178,179,180,289,290,291,181,182,292,183,293,294,295,296,184,297,298,299,300,185,301,302,303,304,305,118,105,186,18,19,187,188,189,306,307,20,190,191,192,308,193,194,49,50,309,310,311,312,313,314,129,315,316,317,318,319,320,321,322,323,324,325,54,326,327,328,329,330,331,332,55,56,57,58,333,334,335,97,195,196,197,336,337,338,198,199,339,200,340,341,342,343,201,344,345,346,347,202,348,349,350,351,203,204,352,205,206,59,98,207,353,208,124,209,125,21,210,60,138,61,354,22,23,211,24,212,25,26,108,2,3,213,27,4,355,28,5,356,6,7,8,9,214,10,215,29,357,216,217,11,218,219,220,221,358,222,12,223,224,225,62,63,64,65,226,66,67,359,360,361,362,68,69,71,72,73,74,75,13,76,363,364,77,365,366,367,227,228,126,229,230,231,30,31,368,232,233,369,234,99,235,370,100,371,372,373,374,236,237,238,239,375,240,241,242,243,244,245,376,377,246,378,379,380,381,382,247,248,78,79,80,81,82,83,249,84,85,86,87,88,89,90,91,92,250,251,252,253,94,95,254,41,41,42,42,96,255,101,256,257,258,259,383,260,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[384,385,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[76,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,313,314,129,315,316,318,319,320,321,322,323],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":211,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":254,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":130,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.UsageConstraintsTest.testNull":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":12,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":239,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":289,"org.easymock.tests.UsageTest.moreThanOneArgument":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":286,"org.easymock.tests.UsageTest.argumentsOrdered":188,"org.easymock.tests.UsageVarargTest.varargIntAccepted":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":127,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":392,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":236,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":116,"org.easymock.tests2.CaptureTest.testCapture1_2446744":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":169,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":129,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":288,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":395,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests2.CompareToTest.testLessOrEqual":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":47,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":386,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":152,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":296,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":355,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests2.CaptureTest.testCaptureAll":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":287,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":163,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.samples.BasicClassMockTest.testPrintContent":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests2.UsageConstraintsTest.greaterThan":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":396,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":388,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.CaptureTest.testCaptureFirst":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":218,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":341,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":193,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":284,"org.easymock.tests.UsageCallCountTest.tooManyCalls":194,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":139,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":16,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":367,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":131,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":142,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":140,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":15,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests.UsageVarargTest.varargCharAccepted":157,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests2.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":172,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":394,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":293,"org.easymock.tests.ReplayStateInvalidCallsTest.times":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":401,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":121,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests2.UsageTest.resumeIfFailure":369,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":107,"org.easymock.samples.SupportTest.voteForRemovals":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":298,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":128,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":8,"org.easymock.tests2.DelegateToTest.testWrongClass":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":325,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":297,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":102,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":390,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests.UsageUnorderedTest.message":111,"org.easymock.tests.UsageVerifyTest.twoReturns":110,"org.easymock.tests.UsageVarargTest.varargByteAccepted":161,"org.easymock.tests2.ThreadingTest.testThreadSafe":380,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":192,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":94,"org.easymock.tests2.CaptureTest.testCapture_2617107":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests2.StubTest.stub":378,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":150,"org.easymock.tests2.MockedExceptionTest.testMockedException":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CompareToTest.testCompareEqual":35,"org.easymock.tests2.CaptureTest.testCaptureLast":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":405,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":9,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":295,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":29,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":143,"org.easymock.tests2.ConstraintsToStringTest.andToString":122,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":5,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":235,"org.easymock.tests.UsageVerifyTest.twoThrows":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":363,"org.easymock.tests2.UsageTest.defaultResetToNice":368,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests.UsageVarargTest.differentLength":273,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":64,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":226,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":100,"org.easymock.tests2.CompareToTest.testGreateOrEqual":36,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":133,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":399,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":132,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.DelegateToTest.testStubDelegate":352,"org.easymock.tests2.AnswerTest.stubAnswer":370,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests.UsageVarargTest.varargLongAccepted":160,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.tests2.ConstraintsToStringTest.orToString":119,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":170,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":6,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":240,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":338,"org.easymock.samples.SupportTest.addDocument":252,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":387,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests2.MockedExceptionTest.testRealException":365,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":112,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":393,"org.easymock.tests2.UsageConstraintsTest.lessThan":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageTest.wrongArguments":186,"org.easymock.tests2.MockBuilderTest.testWithConstructor":38,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":346,"org.easymock.tests.UsageVarargTest.varargShortAccepted":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":397,"org.easymock.tests2.CompareToTest.testLessThan":33,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":376,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":403,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":347,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests2.ConstraintsToStringTest.notToString":120,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":166,"org.easymock.tests2.CompareToTest.testGreateThan":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":267,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":340,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":221}}]
