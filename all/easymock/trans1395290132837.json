[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,4,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[36,37,0,38,39,40,41,42,43,1,44,45,14,15,16,17,18,19,20,2,46,3,47,48,49,50,51,4,21,22,23,25,5,26,27,28,52,53,29,30,31,54,55,56,57],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[58,59,60,61,62,36,63,64,65,37,0,38,39,40,41,42,43,1,44,45,66,14,67,15,16,68,69,17,18,70,71,19,20,72,73,74,2,46,3,47,48,49,50,51,75,4,21,76,22,23,77,78,25,5,26,27,28,79,52,53,29,30,31,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[80,81,82,83],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[84,85],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[10,11,12,13,14,16,17,18,19,20,51,4,21,23,25,26,27,28,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[101,10,11,12,13,102,58,103,104,105,59,60,106,107,61,108,109,110,111,112,62,6,113,7,114,115,116,117,118,8,9,119,120,121,122,123,36,84,124,125,126,127,128,129,130,32,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,80,81,82,149,63,150,151,152,153,154,155,156,157,158,159,64,160,65,161,162,163,164,165,166,167,168,169,170,171,98,172,99,173,174,175,86,176,87,88,89,90,91,92,177,93,95,96,178,97,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,66,200,14,67,15,16,68,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,69,238,17,18,70,71,239,240,241,19,20,242,72,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,73,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,74,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,100,425,426,427,428,429,430,431,432,433,434,435,436,437,33,34,35,51,438,439,440,441,442,75,443,4,21,76,22,23,77,444,445,78,25,5,26,446,447,27,28,79,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,52,53,490,29,30,31,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,54,508,509,55,56,57],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[466,510,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[14,69,239,240,72,243,21,78,446,447,79,29,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[177,94,95,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[101,10,11,12,13,102,58,103,104,105,59,60,106,107,61,108,109,110,111,112,62,6,113,7,114,115,116,117,118,8,9,119,120,121,122,123,36,84,124,125,126,127,128,129,130,32,131,512,132,134,135,137,138,139,140,142,143,144,145,146,148,80,81,82,149,63,150,151,152,153,154,155,156,157,158,159,64,160,65,161,162,163,164,165,166,167,513,168,169,170,171,98,172,99,173,174,175,86,176,87,88,89,90,91,92,177,93,95,96,178,97,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,66,200,14,67,15,16,68,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,69,238,17,18,70,71,239,240,241,19,20,242,72,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,73,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,74,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,100,425,426,427,428,429,430,431,432,433,434,435,436,437,33,34,35,51,438,439,440,441,442,75,443,4,21,76,22,23,77,444,445,78,25,5,26,446,447,27,28,79,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,52,53,490,29,30,31,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,54,508,509,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":100,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":452,"org.easymock.tests.MockingTest.testPartialClassMocking":500,"org.easymock.tests.MockClassControlTest.testToString":366,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":344,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":24,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":190,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":535,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":333,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":459,"org.easymock.samples.ExampleTest.answerVsDelegate":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":386,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":505,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":371,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":337,"org.easymock.tests.UsageTest.moreThanOneArgument":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":363,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":493,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":391,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":298,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":302,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":519,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":40,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests2.DependencyTest.testClassMocking":187,"org.easymock.tests2.AnswerTest.answer":243,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":166,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":383,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":175,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":518,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":359,"org.easymock.tests.LimitationsTest.mockFinalMethod":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":442,"org.easymock.tests2.DependencyTest.testClassMockingSupport":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":52,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":164,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.UsageThrowableTest.throwError":290,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":260,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":522,"org.easymock.samples.PartialClassMockTest.testGetArea":278,"org.easymock.tests.MockingTest.testInterfaceMocking":502,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests2.UsageTest.niceToStrict":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":345,"org.easymock.tests2.ThreadingTest.testChangeDefault":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":457,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":222,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":509,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":481,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":510,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":204,"org.easymock.tests.MockClassControlTest.testEquals":370,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":323,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureAll":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":165,"org.easymock.tests.MockNameTest.defaultName":496,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":494,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.samples.ExampleTest.voteForRemovals":287,"org.easymock.tests.UsageVarargTest.allKinds":320,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":296,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":456,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":468,"org.easymock.tests2.UsageConstraintsTest.greaterThan":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":523,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":469,"org.easymock.samples.ExampleTest.voteForRemoval":284,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":515,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":451,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":98,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":477,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":146,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":379,"org.easymock.tests.UsageExpectAndReturnTest.longType":473,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":438,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":362,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":491,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.UsageCallCountTest.tooManyCalls":380,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":46,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":295,"org.easymock.tests.MockingTest.testNiceClassMocking":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":265,"org.easymock.tests.MockingTest.testClassMocking":498,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":373,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageExpectAndReturnTest.object":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":486,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":508,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":250,"org.easymock.tests.MockClassControlTest.testHashCode":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":214,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":39,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":186,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":461,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":239,"org.easymock.tests.DefaultClassInstantiatorTest.object":462,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":249,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":521,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":350,"org.easymock.tests.ReplayStateInvalidCallsTest.times":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":487,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":448,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":528,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":223,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":367,"org.easymock.tests2.UsageTest.resumeIfFailure":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":454,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":129,"org.easymock.tests2.SerializationTest.testAllMockedMethod":82,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":430,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":281,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":356,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":436,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":244,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":305,"org.easymock.tests.UsageExpectAndThrowTest.object":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":525,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":389,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":390,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":184,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":517,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":218,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":377,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":273,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":342,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":45,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":336,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndThrowTest.longType":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.SerializationTest.testClass":80,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":489,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":533,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":206,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":447,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":503,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":501,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":53,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":532,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":271,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":127,"org.easymock.tests.MockingTest.testTwoMocks":499,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":529,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":470,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.samples.ExampleTest.removeNonExistingDocument":288,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":251,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":512,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.ConstraintsToStringTest.andToString":43,"org.easymock.tests2.MockBuilderTest.testCreateMockString":148,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":246,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":199,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":217,"org.easymock.samples.ExampleTest.voteAgainstRemoval":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":409,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":297,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":426,"org.easymock.tests.UsageVarargTest.differentLength":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":446,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":335,"org.easymock.tests.UsageCallCountTest.tooFewCalls":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":460,"org.easymock.tests.UsageThrowableTest.throwCheckedException":294,"org.easymock.tests.MockingTest.testStrictClassMocking":497,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":269,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":531,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":12,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":526,"org.easymock.tests2.DependencyTest.testInterfaceMocking":189,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":219,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.AnswerTest.stubAnswer":247,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":143,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":488,"org.easymock.tests.UsageExpectAndReturnTest.floatType":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":197,"org.easymock.tests2.ConstraintsToStringTest.orToString":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":258,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":179,"org.easymock.tests2.SerializationTest.test":81,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":511,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":471,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":209,"org.easymock.tests.GenericTest.testPackageScope":322,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":504,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":514,"org.easymock.tests2.NameTest.nameForMock":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":482,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":358,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":185,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":427,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":334,"org.easymock.tests2.NameTest.nameForStrictMock":11,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":520,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":58,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":213,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":210,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":534,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":245,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":530,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":484,"org.easymock.tests2.CaptureTest.testCapture":94,"org.easymock.tests2.UsageConstraintsTest.constraints":62,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":289,"org.easymock.tests2.ConstraintsToStringTest.notToString":38,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":439,"org.easymock.tests2.CompareToTest.testGreateThan":85,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":476,"org.easymock.tests.LimitationsTest.abstractClass":408,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311}}]
