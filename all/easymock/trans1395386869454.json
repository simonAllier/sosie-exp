[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:137","sourceCode":"int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1))","type":"CtAssignmentImpl"},"failures":[160,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[60,153],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[182,183],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[217,217,218,218,219,11,220,221,31,222,79,80,223,224,225,226,227,228],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[13,89,92,93,94,111,229,152,230,231,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[232,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[15,236,93,94,113,152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,3,4,5,7,237,238,239,219,13,15,16,240,241,220,242,243,244,221,245,31,246,247,32,248,249,33,34,35,38,79,80,250,251,81,225,226,227,252,95,96,97,98,99,111,113,114,122,123,253,254,124,255,127,128,129,130,131,256,133,134,135,136,257,154,170,171,258,259,260,261,262,263,264,172,265,266,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[25,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[217,217,218,218,7,268,269,219,270,271,272,240,241,220,242,244,221,245,31,247,32,248,273,249,274,275,222,33,34,35,276,277,278,279,280,281,79,282,283,80,284,250,251,285,223,81,224,286,287,288,289,290,225,291,292,226,293,294,295,296,297,298,299,300,301,227,302,303,304,305,306,252,307,308,309,310,311,312,313,232,314,315,316,317,318,182,319,320,321,183,322,257,323,324,262,263,264,325,326,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"failures":[232,234],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[333,38,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[335,0,1,2,3,4,336,5,6,217,217,218,218,337,7,268,269,338,8,9,10,237,339,340,238,239,219,11,12,13,14,15,16,17,271,341,272,18,240,241,220,242,243,244,221,342,19,20,21,22,23,24,25,26,27,28,343,29,30,245,31,246,247,32,248,249,222,34,36,37,278,279,280,344,345,346,347,348,349,350,38,351,39,40,41,42,43,352,44,45,353,354,46,47,48,355,356,49,50,51,52,53,54,55,56,57,58,59,60,357,61,62,63,64,65,66,67,68,69,70,72,73,74,75,358,359,360,361,76,362,77,78,281,80,284,250,251,81,224,82,83,84,363,85,86,87,88,364,89,90,365,91,225,226,227,252,366,367,368,369,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,370,371,372,373,117,374,375,376,118,119,377,120,319,320,122,123,253,254,124,255,125,126,127,128,378,129,130,131,132,256,133,134,135,136,207,209,210,211,214,216,379,137,138,380,381,139,382,140,141,142,143,383,144,145,146,147,384,148,149,150,151,152,257,153,385,386,387,388,389,390,154,155,156,391,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,258,259,260,261,392,262,263,264,326,331,172,265,266,267,173,174,393,394,175,176,177,178,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[232,233,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[278,279,280,344,49,395,396,397,370,371,372,373,117,374,385,398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.UsageTest.argumentsOrdered":90,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":334,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":337,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":371,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":226,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":239,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":368,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":247,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":330,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests.InvocationTest.testEquals":229,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":189,"org.easymock.tests.ReplayStateInvalidUsageTest.times":213,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests2.CaptureTest.testAnd":342,"org.easymock.tests2.UsageTest.strictResetToDefault":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":352,"org.easymock.tests2.DelegateToTest.testDelegate":39,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":384,"org.easymock.tests.LimitationsTest.mockFinalMethod":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":390,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":192,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":233,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests2.EasyMockSupportClassTest.testAll":225,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":261,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":389,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":106,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":193,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":9,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":185,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":42,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":370,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":43,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":183,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":386,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":258,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":280,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":37,"org.easymock.tests.UsageExpectAndReturnTest.object":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":354,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":270,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":299,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":309,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":12,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":103,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.ReplayStateInvalidCallsTest.times":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":395,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests2.UsageTest.resumeIfFailure":365,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":373,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":272,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":180,"org.easymock.samples.SupportTest.voteForRemovals":0,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.object":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":217,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":250,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":367,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":187,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.UsageUnorderedTest.message":152,"org.easymock.tests.UsageVerifyTest.twoReturns":94,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":302,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":120,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":391,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":212,"org.easymock.tests2.StubTest.stub":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":372,"org.easymock.tests.UsageExpectAndThrowTest.longType":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.SerializationTest.testClass":271,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":203,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.NameTest.nameForMocksControl":361,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":139,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":251,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":248,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":210,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":312,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":224,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":362,"org.easymock.tests.UsageVerifyTest.twoThrows":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests2.UsageTest.defaultResetToNice":364,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":274,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":369,"org.easymock.tests.UsageThrowableTest.throwCheckedException":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":201,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":339,"org.easymock.tests2.NameTest.nameForNiceMock":360,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":196,"org.easymock.tests2.DependencyTest.testInterfaceMocking":238,"org.easymock.samples.ExampleTest.addDocument":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":303,"org.easymock.tests2.DelegateToTest.testStubDelegate":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.stubAnswer":77,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":219,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":218,"org.easymock.tests.UsageThrowableTest.noUpperLimit":101,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":286,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests2.SerializationTest.test":341,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":234,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.samples.SupportTest.addDocument":335,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":294,"org.easymock.tests.GenericTest.testPackageScope":319,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":184,"org.easymock.tests2.NameTest.nameForMock":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":216,"org.easymock.tests2.NameTest.nameForStrictMock":359,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":283,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":287,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":313,"org.easymock.tests.ErrorMessageTest.testGetters":236,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":79,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":190,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":298,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":295,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":314,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":357,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":194,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CaptureTest.testCaptureFromStub":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":282,"org.easymock.tests.UsageTest.unexpectedCallWithArray":393,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":377,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":112,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":116,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":338,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":387,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
