[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"key"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:183","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[20,21,23,25,26,223,36,41,47,49,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[20,21,23,25,26,223,36,41,47,49,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[1,224,225,2,3,4,5,6,7,226,8,9,10,11,12,13,14,15,227,228,229,230,231,232,233,16,234,17,18,19,20,21,235,22,23,24,25,26,27,223,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,236,237,238,239,240,241,242,243,244,245,44,246,45,247,46,248,249,250,251,252,253,47,48,49,50,254,51,52,53,54,55,56,255,256,57,58,257,59,60,258,61,259,260,261,262,263,264,265,266,267,268,269,62,270,63,64,65,271,272,66,273,274,275,276,277,278,67,279,280,281,282,283,284,68,69,70,285,71,72,73,74,286,287,288,289,75,290,291,76,77,78,292,293,294,295,296,297,79,298,299,300,301,302,303,304,80,81,82,305,83,306,307,308,309,310,311,312,84,85,86,87,88,89,313,90,91,92,314,93,315,94,95,96,97,316,317,98,99,100,101,102,318,319,320,321,322,323,103,324,325,326,327,328,329,330,331,332,104,333,334,335,336,337,105,338,339,106,340,341,107,108,109,342,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,343,344,345,346,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,347,348,349,159,160,350,161,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,162,390,163,164,165,166,391,392,167,168,393,394,169,170,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,171,414,415,416,172,417,418,173,174,175,176,177,178,179,180,419,420,181,421,422,423,182,183,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,184,185,186,448,187,188,449,189,190,191,192,193,450,451,452,453,454,455,456,457,458,459,194,460,195,196,197,198,199,461,462,463,464,200,201,202,203,204,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,205,206,207,480,481,208,209,210,211,482,212,213,214,215,483,216,484,217,218,219,220,221,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[277,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[116,117,118,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,224,224,225,225,10,11,15,240,490,242,243,44,246,45,46,250,251,491,253,58,257,60,258,61,259,261,264,265,266,267,66,86,87,88,89,91,92,492,321,103,104,105,116,118,349,159,160,161,371,376,170,420,181,421,451,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,223,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,254,51,52,53,54,55,56,255,256,57,261,64,292,111,171,172,417,193,195,196,197,198,199,200,201,202,203,204,478,214,215,484,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[116,117,118,489],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[1,224,224,225,225,10,11,15,240,242,243,245,44,246,45,46,250,251,253,58,257,60,258,61,259,261,263,264,265,266,267,268,269,62,271,272,66,310,86,87,88,89,91,92,321,103,104,105,116,118,347,348,349,159,160,161,353,371,376,170,406,420,181,421,450,451,452,453,454,455,456,457,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[116,117,118,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[495,490,44,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[420,421,422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[277,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[230,231,232,233,70,285,287,288,111,113,114,166,392,393,394,171,205,206,207,484,217,219,220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[410,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[227,247,498,499,500,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[503,504,505,506,507,508,509,510,511,70,111,113,114,386,387,512,513,514,515,516,166,391,171,205,206,207,484,217,219,220],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,254,51,52,53,54,55,56,255,256,57,58,257,59,60,258,61,261,62,270,63,64,65,271,272,66,273,67,68,69,70,71,72,73,74,287,289,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,315,94,95,96,97,316,98,99,100,101,102,321,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,366,367,368,369,370,379,381,382,162,163,164,165,166,167,168,393,169,170,396,397,171,172,417,173,174,175,176,177,178,179,180,420,181,422,423,182,183,184,185,186,187,188,189,190,191,192,193,456,457,194,195,196,197,198,199,200,201,202,203,204,468,471,474,475,476,477,478,479,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[1,224,224,225,225,10,11,15,240,490,242,243,44,246,45,46,250,251,491,253,58,257,60,258,61,259,261,264,265,266,267,66,86,87,88,89,91,92,517,492,518,321,103,104,105,116,118,349,159,160,161,371,376,170,420,181,421,451,194],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[519],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[304,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[504,510,512,514,391,484],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[227,247,498,499,500,501,502],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[520,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,4,5,7,14,15,242,44,45,46,251,58,257,59,60,258,61,261,265,266,267,64,76,77,81,86,87,88,89,90,91,92,321,103,104,105,111,113,114,139,140,141,142,143,144,147,148,150,151,152,154,155,156,157,158,159,160,161,366,367,368,369,162,390,163,164,194,195,200,201,202,203,204,214,215,217,219,220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[227,247,521,498,499,500,522,501,502,523],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.UsageTest.argumentsOrdered":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":434,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":475,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":229,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":103,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageTest.wrongArguments":285,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageTest.moreThanOneArgument":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":138,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":394,"org.easymock.tests.UsageVarargTest.varargIntAccepted":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":507,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":239,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":134,"org.easymock.tests.LimitationsTest.mockFinalMethod":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":404,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":254,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":237,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":375,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":339,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.MockingTest.testInterfaceMocking":350,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":487,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":473,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":120,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":328,"org.easymock.tests2.ThreadingTest.testChangeDefault":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":300,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":128,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":461,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":31,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":55,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":448,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":181,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":238,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":369,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":403,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":523,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":267,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":413,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":259,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":474,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":251,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":192,"org.easymock.tests.GenericTest.testBridgedEquals":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":212,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":222,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":400,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":513,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests.MockingTest.testClassMocking":348,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":481,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":374,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":188,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":471,"org.easymock.tests.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":330,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":506,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":236,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":292,"org.easymock.tests.UsageVarargTest.varargCharAccepted":187,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":405,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":343,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":508,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":105,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":477,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":40,"org.easymock.tests2.SerializationTest.testAllMockedMethod":118,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":440,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":131,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":446,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":340,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":129,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":37,"org.easymock.tests2.DelegateToTest.testWrongClass":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":215,"org.easymock.tests.UsageStrictMockTest.range":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":224,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":311,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":488,"org.easymock.tests2.CaptureTest.testCaptureNone":54,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":333,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":112,"org.easymock.tests2.SerializationTest.testClass":116,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":194,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests2.NameTest.nameForMocksControl":233,"org.easymock.tests2.MockedExceptionTest.testMockedException":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":323,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":123,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":234,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":61,"org.easymock.tests2.CaptureTest.testCaptureLast":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":38,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":127,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":287,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":42,"org.easymock.samples.ExampleTest.removeNonExistingDocument":226,"org.easymock.tests.UsageStrictMockTest.differentMethods":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":299,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":276,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ConstraintsToStringTest.andToString":509,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":253,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":450,"org.easymock.tests.UsageExpectAndThrowTest.floatType":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":107,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":266,"org.easymock.tests.LimitationsTest.privateConstructor":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":519,"org.easymock.tests2.UsageConstraintsTest.testNotNull":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":271,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.CallbackTest.callback":78,"org.easymock.tests2.UsageConstraintsTest.equals":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":262,"org.easymock.tests.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":347,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":298,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":109,"org.easymock.tests.ObjectMethodsTest.testHashCode":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests2.NameTest.nameForNiceMock":232,"org.easymock.tests2.DependencyTest.testInterfaceMocking":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":334,"org.easymock.tests2.DelegateToTest.testStubDelegate":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.stubAnswer":108,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":217,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":190,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.tests2.ConstraintsToStringTest.orToString":503,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":225,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":282,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.SerializationTest.test":117,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":51,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":313,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":325,"org.easymock.tests.GenericTest.testPackageScope":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":281,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":351,"org.easymock.tests2.NameTest.nameForMock":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":133,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":164,"org.easymock.tests2.MockedExceptionTest.testRealException":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":312,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":515,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":437,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":365,"org.easymock.tests2.NameTest.nameForStrictMock":231,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests2.UsageConstraintsTest.lessThan":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":278,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":315,"org.easymock.tests2.CaptureTest.testCaptureRightOne":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":329,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":493,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":257,"org.easymock.tests.UsageTest.wrongArguments":392,"org.easymock.tests2.MockBuilderTest.testWithConstructor":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":482,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":355,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":391,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.notToString":505,"org.easymock.tests.UsageStrictMockTest.testVerify":485,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":52,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.LimitationsTest.abstractClass":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":316}}]
