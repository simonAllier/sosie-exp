[{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.Capture:134","failures":[0,1],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[33],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,2,48,49,50,17,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[47,68],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,33,102,66,67],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[98,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[3,10,11,12,16,18,21,22,105,23,106,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[108,109,110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[78,81,95,96,98,112,113,114,115,116],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[34,35,117,36,37,38,39,40,118,41,42,43,44,46,47,3,4,119,120,121,122,123,124,9,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,18,19,20,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,23,175,176,24,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"position":"org.easymock.internal.RecordState:315","failures":[48,94,199,200,201,202,127,139,140,203,204,141,205,142,143,144,145,206,146,147,148,149,207,150,151,152,153,208,209,210,211,212,213,214,159,215,216,217,218,219,220,176,178],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[48,202,127,139,140,203,204,141,205,142,143,144,145,206,146,147,148,149,207,150,151,152,153,21,213,159,216,217,28,218,29,221,222,219,220,176,178],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[78,81,223,224,95,96,98,225,112,113,114,226,227,116],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[124,229,230,231,232,129,130,233,234,235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[122,30,31,32,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[101,237,238,33,239],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":224,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":147,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.samples.ExampleTest.answerVsDelegate":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":100,"org.easymock.tests2.UsageConstraintsTest.testNull":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageTest.moreThanOneArgument":24,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests2.StubTest.stub":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":73,"org.easymock.tests2.NameTest.nameForMocksControl":8,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":225,"org.easymock.tests2.CompareToTest.testCompareEqual":111,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.tests.UsageThrowableTest.throwError":28,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":32,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":190,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":195,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests.UsageExpectAndThrowTest.floatType":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":57,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":231,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.PartialClassMockTest.testGetArea":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":59,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":186,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":221,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":184,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":226,"org.easymock.tests2.NameTest.nameForNiceMock":7,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":114,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":116,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":81,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":110,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.testSame":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":164,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":194,"org.easymock.tests.GenericTest.testBridgedEquals":239,"org.easymock.tests2.NameTest.nameForMock":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":154,"org.easymock.tests2.MockedExceptionTest.testRealException":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests2.NameTest.nameForStrictMock":6,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":36,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":74,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":191,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":198,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":115,"org.easymock.tests2.UsageConstraintsTest.testOr":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests2.MockBuilderTest.testWithConstructor":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":230,"org.easymock.tests2.CompareToTest.testLessThan":68,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":106,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":93,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":61,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":15}}]
