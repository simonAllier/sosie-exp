[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[12,13,14,15,16],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[17,18,19,20,21,22,6],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[23],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:95","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[30,31,32,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[34,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[52,53,7,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[73,74,75],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,84,85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[78,79,88,80,81,82,89,83,90,84,85,91],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,30,109,110,73,111,112,113,114,74,115,116,76,117,118,119,120,121,31,122,75,32,123,124,125,126,127,128,129,130,131,132,23,133,134,135,136,26,27,28,137,34,138,39,139,40,140,77,41,141,142,42,143,144,145,146,147,148,10,149,150,2,151,3,5,78,152,79,88,80,81,82,89,153,83,84,85,86,91,154,155,156,157,158,159,160,161,0,162,163,164,43,165,44,45,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,17,18,19,185,186,20,22,187,188,189,190,191,192,193,194,195,196,197,197,198,198,199,200,201,202,203,204,6,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,46,47,314,48,49,315,50,316,317,318,51,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,8,1,368,369],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[370,371,372,373,46,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[129,374,130,375,131,132,23,133,134,135,376,136,26,28,137,34,39,139,40,140,77,41,141,142,42,377,378,379,161,162,167,168,169,170,188,189,190,191,193,194,195,196,197,197,198,198,200,238,239,380,275,381,382,305,316,383,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[110,73,111,112,113,114,74,115,384,116,75,32,126,127,78,152,79,88,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,30,109,110,73,111,112,113,114,74,115,384,116,76,117,118,119,120,121,31,122,75,32,123,124,125,126,127,128,129,130,131,23,133,135,26,27,28,137,34,138,39,139,40,77,41,141,142,42,147,148,10,149,150,385,2,151,3,4,5,78,152,79,88,80,81,82,89,153,83,84,85,86,91,155,156,157,158,159,160,161,0,162,163,164,43,165,44,45,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,17,386,387,18,19,185,186,20,22,187,188,189,190,191,192,193,194,195,196,197,197,198,198,199,200,201,202,203,204,6,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,388,389,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,380,240,241,242,243,244,245,246,247,248,249,250,251,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,282,284,285,286,287,289,290,291,292,390,391,392,393,394,305,395,396,397,398,399,400,401,402,306,307,312,313,46,47,314,48,49,315,50,316,317,318,319,320,321,322,323,324,403,404,405,325,326,327,328,329,330,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,35,36,356,357,358,359,360,361,362,363,383,364,365,366,367,37,8,1,38,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[92,93,94,95,43,45,166,174,282,284,285,47,49,315,318,356,357,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[92,93,94,95,30,109,110,73,111,112,113,114,74,115,116,76,117,118,119,120,121,31,122,75,32,123,125,126,127,128,129,131,132,26,27,28,137,138,39,139,40,77,41,142,143,144,145,146,147,148,150,2,151,5,78,152,79,88,81,82,89,153,83,84,91,155,157,158,159,160,161,0,162,164,43,45,166,173,174,176,177,180,183,17,18,19,185,20,22,187,189,190,193,194,204,6,205,206,207,208,210,212,213,219,220,221,222,223,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,246,247,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,282,283,284,285,286,287,291,292,305,307,308,309,310,311,313,47,49,315,50,316,318,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,406,356,357,358,359,360,361,362,363,364,365,366,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[31,33],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":61,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":199,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":364,"org.easymock.tests.MockClassControlTest.testToString":276,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":115,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":333,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":382,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":281,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":361,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":390,"org.easymock.tests.UsageTest.argumentsOrdered":323,"org.easymock.tests.UsageVarargTest.varargIntAccepted":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":219,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":223,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":301,"org.easymock.tests2.AnswerTest.answer":17,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":146,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":394,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":35,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":144,"org.easymock.tests.UsageThrowableTest.throwError":211,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":363,"org.easymock.samples.PartialClassMockTest.testGetArea":200,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":396,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":52,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":370,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":119,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":1,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":347,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.MockClassControlTest.testEquals":280,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":377,"org.easymock.tests2.CaptureTest.testCaptureAll":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests2.UsageConstraintsTest.testMatches":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":362,"org.easymock.samples.ExampleTest.voteForRemovals":208,"org.easymock.tests.UsageVarargTest.allKinds":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":356,"org.easymock.samples.BasicClassMockTest.testPrintContent":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":217,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.samples.ExampleTest.voteForRemoval":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":385,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":343,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":236,"org.easymock.tests.GenericTest.testBridgedEquals":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":339,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":376,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":359,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":216,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.testContains":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":283,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":161,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":77,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":231,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":8,"org.easymock.tests.MockClassControlTest.testHashCode":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":143,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":230,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":400,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":141,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":277,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":398,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":13,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":371,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":399,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":197,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":303,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":372,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":397,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.UsageUnorderedTest.message":306,"org.easymock.tests.UsageVerifyTest.twoReturns":358,"org.easymock.tests.UsageVarargTest.varargByteAccepted":235,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":195,"org.easymock.tests2.CaptureTest.testCapture_2617107":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":116,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":299,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":355,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests2.NameTest.nameForMocksControl":95,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":14,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.samples.ExampleTest.removeNonExistingDocument":209,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":136,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":274,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":18,"org.easymock.tests.UsageVerifyTest.twoThrows":357,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":142,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":218,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":351,"org.easymock.tests.UsageVarargTest.differentLength":232,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":94,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":207,"org.easymock.tests2.DelegateToTest.testStubDelegate":151,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":60,"org.easymock.tests.UsageExpectAndReturnTest.floatType":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":162,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":198,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":212,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":337,"org.easymock.samples.SupportTest.addDocument":202,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":298,"org.easymock.tests.GenericTest.testPackageScope":238,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.NameTest.nameForMock":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":348,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":243,"org.easymock.tests2.MockedExceptionTest.testRealException":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":12,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":247,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":304,"org.easymock.tests2.NameTest.nameForStrictMock":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests.UsageRangeTest.combination":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":319,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":349,"org.easymock.tests.UsageVarargTest.varargShortAccepted":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":375,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":350,"org.easymock.tests2.CaptureTest.testCapture":90,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":314,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":50,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests2.CompareToTest.testGreateThan":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":221,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":222,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":228}}]
