[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,17,49,50,51,52,53,54,55,20,56,21,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:54","failures":[96,97,98,76,99,100,77,101,102,103,104,105,106,107,108,109,78,110,111,112,113,114,79,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[128,129,130,131,132,36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[133,134,135,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[117,0,118,133,93,1,135,2,3,4,137,5,138],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,8,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,128,172,173,43,44,174,45,46,175,47,176,9,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,48,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,212,213,214,11,215,216,217,218,219,220,221,12,222,223,224,225,226,13,227,228,229,230,231,14,232,233,234,15,235,16,236,17,49,50,51,52,237,18,238,53,54,239,240,19,241,242,55,20,56,21,57,58,59,60,22,243,244,245,246,247,248,249,250,251,61,62,252,63,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,64,65,129,66,67,270,68,24,69,69,70,70,271,272,273,71,274,275,72,276,73,74,277,75,278,279,280,281,76,77,78,79,80,81,82,83,84,85,86,25,26,27,282,283,284,285,286,287,288,127,289,290,291,292,293,294,28,295,296,29,297,136,298,299,300,301,302,303,30,117,304,305,87,88,89,90,91,306,7,31,307,308,309,310,311,312,313,314,315,316,317,318,319,320,92,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,93,341,342,343,344,32,33,34,35,94,345,346,347,348,349,350,130,95,131,132,36,351,37,352,353,354,355,356,38,39,357,358,359,360,40,361,362,363,364,365,366,367],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[8,157,159,160,161,162,163,164,165,166,167,168,169,170,172,176,179,196,12,222,223,224,225,226,13,227,228,229,230,231,14,232,233,234,15,235,16,236,245,246,257,306,311,341,342,343,344,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[368],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[139,140,141,142,369,143,144,145,146,370,147,148,149,150,151,371,372,373,374,375,376,377,378,152,153,154,155,156,8,379,380,381,382,383,384,385,157,158,159,160,161,162,163,164,386,387,388,389,165,166,167,168,169,170,171,390,128,172,391,173,392,43,44,393,174,45,46,175,47,394,395,396,397,398,176,9,399,177,178,179,180,181,182,183,184,185,400,186,187,188,189,190,191,192,193,401,194,402,403,404,48,405,195,196,406,197,198,199,407,200,201,202,203,204,205,206,207,208,209,210,211,10,212,213,214,11,215,216,217,218,219,220,221,12,222,223,224,225,226,13,227,228,229,230,231,14,232,233,234,15,235,16,236,17,49,50,51,52,237,18,238,53,54,239,240,19,241,242,55,20,56,21,57,408,409,410,58,59,411,60,412,413,414,22,243,244,245,246,247,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,23,432,433,434,248,249,250,251,61,62,252,63,253,254,435,436,368,437,438,439,440,441,442,443,444,255,256,257,258,445,259,260,446,447,261,262,263,264,265,266,267,268,269,64,65,129,66,67,270,68,448,24,69,70,271,272,273,71,274,275,72,276,73,74,277,75,449,450,278,451,452,41,279,280,281,453,454,96,97,98,76,99,100,77,101,102,103,104,105,106,107,108,109,78,110,111,112,113,114,79,115,116,80,81,82,83,455,84,85,86,456,25,457,26,27,282,283,284,458,285,286,287,288,127,289,290,291,292,293,294,28,295,296,29,297,136,298,299,300,301,302,303,30,117,304,305,459,460,87,461,462,463,88,464,89,0,90,465,118,466,91,467,468,306,7,31,307,308,309,310,311,312,313,314,315,316,469,470,471,472,473,474,475,317,318,319,320,92,321,476,477,478,479,480,481,482,483,484,322,485,486,487,488,489,490,323,324,325,326,327,328,329,330,331,332,333,334,335,42,336,337,338,339,491,492,493,494,495,340,496,497,498,499,500,501,93,1,502,341,342,343,344,32,33,34,35,94,345,346,347,503,504,348,349,350,130,95,131,132,36,351,37,352,353,354,355,356,38,39,357,358,359,360,40,505,361,362,363,364,365,366,367],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[8,159,169,176,9,177,178,179,180,181,182,193,22,244,247,256,257,258,263,264,265,266,267,286,291,296,302,306,31,307,310,311,313,314,316,317,92,336,337,338,339,32,347,95,37,352,354,355,356,38,39,40,363,364,365,366],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[506,507,399,263,508,509],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[283,284,286,288,127,290,136,302,351,352,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[124],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[377,322,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[511,117,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[153,194,254],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[139,140,141,142,369,143,144,145,146,370,147,148,149,150,151,374,376,378,152,153,154,155,156,8,379,380,381,382,383,384,385,157,158,159,160,161,162,163,164,386,387,388,389,165,166,167,168,169,170,171,390,128,172,391,173,392,43,44,174,45,46,175,47,394,395,396,397,398,176,9,399,177,178,179,180,181,182,183,184,185,400,186,187,188,189,190,191,192,193,401,194,402,403,404,48,405,195,196,406,197,198,199,407,200,201,202,203,204,205,206,207,208,209,210,211,10,212,213,214,11,215,216,217,218,219,220,221,12,222,223,224,225,226,13,227,228,229,230,231,14,232,233,234,15,235,16,236,17,49,50,51,52,237,18,238,53,54,239,240,19,241,242,55,20,56,21,57,408,409,410,58,59,411,60,412,413,414,22,243,244,245,246,247,416,417,418,419,420,421,423,424,425,426,427,428,429,430,431,23,432,433,434,248,249,250,251,61,62,252,63,253,254,435,436,368,437,438,439,440,441,442,443,444,255,256,257,258,445,259,260,446,447,261,262,263,264,265,266,267,268,269,64,65,129,66,67,270,68,448,24,69,69,70,70,271,272,273,71,274,275,72,276,73,74,277,75,449,278,451,452,41,279,280,281,453,96,76,100,77,102,103,106,107,108,109,78,111,114,79,115,116,82,83,84,85,25,457,26,27,282,283,284,458,285,286,287,288,127,289,290,291,292,293,294,28,295,296,29,297,136,298,299,300,301,302,303,30,117,304,305,87,463,88,464,89,118,466,306,7,31,307,308,309,310,311,312,313,314,315,316,469,473,474,475,317,318,319,320,92,321,476,477,478,479,480,481,482,483,484,322,485,486,487,488,489,490,323,324,325,327,328,330,332,333,334,335,42,491,492,493,494,495,340,496,497,498,499,500,501,93,1,341,342,343,344,32,33,34,35,94,345,346,347,348,349,350,130,95,131,132,36,351,37,352,353,354,355,356,38,39,357,358,359,360,40,505,361,362,363,364,365,366,367],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[206,318,92,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[69,70,451,117,460,462,0,118,467,93,1,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[279,280,512,513,88],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[514],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":284,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.UsageTest.argumentsOrdered":314,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":210,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":309,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":271,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":42,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":243,"org.easymock.tests2.UsageTest.wrongArguments":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":501,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":388,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":413,"org.easymock.tests2.UsageConstraintsTest.testNull":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":332,"org.easymock.tests2.CaptureTest.testPrimitive":353,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":247,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":445,"org.easymock.tests.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageVarargTest.varargIntAccepted":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests.ReplayStateInvalidUsageTest.times":23,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.DependencyTest.testClassMocking":503,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":479,"org.easymock.tests2.CaptureTest.testAnd":351,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":447,"org.easymock.tests2.DelegateToTest.testDelegate":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":234,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":504,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":354,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":477,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":375,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":490,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":116,"org.easymock.samples.PartialClassMockTest.testGetArea":64,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.MockingTest.testInterfaceMocking":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":153,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests2.UsageTest.niceToStrict":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":200,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":498,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":141,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":121,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":294,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":357,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests.MockClassControlTest.testEquals":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests.MockNameTest.defaultName":385,"org.easymock.tests2.UsageConstraintsTest.testMatches":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":63,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests.UsageVarargTest.allKinds":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":423,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":453,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":449,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":255,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":306,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":325,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":326,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":316,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":192,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":122,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":119,"org.easymock.tests.UsageExpectAndReturnTest.longType":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":16,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":148,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests.MockingTest.testNiceClassMocking":414,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":409,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":513,"org.easymock.tests2.UsageConstraintsTest.testContains":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":369,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":343,"org.easymock.tests2.UsageConstraintsTest.testFind":285,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":8,"org.easymock.tests.MockTypeTest.fromEasyMockClass":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":261,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":331,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":481,"org.easymock.tests.MockClassControlTest.testHashCode":442,"org.easymock.tests2.EasyMockSupportTest.testVerify":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":476,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":505,"org.easymock.tests.UsageVarargTest.varargCharAccepted":186,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":415,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":310,"org.easymock.tests.DefaultClassInstantiatorTest.object":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":139,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":480,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":315,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.StubTest.stubWithReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":14,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":318,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":298,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests.UsageStrictMockTest.range":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":474,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":154,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":110,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":146,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":274,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":246,"org.easymock.tests2.UsageConstraintsTest.any":291,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":219,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":420,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":364,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":322,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":493,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":495,"org.easymock.tests2.MockedExceptionTest.testMockedException":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":457,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":491,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":135,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":436,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":299,"org.easymock.tests.MockingTest.testTwoMocks":410,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":303,"org.easymock.samples.ExampleTest.removeNonExistingDocument":448,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":497,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":482,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":468,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":502,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":280,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":341,"org.easymock.tests2.UsageTest.defaultResetToNice":312,"org.easymock.samples.ExampleTest.voteAgainstRemovals":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":492,"org.easymock.tests.UsageVarargTest.differentLength":188,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":451,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":389,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":496,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":115,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":264,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":465,"org.easymock.tests.UsageVarargTest.varargLongAccepted":190,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":488,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":282,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":469,"org.easymock.tests2.SerializationTest.test":304,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":49,"org.easymock.tests2.UsageConstraintsTest.testSame":287,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":455,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":102,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":487,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":412,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":467,"org.easymock.tests2.UsageStrictMockTest.differentMethods":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":452,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":52,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":233,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":363,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":473,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":419,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":136,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":365,"org.easymock.tests2.UsageConstraintsTest.lessThan":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":484,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":358,"org.easymock.tests2.UsageConstraintsTest.testOr":288,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":276,"org.easymock.tests.UsageTest.wrongArguments":177,"org.easymock.tests2.MockBuilderTest.testWithConstructor":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":103,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":241,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":421,"org.easymock.tests.UsageVarargTest.varargShortAccepted":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":370,"org.easymock.tests2.UsageConstraintsTest.cmpTo":292,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":319,"org.easymock.tests2.CompareToTest.testLessThan":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":203,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests2.CaptureTest.testCaptureFromStub":359,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":461,"org.easymock.tests.UsageTest.unexpectedCallWithArray":399,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.UsageConstraintsTest.constraints":283,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests.UsageStrictMockTest.testVerify":269,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":272,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":329}}]
