[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,2,174,175,3,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,4,210,5,7,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[229,229,230,230,15,24,25,231,232,233,44,45,46,79,234,91,235,114,236,160,165,167,237,168,169,170,238,239,240,241,171,242,172,173,243,244,245,246,2,174,175,3,177,178,4,247,5,6,7,248,8,249,250,251,252,253,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[254,117],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[160,255,256,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,262,224,226,227],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[263,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[35,75,76,77,185,186,188,190,191,207,212,213,214,218,219,221,222],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[77,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[229,229,230,230,68,73,74,75,78,80,81,82,83,84,115,116,264,265,266,267,268,132,155,183,184,187,188,189,190,195,197,198,200,201,207,208,209,269],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,270,271,41,42,272,273,43,274,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,275,67,276,68,69,70,71,72,277,73,278,74,75,76,77,78,279,280,281,282,283,284,79,285,286,287,288,289,290,80,81,82,83,84,291,292,293,294,295,296,297,85,86,87,88,234,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,236,118,119,120,121,122,123,124,125,264,265,266,267,268,126,298,127,128,129,130,131,132,143,145,146,147,148,299,149,150,151,152,300,301,302,303,153,304,154,155,156,157,158,159,160,305,306,307,308,161,162,163,164,309,310,311,312,165,166,167,238,171,242,244,246,313,2,174,175,177,178,179,314,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,4,247,210,5,6,7,8,249,251,212,213,214,215,315,216,217,218,219,220,221,269,316,222,224,225,226,227,317,318,228,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[320,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[35,181,188,205],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":302,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":288,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.SerializationTest.testAllMockedMethod":167,"org.easymock.tests2.DelegateToTest.testReturnException":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":286,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests.UsageExpectAndThrowTest.object":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":256,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests2.UsageTest.wrongArguments":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":2,"org.easymock.tests2.UsageConstraintsTest.testNull":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.CaptureTest.testPrimitive":215,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests2.CaptureTest.testCaptureNone":219,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":28,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":88,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.StubTest.stub":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":287,"org.easymock.tests.UsageExpectAndThrowTest.longType":97,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":9,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":66,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests2.CaptureTest.testAnd":212,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":249,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":321,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":4,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":109,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":255,"org.easymock.tests2.CaptureTest.testCaptureLast":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":178,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":295,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.MockingTest.testTwoMocks":233,"org.easymock.tests2.CaptureTest.testCapture1_2446744":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":102,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":208,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":268,"org.easymock.tests.UsageExpectAndThrowTest.floatType":96,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":95,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.testNotNull":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":62,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":103,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.UsageCallCountTest.tooFewCalls":86,"org.easymock.tests.UsageOverloadedMethodTest.overloading":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":10,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":237,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureAll":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":175,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":267,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":259,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":294,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":290,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":261,"org.easymock.tests2.UsageConstraintsTest.greaterThan":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":65,"org.easymock.tests.UsageExpectAndReturnTest.floatType":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":216,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":48,"org.easymock.tests2.UsageConstraintsTest.testSame":189,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":285,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":54,"org.easymock.tests.GenericTest.testPackageScope":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":316,"org.easymock.tests2.UsageTest.moreThanOneArgument":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":181,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":89,"org.easymock.tests.UsageExpectAndReturnTest.longType":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":51,"org.easymock.tests.UsageCallCountTest.tooManyCalls":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":85,"org.easymock.tests2.MockedExceptionTest.testRealException":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":99,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":239,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":228,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":6,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":130,"org.easymock.tests.UsageExpectAndReturnTest.object":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":254,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":240,"org.easymock.tests2.UsageStrictMockTest.range":157,"org.easymock.tests2.UsageConstraintsTest.lessThan":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":30,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests2.CaptureTest.testCaptureRightOne":221,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests.UsageRangeTest.combination":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":26,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":52,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":60,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests.UsageVarargTest.varargCharAccepted":29,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":269,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":101,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":61,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":250,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":100,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":64,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.UsageTest.resumeIfFailure":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":217,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":53,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":27}}]
