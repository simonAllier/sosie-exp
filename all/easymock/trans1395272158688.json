[{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.internal.RecordState:163","failures":[1,2],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[3,4],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[11,12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[27,28,29,7,8,30,31,32,33,34,10,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,3,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,1,2,15,16,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,11,12,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,13,14,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[221,222,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[29,7,30,32,33,9,43,48,55,57,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[15,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[225],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[29,7,30,32,33,9,43,48,55,57,63],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[46,56,57,226,227,60,61,65,17,78,84,85,86,228,229,230,11,12,231,232,233,234,235,123,236,237,238,239,240,241,242,243,244,245,24,246,13,14,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,215,217,218,264,219,265,266,267,268,220,269,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:327","failures":[271,272,273,274],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[22,23,24,275,25,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1149","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[221,222,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[27,28,29,7,276,8,30,31,32,33,34,9,10,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,3,277,50,51,52,278,53,54,279,280,281,282,283,284,55,56,57,58,59,226,227,60,61,62,63,285,64,65,66,67,68,69,286,70,71,72,287,73,288,289,290,1,2,291,292,293,294,15,16,17,295,296,297,298,299,74,300,301,302,303,304,305,75,76,77,78,79,80,81,82,83,84,85,86,228,306,307,87,88,308,229,89,230,11,12,231,90,91,92,232,93,233,94,95,96,234,235,97,98,99,100,101,102,103,104,309,310,105,311,312,313,106,107,108,314,315,316,317,318,319,320,109,321,322,323,324,325,326,327,110,328,329,330,331,332,333,111,334,335,112,336,337,338,339,340,341,342,343,344,113,345,346,347,348,349,114,350,351,115,352,116,353,117,118,119,120,354,355,121,356,357,358,359,360,361,362,363,364,122,365,366,123,367,124,125,368,369,370,126,371,372,373,374,375,376,377,271,272,0,127,236,378,5,237,128,129,130,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,131,238,132,133,134,135,136,137,401,402,403,404,405,138,139,406,407,408,409,410,411,412,225,413,140,414,415,416,417,418,419,420,421,221,422,423,424,425,426,427,428,429,430,431,432,6,433,434,141,142,239,435,143,144,436,437,438,439,145,146,147,440,441,442,148,149,443,150,444,445,446,19,447,448,449,240,241,242,450,243,244,451,245,24,151,246,13,14,247,452,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,453,454,172,455,173,174,275,248,175,176,249,250,177,178,179,180,181,182,456,457,458,459,183,460,184,185,186,187,188,461,189,190,462,191,463,464,20,465,466,467,468,469,251,252,470,253,254,255,256,471,257,258,472,259,260,261,262,263,473,273,274,474,475,476,477,478,479,480,481,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,482,21,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,214,514,515,215,216,217,218,264,219,516,265,266,267,268,220,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[276,234,249],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[485,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[27,28,8,30,31,32,36,38,39,41,42,48,49,3,285,89,401,402,403,404,405,138,139,141,142,143,151,178,179,180,181,182,192,514,514,515,515],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[311,517,518,514,515],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[50,52,278,53,189,491,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.UsageTest.argumentsOrdered":235,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":499,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":267,"org.easymock.tests2.DelegateToTest.testReturnException":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":476,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":508,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":88,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":232,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":468,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":403,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":182,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":384,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":73,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":408,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":53,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":439,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":387,"org.easymock.samples.PartialClassMockTest.testGetArea":214,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":20,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":224,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":466,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":471,"org.easymock.tests.MockClassControlTest.testEquals":480,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":513,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":404,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":438,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":460,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":108,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":388,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":423,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":309,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":380,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":507,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":243,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":46,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":401,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":189,"org.easymock.tests.MockClassControlTest.testHashCode":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":296,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":512,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":377,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":295,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":478,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.ReplayStateInvalidCallsTest.times":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":393,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests2.UsageTest.resumeIfFailure":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":505,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.samples.SupportTest.voteForRemovals":220,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":511,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":288,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":44,"org.easymock.tests2.DelegateToTest.testWrongClass":52,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":390,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":514,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":361,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":25,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":382,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":280,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":147,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":416,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":509,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":435,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":510,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":230,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":281,"org.easymock.tests2.NameTest.nameForMocksControl":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":335,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":252,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":397,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":45,"org.easymock.tests.MockingTest.testTwoMocks":442,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":394,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":284,"org.easymock.samples.ExampleTest.removeNonExistingDocument":516,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":297,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":118,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":474,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":290,"org.easymock.tests.UsageVerifyTest.twoThrows":146,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":464,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":354,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.UsageVarargTest.differentLength":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":317,"org.easymock.tests2.CallbackTest.callback":54,"org.easymock.tests2.UsageConstraintsTest.equals":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":239,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":469,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":6,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":396,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":375,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":391,"org.easymock.tests2.DependencyTest.testInterfaceMocking":87,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":151,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":115,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":515,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":357,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":268,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":286,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":381,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":379,"org.easymock.tests2.NameTest.nameForMock":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":518,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":187,"org.easymock.tests2.MockedExceptionTest.testRealException":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":502,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests2.NameTest.nameForStrictMock":374,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":385,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":76,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":341,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":279,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":248,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":422,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":450,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":399,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":289,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":389,"org.easymock.tests2.CompareToTest.testLessThan":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":492,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":275,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":395,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":452,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":266,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":180,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":81,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
