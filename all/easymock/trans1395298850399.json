[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[29,30,31,32],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[33,34,35,36,0,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46,47,48,49,50,30,51,33,34,52,35,53,36,0,54,55,56,57,58,59,60,61,31,62,38,63,64,32,39,65,66,67,68,69,40,70,71,72,73,74,75,42,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,9,43,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,10,11,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,19,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,22,24,187,188,26,27,28,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[44,45,192,46,47,193,48,194,195,196,197,198,199,49,50,200,201,202,203,204,205,30,51,33,34,52,35,53,36,0,54,37,55,56,57,58,59,60,61,31,62,38,63,64,206,32,39,65,66,207,67,68,69,208,40,70,41,71,72,209,210,73,74,75,42,76,77,78,79,80,81,82,83,84,211,85,212,86,87,88,89,90,213,91,92,93,9,214,43,215,94,95,216,217,218,96,97,98,99,219,100,220,101,221,222,223,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,224,117,118,119,120,225,121,122,123,124,125,226,126,227,228,229,10,230,11,12,231,127,128,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,253,254,255,256,152,257,153,154,155,19,258,156,157,259,260,158,261,262,263,21,159,264,160,265,161,162,163,164,165,166,167,266,169,170,171,267,268,269,270,271,272,273,274,275,276,277,278,177,178,179,279,280,180,281,181,182,183,184,185,282,22,23,24,283,284,285,286,287,288,289,187,188,290,291,25,26,292,27,28,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[72,76,234,240,246,250,252,130,136,142,146,148,155,263,21,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[300,301],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[127,128,232,304],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[44,305,306,45,192,46,47,193,48,307,194,195,196,197,198,199,49,50,308,309,200,201,202,203,204,310,205,30,51,33,34,311,52,35,53,36,0,54,37,55,56,57,58,59,60,61,31,62,38,63,64,206,32,39,65,66,312,313,314,315,316,207,317,318,67,319,68,69,320,321,208,322,40,70,41,71,72,209,210,73,74,75,42,323,76,77,78,79,80,81,82,83,324,325,84,326,327,328,211,85,212,329,330,86,87,88,89,90,331,332,213,333,334,335,336,337,338,91,339,340,341,342,343,344,92,93,9,214,43,215,94,95,216,217,218,96,97,345,346,98,99,219,347,348,349,350,351,100,352,353,354,355,356,357,358,220,101,221,359,222,360,361,362,363,223,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,224,117,118,119,120,225,364,365,366,121,367,368,122,369,370,371,372,373,374,375,376,377,123,378,379,380,381,382,124,383,384,125,385,386,226,126,227,228,229,10,230,11,12,231,127,128,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,387,388,389,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,390,391,392,149,150,393,151,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,253,420,254,255,421,256,422,13,14,423,424,152,257,153,154,155,19,20,258,156,157,259,260,158,261,425,262,263,426,427,428,429,430,431,432,433,434,435,436,297,437,438,21,439,440,441,159,264,442,160,265,161,162,163,164,165,166,300,167,266,168,301,169,170,171,443,444,445,446,447,448,449,450,451,172,452,173,453,454,455,456,457,458,295,459,174,175,460,176,267,268,269,461,270,271,272,273,274,275,276,277,278,462,463,464,465,466,467,468,469,470,177,471,178,179,279,280,180,281,472,473,474,181,182,183,184,185,475,186,476,477,478,479,480,481,482,483,484,485,486,282,487,22,23,24,283,488,284,285,286,287,489,288,289,187,188,290,291,25,26,292,27,28,293,294,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[45,192,46,47,193,48,194,195,196,197,198,199,49,204,205,30,51,33,34,52,35,53,36,0,54,55,56,57,58,59,60,61,31,62,38,63,64,206,32,39,65,66,40,70,41,71,72,209,210,73,74,75,42,323,76,77,78,79,80,81,82,83,84,86,87,88,89,90,331,332,213,333,91,92,93,9,43,215,94,95,217,96,97,98,99,219,100,220,101,221,222,223,102,103,106,107,110,111,112,113,114,115,116,117,118,119,120,225,121,125,226,126,227,229,10,230,11,12,231,128,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,409,410,411,412,413,253,254,255,152,153,154,155,19,156,157,259,158,261,262,263,21,159,264,160,265,161,162,163,164,165,166,167,266,301,169,170,171,267,268,269,270,271,273,274,275,276,277,467,468,177,178,179,279,280,180,181,182,183,184,185,477,480,483,484,485,486,282,487,22,23,24,284,285,286,287,288,289,187,188,291,26,292,27,28,293],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[3,7,15,16,20,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.LastControl:92","failures":[33,34,36,0,37,38,40,41,42],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[406],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[490],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[40,41,71,72,209,210,73,75,491,42,323,77],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[3,7,15,16,20,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[195,198,334,335,336,337,338,91,339,340,341,342,343,344,347,348,349,350,351,100,352,353,354,355,356,357],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[44,305,305,306,306,196,197,50,308,316,207,317,318,67,319,68,69,320,321,208,322,78,79,81,82,83,324,84,326,327,328,211,85,212,329,330,331,332,213,345,346,360,492,493,361,103,104,105,106,108,109,364,365,366,121,367,368,122,369,370,371,372,373,374,375,376,377,123,378,379,380,381,382,124,383,384,127,232,390,391,392,149,150,151,396,414,417,261,433,434,435,436,297,437,438,300,167,266,168,301,278,462,463,464,465,466,467,468,469,470,177,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[33,0,57,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[127,128,232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[305,305,306,306,30,51,52,35,53,36,57,59,60,31,62,39,65,66,323,10,409,410,411,412,413,159,178,179,180,181,182,183,184,185,187,188,26],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":195,"org.easymock.tests2.DelegateToTest.testReturnException":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":484,"org.easymock.tests.MockingTest.testPartialClassMocking":149,"org.easymock.tests.MockClassControlTest.testToString":463,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageTest.wrongArguments":214,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":473,"org.easymock.samples.ExampleTest.answerVsDelegate":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":417,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":395,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":180,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":411,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":425,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":405,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.DependencyTest.testClassMocking":345,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":432,"org.easymock.tests2.DependencyTest.testClassMockingSupport":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":13,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":313,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":399,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":416,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":384,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":400,"org.easymock.tests.MockingTest.testInterfaceMocking":393,"org.easymock.tests2.CompareToTest.testLessOrEqual":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":190,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":482,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":298,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests.MockClassControlTest.testEquals":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":121,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":430,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":314,"org.easymock.tests.MockNameTest.defaultName":442,"org.easymock.tests2.UsageConstraintsTest.testMatches":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":397,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":431,"org.easymock.samples.BasicClassMockTest.testPrintContent":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":340,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":483,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":76,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":288,"org.easymock.tests.UsageExpectAndReturnTest.longType":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":428,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":424,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":409,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.UsageCallCountTest.tooManyCalls":289,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":104,"org.easymock.tests.MockingTest.testClassMocking":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":488,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":213,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests.MockTypeTest.fromEasyMockClass":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":480,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests.MockClassControlTest.testHashCode":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":375,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":312,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":433,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":478,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":387,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":124,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":5,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":486,"org.easymock.tests2.StubTest.stubWithReturnValue":102,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests2.SerializationTest.testAllMockedMethod":232,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":460,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":385,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":362,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":407,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":191,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":378,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":196,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":404,"org.easymock.tests2.StubTest.stub":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":403,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":230,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":203,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":150,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":65,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":302,"org.easymock.samples.ExampleTest.removeNonExistingDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":435,"org.easymock.tests2.ConstraintsToStringTest.andToString":6,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":322,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":278,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":123,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests.UsageVarargTest.differentLength":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":326,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":279,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":474,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.MockingTest.testStrictClassMocking":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":107,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":479,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.NameTest.nameForNiceMock":202,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.samples.ExampleTest.addDocument":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.tests2.ConstraintsToStringTest.orToString":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":209,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":130,"org.easymock.tests2.UsageConstraintsTest.testSame":53,"org.easymock.samples.SupportTest.addDocument":199,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":341,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":394,"org.easymock.tests2.NameTest.nameForMock":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":363,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests2.NameTest.nameForStrictMock":201,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":436,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":207,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":374,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":489,"org.easymock.tests2.UsageConstraintsTest.cmpTo":56,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":323,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":398,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":194,"org.easymock.tests2.ConstraintsToStringTest.notToString":4,"org.easymock.tests.UsageStrictMockTest.testVerify":294,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":198,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.LimitationsTest.abstractClass":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":268}}]
