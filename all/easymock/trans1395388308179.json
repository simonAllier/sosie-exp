[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[46,2,47,3,4,5,6,7,8,9,11,48,49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[46,2,47,3,4,5,6,7,8,51,9,11,48,49,50],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,53,54,55,56,57,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:65","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,53,77,78,35,54,55,56,57,58,79,80,81,82,83,84,85,86,87,59,88,89,90,91,48,92,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[93],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[94,95,96,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[86,97,91,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[99,100,82,84,101,102,103,89,2,3,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":66,"org.easymock.tests2.StubTest.stubWithReturnValue":92,"org.easymock.tests2.NameTest.nameForNiceMock":41,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":76,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":65,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":106,"org.easymock.tests2.NameTest.nameForMock":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":53,"org.easymock.tests2.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":73,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":102,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":45,"org.easymock.tests2.NameTest.nameForMocksControl":42,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":64,"org.easymock.tests2.NameTest.nameForStrictMock":40,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests2.CompareToTest.testNotComparable":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":104,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":109,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":67,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":1,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":70,"org.easymock.tests2.CompareToTest.testLessThan":98,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":24,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":28,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":105,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests2.UsageConstraintsTest.constraints":99,"org.easymock.tests.CapturesMatcherTest.test":46,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests2.CompareToTest.testGreateThan":60,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":72,"org.easymock.tests2.CaptureTest.testCaptureAll":47}}]
