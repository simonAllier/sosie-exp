[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[20],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[21,22,23,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[17,71],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[72,73,74,75,76],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[9,10,81,82,83,84,85,86,87,11,88,89],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[28,94,95,96,97,98,99,100],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[101,95,96,97,98,99,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[13,103,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[104,105,106,51,107,108,109,110,111,112,113,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[47,48,116,91,55],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[90,117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":111,"org.easymock.tests2.CompareToTest.testGreateOrEqual":75,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":109,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":97,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":90,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests2.UsageConstraintsTest.any":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":110,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":62,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests2.MockedExceptionTest.testRealException":107,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.CompareToTest.testCompareEqual":74,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":8,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests.MockingTest.testTwoMocks":63,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":96,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests2.CompareToTest.testLessOrEqual":76,"org.easymock.tests2.CompareToTest.testLessThan":72,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.tests2.UsageTest.defaultResetToNice":93,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests2.CaptureTest.testCapture":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":32,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":78,"org.easymock.tests2.CompareToTest.testGreateThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testAll":35,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":50}}]
