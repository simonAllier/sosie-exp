[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[14,15],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[16,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,6,55,56,57],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[58],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[59,60,61,7,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,76,77,78,79,80,81,82,83,84,85,86,20,87,88,89,8,90,9,10,11,91,92,21,0,93,94,95,96,97,58,98,99,100,101,102,103,104,105,106,107,108,109,110,111,16,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,22,130,131,132,133,23,24,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,53,239,240,54,241,242,243,244,6,245,246,55,247,248,57,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,12,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,13,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[59,60,61,7,62,63,64,65,66,67,68,69,70,71,72,18,18,19,19,73,74,75,76,77,78,79,80,81,82,83,84,85,86,20,87,88,89,8,90,9,10,11,91,92,21,0,94,95,96,97,58,98,99,100,101,102,103,104,105,106,107,108,109,110,111,16,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,22,130,132,133,23,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,55,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,289,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,12,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,13,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[59,70,71,18,18,19,19,20,88,21,128,129,22,130,133,23,28,31,41,47,166,167,169,170,171,172,174,177,178,179,180,500,501,502,236,238,503,239,240,242,243,244,245,247,248,504,249,282,287,301,322,373,374,375,377,413,414,415,417],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[20,55,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[21,506,1,2,3,4,5,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7,8,9,11,13],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[292,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[92,315,316,317,318,319,320,340,394,395,396,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,20,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,16,112,113,114,115,116,117,118,119,120,165,174,177,186,188,190,191,250,252,253,281,291,314,315,319,320,389,390,391,392,393,394,401,402,403,405,406,465,466,467,468,469,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[59,70,71,18,18,19,19,20,88,21,128,129,22,130,133,23,28,31,41,47,166,167,169,170,171,172,174,177,178,179,180,500,501,502,236,238,503,239,240,242,243,244,245,247,248,504,249,282,287,301,322,373,374,375,377,413,414,415,417],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[60,72,140,141,142,143,144,146,147,148,149,150,151,222,223,224,225,226,228,229,230,231,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[61,7,62,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,20,87,88,8,90,9,11,91,92,21,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,16,112,113,114,115,116,117,118,119,120,129,22,133,23,134,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,174,177,179,183,184,185,186,187,189,190,191,192,193,194,197,217,218,219,220,221,234,235,236,237,238,242,243,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,301,303,304,305,307,308,310,311,312,313,314,315,316,317,318,319,320,329,330,331,332,333,357,358,360,361,362,363,364,365,366,367,368,369,370,374,375,377,381,383,384,385,386,387,388,389,390,391,392,393,401,402,404,405,406,407,408,409,410,413,414,417,418,419,420,428,429,430,431,433,434,435,436,437,438,13,440,442,451,457,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[60,61,7,62,63,64,65,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,20,87,89,8,90,9,10,11,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,16,112,113,114,115,116,117,118,119,120,128,132,134,135,136,137,138,139,145,146,152,153,154,155,156,157,158,159,160,161,162,163,164,168,183,184,185,186,187,188,189,190,191,192,193,194,197,198,508,509,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,221,227,228,234,235,236,237,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,288,289,291,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,329,330,331,332,333,349,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,399,401,402,403,404,405,406,407,408,409,410,411,413,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,436,437,438,439,13,440,441,442,443,444,445,446,447,448,449,450,451,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[348,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[67,74,80,81,86,11,94,109,16,120,154,183,184,217,250,252,253,259,265,269,271,281,345,349,358,420,470,476,482,486,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"message"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[394,395,396],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[321,326,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[74,80,81,86,101,105,190,281,319,389,390,391,392,393,401,402,406,465,466,467,468,469,490,491],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests2.UsageTest.argumentsOrdered":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":343,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":157,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.MockingTest.testPartialClassMocking":374,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":212,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":470,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageTest.wrongArguments":155,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":387,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":489,"org.easymock.tests.UsageTest.moreThanOneArgument":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":421,"org.easymock.tests.UsageTest.argumentsOrdered":364,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":393,"org.easymock.tests.ReplayStateInvalidUsageTest.times":461,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests2.DependencyTest.testClassMocking":195,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":221,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":284,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":383,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":425,"org.easymock.tests2.DelegateToTest.testDelegate":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":485,"org.easymock.tests.LimitationsTest.mockFinalMethod":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":219,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":455,"org.easymock.tests.UsageThrowableTest.throwError":273,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":286,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":397,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":49,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":456,"org.easymock.tests.MockingTest.testInterfaceMocking":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":445,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":471,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":479,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":306,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":487,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":500,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":499,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":435,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":279,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":16,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":180,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":298,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":181,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":417,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":260,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":154,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":351,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":433,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":488,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":492,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":486,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":434,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":475,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":278,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":427,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":236,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":420,"org.easymock.tests.MockTypeTest.fromEasyMockClass":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":252,"org.easymock.tests.UsageExpectAndReturnTest.object":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":52,"org.easymock.tests.UsageTest.exactCallCountByLastCall":365,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":269,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":38,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":423,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":165,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":508,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.DefaultClassInstantiatorTest.object":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":447,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":143,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.StubTest.stubWithReturnValue":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":505,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":482,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":355,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":135,"org.easymock.tests.UsageExpectAndThrowTest.object":480,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":400,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":9,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":491,"org.easymock.tests.UsageStrictMockTest.range":408,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":126,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":481,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":386,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":446,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.UsageVerifyTest.twoReturns":437,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":42,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":431,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":497,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":460,"org.easymock.tests2.StubTest.stub":91,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":295,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":459,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":272,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":142,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":144,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":30,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":474,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":245,"org.easymock.tests.MockingTest.testNicePartialClassMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":140,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":451,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":478,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":457,"org.easymock.tests.UsageStrictMockTest.differentMethods":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":293,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":32,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":137,"org.easymock.tests.UsageVerifyTest.twoThrows":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":93,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.LimitationsTest.privateConstructor":300,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":280,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":141,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":217,"org.easymock.tests2.UsageConstraintsTest.equals":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":467,"org.easymock.tests.UsageCallCountTest.tooFewCalls":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":388,"org.easymock.tests.UsageThrowableTest.throwCheckedException":277,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":462,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.tests.ObjectMethodsTest.testHashCode":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests2.AnswerTest.stubAnswer":138,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":406,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":246,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":231,"org.easymock.tests.UsageThrowableTest.noUpperLimit":274,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":292,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.samples.SupportTest.addDocument":68,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":131,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":33,"org.easymock.tests.GenericTest.testPackageScope":413,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":57,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":484,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":384,"org.easymock.tests2.MockedExceptionTest.testRealException":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":466,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":464,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":34,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":432,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":454,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":430,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":407,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests.UsageStrictMockTest.testVerify":411,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":404,"org.easymock.tests2.CompareToTest.testGreateThan":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":259,"org.easymock.tests.LimitationsTest.abstractClass":299,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304}}]
