[{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[4,5,6,7],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,0,8,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,4,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,5,333,334,335,336,337,6,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,1,432,433,2,3,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[140,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[110,254,257,258,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[509,510,110,254,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[9,10,11,13,13,14,14,37,38,39,43,95,139,140,141,143,188,207,212,313,390,392,403,513,404,405,407,408,409,410,413,414,514,415,429,515,516,517,437,438,440,441,442,443,445,448,449,450,451,454,455,456,457,460,461,487,490,500,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[85,283,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[13,13,14,14,96,97,98,99,100,117,167,168,169,170,171,199,200,203,236,237,255,4,315,319,320,321,322,328,330,331,5,333,338,339,340,383,464,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[317,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,518,130,131,132,133,134,135,519,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,0,8,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,308,309,310,311,312,313,314,4,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,5,333,334,335,336,337,6,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,520,404,405,521,406,407,408,409,522,410,411,412,413,414,523,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,524,431,1,432,433,2,3,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[19,240,393,394,395,396,397,398],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":317,"org.easymock.tests2.UsageTest.argumentsOrdered":426,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":278,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":421,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":46,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests.MockClassControlTest.testToString":189,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":466,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":389,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":324,"org.easymock.tests2.UsageTest.wrongArguments":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":199,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":212,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":145,"org.easymock.tests2.UsageConstraintsTest.testNull":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":440,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":301,"org.easymock.tests2.CaptureTest.testPrimitive":375,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":98,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":171,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":65,"org.easymock.tests.ReplayStateInvalidUsageTest.times":91,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.DependencyTest.testClassMocking":386,"org.easymock.tests2.AnswerTest.answer":431,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":402,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":209,"org.easymock.tests2.CaptureTest.testAnd":372,"org.easymock.tests2.UsageTest.strictResetToDefault":417,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":296,"org.easymock.tests2.DelegateToTest.testDelegate":398,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":30,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests.LimitationsTest.mockFinalMethod":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":35,"org.easymock.tests2.DependencyTest.testClassMockingSupport":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":376,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":400,"org.easymock.tests.UsageThrowableTest.throwError":122,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":85,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":211,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":508,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":68,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":142,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":86,"org.easymock.tests2.CompareToTest.testLessOrEqual":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":495,"org.easymock.tests2.UsageTest.niceToStrict":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests2.ThreadingTest.testChangeDefault":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":407,"org.easymock.tests2.MockBuilderTest.testCreateMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":101,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":329,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":381,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":178,"org.easymock.tests2.EasyMockSupportClassTest.testAll":487,"org.easymock.tests.MockClassControlTest.testEquals":193,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":33,"org.easymock.tests2.CaptureTest.testCaptureAll":373,"org.easymock.tests.MockNameTest.defaultName":107,"org.easymock.tests2.UsageConstraintsTest.testMatches":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":99,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":83,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests.UsageVarargTest.allKinds":186,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":471,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":519,"org.easymock.tests2.UsageConstraintsTest.greaterThan":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":451,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":136,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":443,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":416,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":294,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":45,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":295,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":428,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.UsageTest.moreThanOneArgument":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":384,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":286,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":185,"org.easymock.tests.GenericTest.testBridgedEquals":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":58,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":31,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":292,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":514,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":96,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.UsageCallCountTest.tooManyCalls":59,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":455,"org.easymock.tests.MockingTest.testNiceClassMocking":146,"org.easymock.tests.MockingTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":513,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":52,"org.easymock.tests2.UsageConstraintsTest.testContains":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":313,"org.easymock.tests2.UsageConstraintsTest.testFind":319,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":103,"org.easymock.tests.MockTypeTest.fromEasyMockClass":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":436,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":300,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":180,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":267,"org.easymock.tests.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":104,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":430,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests.MockClassControlTest.testHashCode":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":497,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":399,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":341,"org.easymock.tests.UsageVarargTest.varargCharAccepted":179,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":518,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":422,"org.easymock.tests.DefaultClassInstantiatorTest.object":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":119,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":449,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":191,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.ReplayStateInvalidCallsTest.times":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":245,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":506,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":190,"org.easymock.tests2.UsageTest.resumeIfFailure":427,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":48,"org.easymock.tests2.StubTest.stubWithReturnValue":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":6,"org.easymock.tests2.SerializationTest.testAllMockedMethod":392,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":290,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":106,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":335,"org.easymock.tests2.DelegateToTest.testWrongClass":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":309,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":484,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":263,"org.easymock.tests2.CaptureTest.testCaptureNone":380,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":479,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":174,"org.easymock.tests.UsageVarargTest.varargByteAccepted":184,"org.easymock.tests2.ThreadingTest.testThreadSafe":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":501,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":56,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":288,"org.easymock.tests2.UsageConstraintsTest.any":326,"org.easymock.tests2.StubTest.stub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":47,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":89,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":474,"org.easymock.tests2.SerializationTest.testClass":390,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":347,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":517,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":79,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":477,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":480,"org.easymock.tests2.NameTest.nameForMocksControl":470,"org.easymock.tests2.MockedExceptionTest.testMockedException":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":489,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":435,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":437,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":410,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests2.CaptureTest.testCaptureLast":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":78,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":336,"org.easymock.tests.MockingTest.testTwoMocks":139,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":425,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":339,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":483,"org.easymock.samples.ExampleTest.removeNonExistingDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":87,"org.easymock.tests.UsageStrictMockTest.differentMethods":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":482,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":132,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":357,"org.easymock.tests2.MockBuilderTest.testCreateMockString":415,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":491,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":173,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":500,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":450,"org.easymock.tests.LimitationsTest.privateConstructor":42,"org.easymock.tests2.UsageConstraintsTest.testNotNull":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":311,"org.easymock.tests2.UsageTest.defaultResetToNice":424,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":280,"org.easymock.tests.UsageVarargTest.differentLength":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.CallbackTest.callback":465,"org.easymock.tests2.UsageConstraintsTest.equals":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":446,"org.easymock.tests.UsageTest.openCallCountByLastCall":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":201,"org.easymock.tests.UsageCallCountTest.tooFewCalls":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":481,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":459,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":266,"org.easymock.tests2.NameTest.nameForNiceMock":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":77,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":359,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":388,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":507,"org.easymock.tests2.DelegateToTest.testStubDelegate":395,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":429,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.UsageThrowableTest.noUpperLimit":123,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":305,"org.easymock.tests2.SerializationTest.test":391,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":321,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":458,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":62,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":492,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":60,"org.easymock.tests2.NameTest.nameForMock":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":523,"org.easymock.tests2.UsageStrictMockTest.differentMethods":476,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":447,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":310,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":200,"org.easymock.tests2.NameTest.nameForStrictMock":468,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":434,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":133,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":404,"org.easymock.tests2.UsageStrictMockTest.range":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":496,"org.easymock.tests2.CaptureTest.testCaptureRightOne":382,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":478,"org.easymock.tests2.UsageConstraintsTest.testOr":322,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":438,"org.easymock.tests.UsageTest.wrongArguments":111,"org.easymock.tests2.MockBuilderTest.testWithConstructor":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":493,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":182,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":135,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":57,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":80,"org.easymock.tests2.UsageConstraintsTest.cmpTo":327,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":423,"org.easymock.tests2.CaptureTest.testCaptureFromStub":383,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":84,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":405,"org.easymock.tests.UsageTest.unexpectedCallWithArray":110,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.tests2.UsageConstraintsTest.constraints":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":32,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":378,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.LimitationsTest.abstractClass":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":170,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":298}}]
