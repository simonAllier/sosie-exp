[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[59],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(this.org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[27,61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[65,105,106,107],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[108],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[109,110,111,63,63,64,64,65,106,112,71,74,84,90,113,114,115,116,117,118,119,120,121,122,123,124,125,126,99,127,128,100,102,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,55,159,160,161,162,163],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[109,110,111,63,63,64,64,65,106,164,165,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,113,114,166,167,115,116,117,118,96,119,120,121,122,123,124,125,126,99,127,128,100,102,103,130,131,132,133,134,135,136,168,169,137,138,139,140,170,171,142,143,144,145,146,147,150,172,151,173,174,175,176,177,178,179,180,152,153,154,181,182,183,184,158,185,159,160,161,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[109,110,111,63,63,64,64,65,106,71,74,84,90,113,114,115,116,117,118,119,120,121,124,125,126,99,127,128,100,102,130,131,132,133,134,135,136,137,138,139,140,142,144,152,153,154,158,159,160,161,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[113,116,122,135,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[186,187,188,189,111,190,191,192,193,28,29,30,71,74,84,90,114,115,117,118,120,125,126,99,127,194,128,100,102,195,130,131,196,132,133,134,136,138,139,140,197,198,199,200,201,47,48,49,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,158,160,161,162,163,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[186,0,187,188,228,189,229,230,109,110,111,231,190,232,63,64,233,234,1,191,2,3,4,65,105,106,235,236,192,193,237,238,239,240,241,242,243,244,245,246,247,248,164,249,250,251,165,252,253,112,254,255,256,257,258,259,260,261,262,263,28,264,29,30,265,266,267,31,32,268,269,270,271,272,33,34,273,274,7,8,9,10,275,276,277,278,279,280,11,12,281,282,283,284,13,14,285,15,16,17,18,19,20,21,22,286,287,288,289,290,291,292,293,23,24,294,295,296,25,26,297,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,298,113,93,114,166,94,167,115,116,117,95,118,299,96,119,120,98,121,300,301,302,303,304,305,306,307,308,309,310,311,122,123,124,312,313,314,315,316,317,125,126,99,127,318,194,128,100,101,319,320,321,322,323,324,102,103,325,129,326,327,328,195,329,330,331,332,333,334,335,336,337,338,339,340,341,342,130,131,196,132,133,134,135,343,136,168,169,137,138,139,140,170,171,141,42,5,344,43,44,345,346,347,348,197,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,45,46,104,368,369,370,198,199,200,201,371,142,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,108,411,412,413,414,143,144,145,146,147,148,149,150,172,151,173,174,175,176,177,178,179,180,152,153,154,181,155,415,416,47,417,48,49,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,182,433,434,435,436,183,437,438,156,50,439,51,440,441,52,53,442,443,444,445,446,447,448,449,450,451,54,452,453,454,455,456,457,157,458,459,460,461,6,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,202,203,204,205,483,206,207,208,209,210,211,484,485,212,213,486,214,215,216,487,217,218,219,220,221,222,223,224,225,226,184,488,158,185,55,56,57,489,490,491,492,493,494,495,496,497,159,160,161,498,162,499,500,501,163,227,502,503,504],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[505,7,8,9,10,275,276,277,278,279,280,506,11,12,281,282,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[65,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[279,506,11,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[65,105,106,107],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[508,39,7,509,510,372,416,47,439,51,440,441,52,53,442,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[180],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[254,122,123,124,312,346,347,348,350,372,373,374,375,376,377,466,495],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[511],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[65,105,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[27,61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[7,9,11,13,14,18,19,21,23],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[186,0,187,188,228,189,229,230,109,110,111,231,190,232,63,64,233,234,1,191,2,3,4,65,105,106,235,236,192,193,237,238,239,240,241,242,243,244,245,246,247,248,164,249,250,251,165,252,253,112,254,255,256,257,258,259,260,261,262,263,28,264,29,30,265,266,267,31,32,268,269,270,271,272,33,34,273,274,7,8,9,10,275,276,277,278,279,280,11,12,281,282,283,284,13,14,285,15,16,17,18,19,20,21,22,286,287,288,289,290,291,292,293,23,24,294,295,296,25,26,297,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,298,113,93,114,166,94,167,115,116,117,95,118,299,96,119,120,98,121,300,301,302,303,304,305,306,307,308,309,310,311,122,123,124,312,313,314,315,316,317,125,126,99,127,318,194,128,100,101,319,320,321,322,323,324,102,103,325,129,326,327,328,195,329,330,331,332,333,334,335,336,337,338,339,340,341,342,130,131,196,132,133,134,135,343,136,168,169,137,138,139,140,170,171,141,42,5,344,43,44,345,346,347,348,197,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,45,46,104,368,369,370,198,199,200,201,371,142,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,108,411,412,413,414,143,144,145,146,147,148,149,150,172,151,173,174,175,176,177,178,179,180,152,153,154,181,155,415,416,47,417,48,49,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,182,433,434,435,436,183,437,438,156,50,439,51,440,441,52,53,442,443,444,445,446,447,448,449,450,451,54,452,453,454,455,456,457,157,458,459,460,461,6,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,202,203,204,205,483,206,207,208,209,210,211,484,485,212,213,486,214,215,216,487,217,218,219,220,221,222,223,224,225,226,184,488,158,185,55,56,57,489,490,491,492,493,494,495,496,497,159,160,161,498,162,499,500,501,163,227,502,503,504],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.RecordState:318","failures":[357,360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":269,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":373,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests.MockClassControlTest.testToString":145,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":379,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":183,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":500,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":339,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":398,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":108,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":37,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests2.DependencyTest.testClassMocking":235,"org.easymock.tests2.AnswerTest.answer":319,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":261,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":434,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":334,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":394,"org.easymock.tests.LimitationsTest.mockFinalMethod":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":493,"org.easymock.tests2.DependencyTest.testClassMockingSupport":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":45,"org.easymock.tests2.CaptureTest.testCapture1_2446744":275,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":259,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":422,"org.easymock.tests.UsageThrowableTest.throwError":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":436,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":483,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":92,"org.easymock.samples.PartialClassMockTest.testGetArea":111,"org.easymock.tests.MockingTest.testInterfaceMocking":498,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":369,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":79,"org.easymock.tests2.UsageTest.niceToStrict":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":245,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":388,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":433,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":289,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":344,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":288,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":280,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":402,"org.easymock.tests.MockClassControlTest.testEquals":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":491,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":260,"org.easymock.tests.MockNameTest.defaultName":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":290,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.samples.ExampleTest.voteForRemovals":189,"org.easymock.tests.UsageVarargTest.allKinds":410,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":492,"org.easymock.samples.BasicClassMockTest.testPrintContent":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":363,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":377,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":178,"org.easymock.tests2.UsageConstraintsTest.greaterThan":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.samples.ExampleTest.voteForRemoval":187,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":170,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":332,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":372,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":234,"org.easymock.tests2.CaptureTest.testCaptureFirst":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":333,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":485,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests2.CaptureTest.testCapture2_2446744":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":120,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":409,"org.easymock.tests.GenericTest.testBridgedEquals":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":489,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":397,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":432,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":384,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":362,"org.easymock.tests.MockingTest.testNiceClassMocking":501,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.MockingTest.testClassMocking":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":444,"org.easymock.tests2.UsageConstraintsTest.testContains":287,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":15,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":459,"org.easymock.tests.MockTypeTest.fromEasyMockClass":435,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageExpectAndReturnTest.object":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":246,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":338,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":404,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":455,"org.easymock.tests.UsageTest.exactCallCountByLastCall":442,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":502,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":411,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":5,"org.easymock.tests.MockClassControlTest.testHashCode":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":81,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":412,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":258,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":298,"org.easymock.tests.UsageVarargTest.varargCharAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":172,"org.easymock.tests2.CaptureTest.testCaptureMultiple":505,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":270,"org.easymock.tests.DefaultClassInstantiatorTest.object":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":61,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":453,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":385,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":346,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests2.UsageTest.resumeIfFailure":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":375,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.samples.SupportTest.voteForRemovals":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":391,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":320,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":504,"org.easymock.tests.UsageExpectAndThrowTest.object":389,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":24,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":252,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":390,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":370,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":408,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":448,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":109,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":351,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":374,"org.easymock.tests.UsageExpectAndThrowTest.longType":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":176,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":239,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":317,"org.easymock.tests2.MockedExceptionTest.testMockedException":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":73,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":441,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":162,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":237,"org.easymock.tests2.CaptureTest.testCaptureLast":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":294,"org.easymock.tests.MockingTest.testTwoMocks":159,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":387,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":26,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":174,"org.easymock.tests2.ConstraintsToStringTest.andToString":38,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":121,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":75,"org.easymock.tests.UsageExpectAndThrowTest.floatType":381,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":322,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":325,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":488,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":67,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":364,"org.easymock.tests2.UsageTest.defaultResetToNice":272,"org.easymock.samples.ExampleTest.voteAgainstRemovals":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests.UsageVarargTest.differentLength":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":238,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":168,"org.easymock.tests.UsageTest.openCallCountByLastCall":440,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":350,"org.easymock.tests.UsageCallCountTest.tooFewCalls":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":496,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":495,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":324,"org.easymock.tests.ObjectMethodsTest.testHashCode":454,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":59,"org.easymock.tests2.NameTest.nameForNiceMock":316,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":329,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.AnswerTest.stubAnswer":323,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":407,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":102,"org.easymock.tests2.ConstraintsToStringTest.orToString":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":64,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":309,"org.easymock.tests.UsageThrowableTest.noUpperLimit":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":164,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":276,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":173,"org.easymock.tests2.UsageConstraintsTest.testSame":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":318,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":76,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":499,"org.easymock.tests2.NameTest.nameForMock":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":98,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":393,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests2.MockedExceptionTest.testRealException":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":349,"org.easymock.tests2.NameTest.nameForStrictMock":315,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":175,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":331,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":80,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":131,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.MockBuilderTest.testWithConstructor":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":77,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.UsageVarargTest.varargShortAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":421,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":166,"org.easymock.tests.UsageTest.unexpectedCallWithArray":439,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":447,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":487,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":417,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.tests2.ConstraintsToStringTest.notToString":36,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":232,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":490,"org.easymock.tests2.CompareToTest.testGreateThan":58,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":484,"org.easymock.tests.LimitationsTest.abstractClass":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":336}}]
