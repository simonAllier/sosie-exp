[{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[94,95,96,97,98,99,100,101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1,2,10,11,13,14,20,22,23,24,103,51,53,54,77,78,81,82,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.Invocation:99","failures":[3,120,121,63,122,123,124,125,126,127,128,129],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[131],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:29","sourceCode":"new org.easymock.internal.matchers.Any()","type":"CtNewClassImpl"},"failures":[133,134,4,11,135,136,137,138,139,140,141,142,143,144,145,146,147,148,51,149,121,107,113,150,119],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[1,2,13,151,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[152,153,154,155,8,156,157,158,159,32,35,160,161,162,38,39,40,163,164,165,166,167,64,65,168,66,67,68,69,70,123,169,71,72,73,74,75,170,171,172,173,174,175,89,176,177,178,179,180,90,181,182,91,92,183,184,185,185,186,186,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[187,188],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[189],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[190,131,191],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,3,192,193,194,4,195,13,14,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,19,20,212,213,27,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,47,53,54,230,130,56,231,232,233,149,234,235,236,237,238,239,240,241,189,242,77,80,243,244,83,107,108,110,111,113,150,118,119,245,246,247,248,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[249,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[56,251,231,232,233,149,252,253,132,121,93,254,255,240,106,107,108,109,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[256,165,257,166],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[0,1,2,152,153,154,155,258,259,260,261,262,3,192,193,194,263,264,265,266,267,268,269,133,134,270,271,272,4,273,274,275,195,276,277,6,278,279,7,8,9,10,11,12,13,14,15,135,136,137,138,139,280,281,282,283,284,156,285,196,286,287,288,289,290,291,140,141,142,143,144,16,292,293,294,17,18,197,198,295,296,199,297,200,201,202,203,298,204,205,206,207,299,208,209,210,211,19,20,21,22,212,213,23,24,25,27,157,159,300,32,33,34,35,36,37,301,302,303,304,145,146,160,305,306,307,308,147,309,310,311,312,161,38,39,40,163,313,314,315,316,41,317,318,42,43,44,214,215,319,320,216,321,217,218,219,220,322,221,222,223,224,323,225,226,227,228,45,46,324,325,326,327,328,229,164,47,48,49,50,51,52,53,54,55,165,257,230,130,56,251,231,232,233,149,252,253,132,121,329,234,235,236,237,57,238,239,93,254,330,331,332,255,240,241,333,58,334,59,335,60,61,336,62,63,337,122,338,167,64,65,168,339,66,67,340,341,342,343,68,69,70,123,169,71,72,73,74,75,344,345,170,346,189,242,76,347,77,78,79,80,243,244,348,81,82,83,84,349,350,351,352,187,188,106,107,108,109,110,111,112,113,150,114,116,117,118,119,245,353,246,247,248,354,355,171,172,173,174,175,89,356,176,177,178,179,180,90,181,182,91,92,357,358,124,185,185,186,186,125,359,360,126,127,128,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[56,251,232,149,252,132,93,255,106,108,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.LastControl:92","failures":[132,121],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[258,261,262,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,153,154,155,3,192,193,194,263,264,265,266,267,362,133,134,4,274,275,195,6,278,279,9,10,11,12,13,14,15,363,135,136,137,138,139,280,281,282,283,284,285,286,287,288,289,290,291,140,141,144,18,197,198,295,296,199,297,200,201,202,203,298,204,205,206,207,299,208,209,210,211,19,20,21,22,212,213,23,24,25,364,29,157,301,302,303,304,365,366,367,368,369,370,371,372,373,374,375,376,145,146,160,305,306,307,308,147,309,161,162,38,39,40,163,313,314,316,41,317,318,43,44,214,215,319,320,216,321,217,218,219,220,322,221,222,223,224,323,225,226,227,228,45,325,326,327,229,164,48,50,51,52,53,54,55,165,257,230,130,56,251,231,232,233,149,252,253,121,329,234,235,236,237,57,238,239,93,254,330,332,255,240,241,333,58,334,59,335,60,61,336,62,63,337,122,338,167,64,65,168,339,66,67,340,341,342,343,68,123,169,71,72,73,74,75,344,345,170,346,377,189,76,347,77,78,79,243,244,348,81,82,83,84,349,187,188,106,109,110,114,116,117,118,353,246,247,248,354,355,171,172,173,174,175,89,356,176,177,178,179,180,90,181,182,91,357,358,185,185,186,186,125,359,360,127,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[251,232,252,132,255,106,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,4,11,13,14,20,103,379,380,151,51,53,54,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,381,382,152,153,154,383,155,384,385,386,258,259,260,261,262,3,192,193,194,263,264,265,266,267,387,388,389,390,391,392,393,394,361,395,396,397,398,399,400,401,268,402,403,404,405,406,269,407,408,362,249,409,410,190,250,411,412,133,134,270,271,272,4,413,414,415,416,417,418,5,419,420,421,422,273,423,274,275,195,276,277,6,278,279,7,8,9,424,10,11,12,13,14,15,363,135,136,137,138,139,280,281,282,283,284,156,285,196,286,287,288,289,290,291,140,141,142,143,144,16,292,293,294,17,18,425,197,198,295,296,199,297,200,201,202,203,298,204,205,206,207,299,208,209,210,211,19,20,21,22,212,213,23,24,25,26,364,27,28,426,427,29,30,31,428,157,158,159,300,32,429,430,33,34,35,36,37,301,302,303,304,365,366,367,368,369,370,371,372,373,374,375,376,145,146,431,432,160,433,305,306,307,308,147,309,310,311,312,161,162,38,39,40,163,313,314,434,315,435,316,41,317,318,42,43,44,214,215,319,320,216,321,217,218,219,220,322,221,222,223,224,323,225,226,227,228,436,437,438,439,440,45,46,441,442,443,444,445,324,325,326,327,328,229,164,100,446,47,447,448,449,450,451,48,49,452,453,454,455,456,50,457,51,52,53,54,55,165,257,166,230,130,56,251,458,231,232,233,149,252,253,132,121,329,234,235,236,237,57,238,239,93,254,330,331,332,255,240,241,333,58,334,59,335,60,61,336,62,63,337,122,338,167,64,65,168,459,339,66,67,460,340,341,342,343,68,461,69,70,462,463,123,169,71,101,72,464,465,73,74,466,75,344,345,170,346,377,189,467,242,76,347,77,78,79,80,243,244,348,81,82,83,84,349,350,351,352,187,188,468,85,86,87,88,106,107,108,109,110,111,112,113,150,114,116,117,118,119,245,353,246,247,248,354,355,469,470,471,171,472,473,172,474,475,476,477,478,479,480,481,482,173,483,484,485,486,487,174,488,489,175,89,356,176,177,178,179,490,180,491,492,90,181,182,91,493,92,494,495,357,358,496,497,498,499,500,501,502,503,124,183,184,504,185,186,125,359,360,126,127,505,128,378,129,506],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[104,106,107,108,109,110,111,112,113,150,114,116,117,118,119],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,258,259,260,261,262,3,192,193,194,263,264,265,266,267,268,269,133,134,270,271,272,4,413,414,415,417,418,5,419,420,421,422,273,274,275,195,276,277,6,278,279,7,9,424,10,11,12,13,14,15,363,135,136,137,138,139,280,281,282,283,284,285,196,286,287,288,289,290,291,140,141,142,143,144,16,292,293,294,17,18,197,198,295,296,199,297,200,201,202,203,298,204,205,206,207,299,208,209,210,211,19,20,21,22,212,213,23,24,25,26,27,28,426,427,29,30,31,33,34,36,37,301,302,303,304,145,146,305,306,307,308,147,309,310,311,312,315,316,41,317,318,42,43,44,214,215,319,320,216,321,217,218,219,220,322,221,222,223,224,323,225,226,227,228,45,46,507,508,324,325,326,327,328,229,47,48,49,50,457,51,52,53,54,55,257,230,130,56,251,231,232,233,149,252,253,132,121,329,234,235,236,237,57,238,239,93,254,330,331,332,255,240,241,333,58,334,59,335,60,61,336,62,63,337,122,338,167,339,340,341,342,343,344,345,170,346,189,242,76,347,77,78,79,80,243,244,348,81,82,83,84,349,350,351,352,187,188,85,86,87,88,106,107,108,109,110,111,112,113,150,114,116,117,118,119,245,353,246,247,248,354,355,171,356,357,358,503,124,504,359,360,126,127,505,128,129,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[260,403],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[4,379],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[394,134,142,292,293,294,375,305,306,307,308,147,309,344,345,170,346,353],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[509,510,10,21,511,512],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":251,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":396,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":504,"org.easymock.tests2.DelegateToTest.testReturnException":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":38,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":103,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":360,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":232,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests.UsageTest.argumentsOrdered":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":415,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":508,"org.easymock.tests.InvocationTest.testEquals":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":98,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":139,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":349,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":343,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":430,"org.easymock.tests2.CaptureTest.testAnd":106,"org.easymock.tests2.UsageTest.strictResetToDefault":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":335,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":17,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":341,"org.easymock.tests.UsageThrowableTest.throwError":285,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":34,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":489,"org.easymock.samples.PartialClassMockTest.testGetArea":125,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":478,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":8,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":131,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":171,"org.easymock.tests.MockClassControlTest.testEquals":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":209,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":342,"org.easymock.tests.MockNameTest.defaultName":16,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.samples.BasicClassMockTest.testPrintContent":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":328,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":99,"org.easymock.tests2.UsageConstraintsTest.greaterThan":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":493,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":179,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":334,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":59,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":422,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":30,"org.easymock.tests.UsageExpectAndReturnTest.longType":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":31,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":231,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":242,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":62,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":95,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":279,"org.easymock.tests.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":480,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":340,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":417,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":507,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":408,"org.easymock.tests2.CaptureTest.testCaptureMultiple":105,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":481,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.ConstraintsToStringTest.anyToString":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":181,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests.CapturesMatcherTest.test":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":174,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":39,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":353,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":256,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":350,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":254,"org.easymock.tests2.DelegateToTest.testWrongClass":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.samples.ConstructorCalledMockTest.testTax":185,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":501,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":272,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":421,"org.easymock.tests2.ThreadingTest.testThreadSafe":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":483,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":183,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests2.StubTest.stub":245,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndThrowTest.longType":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.NameTest.nameForMocksControl":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.MockedExceptionTest.testMockedException":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":473,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":467,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":252,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":330,"org.easymock.tests.MockingTest.testTwoMocks":152,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.samples.ExampleTest.removeNonExistingDocument":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":409,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":248,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.floatType":295,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":446,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":173,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":270,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":182,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testNotNull":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":344,"org.easymock.tests2.UsageTest.defaultResetToNice":348,"org.easymock.samples.ExampleTest.voteAgainstRemovals":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":5,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":491,"org.easymock.tests.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":339,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests.ObjectMethodsTest.testHashCode":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":97,"org.easymock.tests2.NameTest.nameForNiceMock":87,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":96,"org.easymock.samples.ExampleTest.addDocument":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.DelegateToTest.testStubDelegate":326,"org.easymock.tests2.AnswerTest.stubAnswer":187,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":464,"org.easymock.tests.UsageVarargTest.varargLongAccepted":420,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":496,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":111,"org.easymock.tests2.SerializationTest.test":257,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":191,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.tests2.UsageConstraintsTest.testSame":233,"org.easymock.samples.SupportTest.addDocument":503,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":459,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":475,"org.easymock.tests.GenericTest.testPackageScope":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests2.NameTest.nameForMock":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":466,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":492,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":194,"org.easymock.tests2.MockedExceptionTest.testRealException":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":399,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":86,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":379,"org.easymock.tests.ErrorMessageTest.testGetters":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":479,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":476,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":223,"org.easymock.tests.UsageVarargTest.varargShortAccepted":419,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":29,"org.easymock.tests2.UsageConstraintsTest.cmpTo":329,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests2.CaptureTest.testCaptureFromStub":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.CaptureTest.testCapture":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":12,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":506,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":137,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":414,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":61}}]
