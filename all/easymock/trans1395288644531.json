[{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[295,134,139,151],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[296,297,298,295,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[39,41,49,127,128,130,132,133,301,144,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[2,22,84,305,85,306,86,87,88,89,90,91,307,308,92,105,309,310,311],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20,63,141,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[313,314,315],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[39,41,49,127,128,130,132,133,301,144,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[295,139],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,316,317,318,319,320,321,93,322,96,100,323,324,325,105,326,327,328,109,329,330,110,331,332,333,334,335,336,337,338,339,111,340,341,342,343,344,112,345,346],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[347,348,165,212,349,350],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[347,348,165,212,349,350],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[0,1,353,316,320,354,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:305","failures":[355,356,357],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[358,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"this","methodName":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,51,359,191,197,203,207,209,210,360,240,276,282,288,292,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[110],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[361,362,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[365,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[36,37,168,169,368,369,370,194,198,199,201,204,371,279,283,284,286,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[149],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[7,34,37,372,373,374,375,58,60,61,64,65,67,68,70,101,119,130,131,135,136,149,150,165,166,169,179,181,184,210,211,213,214,215,216,217,218,228,229,239,376,240,241,242,243,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":63,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":107,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":348,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":145,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":177,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":80,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":302,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":243,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":368,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":181,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":312,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.SerializationTest.testClass":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.LimitationsTest.mockNativeMethod":272,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":57,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.UsageTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CompareToTest.testCompareEqual":298,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":43,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":150,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":304,"org.easymock.tests.UsageThrowableTest.throwError":244,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":92,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests.UsageVerifyTest.twoThrows":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests2.CompareToTest.testLessOrEqual":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests2.UsageTest.niceToStrict":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":325,"org.easymock.tests2.UsageConstraintsTest.testNotNull":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":315,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.MockBuilderTest.testCreateMock":90,"org.easymock.tests2.UsageTest.defaultResetToNice":66,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageVarargTest.differentLength":234,"org.easymock.tests2.CallbackTest.callback":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":179,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":139,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":138,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":56,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.testMatches":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":367,"org.easymock.tests2.CompareToTest.testGreateOrEqual":295,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":241,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.UsageConstraintsTest.greaterThan":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":44,"org.easymock.tests2.SerializationTest.test":106,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":319,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":327,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":332,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":91,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":183,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":343,"org.easymock.tests2.MockedExceptionTest.testRealException":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":305,"org.easymock.tests2.UsageConstraintsTest.testContains":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":79,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":49,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor":316,"org.easymock.tests.MockClassControlTest.testHashCode":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":352,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":182,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests2.CompareToTest.testLessThan":296,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests2.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":313,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":180,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.CaptureTest.testCapture":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.CapturesMatcherTest.test":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests2.CompareToTest.testGreateThan":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.UsageTest.resumeIfFailure":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77}}]
