[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[7,9,10,11,19,20,21,22,24,25,26,27,28,29,30,31,32,33,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,74,75,77,78,79,80,81,82,210,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,103,108,111,113,114,115,116,118,119,120,121,122,123,128,130,136,137,138,139,140,141,142,143,149,150,151,152,156,163,164,165,168,169,170,171,172,178,180,181,182,183,184,185,186,211,212,213,214,215,216],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[217,124,218,219,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,222,223,224,127,129,130,225,137,226,227,228,229,230,231],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[232,232,233,233,8,234,97,235,236],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,238,4,239,240,241,7,242,8,10,13,14,17,18,243,20,244,21,22,245,23,24,25,26,222,27,246,28,29,223,224,31,32,247,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,248,249,70,71,72,73,74,75,76,77,78,250,251,79,80,81,82,210,83,84,97,98,252,99,253,100,101,103,107,108,109,110,111,112,113,115,117,118,119,120,122,123,124,218,125,126,127,128,129,130,254,225,136,255,137,138,256,139,140,227,141,142,228,229,143,144,257,258,259,260,145,261,262,263,146,147,148,149,150,151,264,265,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,266,267,268,269,270,271,272,273,274,275,180,276,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,277,278,279,280,281,282,283,284,215,285,216,286],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[234,287,288,289,290,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[67],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[293,103,114,115],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[294,0,1,2,3,238,4,295,239,296,297,298,299,5,6,232,232,233,233,240,241,7,242,8,234,300,301,302,303,304,305,9,306,307,308,309,310,311,312,313,10,11,12,13,14,15,16,17,18,314,315,316,317,318,19,319,320,321,322,323,324,325,243,20,244,21,22,245,326,327,328,329,330,23,24,25,26,222,27,246,28,29,30,223,224,31,32,247,33,331,332,333,334,335,336,337,34,338,339,35,340,341,342,343,344,345,346,347,348,36,349,350,351,352,353,37,354,355,38,39,40,41,42,43,44,45,46,356,47,48,49,50,51,52,357,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,358,359,360,361,362,248,363,249,364,70,71,72,365,73,74,75,76,77,78,250,251,79,80,81,82,210,83,84,85,86,87,88,89,90,91,92,93,94,95,96,366,97,98,252,99,367,368,253,100,101,369,370,102,371,372,373,103,374,104,292,105,235,375,106,376,377,107,108,109,110,111,112,378,379,113,236,380,381,114,115,116,382,383,117,118,119,384,385,386,387,120,121,122,123,388,389,390,217,124,218,219,220,391,392,393,394,395,396,397,398,399,400,401,125,126,127,128,129,130,402,131,403,404,405,406,407,408,132,409,410,411,133,412,413,414,415,134,135,416,417,418,419,420,421,254,225,136,255,137,138,256,422,139,140,226,227,141,142,228,229,143,423,424,144,425,257,258,259,260,145,261,262,426,427,428,429,430,431,432,433,434,435,263,436,237,437,438,439,440,441,146,442,147,148,443,149,231,150,151,264,265,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,444,445,446,447,448,178,179,266,267,268,449,269,270,450,271,272,273,274,275,451,180,276,181,182,183,184,185,186,211,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,452,212,213,453,454,221,207,208,455,209,456,457,458,459,460,277,278,279,280,461,281,282,462,463,464,465,466,467,468,469,470,214,471,283,284,215,285,216,472,473,474,475,476,477,478,479,480,481,482,483,484,286,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[129,183,184],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[35,102,106,114,383],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[20,244,326,327,41,43,44,45,46,47,48,49,50,51,52,357,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,248,249,364,74,75,76,77,78,250,251,79,80,81,82,210,83,84,85,113,381,125,126,127,128,225,136,145,261,150,151,264,265,152,153,154,155,156,157,158,178,179,266,275,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[435],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[402,131,403,404,405,406,407,408,132,409,410,411,133,412,413,414,134,135,416,417,418,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[1,20,22,24,26,222,28,29,223,224,32,48,49,53,54,67,68,359,360,361,362,73,99,119,127,128,129,130,225,136,138,139,140,227,141,142,228,229,143,266,275,180,181,278,280,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,239,5,6,232,232,233,233,240,241,7,242,8,9,306,10,11,12,13,14,15,16,17,18,19,319,325,20,244,21,22,245,327,328,329,330,23,24,25,26,222,27,246,28,29,30,223,224,31,32,247,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,357,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,359,248,249,364,70,71,72,365,73,74,75,76,77,78,250,251,79,80,81,82,210,83,84,85,86,87,88,89,90,91,92,93,94,95,96,366,97,98,99,367,368,253,100,101,369,102,371,103,374,104,105,375,106,377,107,108,109,110,111,112,378,113,381,114,115,116,383,117,118,119,384,385,386,387,120,121,122,123,388,389,390,124,219,391,392,393,394,395,396,397,398,399,400,401,125,126,127,128,129,130,415,419,421,225,136,255,137,138,256,139,140,226,227,141,142,228,229,143,144,257,258,259,260,145,261,262,427,430,431,146,442,147,148,443,149,231,150,151,264,265,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,444,445,446,447,448,178,179,266,275,451,180,276,181,182,183,184,185,186,211,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,452,212,213,221,207,208,209,277,464,465,466,214,283,284,215,285,216,472,473,474,484,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[234,97,487,287,288,289,290,291,488,292],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,409,411,417,418,420,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,452,212,213,207,208,209,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[1,70,72,73,147],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[97,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[297,298,6,232,232,233,233,7,8,12,13,14,15,17,18,34,35,36,37,97,252,489,369,293,102,371,103,374,104,105,375,106,490,377,107,108,110,111,112,378,113,381,114,115,116,124,218,219,391,394,144,262,221,207,208,209,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":224,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":207,"org.easymock.tests.MockClassControlTest.testToString":464,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":386,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":457,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":438,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":9,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":330,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":448,"org.easymock.tests2.DelegateToTest.testDelegate":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":484,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":328,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":434,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":384,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":56,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":449,"org.easymock.tests.MockClassControlTest.testEquals":468,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":329,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.samples.BasicClassMockTest.testPrintContent":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":121,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":378,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":41,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.GenericTest.testBridgedEquals":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":281,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":65,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":282,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":13,"org.easymock.tests.MockingTest.testClassMocking":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":55,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":293,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.UsageConstraintsTest.testFind":47,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":119,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":429,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":147,"org.easymock.tests.MockClassControlTest.testHashCode":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests.UsageVarargTest.varargCharAccepted":269,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":28,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":427,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests2.UsageTest.resumeIfFailure":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":66,"org.easymock.tests2.SerializationTest.testAllMockedMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":419,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":367,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":471,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":126,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":333,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":385,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests.UsageUnorderedTest.message":127,"org.easymock.tests.UsageVerifyTest.twoReturns":130,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":430,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.UsageConstraintsTest.any":53,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":437,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":480,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":237,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":487,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":223,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":68,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":377,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":300,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests2.UsageTest.defaultResetToNice":30,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":133,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.UsageConstraintsTest.equals":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":236,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":387,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":453,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":16,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.tests.ObjectMethodsTest.testHashCode":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":42,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":289,"org.easymock.samples.ExampleTest.addDocument":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":233,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":61,"org.easymock.tests.UsageThrowableTest.noUpperLimit":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":44,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":331,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.samples.SupportTest.addDocument":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":456,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":123,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":332,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":102,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests.UsageRangeTest.combination":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":463,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":131,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":481,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":461,"org.easymock.tests2.UsageConstraintsTest.cmpTo":54,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":29,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":433,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":371,"org.easymock.tests.UsageTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":239,"org.easymock.tests.UsageStrictMockTest.testVerify":422,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":251,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267}}]
