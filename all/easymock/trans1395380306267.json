[{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:65","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[37,38,39,40,41,42,43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,81,82,82,83,84,85,86,87,88,89,90,91,92,93,94,95,20,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,0,144,145,146,147,26,27,148,149,150,28,151,152,153,154,155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[159,160,161,162,163,164,165,166,167,168,169,5,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,12,194,195,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[199,200,168,201,202,203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,81,82,82,83,84,85,87,88,89,90,91,92,93,94,95,20,96,97,99,100,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,0,144,145,146,147,26,27,148,149,150,28,151,152,153,154,155,156,157],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[204,205,206,36,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[69,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[211,212],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[213,214,215],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[208,216,17,217,218,219,220,221,222],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[199,160,161,162,163,164,165,166,223,52,53,54,58,61,63,169,224,4,5,225,226,6,7,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,10,249,250,251,252,253,30,254,255,11,256,257,201,202,258,259,12,31,32,33,34,35,83,89,92,94,95,97,260,211,212,261,262,110,113,123,129,194,263,264,195,265,266,267,13,14,268,269,270,132,133,271,134,135,136,138,142,143,0,272,273,274,275,276,277,278,279,280,281,282,283,284,15,16,285,286,208,216,287,288,289,17,217,290,203,291,292,293,294,295,296,297,18,219,298,299,300,301,302,303,26,304,42,305,150,306,28,307,152,153,154,155,308,156,157,309,220,310,311,312,313,314,315,222,316,317],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[208,290,294,303],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[161,225,226,193,256,195,270,284,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[37,38,39,40,41,42,43,44],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[163,164,193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":216,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.StubTest.stubWithReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.MockClassControlTest.testToString":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":257,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests2.UsageConstraintsTest.testNull":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":80,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":101,"org.easymock.tests2.CaptureTest.testPrimitive":311,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":198,"org.easymock.tests.UsageVerifyTest.twoReturns":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":218,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":105,"org.easymock.tests2.UsageTest.strictResetToDefault":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":141,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":112,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":95,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":59,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests2.CompareToTest.testCompareEqual":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":299,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":302,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":67,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":114,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":123,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests2.CompareToTest.testLessOrEqual":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":143,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests.LimitationsTest.privateConstructor":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":196,"org.easymock.tests2.UsageConstraintsTest.testNotNull":301,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":213,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":126,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":139,"org.easymock.tests.UsageTest.openCallCountByLastCall":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":294,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":293,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.MockClassControlTest.testEquals":79,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.MockingTest.testStrictClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":102,"org.easymock.tests2.CaptureTest.testCaptureAll":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.testMatches":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":44,"org.easymock.tests2.CompareToTest.testGreateOrEqual":36,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":262,"org.easymock.tests2.DependencyTest.testInterfaceMocking":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.AnswerTest.stubAnswer":305,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":226,"org.easymock.tests2.UsageConstraintsTest.greaterThan":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":71,"org.easymock.samples.ExampleTest.voteForRemoval":32,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":137,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":286,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":146,"org.easymock.tests2.SerializationTest.test":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":66,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.testSame":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":275,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":115,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":316,"org.easymock.tests2.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":50,"org.easymock.tests2.UsageConstraintsTest.testContains":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":88,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":150,"org.easymock.tests2.UsageConstraintsTest.testFind":287,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":40,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests.ErrorMessageTest.testGetters":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":303,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":199,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":119,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":8,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.MockClassControlTest.testHashCode":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":116,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":120,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":9,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":171,"org.easymock.tests2.UsageConstraintsTest.cmpTo":291,"org.easymock.tests2.CompareToTest.testLessThan":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastCall":13,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":65,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":170,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.UsageConstraintsTest.constraints":208,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests2.CompareToTest.testGreateThan":205,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.LimitationsTest.abstractClass":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278}}]
