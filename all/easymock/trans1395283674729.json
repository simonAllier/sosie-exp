[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[160,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,508,185,186,187,188,189,190,509,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,510,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,511,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,512,467,468,469,476,477,478,479,480,481,482,483,484,485,513,486,487,514,488,489,490,491,515,492,493,494,495,496,516,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[69],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[273,274,338,339,340,342,344,345,346,349,420,421,422,424,426,427,428,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[90,151,153,154,155,156,157,158,211,238,265,266,267,318,498,499,500,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[49,54,119,268,306,312,313,316,356,366,372,445,485,486,487,489,491,492,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[386],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[160,161,266,267],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[286,288,296,377,378,381,383,384,386,396,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[57,59,61,62,63,162,164,165,168,169,170,248,255,256,324,327,328,329,377,448,451,453,457,458,460,496,497],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[59,62,63,517,518,164,165,168,169,248,255,256,519,510,328,329,451,457,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[27,34,35,36,39,40,41,42,43,60,62,63,88,89,92,114,115,121,122,123,124,140,141,142,144,145,146,147,148,149,150,152,162,163,166,167,170,246,251,253,254,256,263,286,287,289,290,293,294,295,296,297,298,299,301,304,308,312,313,314,318,326,328,329,343,375,376,377,378,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,412,413,414,416,417,419,425,432,433,434,435,436,437,438,439,440,441,442,443,445,446,448,449,450,452,454,455,456,459,460,489,500,502],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[332,520,521,522,523,524,515],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[304,393,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[525,526],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[286,288,296,377,378,381,383,384,386,396,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[186,190],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[332,520,521,522,527,523,524,528,515,529],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[308,388,530],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[57,58,60,61,62,63,64,74,76,79,85,88,89,90,121,140,142,145,146,147,148,149,168,169,192,193,194,196,197,199,200,201,202,203,248,255,268,276,277,279,280,282,284,285,287,288,289,291,292,293,294,295,296,299,301,304,313,324,325,326,327,328,329,330,378,381,384,385,387,390,393,396,397,398,399,400,401,409,432,433,434,435,437,438,441,442,443,449,452,453,457,458,489,496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[393],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[531,286,287,288,289,290,291,292,293,295,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[532],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[49,54,119,268,306,312,313,316,356,366,372,445,485,486,487,489,490,491,492,495,496,497],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[286,288,296,377,378,383,384,386,396],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[185,186,187,188,190,191],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[286,288,296,377,378,381,383,384,386,396,401],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":378,"org.easymock.tests2.UsageTest.argumentsOrdered":458,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":453,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":154,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":133,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":356,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":413,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":385,"org.easymock.tests2.UsageTest.wrongArguments":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":54,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":179,"org.easymock.tests2.UsageConstraintsTest.testNull":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":303,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":441,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":138,"org.easymock.tests2.CaptureTest.testPrimitive":289,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":524,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":264,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":9,"org.easymock.tests.ReplayStateInvalidUsageTest.times":236,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.DependencyTest.testClassMocking":410,"org.easymock.tests2.AnswerTest.answer":502,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":51,"org.easymock.tests2.CaptureTest.testAnd":286,"org.easymock.tests2.UsageTest.strictResetToDefault":449,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.DelegateToTest.testDelegate":409,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":70,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":108,"org.easymock.tests.LimitationsTest.mockFinalMethod":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":84,"org.easymock.tests2.DependencyTest.testClassMockingSupport":411,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":85,"org.easymock.tests2.CaptureTest.testCapture1_2446744":290,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":230,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":53,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":510,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":12,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests.MockingTest.testInterfaceMocking":176,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":114,"org.easymock.tests2.UsageTest.niceToStrict":452,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests2.ThreadingTest.testChangeDefault":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":489,"org.easymock.tests2.MockBuilderTest.testCreateMock":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":102,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":437,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":391,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":40,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":532,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":390,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":295,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":195,"org.easymock.tests.MockClassControlTest.testEquals":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":353,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":82,"org.easymock.tests2.CaptureTest.testCaptureAll":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests.MockNameTest.defaultName":240,"org.easymock.tests2.UsageConstraintsTest.testMatches":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":282,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":83,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":528,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.UsageConstraintsTest.greaterThan":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":13,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":191,"org.easymock.samples.ExampleTest.voteForRemoval":279,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":315,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":512,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":306,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":5,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":448,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":434,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":153,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":404,"org.easymock.tests2.CaptureTest.testCaptureFirst":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":435,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":460,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":36,"org.easymock.tests2.UsageTest.moreThanOneArgument":450,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":222,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests.UsageExpectAndReturnTest.longType":32,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":80,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":526,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":399,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":477,"org.easymock.tests.MockingTest.testNiceClassMocking":180,"org.easymock.tests.MockingTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":525,"org.easymock.tests2.UsageConstraintsTest.testContains":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":72,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":500,"org.easymock.tests2.UsageConstraintsTest.testFind":380,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":463,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests.UsageExpectAndReturnTest.object":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":521,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":197,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":128,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":26,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":45,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":136,"org.easymock.tests2.EasyMockSupportTest.testVerify":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":196,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":443,"org.easymock.tests.DefaultClassInstantiatorTest.object":185,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":159,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":135,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":11,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":99,"org.easymock.tests.CapturesMatcherTest.test":531,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":46,"org.easymock.tests.ReplayStateInvalidCallsTest.times":17,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":265,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":18,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":372,"org.easymock.tests2.UsageTest.resumeIfFailure":459,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":156,"org.easymock.tests2.StubTest.stubWithReturnValue":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":515,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":38,"org.easymock.tests2.SerializationTest.testAllMockedMethod":447,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":220,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":105,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":226,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":503,"org.easymock.tests.UsageExpectAndThrowTest.object":103,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":28,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":397,"org.easymock.tests2.DelegateToTest.testWrongClass":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":491,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":115,"org.easymock.tests2.CaptureTest.testCaptureNone":294,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":471,"org.easymock.tests.UsageUnorderedTest.message":248,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":519,"org.easymock.tests.UsageVerifyTest.twoReturns":256,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":129,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageConstraintsTest.any":387,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":235,"org.easymock.tests2.StubTest.stub":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":155,"org.easymock.tests.UsageExpectAndThrowTest.longType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":189,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":234,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.tests2.SerializationTest.testClass":445,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests.LimitationsTest.mockNativeMethod":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":23,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":472,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.MockedExceptionTest.testMockedException":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":355,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":462,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":492,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":305,"org.easymock.tests2.CompareToTest.testCompareEqual":530,"org.easymock.tests2.CaptureTest.testCaptureLast":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":86,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":483,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":398,"org.easymock.tests.MockingTest.testTwoMocks":173,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":101,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":457,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":402,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":475,"org.easymock.samples.ExampleTest.removeNonExistingDocument":283,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":474,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":187,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":417,"org.easymock.tests2.MockBuilderTest.testCreateMockString":497,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":131,"org.easymock.tests.UsageExpectAndThrowTest.floatType":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":255,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":366,"org.easymock.samples.ExampleTest.voteAgainstRemoval":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":313,"org.easymock.tests.LimitationsTest.privateConstructor":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":401,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.UsageTest.defaultResetToNice":456,"org.easymock.samples.ExampleTest.voteAgainstRemovals":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":216,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":473,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":482,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":481,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":523,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":21,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":16,"org.easymock.tests2.DependencyTest.testInterfaceMocking":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":522,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.stubAnswer":506,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":493,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.floatType":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":331,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":376,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":464,"org.easymock.tests2.SerializationTest.test":446,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":30,"org.easymock.tests2.UsageConstraintsTest.testSame":382,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":480,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":6,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":178,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":4,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":516,"org.easymock.tests2.UsageStrictMockTest.differentMethods":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":107,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":501,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":239,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":396,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":486,"org.easymock.tests2.UsageStrictMockTest.range":328,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":527,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":212,"org.easymock.tests2.CaptureTest.testCaptureRightOne":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":362,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":470,"org.easymock.tests2.UsageConstraintsTest.testOr":383,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":301,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests2.MockBuilderTest.testWithConstructor":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":190,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":77,"org.easymock.tests2.UsageConstraintsTest.cmpTo":388,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":504,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests2.CaptureTest.testCaptureFromStub":297,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":229,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":487,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.UsageConstraintsTest.constraints":377,"org.easymock.samples.ExampleTest.addAndChangeDocument":284,"org.easymock.tests.UsageStrictMockTest.testVerify":65,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":81,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":35,"org.easymock.tests.LimitationsTest.abstractClass":0,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":438,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
