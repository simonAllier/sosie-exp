[{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,10,11,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,10,11,39,40,41,42,43,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[45,30,31,32,46,35,36,37,38,47,10,11,48,49,50,51,41,42,43,52,53,54,55,56,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[58,59,60,61,62,63,64,65,45,29,30,66,67,31,32,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,1,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,15,123,124,125,16,17,126,18,127,128,19,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,46,35,36,37,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,21,179,180,22,23,181,182,183,184,24,185,186,187,25,26,188,27,189,190,28,191,192,193,194,195,196,197,38,47,198,10,11,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,3,221,222,223,224,225,226,227,228,229,230,51,41,231,232,233,234,0,42,43,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,52,53,54,55,294,4,295,5,6,7,296,297,298,299,56,300,13,14,301,302,303,304,305,306,307,9,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[37,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[349,350,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MocksControl:190","failures":[32,85,35,37,154,196,10,11,202,203,205,206,207,208,209,231,232,43,351,352,353,281,283,285,286,289,290,291,293,298,13,14,305,309,310,312,315,321,322,323,325,343],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[29,30,31,32,365,34,35,36,37,38,10,41,42,43,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":305,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":92,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.tests2.StubTest.stubWithReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":356,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":325,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":17,"org.easymock.tests2.DelegateToTest.testReturnException":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":143,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":264,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":322,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":237,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.UsageConstraintsTest.testNull":307,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.CaptureTest.testPrimitive":336,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":150,"org.easymock.tests2.CaptureTest.testCaptureNone":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":39,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":77,"org.easymock.tests2.ThreadingTest.testThreadSafe":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":21,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageVarargTest.varargIntAccepted":71,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":118,"org.easymock.tests2.CaptureTest.testCapture_2617107":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":83,"org.easymock.tests2.UsageConstraintsTest.any":312,"org.easymock.tests2.StubTest.stub":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":2,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":91,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":166,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.tests2.SerializationTest.testClass":331,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.ReplayStateInvalidUsageTest.times":168,"org.easymock.tests2.AnswerTest.answer":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests2.CaptureTest.testAnd":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":243,"org.easymock.tests2.UsageTest.strictResetToDefault":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":12,"org.easymock.tests2.NameTest.nameForMocksControl":55,"org.easymock.tests2.MockedExceptionTest.testMockedException":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":87,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":23,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests2.CaptureTest.testCaptureLast":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":360,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":309,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests.MockingTest.testTwoMocks":156,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":62,"org.easymock.tests2.CaptureTest.testCapture1_2446744":337,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":162,"org.easymock.samples.ExampleTest.removeNonExistingDocument":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":247,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":252,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":59,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":273,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":152,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":362,"org.easymock.tests.MockingTest.testInterfaceMocking":157,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":353,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":363,"org.easymock.tests2.UsageConstraintsTest.testNotNull":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":0,"org.easymock.samples.ExampleTest.voteAgainstRemovals":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":242,"org.easymock.tests.UsageVarargTest.differentLength":74,"org.easymock.tests2.CallbackTest.callback":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":248,"org.easymock.tests.UsageTest.openCallCountByLastCall":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":316,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":18,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":177,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.CaptureTest.testCaptureAll":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":246,"org.easymock.tests.MockNameTest.defaultName":178,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":160,"org.easymock.tests.ObjectMethodsTest.testHashCode":116,"org.easymock.samples.ExampleTest.voteForRemovals":224,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":275,"org.easymock.tests2.NameTest.nameForNiceMock":54,"org.easymock.tests.UsageVarargTest.allKinds":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":329,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":109,"org.easymock.samples.ExampleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":6,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.UsageConstraintsTest.greaterThan":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":349,"org.easymock.tests.UsageVarargTest.varargLongAccepted":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":221,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":270,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":320,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":303,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":338,"org.easymock.tests2.SerializationTest.test":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":89,"org.easymock.tests2.CaptureTest.testCaptureFirst":346,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":345,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":274,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":78,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":158,"org.easymock.tests2.NameTest.nameForMock":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":324,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.MockedExceptionTest.testRealException":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":238,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":365,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":171,"org.easymock.tests2.UsageConstraintsTest.testContains":314,"org.easymock.tests2.NameTest.nameForStrictMock":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":278,"org.easymock.tests2.UsageConstraintsTest.testFind":306,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":347,"org.easymock.tests.MockTypeTest.fromEasyMockClass":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":348,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":49,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":253,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":20,"org.easymock.tests2.CaptureTest.testCaptureRightOne":343,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":179,"org.easymock.tests2.UsageConstraintsTest.testOr":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":352,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":1,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":180,"org.easymock.tests.UsageVarargTest.varargShortAccepted":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":269,"org.easymock.tests.UsageVarargTest.varargCharAccepted":72,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":265,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.DefaultClassInstantiatorTest.object":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":344,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":19,"org.easymock.tests2.UsageConstraintsTest.constraints":304,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.CapturesMatcherTest.test":57,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":102,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":339,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":213,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":70,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":50}}]
