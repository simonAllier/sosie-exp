[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[5,6,7],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.AT_LEAST_ONCE"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[31,32],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,33,34,34,1,8,10,35,11,12,13,36,14,2,15,37,16,31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[65,66,67,68,69,19,70,71,72,73,74,75,76,25,77,26,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[80,81,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[84,35,12,85,86,37,87,88,89,90,91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:298","sourceCode":"return ","type":"CtReturnImpl"},"failures":[93,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[95,96,97,98,99,100,101,102,33,33,34,34,103,104,105,106,107,108,109,110,111,112,113,114,1,8,9,84,10,35,11,12,85,115,116,117,13,118,36,14,65,2,15,86,3,119,120,37,16,31,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,87,142,143,88,89,144,145,38,146,90,147,148,93,39,149,150,151,152,153,154,155,156,157,158,159,160,66,161,67,162,163,164,17,18,165,166,68,167,168,169,170,171,172,173,40,19,20,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,41,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,43,44,45,46,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,47,48,49,50,51,242,243,244,245,21,246,247,248,249,250,251,252,253,254,255,80,81,72,256,22,23,73,257,24,52,53,258,94,54,259,76,260,82,83,261,262,263,25,264,265,266,267,268,269,270,55,56,26,27,28,78,79,57,58,271,272,29,273,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[275,276,277],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[141,278,142,143,279,280,88,144,281,145,38,90],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[96,136,138,140,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[282,283,284,285,286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[106,113,114,1,8,9,84,10,35,11,12,85,115,289,116,117,13,118,36,14,65,2,15,86,3,119,290,120,37,16,31,141,87,278,142,143,279,280,88,89,144,145,38,146,90,40,180,193,41,195,42,43,44,45,46,91,52,53,258,94,54,76,291,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[33,34,292,293,294,295,296],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[9,84,35,12,85,289,86,37,141,278,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[248,249,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[96,113,114,124,127,128,129,66,267],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[147,148,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[96,97,99,103,105,106,107,113,114,1,8,9,84,10,35,11,12,85,115,116,117,13,118,36,14,65,2,15,86,3,119,120,37,16,31,121,123,124,127,128,129,131,134,299,136,137,138,140,141,87,278,142,143,279,280,88,144,145,38,146,90,147,148,39,66,67,162,163,300,164,301,17,18,302,303,68,168,169,172,173,304,40,69,19,20,305,174,176,177,179,189,190,191,192,194,41,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,42,43,44,45,46,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,47,48,49,50,51,306,245,246,247,248,249,250,251,72,256,307,308,22,23,309,310,73,52,53,258,94,54,259,76,25,270,311,291,56,77,26,27,312,28,78,79,57,58,272,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[5,6,7],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[125,128,129,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[2,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[106,35,290,91],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[39,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,245,247,248,249,250,251,94,269,78,29],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[315,316,317,318,307,291],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":303,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":301,"org.easymock.tests2.StubTest.stubWithReturnValue":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":297,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":316,"org.easymock.samples.SupportTest.voteForRemovals":102,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":298,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":186,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":125,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":263,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":3,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":115,"org.easymock.tests2.UsageTest.wrongArguments":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.samples.ExampleTest.answerVsDelegate":96,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":158,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.UsageUnorderedTest.message":76,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests.UsageTest.argumentsOrdered":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":94,"org.easymock.tests2.UsageConstraintsTest.any":116,"org.easymock.tests2.StubTest.stub":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":46,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":275,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.SerializationTest.testClass":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":241,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests2.AnswerTest.answer":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":85,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":16,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":51,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.PartialClassMockTest.testGetArea":101,"org.easymock.tests2.CompareToTest.testLessOrEqual":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":43,"org.easymock.samples.ExampleTest.voteAgainstRemoval":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests2.CallbackTest.callback":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":296,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests2.EasyMockSupportClassTest.testAll":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":294,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":50,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":286,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":107,"org.easymock.tests.UsageVarargTest.allKinds":91,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.samples.ExampleTest.voteForRemoval":97,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests2.SerializationTest.test":148,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":277,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":151,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":223,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":229,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":74,"org.easymock.tests2.NameTest.nameForMock":108,"org.easymock.tests.UsageExpectAndReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":226,"org.easymock.tests.UsageCallCountTest.tooManyCalls":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":24,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.testContains":13,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests.UsageExpectAndReturnTest.object":232,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":86,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":150,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":242,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":282,"org.easymock.tests.UsageRangeTest.combination":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":175,"org.easymock.tests.UsageTest.wrongArguments":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":30,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":82,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests2.UsageConstraintsTest.cmpTo":117,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":126,"org.easymock.tests2.CompareToTest.testLessThan":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":17,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests2.CaptureTest.testCaptureFromStub":38,"org.easymock.tests.UsageTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests2.CaptureTest.testCapture":281,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.CapturesMatcherTest.test":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests2.CompareToTest.testGreateThan":4,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155}}]
