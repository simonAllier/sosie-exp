[{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,22,23,2,24,25,26,27,28,29,30,31,1,32,33,4,34,35,36,37,38,39,40,41,8,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,4,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,5,92,6,93,94,95,96,97,98,99,8,100,101,102,103,104,105,106,107,108,109,110,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[111],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[112,113,114,115,116,117,118,119,120,121,122,21,123],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[124,125,126,127],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[128,59,60,129,130,61,62,113,131,114,115,116,117,118,119,132,120,122,21,133,123,134,135,136,63,64,137,138,139,140,141,3,65,142,143,144,145,146,66,147,148,67,149,68,150,151,152,153,154,155,156,157,158,159,69,160,161,162,163,164,165,71,166,167,168,169,170,171,172,73,22,23,173,0,2,24,25,26,174,175,176,177,178,27,179,28,29,180,30,31,181,182,183,184,185,1,32,33,186,124,187,188,125,126,189,190,191,192,193,194,4,195,75,76,196,197,198,199,200,201,202,77,78,79,80,203,204,83,84,85,205,34,206,207,208,209,210,211,87,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,89,91,230,231,5,92,232,6,35,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,36,37,38,39,40,263,264,265,266,267,268,269,41,270,271,272,273,274,275,276,277,99,8,278,100,101,279,280,281,9,10,11,282,283,284,285,286,287,288,12,13,42,43,44,45,46,289,290,291,47,292,293,294,48,49,127,295,296,297,298,299,300,301,50,302,303,304,305,51,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,52,53,341,342,54,55,56,343,344,345,346,347,348,349,350,351,352,353,354,355,356,57,57,58,58],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[63,357,358,359,360,361,362,4,75,76,89,6,94,95,363,364,365,8,100,101,9,10,11,366,367,336,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[30,369],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[160,161,162,370],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[64,3,65,75,90,91,5,92,6,364,365,99,100,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[113,131,114,115,116,117,118,119,132,120,122,21,133,123,371,372,373,374,134,135,136,63,64,137,138,139,140,141,3,65,142,143,144,145,146,66,147,148,67,149,68,150,151,152,153,156,157,158,159,69,160,161,162,163,164,165,71,166,167,168,169,375,170,72,171,172,73,22,23,173,0,2,24,25,26,174,175,176,177,178,27,179,28,29,180,30,31,181,182,183,184,185,1,32,33,186,124,187,188,125,126,189,190,191,192,193,194,4,195,75,76,196,197,198,199,200,201,202,77,78,79,80,81,203,204,376,83,84,377,85,86,205,34,206,207,208,209,210,87,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,378,379,380,381,229,89,90,91,230,231,5,92,232,6,35,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,36,37,38,39,40,263,264,265,94,95,266,267,268,269,41,382,383,384,385,386,387,388,389,390,391,392,393,270,271,272,273,274,275,96,394,395,276,277,99,8,278,100,101,279,280,396,397,102,103,104,398,399,400,281,9,10,11,282,401,283,284,285,286,402,287,288,403,12,13,404,405,42,43,44,45,46,289,290,291,303,308,406,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,407,333,366,334,335,367,336,368,337,338,339,340,408,409,410,411,412,52,53,341,342,54,55,56,343,344,345,346,347,348,413,349,350,351,352,353,354,355,356,57,57,58,58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[22,30,185,414],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[415,416,417,418,419,420],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[421],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[64,3,65,75,90,91,5,92,6,365,99,100,10,11,368],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[199],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[198,199,200,202,334,344],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[134,135,64,137,138,3,65,142,143,145,148,67,150,71,171,73,173,180,193,195,75,76,203,377,85,86,217,229,90,91,5,92,232,6,422,423,424,365,276,99,278,100,101,10,11,402,287,288,337],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[160,14,425,426,427,428,15,16,17,18,19,429,206,20],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":298,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":356,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":224,"org.easymock.tests.MockingTest.testPartialClassMocking":310,"org.easymock.tests.MockClassControlTest.testToString":102,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.UsageTest.wrongArguments":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":344,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":403,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":214,"org.easymock.tests.InvocationTest.testEquals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":374,"org.easymock.tests2.CaptureTest.testAnd":113,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":339,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":405,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":94,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":372,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":107,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":40,"org.easymock.samples.PartialClassMockTest.testGetArea":355,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests2.CompareToTest.testLessOrEqual":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":271,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":204,"org.easymock.tests2.MockBuilderTest.testCreateMock":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":335,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":324,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.MockClassControlTest.testEquals":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":156,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":410,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":373,"org.easymock.tests.MockNameTest.defaultName":93,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":348,"org.easymock.tests.UsageVarargTest.allKinds":222,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":411,"org.easymock.samples.BasicClassMockTest.testPrintContent":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":429,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.samples.ExampleTest.voteForRemoval":345,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":375,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":281,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":223,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":63,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":408,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":216,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":334,"org.easymock.tests.MockClassControlTest.testHashCode":398,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":371,"org.easymock.tests.UsageVarargTest.varargCharAccepted":215,"org.easymock.tests2.CaptureTest.testCaptureMultiple":112,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests.DefaultClassInstantiatorTest.object":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":96,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":171,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":159,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":103,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":360,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":226,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":162,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":427,"org.easymock.samples.SupportTest.voteForRemovals":351,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":370,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":308,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":55,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":56,"org.easymock.tests.UsageStrictMockTest.range":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":272,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":416,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":422,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":220,"org.easymock.tests2.ThreadingTest.testThreadSafe":207,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":286,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":97,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":353,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":342,"org.easymock.tests2.UsageConstraintsTest.any":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":225,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":332,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":417,"org.easymock.tests2.NameTest.nameForMocksControl":80,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":428,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests.MockingTest.testTwoMocks":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":420,"org.easymock.samples.ExampleTest.removeNonExistingDocument":413,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":419,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":209,"org.easymock.tests2.ConstraintsToStringTest.andToString":361,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":396,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":180,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":158,"org.easymock.samples.ExampleTest.voteAgainstRemoval":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":421,"org.easymock.tests2.UsageConstraintsTest.testNotNull":1,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":328,"org.easymock.tests.UsageVarargTest.differentLength":217,"org.easymock.tests2.CallbackTest.callback":134,"org.easymock.tests.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":341,"org.easymock.tests.UsageCallCountTest.tooFewCalls":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":418,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":70,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.NameTest.nameForNiceMock":79,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":211,"org.easymock.tests2.DependencyTest.testInterfaceMocking":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.ExampleTest.addDocument":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":219,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":206,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.ConstraintsToStringTest.orToString":357,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":314,"org.easymock.samples.SupportTest.addDocument":350,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests2.NameTest.nameForMock":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":325,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":340,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":50,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":364,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":203,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":296,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":415,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":402,"org.easymock.tests2.UsageConstraintsTest.cmpTo":178,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":294,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":82,"org.easymock.tests.UsageTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":327,"org.easymock.tests2.CaptureTest.testCapture":121,"org.easymock.tests2.UsageConstraintsTest.constraints":173,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":349,"org.easymock.tests2.ConstraintsToStringTest.notToString":359,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":352,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":409,"org.easymock.tests2.CompareToTest.testGreateThan":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":45,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":213}}]
