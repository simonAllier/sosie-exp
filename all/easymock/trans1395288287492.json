[{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,2,159,160,161,3,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,4,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,1,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[471,472,473,474,332,377],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[77,83,86,220,261,295,296,297,475,469],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[476,477,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[5,17,18,20,20,21,21,36,38,47,81,82,83,84,86,87,109,112,122,128,144,145,147,148,149,150,152,155,156,157,158,479,480,481,212,214,482,215,216,218,219,220,221,223,224,483,225,258,261,273,294,346,347,348,350,384,385,386,388],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[416],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1634","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:360","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,69,137,138,168,169,250,307,334,335,354,380,381,391,393,394,399,406],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[22,24,34,465],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,7,9,10,12,14,16,23,24,25,27,28,29,30,31,32,35,44,52,55,58,59,61,64,67,70,0,71,72,73,74,132,135,136,140,141,145,148,157,164,165,166,167,168,169,170,175,176,177,178,180,181,184,185,186,193,218,224,249,252,253,254,255,256,257,275,276,277,279,280,282,283,284,285,286,336,337,354,375,376,378,379,380,381,382,390,400,402,405,407,1,436,437,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[95,96,97,98,101,102,103,104,105,199,200,201,202,205,206,207,208,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[265,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[36,37,38,484],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[20,21,36,47,48,83,87,485,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,486,487,488,489,490,222,491,492],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[45,321,328,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[471,472,473,474,332,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[493],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[49,68,73,494],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[5,7,8,9,10,12,14,16,20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,99,100,109,112,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,155,156,157,158,159,160,161,3,162,163,164,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,193,194,195,196,197,203,204,210,211,212,213,214,215,216,218,219,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,273,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,322,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,346,347,348,350,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,373,374,375,377,378,379,380,381,382,384,386,387,388,389,390,391,392,393,394,395,396,399,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,1,422,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[5,17,18,20,20,21,21,36,38,47,48,77,78,81,82,83,84,86,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,144,145,147,148,149,150,152,153,154,155,156,157,158,2,159,480,210,211,212,214,482,215,216,217,218,219,220,221,222,223,224,483,225,258,261,264,265,266,267,268,269,270,271,272,273,274,293,294,295,296,297,298,299,300,344,345,346,347,348,350,353,4,384,385,386,387,388,469],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[134,140,141,168,257,495,332,333,336,337,377,380,407,408],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[471,472,473,474,332,377],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[476,477,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[168,169,380,381,393,394,406],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[20,21,153,496,491,492,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,45,46,47,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75,76,81,82,83,84,85,86,87,88,91,92,93,99,109,112,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,155,156,157,158,160,161,3,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,203,210,211,212,213,214,215,218,219,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,264,273,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,330,331,332,333,334,335,336,337,338,339,340,341,342,343,347,348,350,354,355,356,357,358,359,360,361,362,363,364,365,366,373,374,375,376,377,378,379,380,381,382,383,384,385,388,389,390,391,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,414,415,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,465,466,467],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[5,7,8,9,10,12,14,16,20,20,21,21,22,23,25,26,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,0,71,73,74,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,99,109,112,122,128,131,132,133,135,137,138,139,142,143,144,145,146,147,148,149,152,156,157,158,160,161,3,162,163,166,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,193,203,210,211,212,213,215,218,220,221,224,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,273,287,288,289,290,291,292,301,302,303,304,305,322,328,330,331,334,335,338,347,348,350,354,355,356,357,362,363,364,365,366,367,368,369,371,373,374,378,380,381,384,386,388,389,390,391,392,393,394,395,396,399,406,407,408,409,411,412,414,416,417,418,419,420,421,422,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":316,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":347,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":188,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":441,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":436,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":360,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":261,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.CaptureTest.testPrimitive":25,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":460,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":366,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":498,"org.easymock.tests2.DependencyTest.testClassMocking":171,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":396,"org.easymock.tests2.DelegateToTest.testDelegate":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":456,"org.easymock.tests.LimitationsTest.mockFinalMethod":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":343,"org.easymock.tests2.DependencyTest.testClassMockingSupport":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":1,"org.easymock.tests2.CaptureTest.testCapture1_2446744":26,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":454,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":260,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":475,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":130,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.MockingTest.testInterfaceMocking":349,"org.easymock.tests2.CompareToTest.testLessOrEqual":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":442,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":117,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":102,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":471,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":450,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":358,"org.easymock.tests.UsageOverloadedMethodTest.overloading":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":31,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":458,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":479,"org.easymock.tests2.CaptureTest.testCaptureAll":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":341,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":406,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":2,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":404,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":339,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":483,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":459,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":463,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.UsageCallCountTest.tooManyCalls":405,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":446,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests.MockingTest.testClassMocking":345,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":212,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":391,"org.easymock.tests.MockTypeTest.fromEasyMockClass":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":228,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":467,"org.easymock.tests.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":393,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":370,"org.easymock.tests2.ConstraintsToStringTest.findToString":493,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":119,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":420,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":419,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":465,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":472,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":453,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":328,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":89,"org.easymock.tests.UsageExpectAndThrowTest.object":451,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.DelegateToTest.testWrongClass":42,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":461,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":462,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests.UsageStrictMockTest.range":380,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":79,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":452,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":106,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":30,"org.easymock.tests.UsageUnorderedTest.message":257,"org.easymock.tests.UsageVerifyTest.twoReturns":408,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":123,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":468,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageExpectAndThrowTest.longType":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":96,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests2.MockedExceptionTest.testMockedException":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":445,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":227,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":422,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":71,"org.easymock.tests.MockingTest.testTwoMocks":346,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":449,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":101,"org.easymock.tests.UsageStrictMockTest.differentMethods":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":225,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":113,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests.UsageVerifyTest.twoThrows":407,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":95,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.UsageConstraintsTest.equals":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":438,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":361,"org.easymock.tests.UsageThrowableTest.throwCheckedException":253,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":474,"org.easymock.tests.MockingTest.testStrictClassMocking":344,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":85,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":466,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":129,"org.easymock.tests2.DelegateToTest.testStubDelegate":41,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":378,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":496,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":77,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":114,"org.easymock.tests.GenericTest.testPackageScope":384,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":351,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":455,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":357,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":437,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":435,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":477,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":115,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":216,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":379,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests.UsageStrictMockTest.testVerify":383,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":19,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":340,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.LimitationsTest.abstractClass":271,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
