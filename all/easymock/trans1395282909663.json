[{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[60,61,62,63,64,65,66,67,68,69,26,70],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,66,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[110,55,111,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[115],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[12,13,116,117,118,119,120,121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[122,123,124,125,126],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[57,60,127,128,61,129,130,131,132,133,134,135,136,137,66,138,139,140,141,142,143,144,145,58],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[148,149,150,151,152,153,154,155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[12,12,13,13,27,156,157,121,55],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,60,158,159,160,161,162,163,0,1,127,128,61,129,130,131,164,165,166,167,168,169,3,170,171,172,132,173,174,175,176,177,74,178,75,76,77,78,79,80,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,81,200,201,202,203,82,204,205,206,4,133,134,135,136,137,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,6,7,8,62,63,64,65,66,67,138,139,11,223,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,224,225,226,227,228,106,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,12,12,13,13,14,246,247,15,16,248,249,250,251,252,253,254,140,255,256,257,258,259,107,20,21,22,23,260,24,25,108,261,262,263,264,265,266,109,267,268,269,270,271,68,69,26,70,272,273,274,275,276,27,277,278,279,280,28,32,33,34,35,37,39,40,41,42,43,44,45,281,46,47,48,50,51,53,282,283,284,285,286,287,288,289,290,291,292,141,293,294,295,296,297,142,143,298,299,300,301,144,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,145,328,329,58,330,331,332,333,334,59,335,146,336,337,338,339,340,341,342,55,111,56,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[132,81,203,82,206,228,229,140,108,266,109,271,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[57,0,2,127,128,130,3,132,174,175,74,75,76,77,78,79,80,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,344,81,200,203,82,206,133,134,135,136,137,212,345,346,347,6,7,8,138,139,348,223,85,224,225,226,227,228,229,234,235,236,237,238,239,241,242,244,12,12,13,13,14,249,250,251,252,140,256,257,107,20,21,22,23,260,24,25,108,261,262,264,266,109,267,270,271,26,272,273,274,275,276,27,30,32,34,35,37,40,41,42,43,44,45,281,46,47,48,50,52,53,54,284,289,292,141,294,295,142,143,298,299,300,301,144,302,303,304,305,306,307,308,309,310,311,312,313,316,321,322,323,324,325,326,327,145,328,329,58,330,331,332,333,334,59,335,146,336,337,338,339,340,341,342,55,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[57,60,158,159,160,161,162,163,349,350,351,0,1,127,128,61,129,130,131,352,164,353,165,166,354,167,355,356,168,357,169,3,170,171,172,132,173,174,175,176,177,74,178,75,76,77,78,79,80,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,358,81,200,201,202,203,82,204,205,206,4,133,134,135,136,137,207,208,209,210,211,359,360,361,84,212,362,213,214,215,216,217,363,218,219,220,221,222,364,365,366,367,368,6,7,369,8,370,371,372,62,63,64,65,66,67,9,373,374,10,375,376,138,139,377,11,378,379,380,381,382,383,348,223,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,224,225,226,227,228,106,229,230,231,232,233,384,234,235,236,237,238,239,240,241,242,243,244,385,245,251,253,254,140,255,256,257,258,259,107,386,387,388,389,390,21,22,24,25,108,261,262,263,264,265,266,109,267,268,269,270,271,68,69,26,70,272,273,274,275,276,27,277,278,279,280,28,30,31,391,32,33,36,37,39,44,45,281,46,47,48,49,50,392,51,52,53,54,393,282,283,284,285,286,287,288,289,290,291,292,141,293,294,295,296,297,142,143,298,299,300,301,144,315,316,317,318,319,320,321,322,323,324,325,326,327,145,328,329,58,330,331,332,333,334,59,335,146,336,337,338,394,339,340,341,342,55,111,56,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[395,396,397,398,399,27,156,400,157,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[395,396,397,398,399,27,156,400,157,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[292,293,299,323,324,326,145,328,401,336,340],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[326,401,336,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[292,141,293,294,299,300,323,324,325,326,327,145,328,329,401,58,336,337,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[292,293,294,295,296,297,142,298,403,299,300,144],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":324,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.UsageTest.argumentsOrdered":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":246,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":6,"org.easymock.tests.MockClassControlTest.testToString":378,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":326,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":311,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":383,"org.easymock.tests2.CaptureTest.testPrimitive":294,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":105,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":120,"org.easymock.tests2.AnswerTest.answer":282,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":320,"org.easymock.tests2.CaptureTest.testAnd":292,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":306,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":318,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":119,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":165,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests2.CompareToTest.testLessOrEqual":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":87,"org.easymock.tests2.UsageTest.niceToStrict":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":155,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":84,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":113,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":332,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":298,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.MockClassControlTest.testEquals":382,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":103,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":17,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":352,"org.easymock.samples.ExampleTest.voteForRemovals":244,"org.easymock.tests.UsageVarargTest.allKinds":222,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":79,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.samples.ExampleTest.voteForRemoval":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":393,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":304,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":305,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":262,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":275,"org.easymock.tests2.CaptureTest.testCapture2_2446744":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":350,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":104,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":38,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":394,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":351,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":78,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":159,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":29,"org.easymock.tests2.UsageConstraintsTest.testContains":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":325,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":287,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":217,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":154,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":361,"org.easymock.tests.MockClassControlTest.testHashCode":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":317,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":216,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.UsageTest.openCallCountByLastCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":148,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":71,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":379,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.StubTest.stubWithReturnValue":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":339,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.samples.SupportTest.voteForRemovals":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":98,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":110,"org.easymock.tests.UsageExpectAndThrowTest.object":96,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":337,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests.UsageStrictMockTest.range":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests.UsageUnorderedTest.message":131,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":220,"org.easymock.tests2.ThreadingTest.testThreadSafe":272,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":163,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.UsageExpectAndThrowTest.longType":89,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":112,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":167,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":69,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":7,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests2.CompareToTest.testCompareEqual":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":338,"org.easymock.tests.MockingTest.testTwoMocks":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":341,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":175,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":274,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.floatType":88,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":106,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests2.UsageConstraintsTest.testNotNull":340,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":80,"org.easymock.tests2.UsageTest.defaultResetToNice":267,"org.easymock.samples.ExampleTest.voteAgainstRemovals":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":121,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":61,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":77,"org.easymock.tests.MockingTest.testStrictClassMocking":367,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":260,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":285,"org.easymock.tests2.CompareToTest.testGreateOrEqual":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":365,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":115,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":276,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testStubDelegate":289,"org.easymock.tests2.AnswerTest.stubAnswer":284,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":116,"org.easymock.tests.UsageVarargTest.varargLongAccepted":219,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.UsageThrowableTest.noUpperLimit":178,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":322,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":296,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":327,"org.easymock.samples.SupportTest.addDocument":248,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":370,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":256,"org.easymock.tests2.UsageConstraintsTest.lessThan":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":303,"org.easymock.tests2.CaptureTest.testCaptureRightOne":299,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":202,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.UsageVarargTest.varargShortAccepted":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":349,"org.easymock.tests2.UsageConstraintsTest.cmpTo":330,"org.easymock.tests2.CompareToTest.testLessThan":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":83,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CaptureTest.testCaptureFromStub":300,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":164,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":201,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":162,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.CaptureTest.testCapture":403,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.UsageConstraintsTest.constraints":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":245,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":247,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests2.CompareToTest.testGreateThan":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":308}}]
