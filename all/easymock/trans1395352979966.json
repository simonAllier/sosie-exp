[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,25,26,27,1,28,29,30,31,32,33,2,34,3,35,36,4,37,5,38,39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[41,42,7,9,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,45,46,47,0,48,49,50,51,30,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,16,80,44,81,45,46,82,18,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,29,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,30,31,165,166,167,168,169,32,33,170,171,172,173,174,175,52,53,54,176,177,178,179,180,58,181,182,183,184,185,186,187,188,189,4,59,190,60,61,191,192,193,194,195,196,197,198,199,200,201,202,203,7,8,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,64,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,66,248,249,250,251,252,253,254,255,256,257,258,259,260,43,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,37,38,288,289,39,40,290],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[291,45,46,85,292,112,293,294,295,296,297,165,298,60,61,299,280,281,300,301,302,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[303,130,146,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[304,305,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,45,46,47,0,48,49,50,51,30,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:26","sourceCode":"-2485406702001842607L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[53,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[116,117,118,119,129,329,330,331,192,193,194,195,196,197,332,250,258,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[0,27,1,28,30,31,32,33,2,3,36,4,37,5,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,85,2,3,57,4,59,5,38,288,289,39,40,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[333,334,335,336,337],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests2.DelegateToTest.testReturnException":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":228,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.DelegateToTest.testWrongClass":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":256,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":333,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":68,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":301,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":296,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":247,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":42,"org.easymock.tests2.CaptureTest.testCaptureNone":98,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":176,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":259,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests2.StubTest.stub":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":304,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":26,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":232,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CaptureTest.testCaptureLast":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":57,"org.easymock.tests2.CaptureTest.testCapture1_2446744":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.ConstraintsToStringTest.andToString":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.MockingTest.testInterfaceMocking":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":177,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":229,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":35,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":43,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":305,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":79,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":254,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests2.DelegateToTest.testStubDelegate":125,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":146,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":316,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":334,"org.easymock.tests2.ConstraintsToStringTest.orToString":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":147,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":283,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":95,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":314,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":306,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":292,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":202,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":244,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageCallCountTest.tooManyCalls":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":198,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":233,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":302,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":115,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":293,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":36,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":25,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":310,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":73,"org.easymock.tests2.ConstraintsToStringTest.notToString":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":49,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests2.CompareToTest.testGreateThan":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":252,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":96,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":295,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264}}]
