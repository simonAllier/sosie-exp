[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[4,5,6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[26,27,28,29,30,31],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[23,32,24,33,34,35,36,37,38,39,0,40,41,42,43,44,1,45,46,47,48,49,50,51,52,53,54,55,2,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,10,147,148,149,150,11,12,13,151,152,14,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,15,172,173,16,17,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,18,228,229,230,19,231,232,20,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,30,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,31,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,4,5,6,7,411,8,412,9,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,21,474,475,22,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[23,32,24,33,35,36,37,38,39,0,40,41,42,43,44,1,45,46,47,48,49,50,51,52,53,54,55,2,65,66,70,73,83,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,10,148,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,15,172,173,16,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,203,204,205,206,208,209,210,216,218,219,220,221,222,223,224,227,230,19,231,234,235,236,237,254,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,30,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,309,311,316,318,319,320,321,322,323,324,325,326,343,349,357,358,359,360,361,362,363,364,369,370,371,372,373,374,376,377,378,379,381,382,383,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,22,477,478,479,480,481,482,483,485,486,487,488,489,490,491,491,492,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[23,32,24,33,35,36,37,38,39,0,41,42,43,44,1,45,46,47,48,49,50,51,52,53,54,55,2,65,66,70,73,83,89,92,95,96,99,100,101,102,103,104,105,106,112,121,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,10,148,150,153,154,155,156,157,158,159,160,162,163,164,165,167,168,169,171,15,172,173,16,175,176,177,178,179,180,181,182,183,184,185,187,188,189,195,203,204,205,206,208,209,210,216,218,219,220,221,222,223,224,227,19,254,269,271,272,273,274,276,277,279,285,287,289,30,290,291,292,293,294,296,297,298,308,309,311,318,319,320,321,322,323,325,326,357,358,359,360,361,362,363,364,376,377,378,379,381,382,392,393,394,396,397,399,400,401,402,403,404,405,406,407,408,409,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,442,443,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,481,482,483,485,486,487,488,489,490,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[105,321,342,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[166,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[70,73,83,89,121,141,494,143,144,10,147,148,150,13,151,495,14,15,173,16,203,204,205,206,209,210,496,497,498,219,220,222,223,224,225,227,229,230,19,231,245,254,287,307,308,309,311,384,389,474,475,22,488,489,491,491,492,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[240,244,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[92,95,97,189,216,218,274,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[499],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests2.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":337,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":490,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":308,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":233,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":446,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests2.UsageTest.wrongArguments":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":367,"org.easymock.samples.ExampleTest.answerVsDelegate":479,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":389,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.CaptureTest.testPrimitive":178,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":465,"org.easymock.tests.UsageTest.moreThanOneArgument":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":408,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":264,"org.easymock.tests2.DependencyTest.testClassMocking":63,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":215,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":386,"org.easymock.tests2.CaptureTest.testAnd":175,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":325,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":461,"org.easymock.tests.LimitationsTest.mockFinalMethod":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests2.DependencyTest.testClassMockingSupport":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":179,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":213,"org.easymock.tests.UsageThrowableTest.throwError":466,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":118,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":91,"org.easymock.samples.PartialClassMockTest.testGetArea":493,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests2.CompareToTest.testLessOrEqual":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":447,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":455,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":365,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":424,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":44,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":184,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":463,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests2.CaptureTest.testCaptureAll":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests.MockNameTest.defaultName":268,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":372,"org.easymock.samples.ExampleTest.voteForRemovals":483,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":472,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":231,"org.easymock.samples.ExampleTest.voteForRemoval":480,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":225,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":420,"org.easymock.tests2.CaptureTest.testCapture2_2446744":187,"org.easymock.tests2.UsageTest.moreThanOneArgument":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":381,"org.easymock.tests.UsageExpectAndReturnTest.longType":416,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":464,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":383,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":462,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":382,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":451,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":204,"org.easymock.tests.MockingTest.testNiceClassMocking":314,"org.easymock.tests.MockingTest.testClassMocking":306,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":273,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":218,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":423,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":429,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":108,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":212,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":410,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.DefaultClassInstantiatorTest.object":4,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":230,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":430,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":422,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":343,"org.easymock.samples.SupportTest.voteForRemovals":487,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":27,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.UsageExpectAndThrowTest.object":456,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":433,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":434,"org.easymock.samples.ConstructorCalledMockTest.testTax":491,"org.easymock.tests.UsageStrictMockTest.range":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":457,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":366,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":28,"org.easymock.tests2.CaptureTest.testCaptureNone":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":301,"org.easymock.tests.UsageUnorderedTest.message":409,"org.easymock.tests.UsageVerifyTest.twoReturns":298,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":84,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":379,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":488,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":242,"org.easymock.tests2.CaptureTest.testCapture_2617107":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":347,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests2.StubTest.stub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageExpectAndThrowTest.longType":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":262,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":112,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":432,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":237,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":72,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":450,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":190,"org.easymock.tests2.CaptureTest.testCaptureLast":182,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":436,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":307,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":454,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.samples.ExampleTest.removeNonExistingDocument":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":109,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":6,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":74,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":174,"org.easymock.tests.UsageVerifyTest.twoThrows":297,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.LimitationsTest.privateConstructor":253,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":473,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":191,"org.easymock.tests2.CallbackTest.callback":189,"org.easymock.tests2.UsageConstraintsTest.equals":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":360,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":470,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":29,"org.easymock.tests.MockingTest.testStrictClassMocking":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":240,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":65,"org.easymock.samples.ExampleTest.addDocument":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":85,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":290,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":492,"org.easymock.tests.UsageThrowableTest.noUpperLimit":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":180,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":414,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":486,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":207,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":75,"org.easymock.tests.GenericTest.testPackageScope":474,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":115,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":312,"org.easymock.tests2.NameTest.nameForMock":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":152,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":460,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":326,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":340,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":319,"org.easymock.tests2.NameTest.nameForStrictMock":235,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":7,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":79,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":220,"org.easymock.tests.UsageTest.wrongArguments":359,"org.easymock.tests2.MockBuilderTest.testWithConstructor":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":76,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":8,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":42,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":330,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":427,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":485,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":477,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":181,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":419,"org.easymock.tests.LimitationsTest.abstractClass":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":407,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
