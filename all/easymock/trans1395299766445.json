[{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,1,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,3,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,294,295,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[298,299,300,301,302,303,304,305,306,307,132,134,308,294,295],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,85,86,123,309,177,219,220,245,257,258,261,262,270,273],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[44,45,46,47,207,246,247,248,249,250,251,276,277,278,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[310,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[301,302,313,314,315,316,132,134,308],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[317,318,9,319,320,321,257,258,259,260,261,262,263,264,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[132,133,322,323],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[50,52,60,1,90,92,94,95,97,106,110],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[9,10,12,13,14,15,16,17,18,19,20,46,64,65,66,67,68,69,70,71,72,113,114,115,116,118,119,128,129,130,131,132,322,134,324,166,167,325,168,264,265,266,267,268,326,327,294,294,295,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,85,86,123,309,177,219,220,245,257,258,261,262,270,273],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,65,66,68,69,71,73,74,75,76,77,78,80,82,83,84,87,88,0,89,1,90,91,92,93,94,95,96,98,99,100,101,102,103,104,2,105,106,107,108,3,110,111,112,113,114,115,116,117,118,119,121,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,244,246,247,248,249,250,251,252,253,254,255,256,259,260,263,265,266,267,268,271,273,274,276,277,278,330,279,331,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,294,295,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[332],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,333,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,1,90,91,92,93,94,95,96,98,99,100,101,102,103,104,2,105,106,107,108,109,3,110,111,112,113,114,115,116,117,118,119,120,334,121,122,123,124,125,126,127,128,129,130,131,132,133,322,134,135,137,138,139,141,335,335,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,325,169,170,171,172,173,177,178,179,180,181,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,336,337,338,339,340,341,342,343,344,345,205,206,207,208,209,210,211,212,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,239,241,242,245,246,247,248,249,250,251,252,253,254,346,347,348,349,350,351,255,256,257,258,259,260,261,262,263,265,266,267,268,269,352,270,271,272,273,274,275,280,281,282,283,284,285,286,287,288,289,290,291,353,292,293,326,327,294,295,296,354,355,297,356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[132,133,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[328,357,358,359,360,4,5,6,7,361,362,363,364,365,8,366,367,368,369,370,371,9,10,11,12,13,14,15,372,16,298,373,17,18,19,20,374,375,21,22,23,24,25,26,27,28,29,30,31,32,333,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,376,377,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,299,65,378,300,379,66,67,68,301,69,380,302,70,71,304,72,381,382,383,384,385,73,386,387,388,389,390,391,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,1,90,392,91,92,93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,3,110,111,112,393,113,114,115,116,394,117,118,119,395,120,334,121,122,123,124,125,126,396,127,397,398,399,400,401,402,403,404,405,406,128,407,408,129,409,410,411,412,413,414,415,416,417,130,418,419,420,421,422,131,423,424,132,133,322,134,308,425,135,136,137,138,139,140,141,142,143,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,144,443,444,445,446,447,145,448,321,324,449,450,451,452,453,454,455,456,457,458,459,460,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,461,462,463,166,464,332,167,325,168,465,169,170,171,172,173,466,467,468,469,470,471,472,473,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,336,337,338,474,339,340,341,342,343,344,345,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,475,476,477,478,479,480,481,482,483,484,485,486,226,227,228,229,230,231,232,233,329,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,487,488,254,346,347,348,349,350,351,255,256,257,258,259,260,261,262,263,489,490,264,265,266,491,267,492,493,494,268,269,352,270,271,272,273,274,275,495,276,277,278,330,279,331,280,281,282,283,284,496,497,498,499,500,310,501,502,503,285,286,287,288,289,290,291,353,292,504,293,326,327,294,295,296,354,355,297,356],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[328,357,358,359,360,4,5,6,7,361,362,363,364,365,8,366,367,368,369,370,371,9,10,11,12,13,14,15,372,16,298,373,17,18,19,20,374,375,21,22,23,24,25,26,27,28,29,30,31,32,333,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,376,377,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,299,65,378,300,379,66,67,68,301,69,380,302,70,71,304,72,381,382,383,384,385,73,386,387,388,389,390,391,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,1,90,392,91,92,93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,3,110,111,112,393,113,114,115,116,394,117,118,119,395,120,334,121,122,123,124,125,126,396,127,397,398,399,400,401,402,403,404,405,406,128,407,408,129,409,410,411,412,413,414,415,416,417,130,418,419,420,421,422,131,423,424,132,133,322,134,308,425,135,136,137,138,139,140,141,142,143,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,144,443,444,445,446,447,145,448,321,324,449,450,451,452,453,454,455,456,457,458,459,460,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,461,462,463,166,464,332,167,325,168,465,169,170,171,172,173,466,467,468,469,470,471,472,473,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,336,337,338,474,339,340,341,342,343,344,345,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,475,476,477,478,479,480,481,482,483,484,485,486,226,227,228,229,230,231,232,233,329,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,487,488,254,346,347,348,349,350,351,255,256,257,258,259,260,261,262,263,489,490,264,265,266,491,267,492,493,494,268,269,352,270,271,272,273,274,275,495,276,277,278,330,279,331,280,281,282,283,284,496,497,498,499,500,310,501,502,503,285,286,287,288,289,290,291,353,292,504,293,326,327,294,295,296,354,355,297,356],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[435,213,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[50,52,60,1,90,92,94,95,97,106,110],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[298,19,375,66,380,302,70,72,129,130,132,134,308,332,168,294,295,296],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[301,302,313,314,315,506,316,132,134,308],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[50,52,60,1,90,92,94,95,97,106,110],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[2,507],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[9,11,12,14,42,65,66,68,69,71,113,114,115,116,117,118,119,128,129,130,131,134,138,166,170,265,266,267,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[18,375,65,71,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[50,52,60,1,90,92,94,95,97,106,110],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[396],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[0,1,2,3,508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[183,184,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[9,10,12,13,14,15,16,298,373,17,18,19,20,374,375,44,45,46,64,509,65,378,379,66,67,68,69,302,70,71,510,72,113,114,115,116,118,119,511,397,401,404,405,406,128,407,408,129,409,410,411,412,413,414,415,416,417,130,418,419,420,421,422,131,423,424,132,322,134,308,321,324,449,450,451,452,453,454,460,462,463,166,464,332,167,325,168,465,466,471,489,490,264,265,266,267,494,268,497,498,499,500,310,501,503,326,327,294,294,295,295,296],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[512,505,513,514],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":437,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":81,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":356,"org.easymock.tests2.DelegateToTest.testReturnException":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":247,"org.easymock.tests.MockingTest.testPartialClassMocking":265,"org.easymock.tests.MockClassControlTest.testToString":449,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":213,"org.easymock.tests.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests2.DependencyTest.testClassMocking":376,"org.easymock.tests2.AnswerTest.answer":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":225,"org.easymock.tests2.DependencyTest.testClassMockingSupport":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":142,"org.easymock.tests2.CaptureTest.testCapture1_2446744":54,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":5,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":329,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":424,"org.easymock.samples.PartialClassMockTest.testGetArea":296,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests2.CompareToTest.testLessOrEqual":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":59,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":6,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":223,"org.easymock.tests.MockNameTest.defaultName":461,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":205,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":224,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":20,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":503,"org.easymock.samples.ExampleTest.voteForRemoval":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":246,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":136,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":24,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":350,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":109,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":351,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testClassMocking":490,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":488,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":127,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":314,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":458,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":214,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.MockClassControlTest.testHashCode":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":415,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":393,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":82,"org.easymock.tests.DefaultClassInstantiatorTest.object":497,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":182,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":456,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.CapturesMatcherTest.test":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":276,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":249,"org.easymock.tests2.StubTest.stubWithReturnValue":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":3,"org.easymock.tests2.SerializationTest.testAllMockedMethod":322,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":307,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":318,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":145,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":34,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":107,"org.easymock.tests2.DelegateToTest.testWrongClass":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":253,"org.easymock.tests.UsageStrictMockTest.range":273,"org.easymock.samples.ConstructorCalledMockTest.testTax":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":402,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":505,"org.easymock.tests.UsageUnorderedTest.message":177,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":418,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.SerializationTest.testClass":132,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":408,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":396,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":266,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":108,"org.easymock.tests.MockingTest.testTwoMocks":264,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":504,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":499,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":41,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":425,"org.easymock.tests.UsageVerifyTest.twoThrows":219,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":135,"org.easymock.tests2.UsageConstraintsTest.equals":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":298,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":513,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests.MockingTest.testStrictClassMocking":489,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":117,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":457,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":43,"org.easymock.tests2.NameTest.nameForNiceMock":359,"org.easymock.tests2.DependencyTest.testInterfaceMocking":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":315,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.DelegateToTest.testStubDelegate":138,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":271,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":295,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.SerializationTest.test":133,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":55,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":312,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":355,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":394,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":410,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":281,"org.easymock.tests2.NameTest.nameForStrictMock":358,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":500,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":414,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":512,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.MockBuilderTest.testWithConstructor":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":411,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":501,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":349,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CaptureTest.testCaptureFromStub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.UsageStrictMockTest.testVerify":495,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests2.CompareToTest.testGreateThan":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
