[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[9,10,11,12,13],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,4,5,6,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,9,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,12,244,245,246,13,247,248,249,250,251,252,253,254,255,256,257,258,8,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,1,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,290,291,3,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[302,303,304,305,306],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[307,15,16,17,18,19,20,22,308,309,310,302,302,303,303,311,312,313,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,4,5,6,67,68,69,71,72,73,74,75,76,77,78,79,81,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,147,148,149,150,151,152,153,158,160,161,163,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,189,190,191,192,193,194,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,314,11,315,316,219,220,221,222,223,224,225,226,227,228,229,230,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,231,232,332,333,233,234,235,236,237,238,239,240,241,242,243,244,245,334,335,13,247,248,249,250,251,252,253,254,255,256,257,258,8,259,260,261,262,263,264,265,266,267,268,269,270,271,336,272,273,337,1,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,290,291,3,292,294,295,296,297,299,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[289],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[291,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[338,339,106,127,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[343,45,101,102,103,344,345,105,106,107,110,111,127,128,130,131,154,346,347,188,330,348,250,251,257,258,262,264,265,337],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[157,158,159,160,161,163,164,165,166,167,168,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[338,339,106,127,340,341],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[200,202,210,275,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[200,201,202,203,210,211,275,276,277,278,279,280,281,282,371,283,291,3,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[307,15,16,17,18,19,20,21,22,308,309,310,302,303,311,312,313,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,372,373,374,375,376,377,378,43,44,379,380,343,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,4,5,6,67,68,381,382,383,384,385,386,69,387,70,388,389,390,391,392,393,394,395,71,72,73,74,75,76,77,78,79,396,397,398,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,399,400,401,344,402,403,404,345,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,405,123,124,125,126,127,128,129,130,131,132,133,406,407,408,134,135,409,136,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,7,430,431,432,433,434,435,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,436,154,155,156,346,437,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,438,439,440,174,175,176,441,177,178,179,180,181,182,183,184,185,186,442,443,187,444,347,188,445,189,190,191,192,193,194,195,14,196,304,446,197,9,198,199,447,10,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,448,449,450,314,451,452,11,453,454,455,456,457,458,459,460,461,315,462,463,464,465,466,316,467,468,219,220,221,222,223,224,469,470,225,226,227,228,229,230,317,318,319,320,321,322,323,324,325,326,327,328,329,471,472,473,474,475,330,476,477,478,479,480,481,331,231,232,332,482,333,233,234,483,484,235,236,237,238,485,239,240,241,486,242,243,305,12,487,488,489,244,245,334,490,335,491,492,246,13,306,247,493,494,495,496,497,348,498,248,249,250,251,252,253,254,255,256,257,258,8,259,260,261,262,263,264,265,266,267,268,269,270,499,500,271,336,272,273,501,502,503,504,505,337,506,507,508,509,510,511,1,274,275,276,512,277,278,279,280,281,282,371,283,284,285,286,287,288,289,2,290,291,3,292,293,294,295,296,297,298,299,513,300,301,514,515],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[49,55,62,63,150,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[307,15,16,17,18,19,20,22,308,309,310,302,302,303,303,311,312,313,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,372,373,374,376,43,44,379,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,4,5,6,67,68,381,382,383,384,385,386,69,70,396,397,398,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,405,123,125,126,127,128,129,130,131,132,133,408,134,135,136,429,434,137,139,140,141,142,144,145,146,147,148,149,150,151,152,153,169,170,171,172,173,438,439,440,174,175,176,177,178,179,180,181,182,183,184,185,186,187,347,188,189,190,191,192,193,194,195,196,197,9,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,314,11,315,316,219,220,221,222,223,224,469,470,225,226,227,228,229,230,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,231,232,332,333,233,234,235,236,237,238,485,239,240,241,486,242,243,12,244,334,335,13,248,249,250,251,252,253,254,255,256,257,258,8,259,260,261,262,263,264,265,266,271,336,272,273,337,1,274,275,276,277,278,279,280,281,282,371,283,284,285,286,287,288,289,2,290,291,3,292,293,294,295,296,297,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[302,302,303,303,304,228,491,492,301,514],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[200,202,210,275,276,278,280,281,371,291,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[378,43,44,379,380],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[516,517,518,519,520,521,490,522,514],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[391,523,524],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[228,525,516,517,518,526,519,520,521,490,492,522,527,301,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[16,119,219,224,470,225,227,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[291,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":276,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.UsageTest.argumentsOrdered":258,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":253,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":114,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":82,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":484,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":336,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":516,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageTest.wrongArguments":251,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":73,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":403,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":192,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":326,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":100,"org.easymock.tests.UsageTest.moreThanOneArgument":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":151,"org.easymock.tests.UsageTest.argumentsOrdered":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":520,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":354,"org.easymock.tests.ReplayStateInvalidUsageTest.times":165,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":330,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":270,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":401,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests2.UsageTest.strictResetToDefault":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":321,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":204,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":159,"org.easymock.tests.UsageThrowableTest.throwError":88,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":402,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":511,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":357,"org.easymock.samples.PartialClassMockTest.testGetArea":307,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests2.UsageTest.niceToStrict":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":244,"org.easymock.tests2.MockBuilderTest.testCreateMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":287,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":523,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":286,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":209,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":86,"org.easymock.tests2.EasyMockSupportClassTest.testAll":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureAll":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":269,"org.easymock.tests.MockNameTest.defaultName":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":288,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":152,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":507,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":521,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":393,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":4,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":199,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":358,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":447,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":195,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":350,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":319,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":320,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":217,"org.easymock.tests2.UsageTest.moreThanOneArgument":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":293,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":149,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":138,"org.easymock.tests2.UsageConstraintsTest.testContains":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":222,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":300,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":517,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":178,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":514,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":502,"org.easymock.tests.MockClassControlTest.testHashCode":85,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":267,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":298,"org.easymock.tests.UsageVarargTest.varargCharAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":387,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests.DefaultClassInstantiatorTest.object":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":501,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":9,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":84,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.tests.ReplayStateInvalidCallsTest.times":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":316,"org.easymock.tests2.UsageTest.resumeIfFailure":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":116,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":294,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":527,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":469,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":3,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":360,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":348,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":352,"org.easymock.tests2.CaptureTest.testCaptureNone":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":142,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":311,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":99,"org.easymock.tests2.UsageConstraintsTest.any":283,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":164,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":163,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.SerializationTest.testClass":228,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":337,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.NameTest.nameForMocksControl":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.MockedExceptionTest.testMockedException":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":452,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":513,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":281,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":367,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":292,"org.easymock.tests.MockingTest.testTwoMocks":408,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":296,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":161,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":216,"org.easymock.tests2.MockBuilderTest.testCreateMockString":247,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":515,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":315,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":198,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testNotNull":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":220,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.UsageVarargTest.differentLength":179,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests2.UsageConstraintsTest.equals":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":98,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":74,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":519,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.NameTest.nameForNiceMock":237,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":366,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":518,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":301,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":509,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":493,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":205,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":524,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.tests2.UsageConstraintsTest.testSame":279,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":351,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":508,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":349,"org.easymock.tests2.NameTest.nameForMock":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.UsageStrictMockTest.differentMethods":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":6,"org.easymock.tests2.MockedExceptionTest.testRealException":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":97,"org.easymock.tests2.NameTest.nameForStrictMock":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":264,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":355,"org.easymock.tests2.UsageConstraintsTest.lessThan":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":210,"org.easymock.tests2.UsageConstraintsTest.testOr":280,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":190,"org.easymock.tests.UsageTest.wrongArguments":107,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":143,"org.easymock.tests2.UsageConstraintsTest.cmpTo":284,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":470,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":487,"org.easymock.tests.UsageTest.unexpectedCallWithArray":106,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":365,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.UsageConstraintsTest.constraints":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":310,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":323}}]
