[{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,15,16,9,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[25,26,27,28,29,30,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[27,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[20,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.Range:36","failures":[58,59,60,61,62,63,64,0,1,65,66,2,3,67,68,69,70,25,71,72,73,74,26,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,5,148,149,150,151,152,153,6,154,155,156,157,158,159,7,8,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,27,193,194,28,55,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,19,20,21,22,218,23,219,24,220,221,222,223,224,225,226,227,228,229,230,231,56,232,233,234,57,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,9,254,255,10,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,285,286,287,288,289,290,291,292,293,30,31,294,295,296,297,298,299,300,11,301,302,303,304,305,12,13,306,307,32,308,33,34,309,35,36,310,37,311,38,39,40,312,41,313,42,314,315,316,317,318,319,320,321,322,323,43,324,325,44,326,327,45,46,328,329,47,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,48,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,49,399,400,50,51,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,52,433,434,435,436,437,438,439,440,441,53,442,443,444,445,446,54,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,14,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.internal.LastControl:61","failures":[114,126,127,6,154,155,156,157,158,199,9,254,259,260,279,280,281,282,283,325,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,372,374,378,463,469,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[63,0,1,2,3,67,493,4,109,122,123,124,138,6,7,8,252,9,255,10,256,494,270,298,11,301,302,12,13,306,307,33,312,41,42,319,45,328,332,348,380,403,407,408,411,461,464,14,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[495,496],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[30,31,39,497,313,498,499,44],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,0,1,65,66,2,3,67,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,132,134,138,139,140,141,142,144,145,147,5,148,149,150,6,154,155,156,157,158,159,7,8,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,203,205,206,207,208,209,210,211,212,213,214,215,216,19,242,243,244,245,247,248,249,252,253,9,254,255,10,256,257,258,259,260,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,285,286,287,288,289,290,291,292,293,30,31,294,295,296,297,298,299,300,11,301,302,303,304,305,12,13,306,307,32,33,36,310,37,38,312,41,42,316,317,318,319,320,321,322,323,43,325,327,45,46,328,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,366,367,368,48,369,370,371,372,374,375,376,377,378,379,380,386,394,395,396,398,49,399,400,50,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,430,52,53,54,454,461,462,463,464,14,465,466,467,468,470,471,472,473,475,476,477,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[63,64,65,66,67,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,118,119,120,121,123,124,126,131,132,134,138,140,141,149,150,6,154,155,156,157,158,159,7,8,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,203,253,254,255,10,256,257,259,260,279,280,281,282,283,284,29,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,307,36,37,38,316,317,318,320,321,323,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,370,372,374,375,377,378,379,380,386,394,395,396,398,49,399,400,50,402,404,405,406,407,410,411,412,413,414,52,53,54,454,462,463,464,14,465,466,467,468,470,471,472,473,475,476,477,479,480,481,482,484,485,486,487,488,489,492],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[2,12,334],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[3,138,149,6,7,180,181,183,184,185,186,187,252,10,256,301,302,13,41,319,46,333,339,340,342,345,351,352,353,355,380,403,405,407,408,411,412,413,461,14,465,489],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[469],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[330,349,355,501],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,15,16,9,17,18],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[341,342],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[9,17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":333,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":302,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":285,"org.easymock.tests2.DelegateToTest.testReturnException":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":273,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":83,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":317,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":287,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":136,"org.easymock.tests2.UsageConstraintsTest.testNull":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":321,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":411,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":278,"org.easymock.tests2.CaptureTest.testPrimitive":482,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":102,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":60,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":265,"org.easymock.tests.UsageVarargTest.varargIntAccepted":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":213,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":499,"org.easymock.tests2.DependencyTest.testClassMocking":314,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests2.CaptureTest.testAnd":479,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":72,"org.easymock.tests2.UsageTest.strictResetToDefault":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":140,"org.easymock.tests2.DelegateToTest.testDelegate":398,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":98,"org.easymock.tests.LimitationsTest.mockFinalMethod":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":192,"org.easymock.tests2.DependencyTest.testClassMockingSupport":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":151,"org.easymock.tests2.CaptureTest.testCapture1_2446744":483,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":207,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":74,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.samples.PartialClassMockTest.testGetArea":29,"org.easymock.tests.MockingTest.testInterfaceMocking":133,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":208,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":84,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":251,"org.easymock.tests2.UsageTest.niceToStrict":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":407,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":345,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":488,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":106,"org.easymock.tests2.EasyMockSupportClassTest.testAll":430,"org.easymock.tests.MockClassControlTest.testEquals":277,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":100,"org.easymock.tests2.CaptureTest.testCaptureAll":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests.MockNameTest.defaultName":125,"org.easymock.tests2.UsageConstraintsTest.testMatches":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":205,"org.easymock.samples.ExampleTest.voteForRemovals":291,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":191,"org.easymock.samples.BasicClassMockTest.testPrintContent":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":219,"org.easymock.tests2.UsageConstraintsTest.greaterThan":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":24,"org.easymock.samples.ExampleTest.voteForRemoval":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":404,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.CaptureTest.testCaptureFirst":492,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":405,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":491,"org.easymock.tests2.UsageTest.moreThanOneArgument":300,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":236,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":113,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":123,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":101,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":78,"org.easymock.tests.UsageCallCountTest.tooManyCalls":124,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":471,"org.easymock.tests.MockingTest.testNiceClassMocking":137,"org.easymock.tests.MockingTest.testClassMocking":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":117,"org.easymock.tests2.UsageConstraintsTest.testContains":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":370,"org.easymock.tests2.UsageConstraintsTest.testFind":335,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests.MockTypeTest.fromEasyMockClass":73,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":374,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":410,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":108,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":68,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":103,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":144,"org.easymock.tests.MockClassControlTest.testHashCode":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":439,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":469,"org.easymock.tests.UsageVarargTest.varargCharAccepted":107,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":217,"org.easymock.tests2.CaptureTest.testCaptureMultiple":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":413,"org.easymock.tests.DefaultClassInstantiatorTest.object":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":80,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":274,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests2.StubTest.stubWithReturnValue":468,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":400,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":18,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":95,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":240,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":360,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":70,"org.easymock.tests.UsageExpectAndThrowTest.object":93,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":396,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":425,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":427,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests2.CaptureTest.testCaptureNone":487,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":263,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":494,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":112,"org.easymock.tests2.ThreadingTest.testThreadSafe":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":121,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":238,"org.easymock.tests2.UsageConstraintsTest.any":342,"org.easymock.tests2.StubTest.stub":467,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageExpectAndThrowTest.longType":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":218,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":28,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":466,"org.easymock.tests2.NameTest.nameForMocksControl":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.MockedExceptionTest.testMockedException":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":432,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":87,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":323,"org.easymock.tests2.CaptureTest.testCaptureLast":486,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":477,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":91,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":357,"org.easymock.samples.ExampleTest.removeNonExistingDocument":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":209,"org.easymock.tests.UsageStrictMockTest.differentMethods":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":496,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":377,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":433,"org.easymock.tests.UsageExpectAndThrowTest.floatType":85,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":401,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":261,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":202,"org.easymock.tests2.UsageConstraintsTest.testNotNull":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.UsageTest.defaultResetToNice":305,"org.easymock.samples.ExampleTest.voteAgainstRemovals":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":109,"org.easymock.tests2.CallbackTest.callback":380,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":44,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.MockingTest.testStrictClassMocking":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":476,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":475,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":364,"org.easymock.tests.ObjectMethodsTest.testHashCode":248,"org.easymock.tests2.NameTest.nameForNiceMock":418,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":379,"org.easymock.tests2.DependencyTest.testInterfaceMocking":316,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":395,"org.easymock.tests2.AnswerTest.stubAnswer":363,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":254,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":39,"org.easymock.tests.UsageVarargTest.varargLongAccepted":111,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":420,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":484,"org.easymock.tests2.SerializationTest.test":399,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests2.UsageConstraintsTest.testSame":337,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":434,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":135,"org.easymock.tests2.NameTest.nameForMock":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":97,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":141,"org.easymock.tests2.MockedExceptionTest.testRealException":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":216,"org.easymock.tests2.NameTest.nameForStrictMock":417,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":22,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":228,"org.easymock.tests2.CaptureTest.testCaptureRightOne":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":438,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":495,"org.easymock.tests2.UsageConstraintsTest.testOr":338,"org.easymock.tests.UsageRangeTest.combination":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":319,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":435,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":221,"org.easymock.tests.UsageVarargTest.varargShortAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":23,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":122,"org.easymock.tests2.UsageConstraintsTest.cmpTo":343,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.CaptureTest.testCaptureFromStub":490,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":206,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.UsageConstraintsTest.constraints":332,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.UsageStrictMockTest.testVerify":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":189,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":166,"org.easymock.tests.LimitationsTest.abstractClass":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":408,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":104}}]
