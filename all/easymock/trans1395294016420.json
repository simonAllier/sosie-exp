[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[1,2,3,4],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[1,2,5],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,2,85,5,0,86,87,88,89,90,91,92,93,94,95,96,97,98,3,99,100,101,102,4,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[241,242,243,244,245,246,247],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[10,11,12,16,17,125],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[248,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[87,250,251,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.ConstructorArgs:54","failures":[7,43,47,252,48,241,253,254,255,49,256,257,50,258,259,260,261,262,263,264,265,266,51,267,268,269,270,271,52,272,273,274,275,242,276,277,278,279,280,281,282],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[50,59,63,82,283],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[7,50,51,52,284,59,285,60,61,62,63,286,287,82,83,283,132,288,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[20,21,24,25,53,54,55,56,116,118,119,165,166,167,168,292,222,223,224,232,233,235,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,293,294,106,295,296,140,297,298,299,300,301,302,303,304,305,208,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[18,21,22,23,24,25,26,27,29,33,34,36,40,59,310,63,286,76,82,84,5,98,114,117,118,119,164,311,166,167,168,169,312,175,176,182,214,223,224,313,314,315,316,226,230,232,234,235,236],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,141,319,320,321],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,79,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[64,66,73,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[0,90,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[322,109],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[7,8,9,323],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[65,70,71,74,89,92,116,135,296,138,139,140,141,142,177,178,179,180,181,182,206,207,208,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[7,8,9,324,325,326,327,10,11,12,13,14,16,17,18,19,20,21,22,23,328,329,330,24,25,26,27,331,332,333,334,335,40,42,43,46,47,48,53,54,55,56,57,58,284,59,285,336,60,337,310,63,286,338,64,65,66,67,339,68,69,70,71,72,73,340,341,74,75,76,77,78,79,80,287,81,342,343,82,83,84,344,2,85,5,0,86,87,88,89,90,91,92,93,94,95,96,97,98,3,99,100,101,102,250,4,103,104,105,293,294,106,295,108,109,345,110,111,112,346,251,113,114,115,116,117,118,119,120,124,125,126,127,128,129,347,130,135,296,348,136,137,349,350,351,352,138,139,140,141,142,288,353,354,289,355,356,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,311,166,357,358,167,168,169,170,359,171,172,173,174,312,175,176,177,178,179,180,181,182,360,361,248,319,362,363,364,365,366,367,368,300,249,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,369,307,370,204,205,371,372,373,374,375,206,207,376,377,378,302,303,304,305,208,306,209,210,211,212,213,214,215,216,217,218,219,220,221,379,380,381,382,383,384,385,386,222,223,224,387,388,389,390,391,392,393,394,395,225,396,397,398,399,400,401,226,227,228,229,230,231,232,233,234,235,236,237,402,403,404,238,239,405,240,406,407,408],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[61],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[6,20,21,24,25,409,107,116,118,119,353,356,165,311,166,167,168,182,410,411,369,376,412,222,223,224,232,233,235,236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[60,61,62,413,132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[7,48,241,242,276,243,244,245,414],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[6,416,8,324,325,326,327,10,417,418,11,12,13,14,15,16,17,18,19,20,21,22,23,328,329,330,24,25,26,27,28,29,30,31,32,33,34,419,35,36,37,38,39,40,41,45,53,54,55,56,57,58,64,65,66,67,339,68,69,70,71,72,73,340,341,74,75,77,2,85,5,0,86,87,88,89,90,91,420,92,93,94,95,96,97,98,3,99,100,101,102,250,4,103,104,105,293,294,106,295,107,421,322,108,109,345,422,110,111,112,346,251,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,347,130,131,423,424,425,135,296,348,136,137,349,350,351,352,426,138,139,140,141,142,353,354,355,356,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,311,166,357,358,167,168,169,297,298,299,170,171,172,173,174,312,175,176,177,178,179,180,181,182,360,410,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,411,369,370,204,205,371,372,373,374,375,206,207,427,321,428,376,377,412,302,303,304,305,208,306,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,387,388,389,390,391,392,393,394,395,429,225,396,430,431,432,397,398,399,400,401,226,227,228,229,230,231,232,233,234,235,236,237,402,433,434,435,436,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[322,109,438],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[439,3],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,293,294,106,295,296,140,297,298,299,300,301,302,303,304,305,208,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":123,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":303,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests.MockClassControlTest.testToString":381,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":351,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":36,"org.easymock.tests2.CaptureTest.testPrimitive":67,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":142,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageVarargTest.varargIntAccepted":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":317,"org.easymock.tests2.AnswerTest.answer":10,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":327,"org.easymock.tests2.CaptureTest.testAnd":64,"org.easymock.tests2.UsageTest.strictResetToDefault":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":411,"org.easymock.tests2.CaptureTest.testCapture1_2446744":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":325,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":319,"org.easymock.tests.UsageThrowableTest.throwError":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":273,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests2.CompareToTest.testLessOrEqual":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":262,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":271,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.MockClassControlTest.testEquals":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":326,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests.UsageVarargTest.allKinds":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.samples.BasicClassMockTest.testPrintContent":134,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":374,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":414,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":287,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":163,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":30,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":302,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":31,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":251,"org.easymock.tests2.CaptureTest.testCapture2_2446744":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":28,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":426,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":373,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":35,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":244,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":378,"org.easymock.tests.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":394,"org.easymock.tests.MockClassControlTest.testHashCode":384,"org.easymock.tests2.EasyMockSupportTest.testVerify":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":264,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":392,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":324,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":212,"org.easymock.tests2.CaptureTest.testCaptureMultiple":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests2.UsageTest.openCallCountByLastCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":38,"org.easymock.tests.DefaultClassInstantiatorTest.object":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":430,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":376,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.CapturesMatcherTest.test":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":382,"org.easymock.tests2.UsageTest.resumeIfFailure":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":305,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":4,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":415,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":321,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":345,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":207,"org.easymock.tests.UsageStrictMockTest.range":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":350,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":425,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":182,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":313,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":217,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":267,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":174,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":133,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":141,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":57,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":290,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.tests2.NameTest.nameForMocksControl":56,"org.easymock.tests2.MockedExceptionTest.testMockedException":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":257,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":369,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":236,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":346,"org.easymock.tests2.MockBuilderTest.testCreateMockString":286,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":258,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":280,"org.easymock.tests2.UsageConstraintsTest.testNotNull":103,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":375,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests.UsageVarargTest.differentLength":214,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":352,"org.easymock.tests.UsageThrowableTest.throwCheckedException":372,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.ObjectMethodsTest.testHashCode":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":55,"org.easymock.tests2.DependencyTest.testInterfaceMocking":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":245,"org.easymock.samples.ExampleTest.addDocument":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":268,"org.easymock.tests2.DelegateToTest.testStubDelegate":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests.UsageVarargTest.varargLongAccepted":216,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":282,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.samples.SupportTest.addDocument":121,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":259,"org.easymock.tests.GenericTest.testPackageScope":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests2.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests2.NameTest.nameForStrictMock":54,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":334,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":118,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":263,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageTest.wrongArguments":166,"org.easymock.tests2.MockBuilderTest.testWithConstructor":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":260,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.UsageVarargTest.varargShortAccepted":215,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":340,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":248,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":285,"org.easymock.tests.UsageTest.unexpectedCallWithArray":311,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":173,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests2.CompareToTest.testGreateThan":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":210}}]
