[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[11,12,13],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[14],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[12,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[27,14,28,29,30,31,32,11,33,12,16,34,17,35,18,19,36,37,38,39,40,41,42,43,44,45,21,46,47,48,49,22,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,8,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,23,121,24,122,123,124,125,126,127,128,25,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,1,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,3,4,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[80,81,9,10,252],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[30,16,19,36,37,40,21,46,47,49,57,58,62,258,0,77,259,99,105,108,110,112,113,115,116,117,25,133,150,260,1,176,183,196,197,198,200,201,202,203,204,3],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[65,66,67,68,70,71,79,80,81,82,261,262,263,87,89,264,265,266,267,90,268,91,92,269,259,270,271,8,98,99,101,102,103,272,104,273,274,105,275,106,131,276,135,136,137,277,181,182,278,190,279,280,9,9,10,10,252,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[16,19,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[17,48,96,214],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[53,60,120,134,143,144,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,188,194,197,199,200,201,202,203,204,3],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[67,70,91,282,283,284,285,286,287,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[17,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[14],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[290,291,292,293,294,295,296,87,297,298],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[299,27,14,28,300,29,30,31,32,11,33,12,16,34,17,35,18,19,36,20,37,38,39,40,41,42,43,44,45,21,46,47,48,49,22,50,51,52,53,54,55,56,57,58,59,60,301,61,62,63,64,65,66,67,68,69,70,71,72,73,258,74,75,76,0,77,78,79,80,81,82,302,83,84,303,304,85,86,305,306,307,308,309,87,88,89,264,266,90,268,91,92,269,259,271,310,311,312,313,8,93,94,95,96,97,98,99,100,101,102,103,272,104,273,274,105,275,314,315,106,316,107,108,109,110,111,112,113,317,114,115,116,117,118,119,120,23,121,24,122,123,124,125,126,127,128,25,318,129,130,131,319,320,321,132,133,134,276,135,136,137,138,139,140,141,142,322,323,324,325,326,327,328,329,143,330,144,145,331,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,332,333,334,335,336,288,337,338,260,172,173,174,175,1,176,177,339,340,277,284,285,286,341,342,343,344,345,346,347,348,349,350,351,178,179,352,180,353,354,355,181,182,278,356,357,183,358,184,185,186,359,187,188,360,189,361,190,362,363,364,365,366,367,368,369,370,371,372,373,191,192,193,194,195,196,197,198,199,200,201,202,203,204,374,205,206,207,208,209,375,210,211,212,213,214,215,3,4,289,376,377,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,378,379,380,236,237,238,239,381,240,241,382,242,243,383,384,244,245,246,247,248,249,385,250,9,9,10,10,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[12,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[11,33,34,17,35,18,39,41,42,44,45,21,22,50,51,75,318,138,139,140,141,142,174,344,345,346,347,348,178,179,180,191,192,195,9,9,10,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[86,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[299,27,14,28,300,29,30,31,32,11,33,12,16,34,17,35,18,19,36,37,38,39,40,41,42,43,44,45,21,46,47,49,22,50,51,52,53,54,55,57,59,60,301,63,64,65,66,67,68,69,70,71,72,73,75,0,77,79,80,81,82,83,84,303,304,85,86,305,87,88,266,90,91,92,259,8,93,94,95,96,97,98,99,100,101,102,103,104,274,105,275,314,315,106,316,107,108,109,110,111,112,113,317,114,115,116,117,119,120,23,121,122,123,126,127,128,25,318,129,130,131,132,133,134,135,136,137,138,139,140,141,142,326,327,328,329,143,330,144,145,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,288,337,338,174,1,176,344,345,346,347,348,349,350,351,178,179,180,353,354,355,181,278,357,183,358,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,374,215,3,4,289,376,377,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,378,236,382,242,243,383,384,244,245,246,247,249,250,9,9,10,10,252,255],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[386],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":58,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":251,"org.easymock.tests2.DelegateToTest.testReturnException":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":135,"org.easymock.tests.MockClassControlTest.testToString":284,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":291,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageTest.wrongArguments":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":324,"org.easymock.samples.ExampleTest.answerVsDelegate":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":280,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":343,"org.easymock.tests2.CaptureTest.testPrimitive":122,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests.ReplayStateInvalidUsageTest.times":370,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":313,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":356,"org.easymock.tests2.CaptureTest.testCapture1_2446744":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":311,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":364,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":7,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests2.CompareToTest.testLessOrEqual":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":283,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":322,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":40,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":261,"org.easymock.tests2.CaptureTest.testCaptureAll":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":249,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":275,"org.easymock.samples.ExampleTest.voteForRemoval":246,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":259,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":240,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":270,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":241,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":321,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":298,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":187,"org.easymock.tests.MockClassControlTest.testHashCode":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":310,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":302,"org.easymock.tests.UsageVarargTest.varargCharAccepted":208,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests2.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":285,"org.easymock.tests2.UsageTest.resumeIfFailure":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":297,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":354,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":355,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DelegateToTest.testWrongClass":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":323,"org.easymock.tests2.CaptureTest.testCaptureNone":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":351,"org.easymock.tests.UsageUnorderedTest.message":196,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":194,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests2.SerializationTest.testClass":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":278,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests2.NameTest.nameForMocksControl":309,"org.easymock.tests2.MockedExceptionTest.testMockedException":315,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":136,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CompareToTest.testNotComparable":15,"org.easymock.tests2.CompareToTest.testCompareEqual":386,"org.easymock.tests2.CaptureTest.testCaptureLast":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":357,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests.MockingTest.testTwoMocks":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":176,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":271,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":314,"org.easymock.tests2.UsageTest.defaultResetToNice":301,"org.easymock.samples.ExampleTest.voteAgainstRemovals":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.UsageVarargTest.differentLength":375,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":193,"org.easymock.tests.UsageCallCountTest.tooFewCalls":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":325,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":305,"org.easymock.tests2.CompareToTest.testGreateOrEqual":281,"org.easymock.tests.ObjectMethodsTest.testHashCode":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":294,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":293,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":124,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests2.NameTest.nameForMock":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":185,"org.easymock.tests2.MockedExceptionTest.testRealException":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":373,"org.easymock.tests2.NameTest.nameForStrictMock":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":266,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":25,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":146,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CaptureTest.testCaptureFromStub":318,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":267,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":250,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206}}]
