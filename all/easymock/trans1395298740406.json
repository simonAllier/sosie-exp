[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.RecordState:173","failures":[2],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[10,12,84,45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,122,123,124,125,126,127,82,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,6,7,143,144,145,8,9,146,147,148,149,150,151,152,153,154,155,10,156,11,157,158,159,160,161,162,163,164,165,166,167,12,13,168,169,170,171,172,14,15,16,17,18,19,173,174,175,176,177,178,179,180,181,182,183,184,185,20,21,22,23,24,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,83,255,256,257,258,25,26,259,260,261,262,263,264,265,266,27,28,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,1,320,2,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,29,30,342,343,344,3,4,5,31,32,33,34,345,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,60,61,392,62,63,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,416,417,418,419,79,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,80,454,455,81,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[86,87,8,489,12,169,215,216,219,220,287,342,395,401,402],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[6,7,8,10,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[490,491,492,493,494,324,325,3,380,383],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[10,36,54,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[400,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[490,491,492,495,496,325,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"i","minimum":"i","maximum":"i"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[497,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[135,136,137,138,140,142],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[6,7,8,10,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[90,91,92,94,177,232,233,234,236,241,261,271,498,499,500,324,3,5,358,359,360,361,364,365,371,501,373,374,377,378,379,381,384,385,502,387,390,424,427,437,443,446,447,449,450,451,452,80,81,456,457,458,474,475,477,477,478,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,87,8,489,12,169,215,216,219,220,342,395,401,402],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:199","sourceCode":"java.util.List<java.lang.reflect.Field>.addAll(java.util.Arrays.java.util.Arrays.asList(java.lang.Class<?>.getDeclaredFields()))","type":"CtInvocationImpl"},"failures":[308,314,328,334,476,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[119,7,22,187,188,189,263,264,265,266,27,28,388,389,390,391],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[503,504,12,215,84,505],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[86,158,178,180,181,182,183,184,185,23,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,27,284,63,399,416],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[85,87,91,92,94,103,104,105,106,6,11,157,158,13,169,170,14,15,16,17,18,178,180,181,182,183,184,185,20,21,24,213,214,217,218,221,232,234,25,26,261,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,2,324,333,29,342,343,3,4,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,363,364,365,373,377,379,381,385,390,63,393,394,396,398,399,400,403,404,405,409,64,65,67,68,71,72,73,74,76,77,416,417,418,419,79,420,424,427,437,443,446,447,448,449,450,451,80,456,457,458,463,464,473,479,480,482,483,485],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[90,91,92,94,177,232,233,234,261,498,324,3,5,358,359,360,361,364,365,371,373,374,377,378,379,381,384,385,387,390,424,427,437,443,446,447,449,450,451,452,80,81,456,457,458,474,475,477,477,478,478,479],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,122,123,124,125,126,127,82,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,6,7,143,144,145,8,9,146,147,148,149,150,151,152,153,154,155,10,156,11,157,158,159,160,161,162,163,164,165,166,167,12,13,168,169,170,171,172,14,15,16,17,18,19,173,174,175,176,177,178,179,180,181,182,183,184,185,20,21,22,23,24,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,83,255,256,257,258,25,26,259,260,261,262,263,264,265,266,27,28,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,1,320,2,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,29,30,342,343,344,3,4,5,31,32,33,34,345,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,60,61,392,62,63,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,416,417,418,419,79,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,80,454,455,81,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[90,91,92,94,177,232,233,234,236,241,261,271,498,499,500,324,3,5,358,359,360,361,364,365,371,501,373,374,377,378,379,381,384,385,502,387,390,424,427,437,443,446,447,449,450,451,452,80,81,456,457,458,474,475,477,477,478,478,479],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests2.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":397,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":476,"org.easymock.tests2.DelegateToTest.testReturnException":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":264,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":272,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":411,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests2.UsageTest.wrongArguments":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":96,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":449,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":277,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":354,"org.easymock.tests2.CaptureTest.testPrimitive":67,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":98,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.ReplayStateInvalidUsageTest.times":255,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":405,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":370,"org.easymock.tests2.CaptureTest.testAnd":64,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":238,"org.easymock.tests2.UsageTest.strictResetToDefault":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":349,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":102,"org.easymock.tests2.DelegateToTest.testDelegate":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests.LimitationsTest.mockFinalMethod":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":111,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":190,"org.easymock.tests2.CaptureTest.testCapture1_2446744":68,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":368,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":240,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":156,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":445,"org.easymock.samples.PartialClassMockTest.testGetArea":479,"org.easymock.tests.MockingTest.testInterfaceMocking":93,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":432,"org.easymock.tests2.UsageTest.niceToStrict":396,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":377,"org.easymock.tests2.MockBuilderTest.testCreateMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":46,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":284,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":299,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":45,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":73,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":424,"org.easymock.tests.MockClassControlTest.testEquals":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":369,"org.easymock.tests.MockNameTest.defaultName":186,"org.easymock.tests2.UsageConstraintsTest.testMatches":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":248,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":10,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":141,"org.easymock.tests2.UsageConstraintsTest.greaterThan":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":458,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":452,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":177,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":347,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":263,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":295,"org.easymock.tests2.UsageTest.moreThanOneArgument":394,"org.easymock.tests2.CaptureTest.testCapture2_2446744":76,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":128,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":155,"org.easymock.tests.GenericTest.testBridgedEquals":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":19,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.MockingTest.testNiceClassMocking":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":359,"org.easymock.tests.MockingTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":501,"org.easymock.tests2.UsageConstraintsTest.testContains":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":390,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":239,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageExpectAndReturnTest.object":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":150,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":163,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":99,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":325,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":283,"org.easymock.tests.MockClassControlTest.testHashCode":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":309,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":434,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":367,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":149,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":133,"org.easymock.tests2.UsageTest.openCallCountByLastCall":398,"org.easymock.tests.DefaultClassInstantiatorTest.object":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":161,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":456,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":443,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":273,"org.easymock.tests2.UsageTest.resumeIfFailure":403,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":266,"org.easymock.tests2.StubTest.stubWithReturnValue":416,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":380,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":297,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":127,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":473,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":406,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":52,"org.easymock.tests2.DelegateToTest.testWrongClass":321,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":477,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":145,"org.easymock.tests2.CaptureTest.testCaptureNone":72,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":154,"org.easymock.tests2.ThreadingTest.testThreadSafe":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":438,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":42,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":139,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":254,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":30,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":500,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests2.NameTest.nameForMocksControl":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":446,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":381,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":451,"org.easymock.tests2.CaptureTest.testCaptureLast":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":365,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":53,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":57,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":310,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":137,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":419,"org.easymock.tests2.MockBuilderTest.testCreateMockString":387,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":428,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":408,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":326,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":437,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":457,"org.easymock.tests.LimitationsTest.privateConstructor":260,"org.easymock.tests2.UsageConstraintsTest.testNotNull":56,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":388,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.UsageTest.defaultResetToNice":400,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":303,"org.easymock.tests.UsageVarargTest.differentLength":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":327,"org.easymock.tests2.UsageConstraintsTest.equals":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":454,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":363,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":410,"org.easymock.tests.ObjectMethodsTest.testHashCode":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":420,"org.easymock.tests2.NameTest.nameForNiceMock":414,"org.easymock.tests2.DependencyTest.testInterfaceMocking":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.AnswerTest.stubAnswer":409,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":382,"org.easymock.tests.UsageVarargTest.varargLongAccepted":153,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":324,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":465,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":289,"org.easymock.samples.SupportTest.addDocument":472,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":362,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":429,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":95,"org.easymock.tests2.NameTest.nameForMock":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":386,"org.easymock.tests2.UsageStrictMockTest.differentMethods":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":106,"org.easymock.tests2.MockedExceptionTest.testRealException":391,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":124,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":258,"org.easymock.tests2.NameTest.nameForStrictMock":413,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":376,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":373,"org.easymock.tests2.UsageStrictMockTest.range":342,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":433,"org.easymock.tests2.CaptureTest.testCaptureRightOne":74,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":447,"org.easymock.tests.UsageTest.wrongArguments":216,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":430,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":301,"org.easymock.tests.UsageVarargTest.varargShortAccepted":152,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":140,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":43,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests2.CaptureTest.testCaptureFromStub":75,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":249,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":374,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":302,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":70,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":351}}]
