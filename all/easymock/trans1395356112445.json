[{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,4,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[209,210,211,212,213,214,215,12,216,13,15,16,29,30,43,217,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[38,46,218,62,63,64,65,66,67,68,69,70,71,219,72,73,74,75,76,77,78,79,80,81,82,83,220,84,85,86,87,221,222,99,100,101,102,103,223,224,104,105,106,107,225,108,109,129,130,133,134,135,136,137,226,154,186,191,192,227,228,193,229,201,202,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[231,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[33,35,37,39,42,46,48,49,226,154,156,157,235,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[236,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[7,237,238,239,8,240,214,241,242,9,243,244,245,10,246,11,215,12,247,216,13,14,248,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,249,250,38,251,236,39,40,41,42,252,253,43,217,254,255,256,257,258,259,44,260,261,262,263,264,265,266,0,45,1,2,3,267,268,46,47,48,49,50,269,270,271,272,273,274,275,51,52,53,276,54,55,56,57,58,59,277,60,61,218,62,63,64,65,278,66,67,68,69,70,71,219,72,73,74,75,76,77,78,79,80,81,82,83,220,84,85,86,87,221,279,222,280,281,282,88,283,284,89,285,286,287,288,289,290,291,292,293,90,294,295,296,297,298,91,299,300,301,302,92,93,94,95,96,97,98,99,100,101,102,103,223,224,104,105,106,107,225,108,109,303,304,305,306,307,308,309,310,311,110,312,313,314,315,316,317,111,112,113,114,318,115,116,117,319,320,321,118,322,323,119,324,325,326,327,328,329,330,331,120,121,332,122,123,4,124,125,126,127,128,333,334,335,336,337,338,339,340,341,342,343,344,129,130,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,5,360,361,131,132,133,134,135,136,137,138,362,139,140,363,364,365,366,6,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,141,142,143,144,145,146,147,148,411,412,149,150,151,413,152,414,415,416,153,417,418,419,420,421,422,423,424,425,426,427,428,429,234,430,431,226,154,155,156,157,158,235,432,433,434,435,436,437,438,439,440,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,441,179,442,443,180,181,182,444,183,184,445,446,185,186,187,188,189,190,191,192,227,228,193,447,448,194,449,450,451,452,453,454,455,456,457,458,459,229,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,195,196,197,198,199,200,201,202,203,482,483,484,485,486,487,488,489,490,491,492,230,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[362,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[379,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[44,266,110,111,331,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[241,242,9,243,244,245,10,246,11,215,12,216,13,14,248,15,29,31,32,33,35,36,37,249,250,38,251,236,39,40,41,42,252,253,43,217,254,269,270,271,273,280,281,282,88,283,284,89,285,286,287,288,289,290,291,292,293,90,294,295,296,297,298,91,299,300,111,112,113,114,116,117,320,321,118,329,329,330,330,120,334,335,350,351,352,353,354,355,356,357,138,362,139,140,363,364,411,412,149,150,151,152,416,432,433,434,435,436,437,438,439,440,447,448,194,449,493,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[9,10,11,12,14,32,33,34,35,36,37,38,40,41,42,43,45,46,48,49,88,89,90,91,92,93,97,111,112,113,114,115,116,117,120,122,123,124,125,127,345,346,347,348,133,134,135,136,137,150,151,152,154,156,157,159,160,161,162,163,164,167,168,170,171,172,174,175,176,177,178,187,188,189,190,191,194,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[7,237,238,239,8,240,214,241,242,9,243,244,245,10,246,11,215,12,247,216,13,14,248,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,249,250,38,251,236,39,40,41,42,252,253,43,217,254,255,256,257,258,259,44,260,261,262,263,264,265,266,0,45,1,2,3,267,268,46,47,48,49,50,269,270,271,272,273,274,275,51,52,53,276,54,55,56,57,58,59,277,60,61,218,62,63,64,65,278,66,67,68,69,70,71,219,72,73,74,75,76,77,78,79,80,81,82,83,220,84,85,86,87,221,279,222,280,281,282,88,283,284,89,285,286,287,288,289,290,291,292,293,90,294,295,296,297,298,91,299,300,301,302,92,93,94,95,96,97,98,99,100,101,102,103,223,224,104,105,106,107,225,108,109,303,304,305,306,307,308,309,310,311,110,312,313,314,315,316,317,111,112,113,114,318,115,116,117,319,320,321,118,322,323,119,324,325,326,327,328,329,330,331,120,121,332,122,123,4,124,125,126,127,128,333,334,335,336,337,338,339,340,341,342,343,344,129,130,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,5,360,361,131,132,133,134,135,136,137,138,362,139,140,363,364,365,366,6,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,141,142,143,144,145,146,147,148,411,412,149,150,151,413,152,414,415,416,153,417,418,419,420,421,422,423,424,425,426,427,428,429,234,430,431,226,154,155,156,157,158,235,432,433,434,435,436,437,438,439,440,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,441,179,442,443,180,181,182,444,183,184,445,446,185,186,187,188,189,190,191,192,227,228,193,447,448,194,449,450,451,452,453,454,455,456,457,458,459,229,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,195,196,197,198,199,200,201,202,203,482,483,484,485,486,487,488,489,490,491,492,230,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1135","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[266,45,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[323,379,386,418,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":374,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":55,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":331,"org.easymock.tests2.DelegateToTest.testReturnException":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":352,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":209,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageTest.wrongArguments":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":475,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":498,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":415,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":357,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":410,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageVarargTest.varargIntAccepted":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":306,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":495,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.UsageTest.strictResetToDefault":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":20,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":406,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":481,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":428,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":497,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":455,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":300,"org.easymock.samples.PartialClassMockTest.testGetArea":120,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.MockingTest.testInterfaceMocking":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":442,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":392,"org.easymock.tests2.UsageTest.niceToStrict":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":400,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":473,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":76,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":195,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":75,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":485,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.MockClassControlTest.testEquals":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":305,"org.easymock.tests.MockNameTest.defaultName":441,"org.easymock.tests2.UsageConstraintsTest.testMatches":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":147,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":460,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":261,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":439,"org.easymock.tests2.UsageConstraintsTest.greaterThan":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":499,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":249,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":18,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.CaptureTest.testCaptureFirst":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":19,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":108,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":492,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":343,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":477,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":409,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":407,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":344,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":233,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":396,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":146,"org.easymock.tests.MockingTest.testNiceClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testClassMocking":412,"org.easymock.tests2.UsageConstraintsTest.testContains":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":197,"org.easymock.tests.MockTypeTest.fromEasyMockClass":496,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":487,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":210,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":467,"org.easymock.tests.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":256,"org.easymock.tests.MockClassControlTest.testHashCode":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":291,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":231,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":303,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":218,"org.easymock.tests.UsageVarargTest.varargCharAccepted":486,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":432,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":56,"org.easymock.tests.DefaultClassInstantiatorTest.object":433,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":353,"org.easymock.tests2.UsageTest.resumeIfFailure":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":380,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":208,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":472,"org.easymock.tests.UsageExpectAndThrowTest.object":401,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":82,"org.easymock.tests2.DelegateToTest.testWrongClass":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":202,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":274,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":402,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":443,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.UsageUnorderedTest.message":186,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":491,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":294,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":468,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":72,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.UsageExpectAndThrowTest.longType":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":385,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.MockedExceptionTest.testMockedException":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":284,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":395,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":279,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":117,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":83,"org.easymock.tests.MockingTest.testTwoMocks":149,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":399,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":86,"org.easymock.samples.ExampleTest.removeNonExistingDocument":128,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":420,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":257,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":435,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.floatType":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":285,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":254,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":448,"org.easymock.tests2.UsageConstraintsTest.testNotNull":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":320,"org.easymock.tests2.UsageTest.defaultResetToNice":58,"org.easymock.samples.ExampleTest.voteAgainstRemovals":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.differentLength":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":251,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":476,"org.easymock.tests.UsageThrowableTest.throwCheckedException":145,"org.easymock.tests.MockingTest.testStrictClassMocking":411,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests.ObjectMethodsTest.testHashCode":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":205,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.NameTest.nameForNiceMock":327,"org.easymock.tests2.DependencyTest.testInterfaceMocking":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":211,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":295,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.stubAnswer":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":490,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":330,"org.easymock.tests.UsageThrowableTest.noUpperLimit":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":263,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":269,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.samples.SupportTest.addDocument":332,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":318,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":286,"org.easymock.tests.GenericTest.testPackageScope":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":262,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":414,"org.easymock.tests2.NameTest.nameForMock":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":405,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests2.MockedExceptionTest.testRealException":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":500,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":207,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":377,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests2.NameTest.nameForStrictMock":326,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":273,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":436,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":372,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":290,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":444,"org.easymock.tests2.MockBuilderTest.testWithConstructor":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":287,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.UsageVarargTest.varargShortAccepted":489,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":438,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":73,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":417,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":182,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":333,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":478,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.LimitationsTest.abstractClass":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22}}]
