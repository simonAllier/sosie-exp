[{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57,0,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,2,3,81,4,5,6,7,8,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,9,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,10,11,12,13,14,15,145,16,17,18,19,146,147,148,20,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,22,23,24,25,26,27,28,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,29,30,299,300,301,31,32,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,33,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,34,35,424,36,37,38,425,426,39,40,41,427,428,42,43,44,45,429,46,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,47,447,48,49,448,50,51,52,53,449,54,55,450,451,56,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[453,454,455,456,457,458,459,460,431,461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[263,270,274,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[246,247,249,250,252,442,444,445],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[94,95,96,97,464,465,466,467,122,124,125,128,129,130,175,176,183,189,244,246,248,249,250,287,291,292,295,305,321,392,399,400,401,402,405,406,407,411,412,413,414,35,427,42,434,440,443,444,445],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[111,152,158,165,166,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[69,97,117,123,149,155,161,165,167,207,213,219,223,225,274,278,303,319,322,331,345,346,363,369,370,375,386,404,421,423,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[122,126,127,130,174,176,247,402,408,409,414,415,442],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[333,340,350,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[455,458,468,469,470,471,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[473,362,363,364,365,366,367,368,369,371,372,373,374,375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[103,118,120,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[455,474,458,468,469,470,471,472,475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[58,59,333,334,335,337,339,340,341,344,350,351,352,354,356,357,358,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[97,476,477,465,123,174,175,176,198,199,231,234,235,236,247,249,250,478,479,480,481,482,483,404,442,444,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,174,175,176,200,235,247,250,251,404,442,445,446],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[18,484,485,146,148,20,189,244,249,250,287,291,292,295,400,406,41,486,434,440,444,445],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[86,97,131,132,169,170,171,172,173,188,193,194,195,196,197,228,229,246,247,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,362,363,364,365,366,367,368,369,370,371,372,373,374,375,421,423,39,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[57,0,1,58,59,60,61,62,63,64,65,66,67,69,2,3,7,86,90,91,92,93,95,96,97,9,115,116,117,122,123,125,126,127,128,129,130,131,136,137,138,139,140,141,142,143,484,485,487,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,184,185,186,187,188,189,193,194,195,196,197,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,232,233,245,246,247,248,249,250,251,286,287,288,289,290,291,292,294,295,296,297,298,32,303,304,305,306,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,338,345,346,347,348,349,355,362,363,364,365,366,367,368,369,370,371,372,374,375,378,379,488,380,33,382,383,384,386,395,397,398,402,403,404,405,406,407,408,409,411,412,414,489,415,418,419,420,421,423,34,35,424,36,37,38,39,428,45,429,459,46,430,490,460,433,434,441,442,443,444,445,446,48,448,449,452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[42,44,437],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.Range:40","failures":[57,0,1,58,491,492,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,2,3,81,4,5,6,7,8,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,467,9,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,10,11,12,13,14,15,145,16,17,18,19,484,485,146,487,147,148,20,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,22,23,24,25,26,27,28,189,190,191,192,193,194,195,196,197,198,199,200,201,493,494,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,29,495,496,497,30,299,300,301,31,32,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,488,380,33,381,382,383,384,385,386,387,388,389,390,391,453,392,393,454,394,395,396,397,455,398,498,499,399,400,457,401,402,403,404,405,406,407,408,409,410,411,412,413,414,489,458,500,415,416,417,418,419,420,421,422,423,34,35,424,36,37,38,425,426,39,501,40,41,427,428,42,43,44,45,429,459,46,486,430,490,460,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,47,447,502,48,503,49,448,50,51,504,505,52,506,507,53,508,449,54,55,450,451,56,452,509,510],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[422],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[57,392,395,397,398,400,401],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":306,"org.easymock.tests2.UsageTest.argumentsOrdered":412,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":272,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":407,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":58,"org.easymock.tests2.DelegateToTest.testReturnException":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":83,"org.easymock.tests.MockingTest.testPartialClassMocking":484,"org.easymock.tests.MockClassControlTest.testToString":23,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":505,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":313,"org.easymock.tests2.UsageTest.wrongArguments":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":204,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":148,"org.easymock.tests2.UsageConstraintsTest.testNull":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":36,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":295,"org.easymock.tests2.CaptureTest.testPrimitive":365,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageTest.moreThanOneArgument":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":112,"org.easymock.tests.UsageTest.argumentsOrdered":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":472,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":106,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.DependencyTest.testClassMocking":376,"org.easymock.tests2.AnswerTest.answer":415,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":390,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":494,"org.easymock.tests2.CaptureTest.testAnd":362,"org.easymock.tests2.UsageTest.strictResetToDefault":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":290,"org.easymock.tests2.DelegateToTest.testDelegate":386,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":366,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":388,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":100,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":203,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":467,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":510,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":146,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":254,"org.easymock.tests2.UsageTest.niceToStrict":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":395,"org.easymock.tests2.MockBuilderTest.testCreateMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":479,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":115,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":318,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":371,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":180,"org.easymock.tests.MockClassControlTest.testEquals":27,"org.easymock.tests2.EasyMockSupportClassTest.testAll":48,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":389,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureAll":363,"org.easymock.tests.MockNameTest.defaultName":121,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":98,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":188,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":440,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":475,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":145,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":503,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":16,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":43,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":288,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":82,"org.easymock.tests2.CaptureTest.testCaptureFirst":375,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":289,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":404,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":348,"org.easymock.tests2.CaptureTest.testCapture2_2446744":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":280,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":95,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":429,"org.easymock.tests.MockingTest.testNiceClassMocking":20,"org.easymock.tests.MockingTest.testClassMocking":18,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":89,"org.easymock.tests2.UsageConstraintsTest.testContains":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":308,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests.MockTypeTest.fromEasyMockClass":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":423,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests.UsageExpectAndReturnTest.object":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":469,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":259,"org.easymock.tests.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":118,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":458,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests.MockClassControlTest.testHashCode":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":134,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":230,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":387,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":332,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":144,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastCall":408,"org.easymock.tests.DefaultClassInstantiatorTest.object":10,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":133,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":257,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.tests.CapturesMatcherTest.test":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":24,"org.easymock.tests2.UsageTest.resumeIfFailure":413,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":85,"org.easymock.tests2.StubTest.stubWithReturnValue":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":455,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":278,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":416,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":120,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":325,"org.easymock.tests2.DelegateToTest.testWrongClass":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":229,"org.easymock.samples.ConstructorCalledMockTest.testTax":491,"org.easymock.tests.UsageStrictMockTest.range":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":255,"org.easymock.tests2.CaptureTest.testCaptureNone":370,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":466,"org.easymock.tests.UsageVerifyTest.twoReturns":176,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":93,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":260,"org.easymock.tests2.CaptureTest.testCapture_2617107":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageConstraintsTest.any":315,"org.easymock.tests2.StubTest.stub":432,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":84,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":104,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":443,"org.easymock.tests2.SerializationTest.testClass":488,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":338,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":446,"org.easymock.tests2.NameTest.nameForMocksControl":439,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":49,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":487,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":422,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":398,"org.easymock.tests.MockingTest.testNicePartialClassMocking":485,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests2.CaptureTest.testCaptureLast":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":326,"org.easymock.tests.MockingTest.testTwoMocks":19,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":411,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":330,"org.easymock.samples.ExampleTest.removeNonExistingDocument":68,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":102,"org.easymock.tests.UsageStrictMockTest.differentMethods":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":335,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":12,"org.easymock.tests2.ConstraintsToStringTest.andToString":482,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":347,"org.easymock.tests2.MockBuilderTest.testCreateMockString":401,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":500,"org.easymock.tests.UsageVerifyTest.twoThrows":175,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":449,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":428,"org.easymock.tests.LimitationsTest.privateConstructor":6,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":301,"org.easymock.tests2.UsageTest.defaultResetToNice":410,"org.easymock.samples.ExampleTest.voteAgainstRemovals":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.CallbackTest.callback":434,"org.easymock.tests2.UsageConstraintsTest.equals":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":501,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests.UsageThrowableTest.throwCheckedException":140,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":476,"org.easymock.tests.MockingTest.testStrictClassMocking":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":490,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":430,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":420,"org.easymock.tests.ObjectMethodsTest.testHashCode":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":471,"org.easymock.tests2.NameTest.nameForNiceMock":438,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":470,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":509,"org.easymock.tests2.DelegateToTest.testStubDelegate":383,"org.easymock.tests2.AnswerTest.stubAnswer":419,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":247,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":489,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":492,"org.easymock.tests2.ConstraintsToStringTest.orToString":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":137,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":367,"org.easymock.tests2.SerializationTest.test":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.samples.SupportTest.addDocument":60,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":51,"org.easymock.tests.GenericTest.testPackageScope":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":341,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":147,"org.easymock.tests2.NameTest.nameForMock":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":445,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":300,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":477,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.NameTest.nameForStrictMock":437,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":421,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":13,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":392,"org.easymock.tests2.UsageStrictMockTest.range":444,"org.easymock.tests2.UsageConstraintsTest.lessThan":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":506,"org.easymock.tests2.CaptureTest.testCaptureRightOne":372,"org.easymock.tests2.UsageConstraintsTest.testOr":311,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":504,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":316,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":409,"org.easymock.tests2.CaptureTest.testCaptureFromStub":373,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":99,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":92,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":163,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.tests2.UsageConstraintsTest.constraints":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests2.ConstraintsToStringTest.notToString":480,"org.easymock.tests.UsageStrictMockTest.testVerify":252,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":59,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":155,"org.easymock.tests.LimitationsTest.abstractClass":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":292}}]
