[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[323,324,327,329,330,332,341,346,466,468,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,77,243,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[349,350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[243,244,246,247,249,270,272,483,485,486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[7,8,9,11,12,27,28,37,38,39,40,41,42,43,44,55,57,58,60,78,81,82,83,84,85,86,88,89,91,92,93,94,95,101,106,107,136,137,139,144,149,156,157,159,164,169,177,178,180,184,185,186,187,188,211,221,222,232,234,235,242,243,244,245,246,247,248,250,251,252,253,254,255,256,258,261,262,263,264,265,266,267,268,269,270,271,272,275,280,287,290,300,306,309,310,311,312,314,315,316,324,327,330,331,333,334,336,0,341,342,343,344,345,346,349,350,351,358,360,362,369,370,372,373,374,378,379,381,389,392,404,411,412,413,414,415,416,417,419,420,421,422,423,434,441,446,448,452,453,458,459,461,463,465,466,467,468,469,471,472,473,474,475,476,479,482,483,484,485,486,487],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[16,21,101,106,107,108,176,177,178,180,225,232,250,259,259,260,260,265,266,267,268,270,271,272,273,275,278,279,280,281,287,290,300,306,309,310,311,312,315,316,349,351,352,492,354,355,358,359,360,362,365,366,493,368,441,494,495,446],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[330,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:141","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,28,29,38,39,45,46,47,48,49,50,51,52,53,54,60,62,63,65,66,67,68,69,70,71,72,73,74,76,84,85,86,88,89,91,92,93,94,95,101,103,106,107,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,185,186,189,211,212,213,214,215,216,217,218,219,225,232,233,234,235,242,244,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,269,270,271,272,275,278,280,287,290,300,306,309,310,311,312,314,315,316,318,320,321,322,323,324,326,327,328,329,330,331,333,334,335,336,337,338,0,339,340,341,342,343,345,346,347,348,349,350,351,352,358,359,360,362,370,371,373,374,377,380,389,392,393,394,395,396,397,398,404,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,434,441,444,445,446,447,448,449,450,453,454,455,458,459,461,462,465,466,467,468,469,471,472,473,474,475,476,479,482,483,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[259,260,276,353,496,497,367],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[4,6,7,11,12,75,76,78,81,82,83,90,184,211,498,499,500,233,234,235,241,243,244,245,246,247,248,279,281,323,0,354,366,369,371,372,373,374,378,379,381,412,416,417,420,425,426,427,428,448,481,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[279,280,492,358],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[29,37,39,40,41,42,43,44,53,58,75,80,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,188,234,369,376,455],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[4,5,6,7,8,9,28,29,38,39,45,46,47,48,49,50,51,52,53,54,60,62,63,65,66,67,68,69,70,71,72,73,74,76,84,85,86,88,89,91,92,93,94,95,101,103,106,107,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,185,186,189,211,212,213,214,215,216,217,218,219,225,232,233,234,235,242,244,247,248,249,251,252,253,254,255,256,258,267,269,270,271,272,275,278,280,310,311,315,316,318,320,321,322,323,324,326,327,328,329,330,331,333,334,335,336,337,338,0,339,340,341,342,343,345,346,347,348,349,350,351,352,358,359,370,371,373,374,377,380,389,392,393,394,395,396,397,398,425,426,427,428,441,444,445,446,447,448,449,450,453,454,455,458,461,462,465,466,467,468,469,471,472,473,474,475,476,479,482,483,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[502,503,466,467,468,469,470,471,472,473,475,504,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[192,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[118,236,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[323,330,466,468,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[53,62,63,65,66,67,68,69,95,103,104,184,185,186,187,188,189,243,244,275,318,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,452,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[27,28,29,37,39,40,41,42,43,44,60,62,63,65,66,67,68,69,75,76,79,80,83,101,103,106,108,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,185,186,189,211,212,213,214,233,235,244,246,247,250,251,253,254,256,264,267,268,269,270,271,272,275,279,280,281,287,290,300,306,309,310,311,312,314,315,316,321,322,323,324,326,327,328,329,330,331,333,334,335,336,337,338,0,339,340,341,342,343,345,346,347,348,349,350,354,358,360,362,366,369,370,371,373,375,376,377,380,381,389,393,404,411,412,413,414,415,416,417,418,419,420,421,422,434,441,446,449,450,451,452,453,455,458,459,462,466,467,469,470,473,474,475,476,478,479,483,485,486],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,31,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,97,101,103,104,106,107,108,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,184,185,186,187,188,189,191,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,259,260,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,278,279,280,281,287,290,300,306,309,310,311,312,314,315,316,318,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,358,359,360,362,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,389,390,391,392,393,394,395,396,397,398,404,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,434,441,444,445,446,447,448,449,450,451,452,453,454,455,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[105,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[1,2,3,6,13,14,15,24,25,26,27,28,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,95,97,101,103,104,106,107,108,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,184,185,186,187,188,189,211,212,213,214,215,216,217,218,219,220,221,222,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,250,251,252,253,254,256,258,259,259,260,260,264,267,268,269,270,271,272,273,275,278,279,280,281,287,290,300,306,309,310,311,312,314,315,316,318,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,352,354,358,359,360,362,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,389,390,391,392,393,394,395,396,397,398,404,411,412,413,414,415,416,417,418,419,420,421,422,434,441,444,445,446,447,448,449,450,451,452,453,454,455,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.Capture:82","failures":[466,468,469,470,471,472,473,475,504,476,477,479],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[488,489,77,243,490,491],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[323,324,327,329,330,332,341,346,466,468,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[120,460,462],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,28,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,60,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,184,185,186,187,188,189,200,202,203,205,208,210,211,212,213,214,215,216,217,218,219,225,232,233,234,235,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,259,260,260,261,262,263,264,265,266,267,268,269,270,271,272,275,278,280,287,290,300,306,309,310,311,312,314,315,316,318,320,321,322,323,324,326,327,328,329,330,331,333,334,335,336,337,338,0,339,340,341,342,343,345,346,347,348,349,350,351,352,358,359,360,362,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,389,392,393,394,395,396,397,398,404,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,434,441,444,445,446,447,448,449,450,451,452,453,454,455,458,459,461,462,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[61,505,77,78,81,82,184,234,235,243,246,372,378,379,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[57,112,252,461,463,464,465],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[349,361,364,441,442,506,507,508,509,510],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":324,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.UsageTest.argumentsOrdered":379,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":120,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":374,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":50,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests.MockClassControlTest.testToString":226,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":290,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":498,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageTest.wrongArguments":372,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":47,"org.easymock.samples.ExampleTest.answerVsDelegate":252,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":182,"org.easymock.tests2.UsageConstraintsTest.testNull":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":420,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":231,"org.easymock.tests2.CaptureTest.testPrimitive":469,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":217,"org.easymock.tests.UsageTest.argumentsOrdered":82,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":236,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":434,"org.easymock.tests.ReplayStateInvalidUsageTest.times":207,"org.easymock.tests2.DependencyTest.testClassMocking":456,"org.easymock.tests2.AnswerTest.answer":389,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":398,"org.easymock.tests2.CaptureTest.testAnd":466,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":18,"org.easymock.tests2.UsageTest.strictResetToDefault":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":278,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests2.DelegateToTest.testDelegate":465,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests.LimitationsTest.mockFinalMethod":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests2.DependencyTest.testClassMockingSupport":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":221,"org.easymock.tests2.CaptureTest.testCapture1_2446744":470,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":396,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":201,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":20,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":308,"org.easymock.samples.PartialClassMockTest.testGetArea":250,"org.easymock.tests.MockingTest.testInterfaceMocking":179,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":295,"org.easymock.tests2.UsageTest.niceToStrict":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":358,"org.easymock.tests2.MockBuilderTest.testCreateMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":416,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":17,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":305,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":336,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":475,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":87,"org.easymock.tests.MockClassControlTest.testEquals":230,"org.easymock.tests2.EasyMockSupportClassTest.testAll":287,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":494,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests2.CaptureTest.testCaptureAll":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests.MockNameTest.defaultName":36,"org.easymock.tests2.UsageConstraintsTest.testMatches":338,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":218,"org.easymock.samples.ExampleTest.voteForRemovals":256,"org.easymock.tests.UsageVarargTest.allKinds":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":43,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":481,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":197,"org.easymock.tests2.UsageConstraintsTest.greaterThan":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":198,"org.easymock.samples.ExampleTest.voteForRemoval":253,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":450,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":232,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":369,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":413,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":49,"org.easymock.tests2.CaptureTest.testCaptureFirst":479,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":414,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":381,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":478,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":452,"org.easymock.tests2.UsageTest.moreThanOneArgument":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":94,"org.easymock.tests.GenericTest.testBridgedEquals":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":42,"org.easymock.tests.MockingTest.testNiceClassMocking":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":310,"org.easymock.tests.MockingTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":5,"org.easymock.tests2.UsageConstraintsTest.testContains":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":446,"org.easymock.tests2.UsageConstraintsTest.testFind":326,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":29,"org.easymock.tests.MockTypeTest.fromEasyMockClass":19,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":507,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":89,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":115,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":96,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.MockClassControlTest.testHashCode":229,"org.easymock.tests2.EasyMockSupportTest.testVerify":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":297,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":480,"org.easymock.tests.UsageVarargTest.varargCharAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":190,"org.easymock.tests2.CaptureTest.testCaptureMultiple":503,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":133,"org.easymock.tests2.UsageTest.openCallCountByLastCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":422,"org.easymock.tests.DefaultClassInstantiatorTest.object":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":1,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":31,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":13,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":306,"org.easymock.tests2.UsageTest.resumeIfFailure":380,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":52,"org.easymock.tests2.StubTest.stubWithReturnValue":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":126,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":98,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":342,"org.easymock.tests2.DelegateToTest.testWrongClass":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":63,"org.easymock.tests.UsageStrictMockTest.range":246,"org.easymock.samples.ConstructorCalledMockTest.testTax":259,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":387,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":360,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests2.CaptureTest.testCaptureNone":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":26,"org.easymock.tests.UsageUnorderedTest.message":184,"org.easymock.tests.UsageVerifyTest.twoReturns":235,"org.easymock.tests.UsageVarargTest.varargByteAccepted":93,"org.easymock.tests2.ThreadingTest.testThreadSafe":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":301,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":9,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":34,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":130,"org.easymock.tests2.UsageConstraintsTest.any":333,"org.easymock.tests2.StubTest.stub":454,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":51,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":205,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":484,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":404,"org.easymock.tests2.SerializationTest.testClass":349,"org.easymock.tests.LimitationsTest.mockNativeMethod":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests2.NameTest.nameForMocksControl":428,"org.easymock.tests2.MockedExceptionTest.testMockedException":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":289,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":319,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":362,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":272,"org.easymock.tests2.CaptureTest.testCaptureLast":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":343,"org.easymock.tests.MockingTest.testTwoMocks":176,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":378,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":347,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":203,"org.easymock.tests.UsageStrictMockTest.differentMethods":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":193,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":451,"org.easymock.tests2.MockBuilderTest.testCreateMockString":368,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":224,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":443,"org.easymock.tests.UsageVerifyTest.twoThrows":234,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":300,"org.easymock.samples.ExampleTest.voteAgainstRemoval":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":280,"org.easymock.tests.LimitationsTest.privateConstructor":100,"org.easymock.tests2.UsageConstraintsTest.testNotNull":346,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":444,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":44,"org.easymock.tests2.UsageTest.defaultResetToNice":377,"org.easymock.samples.ExampleTest.voteAgainstRemovals":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.UsageVarargTest.differentLength":90,"org.easymock.tests2.CallbackTest.callback":448,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":276,"org.easymock.tests.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":48,"org.easymock.tests.UsageThrowableTest.throwCheckedException":41,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":394,"org.easymock.tests.ObjectMethodsTest.testHashCode":32,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":453,"org.easymock.tests2.NameTest.nameForNiceMock":427,"org.easymock.tests2.DependencyTest.testInterfaceMocking":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":508,"org.easymock.samples.ExampleTest.addDocument":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":302,"org.easymock.tests2.DelegateToTest.testStubDelegate":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.stubAnswer":393,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":363,"org.easymock.tests.UsageVarargTest.varargLongAccepted":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":441,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests.UsageThrowableTest.noUpperLimit":38,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":471,"org.easymock.tests2.SerializationTest.test":350,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testSame":328,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":313,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":292,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":181,"org.easymock.tests2.NameTest.nameForMock":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":486,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests2.MockedExceptionTest.testRealException":447,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":210,"org.easymock.tests2.NameTest.nameForStrictMock":426,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":386,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":194,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":354,"org.easymock.tests2.UsageStrictMockTest.range":485,"org.easymock.tests2.UsageConstraintsTest.lessThan":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":296,"org.easymock.tests2.UsageConstraintsTest.testOr":329,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":268,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":111,"org.easymock.tests.UsageVarargTest.varargShortAccepted":91,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":10,"org.easymock.tests2.UsageConstraintsTest.cmpTo":334,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":376,"org.easymock.tests2.CaptureTest.testCaptureFromStub":477,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":200,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":8,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.UsageConstraintsTest.constraints":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageStrictMockTest.testVerify":249,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":472,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.LimitationsTest.abstractClass":99,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":417,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85}}]
