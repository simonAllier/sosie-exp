[{"position":"org.easymock.internal.RecordState:173","failures":[0],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,2,0,4,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[1,71,72,74,120,135,136,253],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[254,255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,22,23,24,258,25,26,27,28,29,30,259,260,31,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[6,16,17,19,19,20,20,32,34,37,64,65,66,67,69,70,76,77,78,79,86,262,88,89,90,263,91,92,264,93,265,266,267,268,269,128,130,270,271,272,131,132,133,134,273,274,275,276,277,278,159,176,279,188,189,190,210,211,280,212],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[55,281],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[282,283,284,285,286,287,288],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[32,37,282,289,283,284,285,286,287,290,288,291,292,293],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[294,295,296,297,298,299,300,301,302,303,304,305,222,223],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[21,23,24,258,25,26,27,29,306,30,259,31],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[21,23,30,40,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[6,19,20,32,37,282,77,78,308,93,309,131,310,291,273,276,251,280],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:132","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[6,8,9,10,12,15,21,22,24,258,27,28,29,30,260,31,32,33,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,78,79,311,80,81,82,312,313,84,85,314,86,262,87,88,89,90,91,264,93,265,94,95,315,316,96,98,297,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,128,271,131,133,134,274,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,317,158,318,319,320,321,322,159,323,182,324,325,326,188,189,190,191,192,193,194,199,200,201,202,203,204,206,305,207,210,280,327,213,214,221,223,224,226,227,228,249,250],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":323,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":173,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":83,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":171,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":293,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests2.UsageTest.wrongArguments":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests.UsageStrictMockTest.range":305,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":197,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":133,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests.UsageTest.moreThanOneArgument":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.UsageUnorderedTest.message":298,"org.easymock.tests.UsageVerifyTest.twoReturns":223,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests.UsageTest.argumentsOrdered":303,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":199,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":225,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":203,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":172,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":280,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":268,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.NameTest.nameForMocksControl":119,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":134,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.CompareToTest.testNotComparable":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":289,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":187,"org.easymock.tests.MockingTest.testTwoMocks":279,"org.easymock.tests2.CaptureTest.testCapture1_2446744":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests.UsageThrowableTest.throwError":317,"org.easymock.tests.UsageStrictMockTest.differentMethods":207,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":315,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":72,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":82,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":322,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":273,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":198,"org.easymock.tests.UsageThrowableTest.throwCheckedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":266,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":286,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":118,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":186,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":321,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":290,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.UsageThrowableTest.noUpperLimit":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":311,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":212,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":144,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":316,"org.easymock.tests2.CaptureTest.testCapture2_2446744":260,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":252,"org.easymock.tests2.NameTest.nameForMock":116,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":183,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":194,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":216,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.NameTest.nameForStrictMock":117,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":136,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":297,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":204,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":282,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":153,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.UsageTest.wrongArguments":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":5,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests2.EasyMockSupportTest.testVerify":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests2.UsageTest.openCallCountByLastCall":312,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":313,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests2.CaptureTest.testCaptureFromStub":259,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":272,"org.easymock.tests.UsageTest.unexpectedCallWithArray":300,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":318,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.CaptureTest.testCapture":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":264,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.CapturesMatcherTest.test":261,"org.easymock.tests.UsageStrictMockTest.testVerify":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":154,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.CompareToTest.testGreateThan":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":184,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161}}]
