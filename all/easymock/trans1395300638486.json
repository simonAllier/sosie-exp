[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[21,295,128,296,297,298,299,300,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[304,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,306,66,67,68,69,70,71,72,73,74,75,76,77,294,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,307,308,309,310,95,96,304,97,98,99,305,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,311,312,132,133,134,136,137,139,140,142,144,145,146,147,148,149,151,153,154,155,156,157,158,163,313,164,165,314,315,316,166,167,317,173,174,175,176,177,178,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,179,180,181,182,183,184,185,186,342,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,343,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,344,345,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,346,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,347,348,349,279,280,281,350,282,283,284,285,287,288,351,289,290,291,292,293,352,353,354],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[355,356,357],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[15,15,16,16,35,59,68,69,72,73,74,75,80,82,83,85,86,92,93,94,112,173,174,182,208,209,212,213,214,215,216,217,238,289,290,291,292,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","sourceCode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[3,35,45,51,52,54,57,73,78,92,100,131,158,175,176,177,178,182,187,191,192,193,195,344,345,240,250,253,283,285,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[128,129,130,358],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[1,2,3,4,5,6,7,360,8,9,10,11,12,13,14,15,16,17,18,19,20,21,295,361,362,363,364,365,366,22,367,368,369,370,371,372,373,374,23,24,25,26,27,28,375,29,30,31,376,377,378,379,380,381,32,382,383,384,385,386,387,33,34,35,36,37,38,39,388,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,389,390,391,392,393,394,395,396,397,398,60,399,400,61,401,402,403,404,405,406,407,408,409,62,410,411,412,413,414,63,415,416,64,65,306,66,67,68,69,70,71,417,72,73,74,75,76,77,294,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,418,307,308,309,310,95,419,96,304,97,98,99,305,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,311,312,132,133,134,135,420,136,421,422,423,137,138,139,301,140,424,302,141,142,425,143,144,145,146,147,148,149,150,426,151,427,428,152,153,154,155,429,430,156,157,158,159,160,161,162,163,313,164,165,314,315,316,431,166,167,317,432,433,434,435,436,437,438,439,440,168,169,170,171,172,173,174,175,176,177,178,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,179,180,181,182,183,184,185,186,342,187,188,189,190,191,192,193,194,195,441,442,196,443,197,198,199,200,201,202,203,444,445,446,447,448,449,450,451,452,453,454,455,303,456,457,458,459,460,204,461,205,206,462,343,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,463,344,345,464,465,238,239,240,241,242,466,243,244,245,246,247,248,249,250,467,251,252,253,254,255,256,257,258,346,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,347,348,349,468,469,470,279,280,471,281,472,473,474,350,475,282,283,284,285,286,287,288,476,477,478,479,480,481,482,483,484,351,485,289,290,291,292,293,352,353,354,486,355,356,487,488,489,357,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[21,295,128,296,297,298,299,300,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[461,462,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[101,103,104,105,106,107,108,110,496,111,112,114],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[1,2,4,5,6,7,8,9,10,11,12,13,34,36,37,38,39,50,58,90,102,103,106,107,108,109,114,118,124,125,126,127,130,137,167,175,180,183,184,185,186,203,210,240,241,242,243,244,246,247,248,249,250,252,282,283,284,285,287,288],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[35,45,57,131,177,178,182,195,253],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[71,75,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[22,32,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[314,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[21,295,128,296,297,298,300,301,302],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[37,177,178,184,497],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[35,37,38,47,48,54,55,307,308,309,310,176,177,178,181,182,184,185,188,190,193,194,498],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":198,"org.easymock.tests.MockingTest.testPartialClassMocking":279,"org.easymock.tests.MockClassControlTest.testToString":478,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":259,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":498,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":438,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":473,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests2.CaptureTest.testPrimitive":104,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":212,"org.easymock.tests.UsageTest.moreThanOneArgument":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":278,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":463,"org.easymock.tests.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":217,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":359,"org.easymock.tests2.DependencyTest.testClassMocking":373,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":43,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":435,"org.easymock.tests2.CaptureTest.testAnd":101,"org.easymock.tests2.UsageTest.strictResetToDefault":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":274,"org.easymock.tests.LimitationsTest.mockFinalMethod":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":172,"org.easymock.tests2.DependencyTest.testClassMockingSupport":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":493,"org.easymock.tests2.CaptureTest.testCapture1_2446744":105,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":41,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":452,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":437,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":416,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":405,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":434,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":482,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureAll":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":42,"org.easymock.tests.MockNameTest.defaultName":467,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":491,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":197,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":249,"org.easymock.tests.GenericTest.testBridgedEquals":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":168,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":277,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.MockingTest.testNiceClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":469,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":436,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":297,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":205,"org.easymock.tests.MockClassControlTest.testHashCode":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":40,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":388,"org.easymock.tests.UsageVarargTest.varargCharAccepted":243,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":480,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":63,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":200,"org.easymock.tests2.StubTest.stubWithReturnValue":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":271,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":358,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":311,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":485,"org.easymock.tests.UsageExpectAndThrowTest.object":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.tests.UsageStrictMockTest.range":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":394,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":396,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests.UsageUnorderedTest.message":175,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":248,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":410,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":199,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":489,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":303,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.MockedExceptionTest.testMockedException":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":419,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":263,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":281,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":280,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":470,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":360,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":487,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":306,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.floatType":261,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":361,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":154,"org.easymock.tests.LimitationsTest.privateConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.differentLength":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":427,"org.easymock.tests.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockingTest.testStrictClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":458,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":446,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":67,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":298,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.DelegateToTest.testStubDelegate":98,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":247,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":389,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":106,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":375,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":472,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":273,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":209,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":393,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":190,"org.easymock.tests2.MockBuilderTest.testWithConstructor":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":246,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":451,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":421,"org.easymock.tests.UsageTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":496,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":169,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":215,"org.easymock.tests.LimitationsTest.abstractClass":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":216,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":241}}]
