[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[19],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,55,1,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,8,129,9,11,13,130,131,132,133,134,135,136,137,138,139,140,14,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[56,187,188,58,189,81,85,124,127,190,191,192,193,194,195,196,12,197,198,140,142,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,174,175,176,177,178,179],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[219,220,221,222,223,224,225],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"failures":[49,50,51,52,53,187,188,58,226,76,77,227,79,228,80,229,90,230,92,93,105,106,107,108,110,111,112,113,115,116,117,231,118,232,119,120,121,4,233,234,235,236,237,238,239,240,122,241,242,243,130,131,132,244,245,150,180,246,247,248,248,249,249,186],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[77,251,252,228,229,90,92,253,254,120,255,19,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[256,257,258,18,259,253,107,111,250,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[56,187,188,58,189,81,85,124,127,190,191,192,193,194,195,196,12,197,198,140,142,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,174,175,176,177,178,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[262,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[19,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,53,265,54,266,267,268,0,269,55,1,2,270,56,187,188,58,189,71,72,73,74,75,226,77,227,80,229,81,82,3,271,83,272,84,85,86,273,274,87,88,219,89,220,222,90,91,230,92,93,94,95,96,97,275,276,98,99,100,101,277,102,103,278,279,105,106,107,110,111,280,281,282,283,284,285,112,113,114,115,116,117,118,232,120,4,5,6,7,234,122,286,123,124,126,127,128,191,192,193,194,195,196,242,287,288,289,8,290,129,9,10,291,11,12,13,130,131,132,133,134,197,198,135,136,137,138,139,292,293,294,295,296,140,14,297,298,141,142,299,300,143,301,302,303,304,305,306,307,308,309,15,310,16,17,311,312,244,313,314,315,316,317,318,319,320,321,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,322,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,323,174,175,176,177,178,179,180,246,181,225,182,183,324,184,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[326,327,328,329,330,49,331,332,50,333,334,335,336,337,338,339,340,341,51,342,343,344,345,346,52,347,348,187,188,58,349,226,76,350,351,77,227,78,79,252,228,80,352,229,90,230,92,253,105,106,107,108,110,111,353,354,355,112,113,115,116,117,231,118,254,356,232,119,120,121,357,255,233,235,236,237,238,239,240,358,359,122,360,242,361,362,243,130,131,132,363,364,365,245,366,367,368,369,370,371,19,180,246,247,264,372,373,248,248,249,249,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","sourceCode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[22,23,25,27,28,44,93,94,95,98,99,101,103,134,197,198,321],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,265,54,266,267,268,0,269,55,1,2,270,56,57,187,188,58,189,59,60,61,62,63,64,65,66,67,68,69,70,374,71,72,73,74,75,226,76,77,227,78,79,228,80,229,81,82,3,271,83,272,84,85,86,273,274,87,88,219,89,220,222,90,91,230,92,93,94,95,96,97,275,276,98,99,100,101,277,102,103,278,104,105,106,107,108,109,110,111,280,281,282,283,284,285,112,113,114,115,116,117,231,118,232,119,120,121,4,5,6,7,375,376,377,233,234,235,236,237,238,239,240,122,241,378,379,380,286,381,382,383,384,385,386,387,123,124,125,126,127,388,223,190,128,389,191,192,193,194,195,196,242,287,288,289,8,290,129,9,10,291,11,12,13,130,131,132,133,134,197,198,135,136,137,138,139,292,293,294,295,296,140,14,297,298,141,142,299,300,143,301,302,303,304,305,306,307,308,309,15,310,16,17,311,312,390,391,392,244,313,314,315,316,393,317,318,319,320,321,144,145,146,147,148,149,245,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,323,174,175,176,177,178,179,180,246,394,181,225,182,183,324,184,395,325,396,185,372,373,397,248,249,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[20,21,22,23,398,24,25,26,27,28,29,399,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,326,400,401,402,327,403,404,405,406,47,48,328,329,330,49,331,332,50,333,334,335,336,337,338,339,340,341,51,342,343,344,345,346,52,347,348,53,407,408,265,54,266,267,268,0,269,55,1,2,270,56,409,410,411,412,413,57,414,415,416,417,418,419,187,188,58,189,59,60,61,62,63,64,65,66,67,68,69,70,374,71,72,73,74,75,226,256,76,350,257,351,77,227,78,258,79,251,252,228,80,259,229,81,82,3,271,83,272,84,85,86,273,274,87,88,420,219,89,220,221,222,90,91,230,92,253,421,93,94,95,96,97,275,276,98,99,100,101,277,102,103,278,422,423,424,425,426,104,427,428,429,430,431,432,279,105,106,107,108,433,109,110,111,250,280,281,282,283,284,434,285,112,113,114,115,116,117,231,435,118,254,356,232,119,120,121,357,255,436,4,5,6,7,437,375,376,377,438,439,233,234,235,236,237,238,239,240,358,359,122,360,241,378,379,380,286,381,382,383,384,385,386,387,440,123,124,125,126,127,388,441,223,190,442,128,389,191,192,193,194,195,196,242,287,288,289,8,290,129,9,10,291,11,12,13,443,444,445,446,447,448,361,362,243,130,131,449,132,450,451,363,452,453,454,133,134,197,198,135,136,137,138,139,455,456,224,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,292,293,294,295,296,478,140,14,297,298,141,142,299,300,143,301,302,303,304,305,306,307,308,309,15,310,16,17,311,312,390,391,392,479,364,480,481,482,483,365,484,485,244,313,314,486,315,316,393,317,318,319,320,321,144,145,146,147,148,149,487,245,366,367,368,369,370,488,371,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,322,489,490,491,492,493,494,495,496,497,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,323,174,175,176,177,178,179,19,180,246,247,264,394,181,225,182,183,324,184,395,325,396,185,372,373,397,248,249,186],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,265,54,266,267,268,0,269,55,1,2,270,56,57,58,59,60,61,62,63,64,65,67,68,69,70,374,71,72,75,76,77,78,79,80,81,82,3,271,83,272,273,274,87,88,219,89,222,90,91,230,92,93,94,95,96,275,276,98,99,100,101,103,278,104,105,106,107,108,109,110,111,284,285,112,113,114,115,116,117,118,119,120,121,4,5,6,7,122,123,126,127,128,195,242,287,288,289,8,290,129,9,10,11,12,13,130,131,132,133,134,197,198,135,136,137,138,139,140,14,298,299,300,143,15,16,17,311,312,391,392,244,313,314,315,316,393,317,318,319,320,321,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,323,174,180,246,394,181,225,182,183,324,184,325,396,185,372,373,397,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,399,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,74,93,94,95,96,97,275,276,98,99,100,101,277,102,103,284,285,118,123,124,195,289,8,133,134,197,198,135,321,144,145,146,147,148,149,170,171],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":397,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":225,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":365,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":353,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":218,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":384,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":53,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":283,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":93,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":214,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":172,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":281,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":483,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":186,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":444,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":346,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":125,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":100,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":216,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":354,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":184,"org.easymock.tests.UsageVarargTest.allKinds":321,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.samples.BasicClassMockTest.testPrintContent":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":371,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":72,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":357,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":231,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":420,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":320,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":391,"org.easymock.tests.UsageExpectAndReturnTest.longType":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":479,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests.MockingTest.testNiceClassMocking":363,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests.MockTypeTest.fromEasyMockClass":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":316,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":452,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":339,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":280,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":279,"org.easymock.tests.UsageVarargTest.varargCharAccepted":315,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.tests.CapturesMatcherTest.test":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":476,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":454,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":403,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":386,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":445,"org.easymock.tests2.CaptureTest.testCaptureNone":99,"org.easymock.tests.UsageUnorderedTest.message":149,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":319,"org.easymock.tests2.ThreadingTest.testThreadSafe":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":342,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.UsageExpectAndThrowTest.longType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":382,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.SerializationTest.testClass":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":2,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":434,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":203,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.CaptureTest.testCaptureLast":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":243,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests2.MockBuilderTest.testCreateMockString":229,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests.UsageExpectAndThrowTest.floatType":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":421,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":261,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.UsageTest.defaultResetToNice":86,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.UsageVarargTest.differentLength":393,"org.easymock.tests2.CallbackTest.callback":278,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":109,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.samples.ExampleTest.addDocument":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":343,"org.easymock.tests2.DelegateToTest.testStubDelegate":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":54,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":251,"org.easymock.tests.UsageVarargTest.varargLongAccepted":318,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests.UsageExpectAndReturnTest.floatType":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":249,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":326,"org.easymock.tests2.SerializationTest.test":91,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":151,"org.easymock.tests2.UsageConstraintsTest.testSame":26,"org.easymock.samples.SupportTest.addDocument":396,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":433,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":162,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":134,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":327,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests2.MockBuilderTest.testWithConstructor":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":163,"org.easymock.tests.UsageVarargTest.varargShortAccepted":317,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":164,"org.easymock.tests2.CaptureTest.testCapture":262,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":325,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":394,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":313}}]
