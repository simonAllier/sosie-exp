[{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,2,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,83,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[119,120,121,5,122,123,124,125,126,127,128,129,130,131,132,133,134,6,135,136,7,137,138,139,140,141,142,143,144,145,8,146,147,148,149,150,9,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,212,213,214,215,216,217,218,219,220,221,85,11,12,13,14,222,15,16,17,223,224,225,226,18,19,20,21,22,23,227,228,24,229,230,231,25,26,27,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,28,29,2,271,272,273,274,30,275,276,277,31,278,32,279,33,280,281,282,34,283,284,285,286,35,287,36,37,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,38,39,315,316,317,318,319,320,321,322,40,41,42,43,44,323,324,325,45,46,326,47,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,86,344,345,346,347,348,48,349,350,351,352,353,354,355,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,356,357,358,359,360,361,362,363,364,365,366,107,367,49,50,51,52,368,369,370,371,108,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,53,54,55,56,430,431,432,433,434,435,436,437,438,109,110,111,439,440,441,57,442,58,59,443,444,112,445,446,113,114,115,116,117,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,118,472,473,474,60,61,62,63,64,65,475,476,66,67,477,68,69,70,478,71,72,73,74,75,76,479,480,481,482,483,484,3,4,485,77,486,487,78,488,79,80,489,81,490,491,82],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[155,156,159,161,162,164,174,179,195,197,205],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[182,189,85,240,241,242,243,333,338,86,351,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,368,369,370,371,108,372,446,116,117,118,480,481],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[422,423,424,425,427,429],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[450],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[157,191,339],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[164],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[447,448,449,450,451],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[185,191,192,36,335,336,339,340,107,367,441,58,493,452,474],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,2,30,31,32,33,34,35,36,37,313,38,39,316,40,41,42,43,44,45,46,47,342,345,346,48,49,50,51,52,53,54,55,56,57,58,59,448,450,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,23,2,30,31,32,33,34,41,45,46,47,48,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[494,495,496,497,498,499,500,271,279,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"position":"org.easymock.internal.LastControl:95","failures":[155,156,159,161,162,164,174,179,195,197,205],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[238,239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[125,129,132,6,136,137,138,141,144,146,147,150,11,12,13,14,16,17,226,18,19,21,22,23,227,24,230,231,25,26,27,232,233,240,241,242,323,324,325,45,46,47,329,347,348,48,349,365,422,423,424,425,426,427,429,447,448,449,451,453,454,455,456,457,458,459,460,3,4,486,487,82],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[422,423,424,425,427,429],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[224,225,226,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[331,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[156,161,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[183,184,231],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[25,26,503,504,505,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[224,229,2,271,274,276,279,281,507,283,508,501,509,3,4],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"failures":[119,120,121,5,122,123,124,125,129,130,131,132,133,134,6,135,136,7,137,138,139,140,141,142,143,144,145,8,146,147,148,149,150,9,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,212,213,214,215,216,217,218,219,220,221,85,11,12,13,14,222,15,16,17,223,224,225,226,18,19,20,21,22,23,227,228,24,229,230,231,25,26,27,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,28,29,2,271,273,30,275,277,31,278,32,33,281,282,34,284,285,286,35,287,36,37,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,313,314,38,39,315,316,317,318,319,320,321,322,40,41,42,43,44,323,324,325,45,46,326,47,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,86,344,345,346,347,348,48,349,350,351,352,353,354,355,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,356,357,358,359,360,361,362,363,364,365,366,107,367,49,50,51,52,368,369,370,371,108,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,422,423,424,425,426,427,429,53,54,55,56,430,431,432,433,434,435,436,437,438,109,110,111,439,440,441,57,442,58,59,443,444,112,445,446,113,114,115,116,117,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,118,472,473,474,60,61,62,63,64,65,475,476,66,67,477,68,69,70,478,71,72,73,74,75,76,479,480,481,482,483,484,3,4,485,77,486,487,78,488,79,80,489,81,490,491,82],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[229,274,507,510,283,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[153,154,158,159,160,161,167,169,170,172,173,174,179,180,181,206,85,35,313,38,39,40,41,42,43,44,350,397,401,402,411,416,53,54,55,56,430,57,76,479,482,3,3,4,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[511,228,512],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":407,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":483,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":369,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":213,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":354,"org.easymock.samples.ExampleTest.answerVsDelegate":488,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":466,"org.easymock.tests2.UsageConstraintsTest.testNull":159,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":265,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":482,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":334,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":431,"org.easymock.tests.UsageTest.argumentsOrdered":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.DependencyTest.testClassMocking":269,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":463,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":260,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":435,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.LimitationsTest.mockFinalMethod":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests2.DependencyTest.testClassMockingSupport":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":436,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageThrowableTest.throwError":112,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":465,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":430,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":152,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":311,"org.easymock.tests2.ThreadingTest.testChangeDefault":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":462,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageOverloadedMethodTest.overloading":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":169,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":168,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":449,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":503,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":510,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests.MockNameTest.defaultName":314,"org.easymock.tests2.UsageConstraintsTest.testMatches":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":373,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests.UsageVarargTest.allKinds":396,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":366,"org.easymock.samples.BasicClassMockTest.testPrintContent":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":116,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":428,"org.easymock.tests2.UsageConstraintsTest.greaterThan":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":79,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":365,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":368,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":10,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":12,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":324,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":167,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":158,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests.MockTypeTest.fromEasyMockClass":464,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":220,"org.easymock.tests.UsageExpectAndReturnTest.object":477,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":309,"org.easymock.tests.UsageTest.exactCallCountByLastCall":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":432,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":315,"org.easymock.tests2.ConstraintsToStringTest.findToString":492,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":271,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":471,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":143,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":433,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":305,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests.DefaultClassInstantiatorTest.object":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":83,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":109,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":289,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":9,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":371,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":279,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":226,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":413,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":509,"org.easymock.samples.SupportTest.voteForRemovals":77,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":419,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":235,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":130,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":353,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests.UsageUnorderedTest.message":452,"org.easymock.tests.UsageVerifyTest.twoReturns":367,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":486,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":310,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":417,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":287,"org.easymock.tests2.SerializationTest.testClass":224,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests2.NameTest.nameForMocksControl":217,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":490,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":251,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":291,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":211,"org.easymock.tests2.MockBuilderTest.testCreateMockString":284,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":137,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":134,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":272,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":8,"org.easymock.samples.ExampleTest.voteAgainstRemoval":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":348,"org.easymock.tests2.UsageConstraintsTest.testNotNull":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":245,"org.easymock.tests2.CallbackTest.callback":119,"org.easymock.tests2.UsageConstraintsTest.equals":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":229,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":480,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":114,"org.easymock.tests.MockingTest.testStrictClassMocking":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":15,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests2.NameTest.nameForNiceMock":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.DelegateToTest.testStubDelegate":5,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":280,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.floatType":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests.UsageThrowableTest.noUpperLimit":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":125,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests2.SerializationTest.test":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testSame":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.samples.SupportTest.addDocument":485,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":222,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":138,"org.easymock.tests.GenericTest.testPackageScope":448,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":327,"org.easymock.tests2.NameTest.nameForMock":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":410,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":384,"org.easymock.tests2.NameTest.nameForStrictMock":215,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":506,"org.easymock.tests2.UsageConstraintsTest.testOr":161,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":336,"org.easymock.tests2.MockBuilderTest.testWithConstructor":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":139,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":374,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":275,"org.easymock.tests.UsageTest.unexpectedCallWithArray":335,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":478,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":442,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.samples.ExampleTest.addAndChangeDocument":491,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":484,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":475,"org.easymock.tests.LimitationsTest.abstractClass":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262}}]
