[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[103,104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[106,107,108,109,110,111],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[112,113,114,115,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[17,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[117,118,119,93,120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[121,122,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[124,73,74,75,4,76,125,77,78,79,80,81,82,83,84,126,85,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,87,141,142,88,89,143,144,145,146,147,148,149,150,91,92,118,119,93,151,152,153,153,154,154,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,110,168,169,170,171,17,172,173,111,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[141,182,183,142,88,89,143,184,90,185,144,186,187,188,189,190,191,192,193,145,194,146,195,196,147,148,149,150,197,91,92,198,199,200,201,202,203,204,117,118,119,93,120,151,152,153,153,154,154,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[205,206,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[124,73,74,75,208,77,79,81,82,84,209,128,129,130,131,132,210,133,134,136,211,138,140,145,148,149,150,212,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":12,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":117,"org.easymock.tests.MockClassControlTest.testToString":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":52,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":153,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":206,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageTest.argumentsOrdered":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":151,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":13,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":202,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":64,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":140,"org.easymock.tests.LimitationsTest.mockFinalMethod":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests.MockingTest.testTwoMocks":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests.UsageThrowableTest.throwError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":51,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":185,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests.LimitationsTest.privateConstructor":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":123,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":124,"org.easymock.tests.MockClassControlTest.testEquals":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.MockingTest.testStrictClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests.MockNameTest.defaultName":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.samples.ExampleTest.voteForRemovals":100,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":152,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":168,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":143,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":204,"org.easymock.samples.ExampleTest.voteForRemoval":98,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":128,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":199,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":11,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":103,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":116,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":56,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":158,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests.MockingTest.testNiceClassMocking":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.MockingTest.testClassMocking":196,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":125,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":139,"org.easymock.tests.MockTypeTest.fromEasyMockClass":177,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":201,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests2.UsageStrictMockTest.range":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":137,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":50,"org.easymock.tests.MockClassControlTest.testHashCode":189,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests.DefaultClassInstantiatorTest.object":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":121,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":78,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":96,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":135,"org.easymock.tests.LimitationsTest.abstractClass":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":91}}]
